

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Apr 24 14:01:16 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F47K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1
    51                           	psect	text40,global,reloc=2,class=CODE,delta=1
    52                           	psect	text41,global,reloc=2,class=CODE,delta=1
    53                           	psect	text42,global,reloc=2,class=CODE,delta=1
    54                           	psect	text43,global,reloc=2,class=CODE,delta=1
    55                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    57                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    58  0000                     
    59                           ; Version 2.10
    60                           ; Generated 31/07/2019 GMT
    61                           ; 
    62                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    63                           ; All rights reserved.
    64                           ; 
    65                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    66                           ; 
    67                           ; Redistribution and use in source and binary forms, with or without modification, are
    68                           ; permitted provided that the following conditions are met:
    69                           ; 
    70                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    71                           ;        conditions and the following disclaimer.
    72                           ; 
    73                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    74                           ;        of conditions and the following disclaimer in the documentation and/or other
    75                           ;        materials provided with the distribution.
    76                           ; 
    77                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    78                           ;        software without specific prior written permission.
    79                           ; 
    80                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    81                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    82                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    83                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    84                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    85                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    86                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    87                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    88                           ; 
    89                           ; 
    90                           ; Code-generator required, PIC18F47K40 Definitions
    91                           ; 
    92                           ; SFR Addresses
    93  0000                     _RC3PPS	set	3834
    94  0000                     _RC4PPS	set	3835
    95  0000                     _SSP1DATPPS	set	3768
    96  0000                     _SSP1CLKPPS	set	3767
    97  0000                     _ADPCH	set	3935
    98  0000                     _ANSELC	set	3873
    99  0000                     _ANSELA	set	3857
   100  0000                     _ADRES	set	3939
   101  0000                     _SSP1STATbits	set	3989
   102  0000                     _SSP1BUF	set	3986
   103  0000                     _SSP1CON2bits	set	3991
   104  0000                     _SSP1CON1bits	set	3990
   105  0000                     _SSP1ADD	set	3987
   106  0000                     _PORTD	set	3984
   107  0000                     _TRISDbits	set	3979
   108  0000                     _ADCON0bits	set	3936
   109  0000                     _ADCON0	set	3936
   110  0000                     _LATCbits	set	3973
   111  0000                     _PORTAbits	set	3981
   112  0000                     _PORTCbits	set	3983
   113  0000                     _TRISCbits	set	3978
   114  0000                     _TRISAbits	set	3976
   115                           
   116                           	psect	smallconst
   117  000F00                     __psmallconst:
   118                           	opt callstack 0
   119  000F00  00                 	db	0
   120  000F01                     STR_7:
   121  000F01  57                 	db	87	;'W'
   122  000F02  65                 	db	101	;'e'
   123  000F03  64                 	db	100	;'d'
   124  000F04  00                 	db	0
   125  000F05                     STR_6:
   126  000F05  54                 	db	84	;'T'
   127  000F06  75                 	db	117	;'u'
   128  000F07  65                 	db	101	;'e'
   129  000F08  00                 	db	0
   130  000F09                     STR_9:
   131  000F09  46                 	db	70	;'F'
   132  000F0A  72                 	db	114	;'r'
   133  000F0B  69                 	db	105	;'i'
   134  000F0C  00                 	db	0
   135  000F0D                     STR_5:
   136  000F0D  4D                 	db	77	;'M'
   137  000F0E  6F                 	db	111	;'o'
   138  000F0F  6E                 	db	110	;'n'
   139  000F10  00                 	db	0
   140  000F11                     STR_4:
   141  000F11  53                 	db	83	;'S'
   142  000F12  75                 	db	117	;'u'
   143  000F13  6E                 	db	110	;'n'
   144  000F14  00                 	db	0
   145  000F15                     STR_10:
   146  000F15  53                 	db	83	;'S'
   147  000F16  61                 	db	97	;'a'
   148  000F17  74                 	db	116	;'t'
   149  000F18  00                 	db	0
   150  000F19                     STR_8:
   151  000F19  54                 	db	84	;'T'
   152  000F1A  68                 	db	104	;'h'
   153  000F1B  75                 	db	117	;'u'
   154  000F1C  00                 	db	0
   155  000F1D                     STR_1:
   156  000F1D  25                 	db	37
   157  000F1E  6C                 	db	108	;'l'
   158  000F1F  75                 	db	117	;'u'
   159  000F20  00                 	db	0
   160  0000                     
   161                           ; #config settings
   162  000F21  00                 	db	0	; dummy byte at the end
   163  0000                     
   164                           	psect	cinit
   165  003278                     __pcinit:
   166                           	opt callstack 0
   167  003278                     start_initialization:
   168                           	opt callstack 0
   169  003278                     __initialization:
   170                           	opt callstack 0
   171                           
   172                           ; NVMREG Errata
   173  003278                     	if	3969
   174  003278  8E81               	bsf	129,7,c
   175  00327A  9C81               	bcf	129,6,c
   176  00327C                     	endif
   177                           
   178                           ; Clear objects allocated to BANK0 (42 bytes)
   179  00327C  EE00  F0A8         	lfsr	0,__pbssBANK0
   180  003280  0E2A               	movlw	42
   181  003282                     clear_0:
   182  003282  6AEE               	clrf	postinc0,c
   183  003284  06E8               	decf	wreg,f,c
   184  003286  E1FD               	bnz	clear_0
   185                           
   186                           ; Clear objects allocated to COMRAM (2 bytes)
   187  003288  6A5F               	clrf	(__pbssCOMRAM+1)& (0+255),c
   188  00328A  6A5E               	clrf	__pbssCOMRAM& (0+255),c
   189  00328C                     end_of_initialization:
   190                           	opt callstack 0
   191  00328C                     __end_of__initialization:
   192                           	opt callstack 0
   193  00328C  0100               	movlb	0
   194  00328E  EF91  F007         	goto	_main	;jump to C main() function
   195                           
   196                           	psect	bssCOMRAM
   197  00005E                     __pbssCOMRAM:
   198                           	opt callstack 0
   199  00005E                     _flags:
   200                           	opt callstack 0
   201  00005E                     	ds	2
   202                           
   203                           	psect	bssBANK0
   204  0000A8                     __pbssBANK0:
   205                           	opt callstack 0
   206  0000A8                     _value0:
   207                           	opt callstack 0
   208  0000A8                     	ds	4
   209  0000AC                     _nout:
   210                           	opt callstack 0
   211  0000AC                     	ds	2
   212  0000AE                     _width:
   213                           	opt callstack 0
   214  0000AE                     	ds	2
   215  0000B0                     _prec:
   216                           	opt callstack 0
   217  0000B0                     	ds	2
   218  0000B2                     _dbuf:
   219                           	opt callstack 0
   220  0000B2                     	ds	32
   221                           
   222                           	psect	cstackBANK0
   223  000060                     __pcstackBANK0:
   224                           	opt callstack 0
   225  000060                     	ds	2
   226  000062                     sprintf@ap:
   227                           	opt callstack 0
   228                           
   229                           ; 2 bytes @ 0x2
   230  000062                     	ds	2
   231  000064                     sprintf@f:
   232                           	opt callstack 0
   233                           
   234                           ; 6 bytes @ 0x4
   235  000064                     	ds	6
   236  00006A                     ??_main:
   237                           
   238                           ; 1 bytes @ 0xA
   239  00006A                     	ds	4
   240  00006E                     main@num:
   241                           	opt callstack 0
   242                           
   243                           ; 4 bytes @ 0xE
   244  00006E                     	ds	4
   245  000072                     main@num_372:
   246                           	opt callstack 0
   247                           
   248                           ; 4 bytes @ 0x12
   249  000072                     	ds	4
   250  000076                     main@num_386:
   251                           	opt callstack 0
   252                           
   253                           ; 4 bytes @ 0x16
   254  000076                     	ds	4
   255  00007A                     main@u24:
   256                           	opt callstack 0
   257                           
   258                           ; 2 bytes @ 0x1A
   259  00007A                     	ds	2
   260  00007C                     main@u7:
   261                           	opt callstack 0
   262                           
   263                           ; 2 bytes @ 0x1C
   264  00007C                     	ds	2
   265  00007E                     main@u12:
   266                           	opt callstack 0
   267                           
   268                           ; 2 bytes @ 0x1E
   269  00007E                     	ds	2
   270  000080                     main@u31:
   271                           	opt callstack 0
   272                           
   273                           ; 2 bytes @ 0x20
   274  000080                     	ds	2
   275  000082                     main@u99:
   276                           	opt callstack 0
   277                           
   278                           ; 2 bytes @ 0x22
   279  000082                     	ds	2
   280  000084                     main@u24_370:
   281                           	opt callstack 0
   282                           
   283                           ; 2 bytes @ 0x24
   284  000084                     	ds	2
   285  000086                     main@temp:
   286                           	opt callstack 0
   287                           
   288                           ; 1 bytes @ 0x26
   289  000086                     	ds	1
   290  000087                     main@alarmON:
   291                           	opt callstack 0
   292                           
   293                           ; 2 bytes @ 0x27
   294  000087                     	ds	2
   295  000089                     main@u60:
   296                           	opt callstack 0
   297                           
   298                           ; 2 bytes @ 0x29
   299  000089                     	ds	2
   300  00008B                     main@u60_371:
   301                           	opt callstack 0
   302                           
   303                           ; 2 bytes @ 0x2B
   304  00008B                     	ds	2
   305  00008D                     main@check:
   306                           	opt callstack 0
   307                           
   308                           ; 2 bytes @ 0x2D
   309  00008D                     	ds	2
   310  00008F                     main@naming:
   311                           	opt callstack 0
   312                           
   313                           ; 3 bytes @ 0x2F
   314  00008F                     	ds	3
   315  000092                     main@i:
   316                           	opt callstack 0
   317                           
   318                           ; 2 bytes @ 0x32
   319  000092                     	ds	2
   320  000094                     main@i_353:
   321                           	opt callstack 0
   322                           
   323                           ; 2 bytes @ 0x34
   324  000094                     	ds	2
   325  000096                     main@i_362:
   326                           	opt callstack 0
   327                           
   328                           ; 2 bytes @ 0x36
   329  000096                     	ds	2
   330  000098                     main@i_377:
   331                           	opt callstack 0
   332                           
   333                           ; 2 bytes @ 0x38
   334  000098                     	ds	2
   335  00009A                     main@setNum:
   336                           	opt callstack 0
   337                           
   338                           ; 2 bytes @ 0x3A
   339  00009A                     	ds	2
   340  00009C                     main@AsetNum:
   341                           	opt callstack 0
   342                           
   343                           ; 2 bytes @ 0x3C
   344  00009C                     	ds	2
   345  00009E                     main@alarm:
   346                           	opt callstack 0
   347                           
   348                           ; 2 bytes @ 0x3E
   349  00009E                     	ds	2
   350  0000A0                     main@array_376:
   351                           	opt callstack 0
   352                           
   353                           ; 2 bytes @ 0x40
   354  0000A0                     	ds	2
   355  0000A2                     main@temp2_381:
   356                           	opt callstack 0
   357                           
   358                           ; 1 bytes @ 0x42
   359  0000A2                     	ds	1
   360  0000A3                     main@array:
   361                           	opt callstack 0
   362                           
   363                           ; 2 bytes @ 0x43
   364  0000A3                     	ds	2
   365  0000A5                     main@temp1_380:
   366                           	opt callstack 0
   367                           
   368                           ; 1 bytes @ 0x45
   369  0000A5                     	ds	1
   370  0000A6                     main@temp2:
   371                           	opt callstack 0
   372                           
   373                           ; 1 bytes @ 0x46
   374  0000A6                     	ds	1
   375  0000A7                     main@temp1:
   376                           	opt callstack 0
   377                           
   378                           ; 1 bytes @ 0x47
   379  0000A7                     	ds	1
   380                           
   381                           	psect	cstackCOMRAM
   382  000001                     __pcstackCOMRAM:
   383                           	opt callstack 0
   384  000001                     ??_lcd_char:
   385  000001                     ??_lcd_command:
   386  000001                     ?_strlen:
   387                           	opt callstack 0
   388  000001                     ?_strncmp:
   389                           	opt callstack 0
   390  000001                     ?___awdiv:
   391                           	opt callstack 0
   392  000001                     ?___awmod:
   393                           	opt callstack 0
   394  000001                     ?_adcNum0:
   395                           	opt callstack 0
   396  000001                     ?___lldiv:
   397                           	opt callstack 0
   398  000001                     ?___lodiv:
   399                           	opt callstack 0
   400  000001                     ?___lomod:
   401                           	opt callstack 0
   402  000001                     i2c_read@registers:
   403                           	opt callstack 0
   404  000001                     i2c_write@registers:
   405                           	opt callstack 0
   406  000001                     ___awdiv@dividend:
   407                           	opt callstack 0
   408  000001                     ___awmod@dividend:
   409                           	opt callstack 0
   410  000001                     fputc@c:
   411                           	opt callstack 0
   412  000001                     strlen@s:
   413                           	opt callstack 0
   414  000001                     strncmp@_l:
   415                           	opt callstack 0
   416  000001                     ___lldiv@dividend:
   417                           	opt callstack 0
   418  000001                     ___lodiv@dividend:
   419                           	opt callstack 0
   420  000001                     ___lomod@dividend:
   421                           	opt callstack 0
   422                           
   423                           ; 8 bytes @ 0x0
   424  000001                     	ds	1
   425  000002                     lcd_command@temp:
   426                           	opt callstack 0
   427  000002                     lcd_char@temp:
   428                           	opt callstack 0
   429  000002                     i2c_write@data:
   430                           	opt callstack 0
   431  000002                     i2c_read@num:
   432                           	opt callstack 0
   433                           
   434                           ; 4 bytes @ 0x1
   435  000002                     	ds	1
   436  000003                     lcd_command@x:
   437                           	opt callstack 0
   438  000003                     lcd_char@x:
   439                           	opt callstack 0
   440  000003                     i2c_write@address:
   441                           	opt callstack 0
   442  000003                     ___awdiv@divisor:
   443                           	opt callstack 0
   444  000003                     ___awmod@divisor:
   445                           	opt callstack 0
   446  000003                     fputc@fp:
   447                           	opt callstack 0
   448  000003                     strlen@a:
   449                           	opt callstack 0
   450  000003                     strncmp@_r:
   451                           	opt callstack 0
   452                           
   453                           ; 2 bytes @ 0x2
   454  000003                     	ds	1
   455  000004                     set_dayname@name:
   456                           	opt callstack 0
   457                           
   458                           ; 1 bytes @ 0x3
   459  000004                     	ds	1
   460  000005                     ??_adcNum0:
   461  000005                     ??_fputc:
   462  000005                     ___awdiv@counter:
   463                           	opt callstack 0
   464  000005                     ___awmod@counter:
   465                           	opt callstack 0
   466  000005                     strncmp@n:
   467                           	opt callstack 0
   468  000005                     ___lldiv@divisor:
   469                           	opt callstack 0
   470                           
   471                           ; 4 bytes @ 0x4
   472  000005                     	ds	1
   473  000006                     i2c_read@read:
   474                           	opt callstack 0
   475  000006                     ___awdiv@sign:
   476                           	opt callstack 0
   477  000006                     ___awmod@sign:
   478                           	opt callstack 0
   479                           
   480                           ; 1 bytes @ 0x5
   481  000006                     	ds	1
   482  000007                     ??_strncmp:
   483  000007                     i2c_read@address:
   484                           	opt callstack 0
   485  000007                     ___awdiv@quotient:
   486                           	opt callstack 0
   487                           
   488                           ; 2 bytes @ 0x6
   489  000007                     	ds	1
   490  000008                     ??_get_seconds:
   491  000008                     ??_get_minutes:
   492  000008                     ??_get_hours:
   493  000008                     ??_get_months:
   494  000008                     ??_get_days:
   495  000008                     ??_get_years:
   496  000008                     ??_get_Aseconds:
   497  000008                     ??_get_Aminutes:
   498  000008                     ??_get_Ahours:
   499  000008                     get_dayname@name:
   500                           	opt callstack 0
   501  000008                     rtc_init@i:
   502                           	opt callstack 0
   503  000008                     strncmp@l:
   504                           	opt callstack 0
   505                           
   506                           ; 2 bytes @ 0x7
   507  000008                     	ds	1
   508  000009                     ??_set_seconds:
   509  000009                     ??_set_minutes:
   510  000009                     ??_set_hours:
   511  000009                     ??_set_months:
   512  000009                     ??_set_days:
   513  000009                     ??_set_years:
   514  000009                     ??_set_Aseconds:
   515  000009                     ??_set_Aminutes:
   516  000009                     ??_set_Ahours:
   517  000009                     get_seconds@sec:
   518                           	opt callstack 0
   519  000009                     get_minutes@min:
   520                           	opt callstack 0
   521  000009                     get_hours@hour:
   522                           	opt callstack 0
   523  000009                     get_months@month:
   524                           	opt callstack 0
   525  000009                     get_days@day:
   526                           	opt callstack 0
   527  000009                     get_years@year:
   528                           	opt callstack 0
   529  000009                     get_Aseconds@Asec:
   530                           	opt callstack 0
   531  000009                     get_Aminutes@Amin:
   532                           	opt callstack 0
   533  000009                     get_Ahours@Ahour:
   534                           	opt callstack 0
   535  000009                     ___lldiv@quotient:
   536                           	opt callstack 0
   537  000009                     ___lodiv@divisor:
   538                           	opt callstack 0
   539  000009                     ___lomod@divisor:
   540                           	opt callstack 0
   541                           
   542                           ; 8 bytes @ 0x8
   543  000009                     	ds	1
   544  00000A                     rtc_init@sec:
   545                           	opt callstack 0
   546  00000A                     fputs@s:
   547                           	opt callstack 0
   548  00000A                     strncmp@r:
   549                           	opt callstack 0
   550                           
   551                           ; 2 bytes @ 0x9
   552  00000A                     	ds	1
   553  00000B                     rtc_init@hour:
   554                           	opt callstack 0
   555  00000B                     set_seconds@curr_sec:
   556                           	opt callstack 0
   557  00000B                     set_minutes@min:
   558                           	opt callstack 0
   559  00000B                     set_hours@curr_hour:
   560                           	opt callstack 0
   561  00000B                     set_months@month:
   562                           	opt callstack 0
   563  00000B                     set_days@day:
   564                           	opt callstack 0
   565  00000B                     set_years@year:
   566                           	opt callstack 0
   567  00000B                     set_Aseconds@Asec:
   568                           	opt callstack 0
   569  00000B                     set_Aminutes@Amin:
   570                           	opt callstack 0
   571  00000B                     set_Ahours@Acurr_hour:
   572                           	opt callstack 0
   573                           
   574                           ; 1 bytes @ 0xA
   575  00000B                     	ds	1
   576  00000C                     set_seconds@sec:
   577                           	opt callstack 0
   578  00000C                     set_hours@hour:
   579                           	opt callstack 0
   580  00000C                     set_Ahours@Ahour:
   581                           	opt callstack 0
   582  00000C                     fputs@fp:
   583                           	opt callstack 0
   584                           
   585                           ; 2 bytes @ 0xB
   586  00000C                     	ds	1
   587  00000D                     ___lldiv@counter:
   588                           	opt callstack 0
   589                           
   590                           ; 1 bytes @ 0xC
   591  00000D                     	ds	1
   592  00000E                     fputs@c:
   593                           	opt callstack 0
   594                           
   595                           ; 1 bytes @ 0xD
   596  00000E                     	ds	1
   597  00000F                     fputs@i:
   598                           	opt callstack 0
   599                           
   600                           ; 2 bytes @ 0xE
   601  00000F                     	ds	2
   602  000011                     ?_pad:
   603                           	opt callstack 0
   604  000011                     ___lomod@counter:
   605                           	opt callstack 0
   606  000011                     pad@fp:
   607                           	opt callstack 0
   608  000011                     ___lodiv@quotient:
   609                           	opt callstack 0
   610                           
   611                           ; 8 bytes @ 0x10
   612  000011                     	ds	2
   613  000013                     pad@buf:
   614                           	opt callstack 0
   615                           
   616                           ; 2 bytes @ 0x12
   617  000013                     	ds	2
   618  000015                     pad@p:
   619                           	opt callstack 0
   620                           
   621                           ; 2 bytes @ 0x14
   622  000015                     	ds	2
   623  000017                     ??_pad:
   624                           
   625                           ; 1 bytes @ 0x16
   626  000017                     	ds	1
   627  000018                     pad@i:
   628                           	opt callstack 0
   629                           
   630                           ; 2 bytes @ 0x17
   631  000018                     	ds	1
   632  000019                     ___lodiv@counter:
   633                           	opt callstack 0
   634                           
   635                           ; 1 bytes @ 0x18
   636  000019                     	ds	1
   637  00001A                     pad@w:
   638                           	opt callstack 0
   639                           
   640                           ; 2 bytes @ 0x19
   641  00001A                     	ds	2
   642  00001C                     ?_utoa:
   643                           	opt callstack 0
   644  00001C                     utoa@fp:
   645                           	opt callstack 0
   646                           
   647                           ; 2 bytes @ 0x1B
   648  00001C                     	ds	2
   649  00001E                     utoa@d:
   650                           	opt callstack 0
   651                           
   652                           ; 8 bytes @ 0x1D
   653  00001E                     	ds	8
   654  000026                     ??_utoa:
   655                           
   656                           ; 1 bytes @ 0x25
   657  000026                     	ds	8
   658  00002E                     utoa@p:
   659                           	opt callstack 0
   660                           
   661                           ; 2 bytes @ 0x2D
   662  00002E                     	ds	2
   663  000030                     utoa@w:
   664                           	opt callstack 0
   665                           
   666                           ; 2 bytes @ 0x2F
   667  000030                     	ds	2
   668  000032                     utoa@n:
   669                           	opt callstack 0
   670                           
   671                           ; 8 bytes @ 0x31
   672  000032                     	ds	8
   673  00003A                     utoa@i:
   674                           	opt callstack 0
   675                           
   676                           ; 2 bytes @ 0x39
   677  00003A                     	ds	2
   678  00003C                     ?_vfpfcnvrt:
   679                           	opt callstack 0
   680  00003C                     vfpfcnvrt@fp:
   681                           	opt callstack 0
   682                           
   683                           ; 2 bytes @ 0x3B
   684  00003C                     	ds	2
   685  00003E                     vfpfcnvrt@fmt:
   686                           	opt callstack 0
   687                           
   688                           ; 2 bytes @ 0x3D
   689  00003E                     	ds	2
   690  000040                     vfpfcnvrt@ap:
   691                           	opt callstack 0
   692                           
   693                           ; 2 bytes @ 0x3F
   694  000040                     	ds	2
   695  000042                     ??_vfpfcnvrt:
   696                           
   697                           ; 1 bytes @ 0x41
   698  000042                     	ds	6
   699  000048                     vfpfcnvrt@llu:
   700                           	opt callstack 0
   701                           
   702                           ; 8 bytes @ 0x47
   703  000048                     	ds	8
   704  000050                     ?_vfprintf:
   705                           	opt callstack 0
   706  000050                     vfprintf@fp:
   707                           	opt callstack 0
   708                           
   709                           ; 2 bytes @ 0x4F
   710  000050                     	ds	2
   711  000052                     vfprintf@fmt:
   712                           	opt callstack 0
   713                           
   714                           ; 2 bytes @ 0x51
   715  000052                     	ds	2
   716  000054                     vfprintf@ap:
   717                           	opt callstack 0
   718                           
   719                           ; 2 bytes @ 0x53
   720  000054                     	ds	2
   721  000056                     vfprintf@cfmt:
   722                           	opt callstack 0
   723                           
   724                           ; 2 bytes @ 0x55
   725  000056                     	ds	2
   726  000058                     ?_sprintf:
   727                           	opt callstack 0
   728  000058                     sprintf@s:
   729                           	opt callstack 0
   730                           
   731                           ; 2 bytes @ 0x57
   732  000058                     	ds	2
   733  00005A                     sprintf@fmt:
   734                           	opt callstack 0
   735                           
   736                           ; 2 bytes @ 0x59
   737  00005A                     	ds	4
   738  00005E                     
   739                           ; 1 bytes @ 0x5D
   740 ;;
   741 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   742 ;;
   743 ;; *************** function _main *****************
   744 ;; Defined at:
   745 ;;		line 318 in file "timer.c"
   746 ;; Parameters:    Size  Location     Type
   747 ;;		None
   748 ;; Auto vars:     Size  Location     Type
   749 ;;  temp            1   38[BANK0 ] unsigned char 
   750 ;;  i               2   56[BANK0 ] int 
   751 ;;  num             4   18[BANK0 ] unsigned long 
   752 ;;  i               2   54[BANK0 ] int 
   753 ;;  i               2   52[BANK0 ] int 
   754 ;;  i               2   50[BANK0 ] int 
   755 ;;  num             4   14[BANK0 ] unsigned long 
   756 ;;  num             4   22[BANK0 ] unsigned long 
   757 ;;  array           2   64[BANK0 ] unsigned char [2]
   758 ;;  u60             2   43[BANK0 ] int 
   759 ;;  u24             2   36[BANK0 ] int 
   760 ;;  temp1           1   69[BANK0 ] unsigned char 
   761 ;;  temp2           1   66[BANK0 ] unsigned char 
   762 ;;  naming          3   47[BANK0 ] unsigned char [3]
   763 ;;  array           2   67[BANK0 ] unsigned char [2]
   764 ;;  u60             2   41[BANK0 ] int 
   765 ;;  u99             2   34[BANK0 ] int 
   766 ;;  u31             2   32[BANK0 ] int 
   767 ;;  u12             2   30[BANK0 ] int 
   768 ;;  u7              2   28[BANK0 ] int 
   769 ;;  u24             2   26[BANK0 ] int 
   770 ;;  temp1           1   71[BANK0 ] unsigned char 
   771 ;;  temp2           1   70[BANK0 ] unsigned char 
   772 ;;  alarm           2   62[BANK0 ] int 
   773 ;;  AsetNum         2   60[BANK0 ] int 
   774 ;;  setNum          2   58[BANK0 ] int 
   775 ;;  check           2   45[BANK0 ] int 
   776 ;;  alarmON         2   39[BANK0 ] int 
   777 ;; Return value:  Size  Location     Type
   778 ;;                  1    wreg      void 
   779 ;; Registers used:
   780 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   781 ;; Tracked objects:
   782 ;;		On entry : 0/0
   783 ;;		On exit  : 0/0
   784 ;;		Unchanged: 0/0
   785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   787 ;;      Locals:         0      58       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   788 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   789 ;;      Totals:         0      62       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   790 ;;Total ram usage:       62 bytes
   791 ;; Hardware stack levels required when called:    8
   792 ;; This function calls:
   793 ;;		___lldiv
   794 ;;		_adcNum0
   795 ;;		_adc_init
   796 ;;		_get_Ahours
   797 ;;		_get_Aminutes
   798 ;;		_get_Aseconds
   799 ;;		_get_dayname
   800 ;;		_get_days
   801 ;;		_get_hours
   802 ;;		_get_minutes
   803 ;;		_get_months
   804 ;;		_get_seconds
   805 ;;		_get_years
   806 ;;		_i2c_init
   807 ;;		_i2c_read
   808 ;;		_i2c_write
   809 ;;		_lcd_char
   810 ;;		_lcd_command
   811 ;;		_lcd_init
   812 ;;		_rtc_init
   813 ;;		_set_Ahours
   814 ;;		_set_Aminutes
   815 ;;		_set_Aseconds
   816 ;;		_set_dayname
   817 ;;		_set_days
   818 ;;		_set_hours
   819 ;;		_set_minutes
   820 ;;		_set_months
   821 ;;		_set_seconds
   822 ;;		_set_years
   823 ;;		_sprintf
   824 ;; This function is called by:
   825 ;;		Startup code after reset
   826 ;; This function uses a non-reentrant model
   827 ;;
   828                           
   829                           	psect	text0
   830  000F22                     __ptext0:
   831                           	opt callstack 0
   832  000F22                     _main:
   833                           	opt callstack 23
   834  000F22                     
   835                           ;timer.c: 319:                 value0 = adcNum0();
   836  000F22  0E00               	movlw	0
   837  000F24  0100               	movlb	0	; () banked
   838  000F26  6F9B               	movwf	(main@setNum+1)& (0+255),b
   839  000F28  0E00               	movlw	0
   840  000F2A  6F9A               	movwf	main@setNum& (0+255),b
   841                           
   842                           ;timer.c: 320:             }
   843  000F2C  0E00               	movlw	0
   844  000F2E  6F9D               	movwf	(main@AsetNum+1)& (0+255),b
   845  000F30  0E00               	movlw	0
   846  000F32  6F9C               	movwf	main@AsetNum& (0+255),b
   847                           
   848                           ;timer.c: 321:             else{
   849  000F34  0E00               	movlw	0
   850  000F36  6F9F               	movwf	(main@alarm+1)& (0+255),b
   851  000F38  0E00               	movlw	0
   852  000F3A  6F9E               	movwf	main@alarm& (0+255),b
   853                           
   854                           ;timer.c: 322:                 value0 = ((value0+adcNum0())/2)+1;
   855  000F3C  0E00               	movlw	0
   856  000F3E  6F8E               	movwf	(main@check+1)& (0+255),b
   857  000F40  0E00               	movlw	0
   858  000F42  6F8D               	movwf	main@check& (0+255),b
   859  000F44                     
   860                           ; BSR set to: 0
   861                           ;timer.c: 325: 
   862  000F44  EC51  F019         	call	_adc_init	;wreg free
   863  000F48                     
   864                           ;timer.c: 326:             int u24 = value0/42;
   865  000F48  ECDC  F018         	call	_lcd_init	;wreg free
   866  000F4C                     
   867                           ;timer.c: 328:             int u7 = (value0/146)+1;
   868  000F4C  EC83  F018         	call	_i2c_init	;wreg free
   869  000F50                     
   870                           ;timer.c: 329:             int u12 = (value0/85)+1;
   871  000F50  ECB8  F015         	call	_rtc_init	;wreg free
   872  000F54                     
   873                           ;timer.c: 331:             int u99 = value0/10;
   874  000F54  8488               	bsf	136,2,c	;volatile
   875  000F56                     
   876                           ;timer.c: 332: 
   877  000F56  8688               	bsf	136,3,c	;volatile
   878  000F58                     
   879                           ;timer.c: 333: 
   880  000F58  8888               	bsf	136,4,c	;volatile
   881  000F5A                     
   882                           ;timer.c: 334:             if(PORTAbits.RA3!=1){
   883  000F5A  8A88               	bsf	136,5,c	;volatile
   884                           
   885                           ;timer.c: 335:                 setNum++;
   886  000F5C  0E00               	movlw	0
   887  000F5E  010F               	movlb	15	; () banked
   888  000F60  6F11               	movwf	17,b	;volatile
   889  000F62                     
   890                           ; BSR set to: 15
   891                           ;timer.c: 337:                     setNum = 0;
   892  000F62  908A               	bcf	138,0,c	;volatile
   893  000F64                     
   894                           ; BSR set to: 15
   895                           ;timer.c: 338:                 }
   896  000F64  908F               	bcf	143,0,c	;volatile
   897  000F66                     
   898                           ; BSR set to: 15
   899                           ;timer.c: 339: 
   900  000F66  928A               	bcf	138,1,c	;volatile
   901  000F68                     
   902                           ; BSR set to: 15
   903                           ;timer.c: 340:                 unsigned long num = 10000L;
   904  000F68  928F               	bcf	143,1,c	;volatile
   905  000F6A                     
   906                           ; BSR set to: 15
   907                           ;timer.c: 341:                 while (--num > 0) {
   908  000F6A  948A               	bcf	138,2,c	;volatile
   909  000F6C                     
   910                           ; BSR set to: 15
   911                           ;timer.c: 342:                         LATCbits.LATC0 =1;
   912  000F6C  948F               	bcf	143,2,c	;volatile
   913  000F6E                     
   914                           ; BSR set to: 15
   915                           ;timer.c: 343:                 }
   916  000F6E  9A8A               	bcf	138,5,c	;volatile
   917  000F70                     
   918                           ; BSR set to: 15
   919                           ;timer.c: 344:                 if (setNum != 0){
   920  000F70  9A8F               	bcf	143,5,c	;volatile
   921  000F72                     l2968:
   922                           
   923                           ;timer.c: 348: 
   924  000F72  A48D               	btfss	141,2,c	;volatile
   925  000F74  EFBE  F007         	goto	u2501
   926  000F78  EFC0  F007         	goto	u2500
   927  000F7C                     u2501:
   928  000F7C  EF15  F00C         	goto	l3196
   929  000F80                     u2500:
   930  000F80                     
   931                           ;timer.c: 350:                case 1:
   932  000F80  0100               	movlb	0	; () banked
   933  000F82  51A8               	movf	_value0& (0+255),w,b
   934  000F84  11A9               	iorwf	(_value0+1)& (0+255),w,b
   935  000F86  11AA               	iorwf	(_value0+2)& (0+255),w,b
   936  000F88  11AB               	iorwf	(_value0+3)& (0+255),w,b
   937  000F8A  A4D8               	btfss	status,2,c
   938  000F8C  EFCA  F007         	goto	u2511
   939  000F90  EFCC  F007         	goto	u2510
   940  000F94                     u2511:
   941  000F94  EFD8  F007         	goto	l2974
   942  000F98                     u2510:
   943  000F98                     
   944                           ; BSR set to: 0
   945                           ;timer.c: 351:                    set_hours(u24);
   946  000F98  EC2D  F018         	call	_adcNum0	;wreg free
   947  000F9C  C001  F0A8         	movff	?_adcNum0,_value0
   948  000FA0  C002  F0A9         	movff	?_adcNum0+1,_value0+1
   949  000FA4  C003  F0AA         	movff	?_adcNum0+2,_value0+2
   950  000FA8  C004  F0AB         	movff	?_adcNum0+3,_value0+3
   951                           
   952                           ;timer.c: 352:                    break;
   953  000FAC  EFF8  F007         	goto	l119
   954  000FB0                     l2974:
   955                           
   956                           ; BSR set to: 0
   957                           ;timer.c: 354:                   set_minutes(u60);
   958  000FB0  EC2D  F018         	call	_adcNum0	;wreg free
   959  000FB4  0100               	movlb	0	; () banked
   960  000FB6  51A8               	movf	_value0& (0+255),w,b
   961  000FB8  2401               	addwf	?_adcNum0^0,w,c
   962  000FBA  6F6A               	movwf	??_main& (0+255),b
   963  000FBC  51A9               	movf	(_value0+1)& (0+255),w,b
   964  000FBE  2002               	addwfc	(?_adcNum0+1)^0,w,c
   965  000FC0  6F6B               	movwf	(??_main+1)& (0+255),b
   966  000FC2  51AA               	movf	(_value0+2)& (0+255),w,b
   967  000FC4  2003               	addwfc	(?_adcNum0+2)^0,w,c
   968  000FC6  6F6C               	movwf	(??_main+2)& (0+255),b
   969  000FC8  51AB               	movf	(_value0+3)& (0+255),w,b
   970  000FCA  2004               	addwfc	(?_adcNum0+3)^0,w,c
   971  000FCC  6F6D               	movwf	(??_main+3)& (0+255),b
   972  000FCE  90D8               	bcf	status,0,c
   973  000FD0  336D               	rrcf	(??_main+3)& (0+255),f,b
   974  000FD2  336C               	rrcf	(??_main+2)& (0+255),f,b
   975  000FD4  336B               	rrcf	(??_main+1)& (0+255),f,b
   976  000FD6  336A               	rrcf	??_main& (0+255),f,b
   977  000FD8  0E01               	movlw	1
   978  000FDA  256A               	addwf	??_main& (0+255),w,b
   979  000FDC  6FA8               	movwf	_value0& (0+255),b
   980  000FDE  0E00               	movlw	0
   981  000FE0  216B               	addwfc	(??_main+1)& (0+255),w,b
   982  000FE2  6FA9               	movwf	(_value0+1)& (0+255),b
   983  000FE4  0E00               	movlw	0
   984  000FE6  216C               	addwfc	(??_main+2)& (0+255),w,b
   985  000FE8  6FAA               	movwf	(_value0+2)& (0+255),b
   986  000FEA  0E00               	movlw	0
   987  000FEC  216D               	addwfc	(??_main+3)& (0+255),w,b
   988  000FEE  6FAB               	movwf	(_value0+3)& (0+255),b
   989  000FF0                     l119:
   990                           
   991                           ;timer.c: 358:                    break;
   992  000FF0  C0A8  F001         	movff	_value0,___lldiv@dividend
   993  000FF4  C0A9  F002         	movff	_value0+1,___lldiv@dividend+1
   994  000FF8  C0AA  F003         	movff	_value0+2,___lldiv@dividend+2
   995  000FFC  C0AB  F004         	movff	_value0+3,___lldiv@dividend+3
   996  001000  0E2A               	movlw	42
   997  001002  6E05               	movwf	___lldiv@divisor^0,c
   998  001004  0E00               	movlw	0
   999  001006  6E06               	movwf	(___lldiv@divisor+1)^0,c
  1000  001008  0E00               	movlw	0
  1001  00100A  6E07               	movwf	(___lldiv@divisor+2)^0,c
  1002  00100C  0E00               	movlw	0
  1003  00100E  6E08               	movwf	(___lldiv@divisor+3)^0,c
  1004  001010  EC66  F015         	call	___lldiv	;wreg free
  1005  001014  C001  F07A         	movff	?___lldiv,main@u24
  1006  001018  C002  F07B         	movff	?___lldiv+1,main@u24+1
  1007                           
  1008                           ;timer.c: 359:                case 4:
  1009  00101C  C0A8  F001         	movff	_value0,___lldiv@dividend
  1010  001020  C0A9  F002         	movff	_value0+1,___lldiv@dividend+1
  1011  001024  C0AA  F003         	movff	_value0+2,___lldiv@dividend+2
  1012  001028  C0AB  F004         	movff	_value0+3,___lldiv@dividend+3
  1013  00102C  0E11               	movlw	17
  1014  00102E  6E05               	movwf	___lldiv@divisor^0,c
  1015  001030  0E00               	movlw	0
  1016  001032  6E06               	movwf	(___lldiv@divisor+1)^0,c
  1017  001034  0E00               	movlw	0
  1018  001036  6E07               	movwf	(___lldiv@divisor+2)^0,c
  1019  001038  0E00               	movlw	0
  1020  00103A  6E08               	movwf	(___lldiv@divisor+3)^0,c
  1021  00103C  EC66  F015         	call	___lldiv	;wreg free
  1022  001040  C001  F089         	movff	?___lldiv,main@u60
  1023  001044  C002  F08A         	movff	?___lldiv+1,main@u60+1
  1024                           
  1025                           ;timer.c: 360:                    set_dayname(u7);
  1026  001048  C0A8  F001         	movff	_value0,___lldiv@dividend
  1027  00104C  C0A9  F002         	movff	_value0+1,___lldiv@dividend+1
  1028  001050  C0AA  F003         	movff	_value0+2,___lldiv@dividend+2
  1029  001054  C0AB  F004         	movff	_value0+3,___lldiv@dividend+3
  1030  001058  0E92               	movlw	146
  1031  00105A  6E05               	movwf	___lldiv@divisor^0,c
  1032  00105C  0E00               	movlw	0
  1033  00105E  6E06               	movwf	(___lldiv@divisor+1)^0,c
  1034  001060  0E00               	movlw	0
  1035  001062  6E07               	movwf	(___lldiv@divisor+2)^0,c
  1036  001064  0E00               	movlw	0
  1037  001066  6E08               	movwf	(___lldiv@divisor+3)^0,c
  1038  001068  EC66  F015         	call	___lldiv	;wreg free
  1039  00106C  0E01               	movlw	1
  1040  00106E  2401               	addwf	?___lldiv^0,w,c
  1041  001070  0100               	movlb	0	; () banked
  1042  001072  6F7C               	movwf	main@u7& (0+255),b
  1043  001074  0E00               	movlw	0
  1044  001076  2002               	addwfc	(?___lldiv+1)^0,w,c
  1045  001078  6F7D               	movwf	(main@u7+1)& (0+255),b
  1046                           
  1047                           ;timer.c: 361:                    break;
  1048  00107A  C0A8  F001         	movff	_value0,___lldiv@dividend
  1049  00107E  C0A9  F002         	movff	_value0+1,___lldiv@dividend+1
  1050  001082  C0AA  F003         	movff	_value0+2,___lldiv@dividend+2
  1051  001086  C0AB  F004         	movff	_value0+3,___lldiv@dividend+3
  1052  00108A  0E55               	movlw	85
  1053  00108C  6E05               	movwf	___lldiv@divisor^0,c
  1054  00108E  0E00               	movlw	0
  1055  001090  6E06               	movwf	(___lldiv@divisor+1)^0,c
  1056  001092  0E00               	movlw	0
  1057  001094  6E07               	movwf	(___lldiv@divisor+2)^0,c
  1058  001096  0E00               	movlw	0
  1059  001098  6E08               	movwf	(___lldiv@divisor+3)^0,c
  1060  00109A  EC66  F015         	call	___lldiv	;wreg free
  1061  00109E  0E01               	movlw	1
  1062  0010A0  2401               	addwf	?___lldiv^0,w,c
  1063  0010A2  0100               	movlb	0	; () banked
  1064  0010A4  6F7E               	movwf	main@u12& (0+255),b
  1065  0010A6  0E00               	movlw	0
  1066  0010A8  2002               	addwfc	(?___lldiv+1)^0,w,c
  1067  0010AA  6F7F               	movwf	(main@u12+1)& (0+255),b
  1068                           
  1069                           ;timer.c: 362:                case 5:
  1070  0010AC  C0A8  F001         	movff	_value0,___lldiv@dividend
  1071  0010B0  C0A9  F002         	movff	_value0+1,___lldiv@dividend+1
  1072  0010B4  C0AA  F003         	movff	_value0+2,___lldiv@dividend+2
  1073  0010B8  C0AB  F004         	movff	_value0+3,___lldiv@dividend+3
  1074  0010BC  0E21               	movlw	33
  1075  0010BE  6E05               	movwf	___lldiv@divisor^0,c
  1076  0010C0  0E00               	movlw	0
  1077  0010C2  6E06               	movwf	(___lldiv@divisor+1)^0,c
  1078  0010C4  0E00               	movlw	0
  1079  0010C6  6E07               	movwf	(___lldiv@divisor+2)^0,c
  1080  0010C8  0E00               	movlw	0
  1081  0010CA  6E08               	movwf	(___lldiv@divisor+3)^0,c
  1082  0010CC  EC66  F015         	call	___lldiv	;wreg free
  1083  0010D0  0E01               	movlw	1
  1084  0010D2  2401               	addwf	?___lldiv^0,w,c
  1085  0010D4  0100               	movlb	0	; () banked
  1086  0010D6  6F80               	movwf	main@u31& (0+255),b
  1087  0010D8  0E00               	movlw	0
  1088  0010DA  2002               	addwfc	(?___lldiv+1)^0,w,c
  1089  0010DC  6F81               	movwf	(main@u31+1)& (0+255),b
  1090                           
  1091                           ;timer.c: 363:                   set_months(u12);
  1092  0010DE  C0A8  F001         	movff	_value0,___lldiv@dividend
  1093  0010E2  C0A9  F002         	movff	_value0+1,___lldiv@dividend+1
  1094  0010E6  C0AA  F003         	movff	_value0+2,___lldiv@dividend+2
  1095  0010EA  C0AB  F004         	movff	_value0+3,___lldiv@dividend+3
  1096  0010EE  0E0A               	movlw	10
  1097  0010F0  6E05               	movwf	___lldiv@divisor^0,c
  1098  0010F2  0E00               	movlw	0
  1099  0010F4  6E06               	movwf	(___lldiv@divisor+1)^0,c
  1100  0010F6  0E00               	movlw	0
  1101  0010F8  6E07               	movwf	(___lldiv@divisor+2)^0,c
  1102  0010FA  0E00               	movlw	0
  1103  0010FC  6E08               	movwf	(___lldiv@divisor+3)^0,c
  1104  0010FE  EC66  F015         	call	___lldiv	;wreg free
  1105  001102  C001  F082         	movff	?___lldiv,main@u99
  1106  001106  C002  F083         	movff	?___lldiv+1,main@u99+1
  1107  00110A                     
  1108                           ;timer.c: 366:                    set_days(u31);
  1109  00110A  B68D               	btfsc	141,3,c	;volatile
  1110  00110C  EF8A  F008         	goto	u2521
  1111  001110  EF8C  F008         	goto	u2520
  1112  001114                     u2521:
  1113  001114  EFE7  F008         	goto	l3006
  1114  001118                     u2520:
  1115  001118                     
  1116                           ;timer.c: 367:                    break;
  1117  001118  0100               	movlb	0	; () banked
  1118  00111A  4B9A               	infsnz	main@setNum& (0+255),f,b
  1119  00111C  2B9B               	incf	(main@setNum+1)& (0+255),f,b
  1120  00111E                     
  1121                           ; BSR set to: 0
  1122                           ;timer.c: 368:                case 7:
  1123  00111E  0E08               	movlw	8
  1124  001120  199A               	xorwf	main@setNum& (0+255),w,b
  1125  001122  119B               	iorwf	(main@setNum+1)& (0+255),w,b
  1126  001124  A4D8               	btfss	status,2,c
  1127  001126  EF97  F008         	goto	u2531
  1128  00112A  EF99  F008         	goto	u2530
  1129  00112E                     u2531:
  1130  00112E  EF9D  F008         	goto	l121
  1131  001132                     u2530:
  1132  001132                     
  1133                           ; BSR set to: 0
  1134                           ;timer.c: 369:                    set_years(u99);
  1135  001132  0E00               	movlw	0
  1136  001134  6F9B               	movwf	(main@setNum+1)& (0+255),b
  1137  001136  0E00               	movlw	0
  1138  001138  6F9A               	movwf	main@setNum& (0+255),b
  1139  00113A                     l121:
  1140                           
  1141                           ; BSR set to: 0
  1142                           ;timer.c: 372:                     break;
  1143  00113A  0E10               	movlw	16
  1144  00113C  6F6E               	movwf	main@num& (0+255),b
  1145  00113E  0E27               	movlw	39
  1146  001140  6F6F               	movwf	(main@num+1)& (0+255),b
  1147  001142  0E00               	movlw	0
  1148  001144  6F70               	movwf	(main@num+2)& (0+255),b
  1149  001146  0E00               	movlw	0
  1150  001148  6F71               	movwf	(main@num+3)& (0+255),b
  1151                           
  1152                           ;timer.c: 373:            }
  1153  00114A  EFA8  F008         	goto	l2984
  1154  00114E                     l123:
  1155                           
  1156                           ; BSR set to: 0
  1157                           ;timer.c: 374:             char array[2];
  1158  00114E  8085               	bsf	133,0,c	;volatile
  1159  001150                     l2984:
  1160                           
  1161                           ; BSR set to: 0
  1162                           ;timer.c: 373:            }
  1163  001150  076E               	decf	main@num& (0+255),f,b
  1164  001152  0E00               	movlw	0
  1165  001154  5B6F               	subwfb	(main@num+1)& (0+255),f,b
  1166  001156  5B70               	subwfb	(main@num+2)& (0+255),f,b
  1167  001158  5B71               	subwfb	(main@num+3)& (0+255),f,b
  1168  00115A  516E               	movf	main@num& (0+255),w,b
  1169  00115C  116F               	iorwf	(main@num+1)& (0+255),w,b
  1170  00115E  1170               	iorwf	(main@num+2)& (0+255),w,b
  1171  001160  1171               	iorwf	(main@num+3)& (0+255),w,b
  1172  001162  A4D8               	btfss	status,2,c
  1173  001164  EFB6  F008         	goto	u2541
  1174  001168  EFB8  F008         	goto	u2540
  1175  00116C                     u2541:
  1176  00116C  EFA7  F008         	goto	l123
  1177  001170                     u2540:
  1178  001170                     
  1179                           ; BSR set to: 0
  1180                           ;timer.c: 376:             for(int i=0; i<2; i++){
  1181  001170  519A               	movf	main@setNum& (0+255),w,b
  1182  001172  119B               	iorwf	(main@setNum+1)& (0+255),w,b
  1183  001174  B4D8               	btfsc	status,2,c
  1184  001176  EFBF  F008         	goto	u2551
  1185  00117A  EFC1  F008         	goto	u2550
  1186  00117E                     u2551:
  1187  00117E  EFE7  F008         	goto	l3006
  1188  001182                     u2550:
  1189  001182                     
  1190                           ; BSR set to: 0
  1191                           ;timer.c: 377:                 array[i]=0;
  1192  001182  9085               	bcf	133,0,c	;volatile
  1193  001184  EFE7  F008         	goto	l3006
  1194  001188                     l2990:
  1195                           
  1196                           ; BSR set to: 0
  1197                           ;timer.c: 383: 
  1198  001188  517A               	movf	main@u24& (0+255),w,b
  1199  00118A  EC2D  F016         	call	_set_hours
  1200                           
  1201                           ;timer.c: 384: 
  1202  00118E  EF11  F009         	goto	l3008
  1203  001192                     l2992:
  1204                           
  1205                           ; BSR set to: 0
  1206                           ;timer.c: 386:             char temp1 = array[0];
  1207  001192  5189               	movf	main@u60& (0+255),w,b
  1208  001194  EC5E  F017         	call	_set_minutes
  1209                           
  1210                           ;timer.c: 387:             char temp2 = array[1];
  1211  001198  EF11  F009         	goto	l3008
  1212  00119C                     l2994:
  1213                           
  1214                           ; BSR set to: 0
  1215                           ;timer.c: 389:                 lcd_char(temp1);
  1216  00119C  5189               	movf	main@u60& (0+255),w,b
  1217  00119E  ECF8  F015         	call	_set_seconds
  1218                           
  1219                           ;timer.c: 390:                 lcd_char(temp2);
  1220  0011A2  EF11  F009         	goto	l3008
  1221  0011A6                     l2996:
  1222                           
  1223                           ; BSR set to: 0
  1224                           ;timer.c: 392:             else if((temp1 != 0) && (temp2 == 0)){
  1225  0011A6  517C               	movf	main@u7& (0+255),w,b
  1226  0011A8  EC6A  F018         	call	_set_dayname
  1227                           
  1228                           ;timer.c: 393:                 lcd_char('0');
  1229  0011AC  EF11  F009         	goto	l3008
  1230  0011B0                     l2998:
  1231                           
  1232                           ; BSR set to: 0
  1233                           ;timer.c: 395:             }
  1234  0011B0  517E               	movf	main@u12& (0+255),w,b
  1235  0011B2  EC97  F016         	call	_set_months
  1236                           
  1237                           ;timer.c: 396:             else{
  1238  0011B6  EF11  F009         	goto	l3008
  1239  0011BA                     l3000:
  1240                           
  1241                           ; BSR set to: 0
  1242                           ;timer.c: 398:                 lcd_char('0');
  1243  0011BA  5180               	movf	main@u31& (0+255),w,b
  1244  0011BC  ECCB  F016         	call	_set_days
  1245                           
  1246                           ;timer.c: 399:             }
  1247  0011C0  EF11  F009         	goto	l3008
  1248  0011C4                     l3002:
  1249                           
  1250                           ; BSR set to: 0
  1251                           ;timer.c: 401: 
  1252  0011C4  5182               	movf	main@u99& (0+255),w,b
  1253  0011C6  EC32  F017         	call	_set_years
  1254                           
  1255                           ;timer.c: 402:             sprintf(array, "%lu", get_minutes());
  1256  0011CA  EF11  F009         	goto	l3008
  1257  0011CE                     l3006:
  1258  0011CE  0100               	movlb	0	; () banked
  1259  0011D0  519A               	movf	main@setNum& (0+255),w,b
  1260  0011D2  6F6A               	movwf	??_main& (0+255),b
  1261  0011D4  6B6B               	clrf	(??_main+1)& (0+255),b
  1262                           
  1263                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1264                           ; Switch size 1, requested type "simple"
  1265                           ; Number of cases is 1, Range of values is 0 to 0
  1266                           ; switch strategies available:
  1267                           ; Name         Instructions Cycles
  1268                           ; simple_byte            4     3 (average)
  1269                           ;	Chosen strategy is simple_byte
  1270  0011D6  516B               	movf	(??_main+1)& (0+255),w,b
  1271  0011D8  0A00               	xorlw	0	; case 0
  1272  0011DA  B4D8               	btfsc	status,2,c
  1273  0011DC  EFF2  F008         	goto	l3454
  1274  0011E0  EF11  F009         	goto	l3008
  1275  0011E4                     l3454:
  1276                           
  1277                           ; BSR set to: 0
  1278                           ; Switch size 1, requested type "simple"
  1279                           ; Number of cases is 7, Range of values is 1 to 7
  1280                           ; switch strategies available:
  1281                           ; Name         Instructions Cycles
  1282                           ; simple_byte           22    12 (average)
  1283                           ;	Chosen strategy is simple_byte
  1284  0011E4  516A               	movf	??_main& (0+255),w,b
  1285  0011E6  0A01               	xorlw	1	; case 1
  1286  0011E8  B4D8               	btfsc	status,2,c
  1287  0011EA  EFC4  F008         	goto	l2990
  1288  0011EE  0A03               	xorlw	3	; case 2
  1289  0011F0  B4D8               	btfsc	status,2,c
  1290  0011F2  EFC9  F008         	goto	l2992
  1291  0011F6  0A01               	xorlw	1	; case 3
  1292  0011F8  B4D8               	btfsc	status,2,c
  1293  0011FA  EFCE  F008         	goto	l2994
  1294  0011FE  0A07               	xorlw	7	; case 4
  1295  001200  B4D8               	btfsc	status,2,c
  1296  001202  EFD3  F008         	goto	l2996
  1297  001206  0A01               	xorlw	1	; case 5
  1298  001208  B4D8               	btfsc	status,2,c
  1299  00120A  EFD8  F008         	goto	l2998
  1300  00120E  0A03               	xorlw	3	; case 6
  1301  001210  B4D8               	btfsc	status,2,c
  1302  001212  EFDD  F008         	goto	l3000
  1303  001216  0A01               	xorlw	1	; case 7
  1304  001218  B4D8               	btfsc	status,2,c
  1305  00121A  EFE2  F008         	goto	l3002
  1306  00121E  EF11  F009         	goto	l3008
  1307  001222                     l3008:
  1308                           
  1309                           ;timer.c: 406:                 lcd_char(temp1);;timer.c: 408:             }
  1310  001222  0E00               	movlw	0
  1311  001224  0100               	movlb	0	; () banked
  1312  001226  6F93               	movwf	(main@i+1)& (0+255),b
  1313  001228  0E00               	movlw	0
  1314  00122A  6F92               	movwf	main@i& (0+255),b
  1315  00122C                     l3010:
  1316                           
  1317                           ; BSR set to: 0
  1318  00122C  BF93               	btfsc	(main@i+1)& (0+255),7,b
  1319  00122E  EF22  F009         	goto	u2561
  1320  001232  5193               	movf	(main@i+1)& (0+255),w,b
  1321  001234  E109               	bnz	u2560
  1322  001236  0E02               	movlw	2
  1323  001238  5D92               	subwf	main@i& (0+255),w,b
  1324  00123A  A0D8               	btfss	status,0,c
  1325  00123C  EF22  F009         	goto	u2561
  1326  001240  EF24  F009         	goto	u2560
  1327  001244                     u2561:
  1328  001244  EF26  F009         	goto	l3014
  1329  001248                     u2560:
  1330  001248  EF32  F009         	goto	l3020
  1331  00124C                     l3014:
  1332                           
  1333                           ; BSR set to: 0
  1334                           ;timer.c: 409:             else if((temp1 != 0) && (temp2 == 0)){
  1335  00124C  0EA3               	movlw	low main@array
  1336  00124E  2592               	addwf	main@i& (0+255),w,b
  1337  001250  6ED9               	movwf	fsr2l,c
  1338  001252  0E00               	movlw	high main@array
  1339  001254  2193               	addwfc	(main@i+1)& (0+255),w,b
  1340  001256  6EDA               	movwf	fsr2h,c
  1341  001258  0E00               	movlw	0
  1342  00125A  6EDF               	movwf	indf2,c
  1343  00125C                     
  1344                           ; BSR set to: 0
  1345                           ;timer.c: 410:                 lcd_char('0');
  1346  00125C  4B92               	infsnz	main@i& (0+255),f,b
  1347  00125E  2B93               	incf	(main@i+1)& (0+255),f,b
  1348  001260  EF16  F009         	goto	l3010
  1349  001264                     l3020:
  1350                           
  1351                           ; BSR set to: 0
  1352                           ;timer.c: 412:             }
  1353  001264  0E54               	movlw	84
  1354  001266  ECB1  F014         	call	_lcd_char
  1355                           
  1356                           ;timer.c: 413:             else{
  1357  00126A  0E3A               	movlw	58
  1358  00126C  ECB1  F014         	call	_lcd_char
  1359                           
  1360                           ;timer.c: 414:                 lcd_char('0');
  1361  001270  0E20               	movlw	32
  1362  001272  ECB1  F014         	call	_lcd_char
  1363  001276                     
  1364                           ;timer.c: 417:             lcd_char(':');
  1365  001276  0EA3               	movlw	low main@array
  1366  001278  6E58               	movwf	sprintf@s^0,c
  1367  00127A  0E00               	movlw	high main@array
  1368  00127C  6E59               	movwf	(sprintf@s+1)^0,c
  1369  00127E  0E1D               	movlw	low STR_1
  1370  001280  6E5A               	movwf	sprintf@fmt^0,c
  1371  001282  0E0F               	movlw	high STR_1
  1372  001284  6E5B               	movwf	(sprintf@fmt+1)^0,c
  1373  001286  ECA9  F018         	call	_get_hours	;wreg free
  1374  00128A  0100               	movlb	0	; () banked
  1375  00128C  6F6A               	movwf	??_main& (0+255),b
  1376  00128E  516A               	movf	??_main& (0+255),w,b
  1377  001290  6E5C               	movwf	(?_sprintf+4)^0,c
  1378  001292  6A5D               	clrf	(?_sprintf+5)^0,c
  1379  001294  ECE2  F017         	call	_sprintf	;wreg free
  1380  001298                     
  1381                           ;timer.c: 418: 
  1382  001298  C0A3  F0A7         	movff	main@array,main@temp1
  1383  00129C                     
  1384                           ;timer.c: 419:             sprintf(array, "%lu", get_seconds());
  1385  00129C  C0A4  F0A6         	movff	main@array+1,main@temp2
  1386  0012A0                     
  1387                           ;timer.c: 420:             temp1 = array[0];
  1388  0012A0  0100               	movlb	0	; () banked
  1389  0012A2  51A7               	movf	main@temp1& (0+255),w,b
  1390  0012A4  B4D8               	btfsc	status,2,c
  1391  0012A6  EF57  F009         	goto	u2571
  1392  0012AA  EF59  F009         	goto	u2570
  1393  0012AE                     u2571:
  1394  0012AE  EF6A  F009         	goto	l3034
  1395  0012B2                     u2570:
  1396  0012B2                     
  1397                           ; BSR set to: 0
  1398  0012B2  51A6               	movf	main@temp2& (0+255),w,b
  1399  0012B4  B4D8               	btfsc	status,2,c
  1400  0012B6  EF5F  F009         	goto	u2581
  1401  0012BA  EF61  F009         	goto	u2580
  1402  0012BE                     u2581:
  1403  0012BE  EF6A  F009         	goto	l3034
  1404  0012C2                     u2580:
  1405  0012C2                     
  1406                           ; BSR set to: 0
  1407                           ;timer.c: 421:             temp2 = array[1];
  1408  0012C2  51A7               	movf	main@temp1& (0+255),w,b
  1409  0012C4  ECB1  F014         	call	_lcd_char
  1410                           
  1411                           ;timer.c: 422:             if((temp1 != 0) && (temp2 != 0)){
  1412  0012C8  0100               	movlb	0	; () banked
  1413  0012CA  51A6               	movf	main@temp2& (0+255),w,b
  1414  0012CC  ECB1  F014         	call	_lcd_char
  1415                           
  1416                           ;timer.c: 423:                 lcd_char(temp1);
  1417  0012D0  EF89  F009         	goto	l139
  1418  0012D4                     l3034:
  1419                           
  1420                           ; BSR set to: 0
  1421  0012D4  51A7               	movf	main@temp1& (0+255),w,b
  1422  0012D6  B4D8               	btfsc	status,2,c
  1423  0012D8  EF70  F009         	goto	u2591
  1424  0012DC  EF72  F009         	goto	u2590
  1425  0012E0                     u2591:
  1426  0012E0  EF83  F009         	goto	l3040
  1427  0012E4                     u2590:
  1428  0012E4                     
  1429                           ; BSR set to: 0
  1430  0012E4  51A6               	movf	main@temp2& (0+255),w,b
  1431  0012E6  A4D8               	btfss	status,2,c
  1432  0012E8  EF78  F009         	goto	u2601
  1433  0012EC  EF7A  F009         	goto	u2600
  1434  0012F0                     u2601:
  1435  0012F0  EF83  F009         	goto	l3040
  1436  0012F4                     u2600:
  1437  0012F4                     
  1438                           ; BSR set to: 0
  1439                           ;timer.c: 425:             }
  1440  0012F4  0E30               	movlw	48
  1441  0012F6  ECB1  F014         	call	_lcd_char
  1442                           
  1443                           ;timer.c: 426:             else if((temp1 != 0) && (temp2 == 0)){
  1444  0012FA  0100               	movlb	0	; () banked
  1445  0012FC  51A7               	movf	main@temp1& (0+255),w,b
  1446  0012FE  ECB1  F014         	call	_lcd_char
  1447                           
  1448                           ;timer.c: 427:                 lcd_char('0');
  1449  001302  EF89  F009         	goto	l139
  1450  001306                     l3040:
  1451                           
  1452                           ; BSR set to: 0
  1453                           ;timer.c: 429:             }
  1454  001306  0E30               	movlw	48
  1455  001308  ECB1  F014         	call	_lcd_char
  1456                           
  1457                           ;timer.c: 430:             else{
  1458  00130C  0E30               	movlw	48
  1459  00130E  ECB1  F014         	call	_lcd_char
  1460  001312                     l139:
  1461                           
  1462                           ;timer.c: 432:                 lcd_char('0');
  1463  001312  0E3A               	movlw	58
  1464  001314  ECB1  F014         	call	_lcd_char
  1465  001318                     
  1466                           ;timer.c: 434: 
  1467  001318  0EA3               	movlw	low main@array
  1468  00131A  6E58               	movwf	sprintf@s^0,c
  1469  00131C  0E00               	movlw	high main@array
  1470  00131E  6E59               	movwf	(sprintf@s+1)^0,c
  1471  001320  0E1D               	movlw	low STR_1
  1472  001322  6E5A               	movwf	sprintf@fmt^0,c
  1473  001324  0E0F               	movlw	high STR_1
  1474  001326  6E5B               	movwf	(sprintf@fmt+1)^0,c
  1475  001328  EC0C  F019         	call	_get_minutes	;wreg free
  1476  00132C  0100               	movlb	0	; () banked
  1477  00132E  6F6A               	movwf	??_main& (0+255),b
  1478  001330  516A               	movf	??_main& (0+255),w,b
  1479  001332  6E5C               	movwf	(?_sprintf+4)^0,c
  1480  001334  6A5D               	clrf	(?_sprintf+5)^0,c
  1481  001336  ECE2  F017         	call	_sprintf	;wreg free
  1482  00133A                     
  1483                           ;timer.c: 435: 
  1484  00133A  C0A3  F0A7         	movff	main@array,main@temp1
  1485  00133E                     
  1486                           ;timer.c: 436:             lcd_char(' ');
  1487  00133E  C0A4  F0A6         	movff	main@array+1,main@temp2
  1488  001342                     
  1489                           ;timer.c: 437:             char naming[3];
  1490  001342  0100               	movlb	0	; () banked
  1491  001344  51A7               	movf	main@temp1& (0+255),w,b
  1492  001346  B4D8               	btfsc	status,2,c
  1493  001348  EFA8  F009         	goto	u2611
  1494  00134C  EFAA  F009         	goto	u2610
  1495  001350                     u2611:
  1496  001350  EFBB  F009         	goto	l3054
  1497  001354                     u2610:
  1498  001354                     
  1499                           ; BSR set to: 0
  1500  001354  51A6               	movf	main@temp2& (0+255),w,b
  1501  001356  B4D8               	btfsc	status,2,c
  1502  001358  EFB0  F009         	goto	u2621
  1503  00135C  EFB2  F009         	goto	u2620
  1504  001360                     u2621:
  1505  001360  EFBB  F009         	goto	l3054
  1506  001364                     u2620:
  1507  001364                     
  1508                           ; BSR set to: 0
  1509                           ;timer.c: 438: 
  1510  001364  51A7               	movf	main@temp1& (0+255),w,b
  1511  001366  ECB1  F014         	call	_lcd_char
  1512                           
  1513                           ;timer.c: 439:             for(int i=0; i<3; i++){
  1514  00136A  0100               	movlb	0	; () banked
  1515  00136C  51A6               	movf	main@temp2& (0+255),w,b
  1516  00136E  ECB1  F014         	call	_lcd_char
  1517                           
  1518                           ;timer.c: 440:                 naming[i]=0;
  1519  001372  EFDA  F009         	goto	l143
  1520  001376                     l3054:
  1521                           
  1522                           ; BSR set to: 0
  1523  001376  51A7               	movf	main@temp1& (0+255),w,b
  1524  001378  B4D8               	btfsc	status,2,c
  1525  00137A  EFC1  F009         	goto	u2631
  1526  00137E  EFC3  F009         	goto	u2630
  1527  001382                     u2631:
  1528  001382  EFD4  F009         	goto	l3060
  1529  001386                     u2630:
  1530  001386                     
  1531                           ; BSR set to: 0
  1532  001386  51A6               	movf	main@temp2& (0+255),w,b
  1533  001388  A4D8               	btfss	status,2,c
  1534  00138A  EFC9  F009         	goto	u2641
  1535  00138E  EFCB  F009         	goto	u2640
  1536  001392                     u2641:
  1537  001392  EFD4  F009         	goto	l3060
  1538  001396                     u2640:
  1539  001396                     
  1540                           ; BSR set to: 0
  1541                           ;timer.c: 442: 
  1542  001396  0E30               	movlw	48
  1543  001398  ECB1  F014         	call	_lcd_char
  1544                           
  1545                           ;timer.c: 443:             switch(get_dayname()){
  1546  00139C  0100               	movlb	0	; () banked
  1547  00139E  51A7               	movf	main@temp1& (0+255),w,b
  1548  0013A0  ECB1  F014         	call	_lcd_char
  1549                           
  1550                           ;timer.c: 444:                 case 1:
  1551  0013A4  EFDA  F009         	goto	l143
  1552  0013A8                     l3060:
  1553                           
  1554                           ; BSR set to: 0
  1555                           ;timer.c: 446:                     break;
  1556  0013A8  0E30               	movlw	48
  1557  0013AA  ECB1  F014         	call	_lcd_char
  1558                           
  1559                           ;timer.c: 447:                 case 2:
  1560  0013AE  0E30               	movlw	48
  1561  0013B0  ECB1  F014         	call	_lcd_char
  1562  0013B4                     l143:
  1563                           
  1564                           ;timer.c: 449:                    break;
  1565  0013B4  0E3A               	movlw	58
  1566  0013B6  ECB1  F014         	call	_lcd_char
  1567  0013BA                     
  1568                           ;timer.c: 451:                     sprintf(naming, "Tue");
  1569  0013BA  0EA3               	movlw	low main@array
  1570  0013BC  6E58               	movwf	sprintf@s^0,c
  1571  0013BE  0E00               	movlw	high main@array
  1572  0013C0  6E59               	movwf	(sprintf@s+1)^0,c
  1573  0013C2  0E1D               	movlw	low STR_1
  1574  0013C4  6E5A               	movwf	sprintf@fmt^0,c
  1575  0013C6  0E0F               	movlw	high STR_1
  1576  0013C8  6E5B               	movwf	(sprintf@fmt+1)^0,c
  1577  0013CA  EC98  F018         	call	_get_seconds	;wreg free
  1578  0013CE  0100               	movlb	0	; () banked
  1579  0013D0  6F6A               	movwf	??_main& (0+255),b
  1580  0013D2  516A               	movf	??_main& (0+255),w,b
  1581  0013D4  6E5C               	movwf	(?_sprintf+4)^0,c
  1582  0013D6  6A5D               	clrf	(?_sprintf+5)^0,c
  1583  0013D8  ECE2  F017         	call	_sprintf	;wreg free
  1584  0013DC                     
  1585                           ;timer.c: 452:                     break;
  1586  0013DC  C0A3  F0A7         	movff	main@array,main@temp1
  1587  0013E0                     
  1588                           ;timer.c: 453:                 case 4:
  1589  0013E0  C0A4  F0A6         	movff	main@array+1,main@temp2
  1590  0013E4                     
  1591                           ;timer.c: 454:                     sprintf(naming, "Wed");
  1592  0013E4  0100               	movlb	0	; () banked
  1593  0013E6  51A7               	movf	main@temp1& (0+255),w,b
  1594  0013E8  B4D8               	btfsc	status,2,c
  1595  0013EA  EFF9  F009         	goto	u2651
  1596  0013EE  EFFB  F009         	goto	u2650
  1597  0013F2                     u2651:
  1598  0013F2  EF0C  F00A         	goto	l3074
  1599  0013F6                     u2650:
  1600  0013F6                     
  1601                           ; BSR set to: 0
  1602  0013F6  51A6               	movf	main@temp2& (0+255),w,b
  1603  0013F8  B4D8               	btfsc	status,2,c
  1604  0013FA  EF01  F00A         	goto	u2661
  1605  0013FE  EF03  F00A         	goto	u2660
  1606  001402                     u2661:
  1607  001402  EF0C  F00A         	goto	l3074
  1608  001406                     u2660:
  1609  001406                     
  1610                           ; BSR set to: 0
  1611                           ;timer.c: 455:                     break;
  1612  001406  51A7               	movf	main@temp1& (0+255),w,b
  1613  001408  ECB1  F014         	call	_lcd_char
  1614                           
  1615                           ;timer.c: 456:                 case 5:
  1616  00140C  0100               	movlb	0	; () banked
  1617  00140E  51A6               	movf	main@temp2& (0+255),w,b
  1618  001410  ECB1  F014         	call	_lcd_char
  1619                           
  1620                           ;timer.c: 457:                    sprintf(naming, "Thu");
  1621  001414  EF2B  F00A         	goto	l147
  1622  001418                     l3074:
  1623                           
  1624                           ; BSR set to: 0
  1625  001418  51A7               	movf	main@temp1& (0+255),w,b
  1626  00141A  B4D8               	btfsc	status,2,c
  1627  00141C  EF12  F00A         	goto	u2671
  1628  001420  EF14  F00A         	goto	u2670
  1629  001424                     u2671:
  1630  001424  EF25  F00A         	goto	l3080
  1631  001428                     u2670:
  1632  001428                     
  1633                           ; BSR set to: 0
  1634  001428  51A6               	movf	main@temp2& (0+255),w,b
  1635  00142A  A4D8               	btfss	status,2,c
  1636  00142C  EF1A  F00A         	goto	u2681
  1637  001430  EF1C  F00A         	goto	u2680
  1638  001434                     u2681:
  1639  001434  EF25  F00A         	goto	l3080
  1640  001438                     u2680:
  1641  001438                     
  1642                           ; BSR set to: 0
  1643                           ;timer.c: 459:                 case 6:
  1644  001438  0E30               	movlw	48
  1645  00143A  ECB1  F014         	call	_lcd_char
  1646                           
  1647                           ;timer.c: 460:                     sprintf(naming, "Fri");
  1648  00143E  0100               	movlb	0	; () banked
  1649  001440  51A7               	movf	main@temp1& (0+255),w,b
  1650  001442  ECB1  F014         	call	_lcd_char
  1651                           
  1652                           ;timer.c: 461:                     break;
  1653  001446  EF2B  F00A         	goto	l147
  1654  00144A                     l3080:
  1655                           
  1656                           ; BSR set to: 0
  1657                           ;timer.c: 463:                     sprintf(naming, "Sat");
  1658  00144A  0E30               	movlw	48
  1659  00144C  ECB1  F014         	call	_lcd_char
  1660                           
  1661                           ;timer.c: 464:                     break;
  1662  001450  0E30               	movlw	48
  1663  001452  ECB1  F014         	call	_lcd_char
  1664  001456                     l147:
  1665                           
  1666                           ;timer.c: 468:             lcd_char(' ');
  1667  001456  0E20               	movlw	32
  1668  001458  ECB1  F014         	call	_lcd_char
  1669  00145C                     
  1670                           ;timer.c: 469: ;timer.c: 471:                 char temp = naming[i];
  1671  00145C  0E00               	movlw	0
  1672  00145E  0100               	movlb	0	; () banked
  1673  001460  6F95               	movwf	(main@i_353+1)& (0+255),b
  1674  001462  0E00               	movlw	0
  1675  001464  6F94               	movwf	main@i_353& (0+255),b
  1676  001466                     l3084:
  1677                           
  1678                           ; BSR set to: 0
  1679  001466  BF95               	btfsc	(main@i_353+1)& (0+255),7,b
  1680  001468  EF3F  F00A         	goto	u2691
  1681  00146C  5195               	movf	(main@i_353+1)& (0+255),w,b
  1682  00146E  E109               	bnz	u2690
  1683  001470  0E03               	movlw	3
  1684  001472  5D94               	subwf	main@i_353& (0+255),w,b
  1685  001474  A0D8               	btfss	status,0,c
  1686  001476  EF3F  F00A         	goto	u2691
  1687  00147A  EF41  F00A         	goto	u2690
  1688  00147E                     u2691:
  1689  00147E  EF43  F00A         	goto	l3088
  1690  001482                     u2690:
  1691  001482  EFA3  F00A         	goto	l3110
  1692  001486                     l3088:
  1693                           
  1694                           ; BSR set to: 0
  1695                           ;timer.c: 472:                 lcd_char(temp);
  1696  001486  0E8F               	movlw	low main@naming
  1697  001488  2594               	addwf	main@i_353& (0+255),w,b
  1698  00148A  6ED9               	movwf	fsr2l,c
  1699  00148C  0E00               	movlw	high main@naming
  1700  00148E  2195               	addwfc	(main@i_353+1)& (0+255),w,b
  1701  001490  6EDA               	movwf	fsr2h,c
  1702  001492  0E00               	movlw	0
  1703  001494  6EDF               	movwf	indf2,c
  1704  001496                     
  1705                           ; BSR set to: 0
  1706                           ;timer.c: 473:             }
  1707  001496  4B94               	infsnz	main@i_353& (0+255),f,b
  1708  001498  2B95               	incf	(main@i_353+1)& (0+255),f,b
  1709  00149A  EF33  F00A         	goto	l3084
  1710  00149E                     l3094:
  1711                           
  1712                           ; BSR set to: 0
  1713                           ;timer.c: 477:             lcd_char('D');
  1714  00149E  0E8F               	movlw	low main@naming
  1715  0014A0  6E58               	movwf	sprintf@s^0,c
  1716  0014A2  0E00               	movlw	high main@naming
  1717  0014A4  6E59               	movwf	(sprintf@s+1)^0,c
  1718  0014A6  0E11               	movlw	low STR_4
  1719  0014A8  6E5A               	movwf	sprintf@fmt^0,c
  1720  0014AA  0E0F               	movlw	high STR_4
  1721  0014AC  6E5B               	movwf	(sprintf@fmt+1)^0,c
  1722  0014AE  ECE2  F017         	call	_sprintf	;wreg free
  1723                           
  1724                           ;timer.c: 478:             lcd_char(':');
  1725  0014B2  EFCE  F00A         	goto	l3112
  1726  0014B6                     l3096:
  1727                           
  1728                           ; BSR set to: 0
  1729                           ;timer.c: 480: 
  1730  0014B6  0E8F               	movlw	low main@naming
  1731  0014B8  6E58               	movwf	sprintf@s^0,c
  1732  0014BA  0E00               	movlw	high main@naming
  1733  0014BC  6E59               	movwf	(sprintf@s+1)^0,c
  1734  0014BE  0E0D               	movlw	low STR_5
  1735  0014C0  6E5A               	movwf	sprintf@fmt^0,c
  1736  0014C2  0E0F               	movlw	high STR_5
  1737  0014C4  6E5B               	movwf	(sprintf@fmt+1)^0,c
  1738  0014C6  ECE2  F017         	call	_sprintf	;wreg free
  1739                           
  1740                           ;timer.c: 481: 
  1741  0014CA  EFCE  F00A         	goto	l3112
  1742  0014CE                     l3098:
  1743                           
  1744                           ; BSR set to: 0
  1745                           ;timer.c: 483:             temp1 = array[0];
  1746  0014CE  0E8F               	movlw	low main@naming
  1747  0014D0  6E58               	movwf	sprintf@s^0,c
  1748  0014D2  0E00               	movlw	high main@naming
  1749  0014D4  6E59               	movwf	(sprintf@s+1)^0,c
  1750  0014D6  0E05               	movlw	low STR_6
  1751  0014D8  6E5A               	movwf	sprintf@fmt^0,c
  1752  0014DA  0E0F               	movlw	high STR_6
  1753  0014DC  6E5B               	movwf	(sprintf@fmt+1)^0,c
  1754  0014DE  ECE2  F017         	call	_sprintf	;wreg free
  1755                           
  1756                           ;timer.c: 484:             temp2 = array[1];
  1757  0014E2  EFCE  F00A         	goto	l3112
  1758  0014E6                     l3100:
  1759                           
  1760                           ; BSR set to: 0
  1761                           ;timer.c: 486:                 lcd_char(temp1);
  1762  0014E6  0E8F               	movlw	low main@naming
  1763  0014E8  6E58               	movwf	sprintf@s^0,c
  1764  0014EA  0E00               	movlw	high main@naming
  1765  0014EC  6E59               	movwf	(sprintf@s+1)^0,c
  1766  0014EE  0E01               	movlw	low STR_7
  1767  0014F0  6E5A               	movwf	sprintf@fmt^0,c
  1768  0014F2  0E0F               	movlw	high STR_7
  1769  0014F4  6E5B               	movwf	(sprintf@fmt+1)^0,c
  1770  0014F6  ECE2  F017         	call	_sprintf	;wreg free
  1771                           
  1772                           ;timer.c: 487:                 lcd_char(temp2);
  1773  0014FA  EFCE  F00A         	goto	l3112
  1774  0014FE                     l3102:
  1775                           
  1776                           ; BSR set to: 0
  1777                           ;timer.c: 489:             else if((temp1 != 0) && (temp2 == 0)){
  1778  0014FE  0E8F               	movlw	low main@naming
  1779  001500  6E58               	movwf	sprintf@s^0,c
  1780  001502  0E00               	movlw	high main@naming
  1781  001504  6E59               	movwf	(sprintf@s+1)^0,c
  1782  001506  0E19               	movlw	low STR_8
  1783  001508  6E5A               	movwf	sprintf@fmt^0,c
  1784  00150A  0E0F               	movlw	high STR_8
  1785  00150C  6E5B               	movwf	(sprintf@fmt+1)^0,c
  1786  00150E  ECE2  F017         	call	_sprintf	;wreg free
  1787                           
  1788                           ;timer.c: 490:                 lcd_char('0');
  1789  001512  EFCE  F00A         	goto	l3112
  1790  001516                     l3104:
  1791                           
  1792                           ; BSR set to: 0
  1793                           ;timer.c: 492:             }
  1794  001516  0E8F               	movlw	low main@naming
  1795  001518  6E58               	movwf	sprintf@s^0,c
  1796  00151A  0E00               	movlw	high main@naming
  1797  00151C  6E59               	movwf	(sprintf@s+1)^0,c
  1798  00151E  0E09               	movlw	low STR_9
  1799  001520  6E5A               	movwf	sprintf@fmt^0,c
  1800  001522  0E0F               	movlw	high STR_9
  1801  001524  6E5B               	movwf	(sprintf@fmt+1)^0,c
  1802  001526  ECE2  F017         	call	_sprintf	;wreg free
  1803                           
  1804                           ;timer.c: 493:             else{
  1805  00152A  EFCE  F00A         	goto	l3112
  1806  00152E                     l3106:
  1807                           
  1808                           ; BSR set to: 0
  1809                           ;timer.c: 495:                 lcd_char('0');
  1810  00152E  0E8F               	movlw	low main@naming
  1811  001530  6E58               	movwf	sprintf@s^0,c
  1812  001532  0E00               	movlw	high main@naming
  1813  001534  6E59               	movwf	(sprintf@s+1)^0,c
  1814  001536  0E15               	movlw	low STR_10
  1815  001538  6E5A               	movwf	sprintf@fmt^0,c
  1816  00153A  0E0F               	movlw	high STR_10
  1817  00153C  6E5B               	movwf	(sprintf@fmt+1)^0,c
  1818  00153E  ECE2  F017         	call	_sprintf	;wreg free
  1819                           
  1820                           ;timer.c: 496:             }
  1821  001542  EFCE  F00A         	goto	l3112
  1822  001546                     l3110:
  1823                           
  1824                           ; BSR set to: 0
  1825  001546  EC49  F019         	call	_get_dayname	;wreg free
  1826  00154A  0100               	movlb	0	; () banked
  1827  00154C  6F6A               	movwf	??_main& (0+255),b
  1828  00154E  6B6B               	clrf	(??_main+1)& (0+255),b
  1829                           
  1830                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1831                           ; Switch size 1, requested type "simple"
  1832                           ; Number of cases is 1, Range of values is 0 to 0
  1833                           ; switch strategies available:
  1834                           ; Name         Instructions Cycles
  1835                           ; simple_byte            4     3 (average)
  1836                           ;	Chosen strategy is simple_byte
  1837  001550  516B               	movf	(??_main+1)& (0+255),w,b
  1838  001552  0A00               	xorlw	0	; case 0
  1839  001554  B4D8               	btfsc	status,2,c
  1840  001556  EFAF  F00A         	goto	l3456
  1841  00155A  EFCE  F00A         	goto	l3112
  1842  00155E                     l3456:
  1843                           
  1844                           ; BSR set to: 0
  1845                           ; Switch size 1, requested type "simple"
  1846                           ; Number of cases is 7, Range of values is 1 to 7
  1847                           ; switch strategies available:
  1848                           ; Name         Instructions Cycles
  1849                           ; simple_byte           22    12 (average)
  1850                           ;	Chosen strategy is simple_byte
  1851  00155E  516A               	movf	??_main& (0+255),w,b
  1852  001560  0A01               	xorlw	1	; case 1
  1853  001562  B4D8               	btfsc	status,2,c
  1854  001564  EF4F  F00A         	goto	l3094
  1855  001568  0A03               	xorlw	3	; case 2
  1856  00156A  B4D8               	btfsc	status,2,c
  1857  00156C  EF5B  F00A         	goto	l3096
  1858  001570  0A01               	xorlw	1	; case 3
  1859  001572  B4D8               	btfsc	status,2,c
  1860  001574  EF67  F00A         	goto	l3098
  1861  001578  0A07               	xorlw	7	; case 4
  1862  00157A  B4D8               	btfsc	status,2,c
  1863  00157C  EF73  F00A         	goto	l3100
  1864  001580  0A01               	xorlw	1	; case 5
  1865  001582  B4D8               	btfsc	status,2,c
  1866  001584  EF7F  F00A         	goto	l3102
  1867  001588  0A03               	xorlw	3	; case 6
  1868  00158A  B4D8               	btfsc	status,2,c
  1869  00158C  EF8B  F00A         	goto	l3104
  1870  001590  0A01               	xorlw	1	; case 7
  1871  001592  B4D8               	btfsc	status,2,c
  1872  001594  EF97  F00A         	goto	l3106
  1873  001598  EFCE  F00A         	goto	l3112
  1874  00159C                     l3112:
  1875                           
  1876                           ;timer.c: 500:             temp1 = array[0];
  1877  00159C  0E20               	movlw	32
  1878  00159E  ECB1  F014         	call	_lcd_char
  1879  0015A2                     
  1880                           ;timer.c: 502:             if((temp1 != 0) && (temp2 != 0)){
  1881  0015A2  0E00               	movlw	0
  1882  0015A4  0100               	movlb	0	; () banked
  1883  0015A6  6F97               	movwf	(main@i_362+1)& (0+255),b
  1884  0015A8  0E00               	movlw	0
  1885  0015AA  6F96               	movwf	main@i_362& (0+255),b
  1886  0015AC                     l3116:
  1887                           
  1888                           ; BSR set to: 0
  1889  0015AC  BF97               	btfsc	(main@i_362+1)& (0+255),7,b
  1890  0015AE  EFE2  F00A         	goto	u2701
  1891  0015B2  5197               	movf	(main@i_362+1)& (0+255),w,b
  1892  0015B4  E109               	bnz	u2700
  1893  0015B6  0E03               	movlw	3
  1894  0015B8  5D96               	subwf	main@i_362& (0+255),w,b
  1895  0015BA  A0D8               	btfss	status,0,c
  1896  0015BC  EFE2  F00A         	goto	u2701
  1897  0015C0  EFE4  F00A         	goto	u2700
  1898  0015C4                     u2701:
  1899  0015C4  EFE6  F00A         	goto	l3120
  1900  0015C8                     u2700:
  1901  0015C8  EFF6  F00A         	goto	l3128
  1902  0015CC                     l3120:
  1903                           
  1904                           ; BSR set to: 0
  1905                           ;timer.c: 503:                 lcd_char(temp1);
  1906  0015CC  0E8F               	movlw	low main@naming
  1907  0015CE  2596               	addwf	main@i_362& (0+255),w,b
  1908  0015D0  6ED9               	movwf	fsr2l,c
  1909  0015D2  0E00               	movlw	high main@naming
  1910  0015D4  2197               	addwfc	(main@i_362+1)& (0+255),w,b
  1911  0015D6  6EDA               	movwf	fsr2h,c
  1912  0015D8  50DF               	movf	indf2,w,c
  1913  0015DA  6F86               	movwf	main@temp& (0+255),b
  1914  0015DC                     
  1915                           ; BSR set to: 0
  1916                           ;timer.c: 504:                 lcd_char(temp2);
  1917  0015DC  5186               	movf	main@temp& (0+255),w,b
  1918  0015DE  ECB1  F014         	call	_lcd_char
  1919  0015E2                     
  1920                           ;timer.c: 505:             }
  1921  0015E2  0100               	movlb	0	; () banked
  1922  0015E4  4B96               	infsnz	main@i_362& (0+255),f,b
  1923  0015E6  2B97               	incf	(main@i_362+1)& (0+255),f,b
  1924  0015E8  EFD6  F00A         	goto	l3116
  1925  0015EC                     l3128:
  1926                           
  1927                           ; BSR set to: 0
  1928                           ;timer.c: 507:                 lcd_char('0');
  1929  0015EC  0EC0               	movlw	192
  1930  0015EE  EC54  F014         	call	_lcd_command
  1931                           
  1932                           ;timer.c: 509:             }
  1933  0015F2  0E44               	movlw	68
  1934  0015F4  ECB1  F014         	call	_lcd_char
  1935                           
  1936                           ;timer.c: 510:             else{
  1937  0015F8  0E3A               	movlw	58
  1938  0015FA  ECB1  F014         	call	_lcd_char
  1939                           
  1940                           ;timer.c: 511:                 lcd_char('0');
  1941  0015FE  0E20               	movlw	32
  1942  001600  ECB1  F014         	call	_lcd_char
  1943  001604                     
  1944                           ;timer.c: 514:             lcd_char('/');
  1945  001604  0EA3               	movlw	low main@array
  1946  001606  6E58               	movwf	sprintf@s^0,c
  1947  001608  0E00               	movlw	high main@array
  1948  00160A  6E59               	movwf	(sprintf@s+1)^0,c
  1949  00160C  0E1D               	movlw	low STR_1
  1950  00160E  6E5A               	movwf	sprintf@fmt^0,c
  1951  001610  0E0F               	movlw	high STR_1
  1952  001612  6E5B               	movwf	(sprintf@fmt+1)^0,c
  1953  001614  ECFC  F018         	call	_get_months	;wreg free
  1954  001618  0100               	movlb	0	; () banked
  1955  00161A  6F6A               	movwf	??_main& (0+255),b
  1956  00161C  516A               	movf	??_main& (0+255),w,b
  1957  00161E  6E5C               	movwf	(?_sprintf+4)^0,c
  1958  001620  6A5D               	clrf	(?_sprintf+5)^0,c
  1959  001622  ECE2  F017         	call	_sprintf	;wreg free
  1960  001626                     
  1961                           ;timer.c: 515: 
  1962  001626  C0A3  F0A7         	movff	main@array,main@temp1
  1963  00162A                     
  1964                           ;timer.c: 516:             lcd_char('2');
  1965  00162A  C0A4  F0A6         	movff	main@array+1,main@temp2
  1966  00162E                     
  1967                           ;timer.c: 517:             lcd_char('0');
  1968  00162E  0100               	movlb	0	; () banked
  1969  001630  51A7               	movf	main@temp1& (0+255),w,b
  1970  001632  B4D8               	btfsc	status,2,c
  1971  001634  EF1E  F00B         	goto	u2711
  1972  001638  EF20  F00B         	goto	u2710
  1973  00163C                     u2711:
  1974  00163C  EF31  F00B         	goto	l3142
  1975  001640                     u2710:
  1976  001640                     
  1977                           ; BSR set to: 0
  1978  001640  51A6               	movf	main@temp2& (0+255),w,b
  1979  001642  B4D8               	btfsc	status,2,c
  1980  001644  EF26  F00B         	goto	u2721
  1981  001648  EF28  F00B         	goto	u2720
  1982  00164C                     u2721:
  1983  00164C  EF31  F00B         	goto	l3142
  1984  001650                     u2720:
  1985  001650                     
  1986                           ; BSR set to: 0
  1987                           ;timer.c: 518:             sprintf(array, "%lu", get_years());
  1988  001650  51A7               	movf	main@temp1& (0+255),w,b
  1989  001652  ECB1  F014         	call	_lcd_char
  1990                           
  1991                           ;timer.c: 519:             temp1 = array[0];
  1992  001656  0100               	movlb	0	; () banked
  1993  001658  51A6               	movf	main@temp2& (0+255),w,b
  1994  00165A  ECB1  F014         	call	_lcd_char
  1995                           
  1996                           ;timer.c: 520:             temp2 = array[1];
  1997  00165E  EF50  F00B         	goto	l165
  1998  001662                     l3142:
  1999                           
  2000                           ; BSR set to: 0
  2001  001662  51A7               	movf	main@temp1& (0+255),w,b
  2002  001664  B4D8               	btfsc	status,2,c
  2003  001666  EF37  F00B         	goto	u2731
  2004  00166A  EF39  F00B         	goto	u2730
  2005  00166E                     u2731:
  2006  00166E  EF4A  F00B         	goto	l3148
  2007  001672                     u2730:
  2008  001672                     
  2009                           ; BSR set to: 0
  2010  001672  51A6               	movf	main@temp2& (0+255),w,b
  2011  001674  A4D8               	btfss	status,2,c
  2012  001676  EF3F  F00B         	goto	u2741
  2013  00167A  EF41  F00B         	goto	u2740
  2014  00167E                     u2741:
  2015  00167E  EF4A  F00B         	goto	l3148
  2016  001682                     u2740:
  2017  001682                     
  2018                           ; BSR set to: 0
  2019                           ;timer.c: 522:                 lcd_char(temp1);
  2020  001682  0E30               	movlw	48
  2021  001684  ECB1  F014         	call	_lcd_char
  2022                           
  2023                           ;timer.c: 523:                 lcd_char(temp2);
  2024  001688  0100               	movlb	0	; () banked
  2025  00168A  51A7               	movf	main@temp1& (0+255),w,b
  2026  00168C  ECB1  F014         	call	_lcd_char
  2027                           
  2028                           ;timer.c: 524:             }
  2029  001690  EF50  F00B         	goto	l165
  2030  001694                     l3148:
  2031                           
  2032                           ; BSR set to: 0
  2033                           ;timer.c: 526:                 lcd_char('0');
  2034  001694  0E30               	movlw	48
  2035  001696  ECB1  F014         	call	_lcd_char
  2036                           
  2037                           ;timer.c: 527:                 lcd_char(temp1);
  2038  00169A  0E30               	movlw	48
  2039  00169C  ECB1  F014         	call	_lcd_char
  2040  0016A0                     l165:
  2041                           
  2042                           ;timer.c: 529:             else{
  2043  0016A0  0E2F               	movlw	47
  2044  0016A2  ECB1  F014         	call	_lcd_char
  2045  0016A6                     
  2046                           ;timer.c: 531:                 lcd_char('0');
  2047  0016A6  0EA3               	movlw	low main@array
  2048  0016A8  6E58               	movwf	sprintf@s^0,c
  2049  0016AA  0E00               	movlw	high main@array
  2050  0016AC  6E59               	movwf	(sprintf@s+1)^0,c
  2051  0016AE  0E1D               	movlw	low STR_1
  2052  0016B0  6E5A               	movwf	sprintf@fmt^0,c
  2053  0016B2  0E0F               	movlw	high STR_1
  2054  0016B4  6E5B               	movwf	(sprintf@fmt+1)^0,c
  2055  0016B6  EC1C  F019         	call	_get_days	;wreg free
  2056  0016BA  0100               	movlb	0	; () banked
  2057  0016BC  6F6A               	movwf	??_main& (0+255),b
  2058  0016BE  516A               	movf	??_main& (0+255),w,b
  2059  0016C0  6E5C               	movwf	(?_sprintf+4)^0,c
  2060  0016C2  6A5D               	clrf	(?_sprintf+5)^0,c
  2061  0016C4  ECE2  F017         	call	_sprintf	;wreg free
  2062  0016C8                     
  2063                           ;timer.c: 532:             }
  2064  0016C8  C0A3  F0A7         	movff	main@array,main@temp1
  2065  0016CC                     
  2066                           ;timer.c: 533:             lcd_char(' ');
  2067  0016CC  C0A4  F0A6         	movff	main@array+1,main@temp2
  2068  0016D0                     
  2069                           ;timer.c: 534:             lcd_char(' ');
  2070  0016D0  0100               	movlb	0	; () banked
  2071  0016D2  51A7               	movf	main@temp1& (0+255),w,b
  2072  0016D4  B4D8               	btfsc	status,2,c
  2073  0016D6  EF6F  F00B         	goto	u2751
  2074  0016DA  EF71  F00B         	goto	u2750
  2075  0016DE                     u2751:
  2076  0016DE  EF82  F00B         	goto	l3162
  2077  0016E2                     u2750:
  2078  0016E2                     
  2079                           ; BSR set to: 0
  2080  0016E2  51A6               	movf	main@temp2& (0+255),w,b
  2081  0016E4  B4D8               	btfsc	status,2,c
  2082  0016E6  EF77  F00B         	goto	u2761
  2083  0016EA  EF79  F00B         	goto	u2760
  2084  0016EE                     u2761:
  2085  0016EE  EF82  F00B         	goto	l3162
  2086  0016F2                     u2760:
  2087  0016F2                     
  2088                           ; BSR set to: 0
  2089                           ;timer.c: 535:             if(alarm == 1){
  2090  0016F2  51A7               	movf	main@temp1& (0+255),w,b
  2091  0016F4  ECB1  F014         	call	_lcd_char
  2092                           
  2093                           ;timer.c: 536:                 lcd_char('A');
  2094  0016F8  0100               	movlb	0	; () banked
  2095  0016FA  51A6               	movf	main@temp2& (0+255),w,b
  2096  0016FC  ECB1  F014         	call	_lcd_char
  2097                           
  2098                           ;timer.c: 537:             }
  2099  001700  EFA1  F00B         	goto	l169
  2100  001704                     l3162:
  2101                           
  2102                           ; BSR set to: 0
  2103  001704  51A7               	movf	main@temp1& (0+255),w,b
  2104  001706  B4D8               	btfsc	status,2,c
  2105  001708  EF88  F00B         	goto	u2771
  2106  00170C  EF8A  F00B         	goto	u2770
  2107  001710                     u2771:
  2108  001710  EF9B  F00B         	goto	l3168
  2109  001714                     u2770:
  2110  001714                     
  2111                           ; BSR set to: 0
  2112  001714  51A6               	movf	main@temp2& (0+255),w,b
  2113  001716  A4D8               	btfss	status,2,c
  2114  001718  EF90  F00B         	goto	u2781
  2115  00171C  EF92  F00B         	goto	u2780
  2116  001720                     u2781:
  2117  001720  EF9B  F00B         	goto	l3168
  2118  001724                     u2780:
  2119  001724                     
  2120                           ; BSR set to: 0
  2121                           ;timer.c: 539:                 lcd_char('*');
  2122  001724  0E30               	movlw	48
  2123  001726  ECB1  F014         	call	_lcd_char
  2124                           
  2125                           ;timer.c: 540:             }
  2126  00172A  0100               	movlb	0	; () banked
  2127  00172C  51A7               	movf	main@temp1& (0+255),w,b
  2128  00172E  ECB1  F014         	call	_lcd_char
  2129                           
  2130                           ;timer.c: 541: 
  2131  001732  EFA1  F00B         	goto	l169
  2132  001736                     l3168:
  2133                           
  2134                           ; BSR set to: 0
  2135                           ;timer.c: 543:         }
  2136  001736  0E30               	movlw	48
  2137  001738  ECB1  F014         	call	_lcd_char
  2138                           
  2139                           ;timer.c: 544:         else{
  2140  00173C  0E30               	movlw	48
  2141  00173E  ECB1  F014         	call	_lcd_char
  2142  001742                     l169:
  2143                           
  2144                           ;timer.c: 546:                 lcd_command(0x01);
  2145  001742  0E2F               	movlw	47
  2146  001744  ECB1  F014         	call	_lcd_char
  2147                           
  2148                           ;timer.c: 548:             }
  2149  001748  0E32               	movlw	50
  2150  00174A  ECB1  F014         	call	_lcd_char
  2151                           
  2152                           ;timer.c: 549:             else if(check==1){
  2153  00174E  0E30               	movlw	48
  2154  001750  ECB1  F014         	call	_lcd_char
  2155  001754                     
  2156                           ;timer.c: 550:                 lcd_command(0x02);
  2157  001754  0EA3               	movlw	low main@array
  2158  001756  6E58               	movwf	sprintf@s^0,c
  2159  001758  0E00               	movlw	high main@array
  2160  00175A  6E59               	movwf	(sprintf@s+1)^0,c
  2161  00175C  0E1D               	movlw	low STR_1
  2162  00175E  6E5A               	movwf	sprintf@fmt^0,c
  2163  001760  0E0F               	movlw	high STR_1
  2164  001762  6E5B               	movwf	(sprintf@fmt+1)^0,c
  2165  001764  ECEC  F018         	call	_get_years	;wreg free
  2166  001768  0100               	movlb	0	; () banked
  2167  00176A  6F6A               	movwf	??_main& (0+255),b
  2168  00176C  516A               	movf	??_main& (0+255),w,b
  2169  00176E  6E5C               	movwf	(?_sprintf+4)^0,c
  2170  001770  6A5D               	clrf	(?_sprintf+5)^0,c
  2171  001772  ECE2  F017         	call	_sprintf	;wreg free
  2172  001776                     
  2173                           ;timer.c: 551:                 check--;
  2174  001776  C0A3  F0A7         	movff	main@array,main@temp1
  2175  00177A                     
  2176                           ;timer.c: 552:             }
  2177  00177A  C0A4  F0A6         	movff	main@array+1,main@temp2
  2178  00177E                     
  2179                           ;timer.c: 553: 
  2180  00177E  0100               	movlb	0	; () banked
  2181  001780  51A7               	movf	main@temp1& (0+255),w,b
  2182  001782  B4D8               	btfsc	status,2,c
  2183  001784  EFC6  F00B         	goto	u2791
  2184  001788  EFC8  F00B         	goto	u2790
  2185  00178C                     u2791:
  2186  00178C  EFD9  F00B         	goto	l3182
  2187  001790                     u2790:
  2188  001790                     
  2189                           ; BSR set to: 0
  2190  001790  51A6               	movf	main@temp2& (0+255),w,b
  2191  001792  B4D8               	btfsc	status,2,c
  2192  001794  EFCE  F00B         	goto	u2801
  2193  001798  EFD0  F00B         	goto	u2800
  2194  00179C                     u2801:
  2195  00179C  EFD9  F00B         	goto	l3182
  2196  0017A0                     u2800:
  2197  0017A0                     
  2198                           ; BSR set to: 0
  2199                           ;timer.c: 554: 
  2200  0017A0  51A7               	movf	main@temp1& (0+255),w,b
  2201  0017A2  ECB1  F014         	call	_lcd_char
  2202                           
  2203                           ;timer.c: 555:             if(value0 == 0){
  2204  0017A6  0100               	movlb	0	; () banked
  2205  0017A8  51A6               	movf	main@temp2& (0+255),w,b
  2206  0017AA  ECB1  F014         	call	_lcd_char
  2207                           
  2208                           ;timer.c: 556:                 value0 = adcNum0();
  2209  0017AE  EFF8  F00B         	goto	l173
  2210  0017B2                     l3182:
  2211                           
  2212                           ; BSR set to: 0
  2213  0017B2  51A7               	movf	main@temp1& (0+255),w,b
  2214  0017B4  B4D8               	btfsc	status,2,c
  2215  0017B6  EFDF  F00B         	goto	u2811
  2216  0017BA  EFE1  F00B         	goto	u2810
  2217  0017BE                     u2811:
  2218  0017BE  EFF2  F00B         	goto	l3188
  2219  0017C2                     u2810:
  2220  0017C2                     
  2221                           ; BSR set to: 0
  2222  0017C2  51A6               	movf	main@temp2& (0+255),w,b
  2223  0017C4  A4D8               	btfss	status,2,c
  2224  0017C6  EFE7  F00B         	goto	u2821
  2225  0017CA  EFE9  F00B         	goto	u2820
  2226  0017CE                     u2821:
  2227  0017CE  EFF2  F00B         	goto	l3188
  2228  0017D2                     u2820:
  2229  0017D2                     
  2230                           ; BSR set to: 0
  2231                           ;timer.c: 558:             else{
  2232  0017D2  0E30               	movlw	48
  2233  0017D4  ECB1  F014         	call	_lcd_char
  2234                           
  2235                           ;timer.c: 559:                 value0 = ((value0+adcNum0())/2)+1;
  2236  0017D8  0100               	movlb	0	; () banked
  2237  0017DA  51A7               	movf	main@temp1& (0+255),w,b
  2238  0017DC  ECB1  F014         	call	_lcd_char
  2239                           
  2240                           ;timer.c: 560:             }
  2241  0017E0  EFF8  F00B         	goto	l173
  2242  0017E4                     l3188:
  2243                           
  2244                           ; BSR set to: 0
  2245                           ;timer.c: 562: 
  2246  0017E4  0E30               	movlw	48
  2247  0017E6  ECB1  F014         	call	_lcd_char
  2248                           
  2249                           ;timer.c: 563:             int u24 = value0/42;
  2250  0017EA  0E30               	movlw	48
  2251  0017EC  ECB1  F014         	call	_lcd_char
  2252  0017F0                     l173:
  2253                           
  2254                           ;timer.c: 565: 
  2255  0017F0  0E20               	movlw	32
  2256  0017F2  ECB1  F014         	call	_lcd_char
  2257                           
  2258                           ;timer.c: 566: 
  2259  0017F6  0E20               	movlw	32
  2260  0017F8  ECB1  F014         	call	_lcd_char
  2261  0017FC                     
  2262                           ;timer.c: 567:             if(PORTAbits.RA3!=1){
  2263  0017FC  0100               	movlb	0	; () banked
  2264  0017FE  059E               	decf	main@alarm& (0+255),w,b
  2265  001800  119F               	iorwf	(main@alarm+1)& (0+255),w,b
  2266  001802  A4D8               	btfss	status,2,c
  2267  001804  EF06  F00C         	goto	u2831
  2268  001808  EF08  F00C         	goto	u2830
  2269  00180C                     u2831:
  2270  00180C  EF0D  F00C         	goto	l3194
  2271  001810                     u2830:
  2272  001810                     
  2273                           ; BSR set to: 0
  2274                           ;timer.c: 568:                 AsetNum++;
  2275  001810  0E41               	movlw	65
  2276  001812  ECB1  F014         	call	_lcd_char
  2277                           
  2278                           ;timer.c: 569:                 if (AsetNum==4){
  2279  001816  EF10  F00C         	goto	l177
  2280  00181A                     l3194:
  2281                           
  2282                           ; BSR set to: 0
  2283                           ;timer.c: 571:                 }
  2284  00181A  0E2A               	movlw	42
  2285  00181C  ECB1  F014         	call	_lcd_char
  2286  001820                     l177:
  2287                           
  2288                           ;timer.c: 574:                 while (--num > 0) {
  2289  001820  0E02               	movlw	2
  2290  001822  EC54  F014         	call	_lcd_command
  2291                           
  2292                           ;timer.c: 575:                         LATCbits.LATC1 =1;
  2293  001826  EF1C  F00E         	goto	l178
  2294  00182A                     l3196:
  2295                           
  2296                           ;timer.c: 577:                 if (AsetNum != 0){
  2297  00182A  0100               	movlb	0	; () banked
  2298  00182C  518D               	movf	main@check& (0+255),w,b
  2299  00182E  118E               	iorwf	(main@check+1)& (0+255),w,b
  2300  001830  A4D8               	btfss	status,2,c
  2301  001832  EF1D  F00C         	goto	u2841
  2302  001836  EF1F  F00C         	goto	u2840
  2303  00183A                     u2841:
  2304  00183A  EF27  F00C         	goto	l3202
  2305  00183E                     u2840:
  2306  00183E                     
  2307                           ; BSR set to: 0
  2308                           ;timer.c: 578:                     LATCbits.LATC1 =0;
  2309  00183E  0E01               	movlw	1
  2310  001840  EC54  F014         	call	_lcd_command
  2311  001844                     
  2312                           ;timer.c: 579:                 }
  2313  001844  0100               	movlb	0	; () banked
  2314  001846  4B8D               	infsnz	main@check& (0+255),f,b
  2315  001848  2B8E               	incf	(main@check+1)& (0+255),f,b
  2316                           
  2317                           ;timer.c: 580:             }
  2318  00184A  EF37  F00C         	goto	l3208
  2319  00184E                     l3202:
  2320                           
  2321                           ; BSR set to: 0
  2322  00184E  058D               	decf	main@check& (0+255),w,b
  2323  001850  118E               	iorwf	(main@check+1)& (0+255),w,b
  2324  001852  A4D8               	btfss	status,2,c
  2325  001854  EF2E  F00C         	goto	u2851
  2326  001858  EF30  F00C         	goto	u2850
  2327  00185C                     u2851:
  2328  00185C  EF37  F00C         	goto	l3208
  2329  001860                     u2850:
  2330  001860                     
  2331                           ; BSR set to: 0
  2332                           ;timer.c: 582:             switch((char)AsetNum){
  2333  001860  0E02               	movlw	2
  2334  001862  EC54  F014         	call	_lcd_command
  2335  001866                     
  2336                           ;timer.c: 583:                case 1:
  2337  001866  0100               	movlb	0	; () banked
  2338  001868  078D               	decf	main@check& (0+255),f,b
  2339  00186A  A0D8               	btfss	status,0,c
  2340  00186C  078E               	decf	(main@check+1)& (0+255),f,b
  2341  00186E                     l3208:
  2342                           
  2343                           ; BSR set to: 0
  2344                           ;timer.c: 587:                     set_Aminutes(u60);
  2345  00186E  51A8               	movf	_value0& (0+255),w,b
  2346  001870  11A9               	iorwf	(_value0+1)& (0+255),w,b
  2347  001872  11AA               	iorwf	(_value0+2)& (0+255),w,b
  2348  001874  11AB               	iorwf	(_value0+3)& (0+255),w,b
  2349  001876  A4D8               	btfss	status,2,c
  2350  001878  EF40  F00C         	goto	u2861
  2351  00187C  EF42  F00C         	goto	u2860
  2352  001880                     u2861:
  2353  001880  EF4E  F00C         	goto	l3212
  2354  001884                     u2860:
  2355  001884                     
  2356                           ; BSR set to: 0
  2357                           ;timer.c: 588:                     break;
  2358  001884  EC2D  F018         	call	_adcNum0	;wreg free
  2359  001888  C001  F0A8         	movff	?_adcNum0,_value0
  2360  00188C  C002  F0A9         	movff	?_adcNum0+1,_value0+1
  2361  001890  C003  F0AA         	movff	?_adcNum0+2,_value0+2
  2362  001894  C004  F0AB         	movff	?_adcNum0+3,_value0+3
  2363                           
  2364                           ;timer.c: 589:                case 3:
  2365  001898  EF6E  F00C         	goto	l183
  2366  00189C                     l3212:
  2367                           
  2368                           ; BSR set to: 0
  2369                           ;timer.c: 591:                    break;
  2370  00189C  EC2D  F018         	call	_adcNum0	;wreg free
  2371  0018A0  0100               	movlb	0	; () banked
  2372  0018A2  51A8               	movf	_value0& (0+255),w,b
  2373  0018A4  2401               	addwf	?_adcNum0^0,w,c
  2374  0018A6  6F6A               	movwf	??_main& (0+255),b
  2375  0018A8  51A9               	movf	(_value0+1)& (0+255),w,b
  2376  0018AA  2002               	addwfc	(?_adcNum0+1)^0,w,c
  2377  0018AC  6F6B               	movwf	(??_main+1)& (0+255),b
  2378  0018AE  51AA               	movf	(_value0+2)& (0+255),w,b
  2379  0018B0  2003               	addwfc	(?_adcNum0+2)^0,w,c
  2380  0018B2  6F6C               	movwf	(??_main+2)& (0+255),b
  2381  0018B4  51AB               	movf	(_value0+3)& (0+255),w,b
  2382  0018B6  2004               	addwfc	(?_adcNum0+3)^0,w,c
  2383  0018B8  6F6D               	movwf	(??_main+3)& (0+255),b
  2384  0018BA  90D8               	bcf	status,0,c
  2385  0018BC  336D               	rrcf	(??_main+3)& (0+255),f,b
  2386  0018BE  336C               	rrcf	(??_main+2)& (0+255),f,b
  2387  0018C0  336B               	rrcf	(??_main+1)& (0+255),f,b
  2388  0018C2  336A               	rrcf	??_main& (0+255),f,b
  2389  0018C4  0E01               	movlw	1
  2390  0018C6  256A               	addwf	??_main& (0+255),w,b
  2391  0018C8  6FA8               	movwf	_value0& (0+255),b
  2392  0018CA  0E00               	movlw	0
  2393  0018CC  216B               	addwfc	(??_main+1)& (0+255),w,b
  2394  0018CE  6FA9               	movwf	(_value0+1)& (0+255),b
  2395  0018D0  0E00               	movlw	0
  2396  0018D2  216C               	addwfc	(??_main+2)& (0+255),w,b
  2397  0018D4  6FAA               	movwf	(_value0+2)& (0+255),b
  2398  0018D6  0E00               	movlw	0
  2399  0018D8  216D               	addwfc	(??_main+3)& (0+255),w,b
  2400  0018DA  6FAB               	movwf	(_value0+3)& (0+255),b
  2401  0018DC                     l183:
  2402                           
  2403                           ;timer.c: 595:             char array[2];
  2404  0018DC  C0A8  F001         	movff	_value0,___lldiv@dividend
  2405  0018E0  C0A9  F002         	movff	_value0+1,___lldiv@dividend+1
  2406  0018E4  C0AA  F003         	movff	_value0+2,___lldiv@dividend+2
  2407  0018E8  C0AB  F004         	movff	_value0+3,___lldiv@dividend+3
  2408  0018EC  0E2A               	movlw	42
  2409  0018EE  6E05               	movwf	___lldiv@divisor^0,c
  2410  0018F0  0E00               	movlw	0
  2411  0018F2  6E06               	movwf	(___lldiv@divisor+1)^0,c
  2412  0018F4  0E00               	movlw	0
  2413  0018F6  6E07               	movwf	(___lldiv@divisor+2)^0,c
  2414  0018F8  0E00               	movlw	0
  2415  0018FA  6E08               	movwf	(___lldiv@divisor+3)^0,c
  2416  0018FC  EC66  F015         	call	___lldiv	;wreg free
  2417  001900  C001  F084         	movff	?___lldiv,main@u24_370
  2418  001904  C002  F085         	movff	?___lldiv+1,main@u24_370+1
  2419                           
  2420                           ;timer.c: 596: 
  2421  001908  C0A8  F001         	movff	_value0,___lldiv@dividend
  2422  00190C  C0A9  F002         	movff	_value0+1,___lldiv@dividend+1
  2423  001910  C0AA  F003         	movff	_value0+2,___lldiv@dividend+2
  2424  001914  C0AB  F004         	movff	_value0+3,___lldiv@dividend+3
  2425  001918  0E11               	movlw	17
  2426  00191A  6E05               	movwf	___lldiv@divisor^0,c
  2427  00191C  0E00               	movlw	0
  2428  00191E  6E06               	movwf	(___lldiv@divisor+1)^0,c
  2429  001920  0E00               	movlw	0
  2430  001922  6E07               	movwf	(___lldiv@divisor+2)^0,c
  2431  001924  0E00               	movlw	0
  2432  001926  6E08               	movwf	(___lldiv@divisor+3)^0,c
  2433  001928  EC66  F015         	call	___lldiv	;wreg free
  2434  00192C  C001  F08B         	movff	?___lldiv,main@u60_371
  2435  001930  C002  F08C         	movff	?___lldiv+1,main@u60_371+1
  2436  001934                     
  2437                           ;timer.c: 599:             }
  2438  001934  B68D               	btfsc	141,3,c	;volatile
  2439  001936  EF9F  F00C         	goto	u2871
  2440  00193A  EFA1  F00C         	goto	u2870
  2441  00193E                     u2871:
  2442  00193E  EFE8  F00C         	goto	l3236
  2443  001942                     u2870:
  2444  001942                     
  2445                           ;timer.c: 600: 
  2446  001942  0100               	movlb	0	; () banked
  2447  001944  4B9C               	infsnz	main@AsetNum& (0+255),f,b
  2448  001946  2B9D               	incf	(main@AsetNum+1)& (0+255),f,b
  2449  001948                     
  2450                           ; BSR set to: 0
  2451                           ;timer.c: 601:             lcd_char('A');
  2452  001948  0E04               	movlw	4
  2453  00194A  199C               	xorwf	main@AsetNum& (0+255),w,b
  2454  00194C  119D               	iorwf	(main@AsetNum+1)& (0+255),w,b
  2455  00194E  A4D8               	btfss	status,2,c
  2456  001950  EFAC  F00C         	goto	u2881
  2457  001954  EFAE  F00C         	goto	u2880
  2458  001958                     u2881:
  2459  001958  EFB2  F00C         	goto	l185
  2460  00195C                     u2880:
  2461  00195C                     
  2462                           ; BSR set to: 0
  2463                           ;timer.c: 602:             lcd_char(':');
  2464  00195C  0E00               	movlw	0
  2465  00195E  6F9D               	movwf	(main@AsetNum+1)& (0+255),b
  2466  001960  0E00               	movlw	0
  2467  001962  6F9C               	movwf	main@AsetNum& (0+255),b
  2468  001964                     l185:
  2469                           
  2470                           ; BSR set to: 0
  2471                           ;timer.c: 605: 
  2472  001964  0E10               	movlw	16
  2473  001966  6F72               	movwf	main@num_372& (0+255),b
  2474  001968  0E27               	movlw	39
  2475  00196A  6F73               	movwf	(main@num_372+1)& (0+255),b
  2476  00196C  0E00               	movlw	0
  2477  00196E  6F74               	movwf	(main@num_372+2)& (0+255),b
  2478  001970  0E00               	movlw	0
  2479  001972  6F75               	movwf	(main@num_372+3)& (0+255),b
  2480                           
  2481                           ;timer.c: 606:             sprintf(array, "%lu", get_Ahours());
  2482  001974  EFBD  F00C         	goto	l3222
  2483  001978                     l187:
  2484                           
  2485                           ; BSR set to: 0
  2486                           ;timer.c: 607:             char temp1 = array[0];
  2487  001978  8285               	bsf	133,1,c	;volatile
  2488  00197A                     l3222:
  2489                           
  2490                           ; BSR set to: 0
  2491                           ;timer.c: 606:             sprintf(array, "%lu", get_Ahours());
  2492  00197A  0772               	decf	main@num_372& (0+255),f,b
  2493  00197C  0E00               	movlw	0
  2494  00197E  5B73               	subwfb	(main@num_372+1)& (0+255),f,b
  2495  001980  5B74               	subwfb	(main@num_372+2)& (0+255),f,b
  2496  001982  5B75               	subwfb	(main@num_372+3)& (0+255),f,b
  2497  001984  5172               	movf	main@num_372& (0+255),w,b
  2498  001986  1173               	iorwf	(main@num_372+1)& (0+255),w,b
  2499  001988  1174               	iorwf	(main@num_372+2)& (0+255),w,b
  2500  00198A  1175               	iorwf	(main@num_372+3)& (0+255),w,b
  2501  00198C  A4D8               	btfss	status,2,c
  2502  00198E  EFCB  F00C         	goto	u2891
  2503  001992  EFCD  F00C         	goto	u2890
  2504  001996                     u2891:
  2505  001996  EFBC  F00C         	goto	l187
  2506  00199A                     u2890:
  2507  00199A                     
  2508                           ; BSR set to: 0
  2509                           ;timer.c: 609:             if((temp1 != 0) && (temp2 != 0)){
  2510  00199A  519C               	movf	main@AsetNum& (0+255),w,b
  2511  00199C  119D               	iorwf	(main@AsetNum+1)& (0+255),w,b
  2512  00199E  B4D8               	btfsc	status,2,c
  2513  0019A0  EFD4  F00C         	goto	u2901
  2514  0019A4  EFD6  F00C         	goto	u2900
  2515  0019A8                     u2901:
  2516  0019A8  EFE8  F00C         	goto	l3236
  2517  0019AC                     u2900:
  2518  0019AC                     
  2519                           ; BSR set to: 0
  2520                           ;timer.c: 610:                 lcd_char(temp1);
  2521  0019AC  9285               	bcf	133,1,c	;volatile
  2522  0019AE  EFE8  F00C         	goto	l3236
  2523  0019B2                     l3228:
  2524                           
  2525                           ; BSR set to: 0
  2526                           ;timer.c: 616:             }
  2527  0019B2  5184               	movf	main@u24_370& (0+255),w,b
  2528  0019B4  EC62  F016         	call	_set_Ahours
  2529                           
  2530                           ;timer.c: 617:             else{
  2531  0019B8  EF02  F00D         	goto	l3238
  2532  0019BC                     l3230:
  2533                           
  2534                           ; BSR set to: 0
  2535                           ;timer.c: 619:                 lcd_char('0');
  2536  0019BC  518B               	movf	main@u60_371& (0+255),w,b
  2537  0019BE  ECB6  F017         	call	_set_Aminutes
  2538                           
  2539                           ;timer.c: 620:             }
  2540  0019C2  EF02  F00D         	goto	l3238
  2541  0019C6                     l3232:
  2542                           
  2543                           ; BSR set to: 0
  2544                           ;timer.c: 622: 
  2545  0019C6  518B               	movf	main@u60_371& (0+255),w,b
  2546  0019C8  EC8A  F017         	call	_set_Aseconds
  2547                           
  2548                           ;timer.c: 623:             sprintf(array, "%lu", get_Aminutes());
  2549  0019CC  EF02  F00D         	goto	l3238
  2550  0019D0                     l3236:
  2551  0019D0  0100               	movlb	0	; () banked
  2552  0019D2  519C               	movf	main@AsetNum& (0+255),w,b
  2553  0019D4  6F6A               	movwf	??_main& (0+255),b
  2554  0019D6  6B6B               	clrf	(??_main+1)& (0+255),b
  2555                           
  2556                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2557                           ; Switch size 1, requested type "simple"
  2558                           ; Number of cases is 1, Range of values is 0 to 0
  2559                           ; switch strategies available:
  2560                           ; Name         Instructions Cycles
  2561                           ; simple_byte            4     3 (average)
  2562                           ;	Chosen strategy is simple_byte
  2563  0019D8  516B               	movf	(??_main+1)& (0+255),w,b
  2564  0019DA  0A00               	xorlw	0	; case 0
  2565  0019DC  B4D8               	btfsc	status,2,c
  2566  0019DE  EFF3  F00C         	goto	l3458
  2567  0019E2  EF02  F00D         	goto	l3238
  2568  0019E6                     l3458:
  2569                           
  2570                           ; BSR set to: 0
  2571                           ; Switch size 1, requested type "simple"
  2572                           ; Number of cases is 3, Range of values is 1 to 3
  2573                           ; switch strategies available:
  2574                           ; Name         Instructions Cycles
  2575                           ; simple_byte           10     6 (average)
  2576                           ;	Chosen strategy is simple_byte
  2577  0019E6  516A               	movf	??_main& (0+255),w,b
  2578  0019E8  0A01               	xorlw	1	; case 1
  2579  0019EA  B4D8               	btfsc	status,2,c
  2580  0019EC  EFD9  F00C         	goto	l3228
  2581  0019F0  0A03               	xorlw	3	; case 2
  2582  0019F2  B4D8               	btfsc	status,2,c
  2583  0019F4  EFDE  F00C         	goto	l3230
  2584  0019F8  0A01               	xorlw	1	; case 3
  2585  0019FA  B4D8               	btfsc	status,2,c
  2586  0019FC  EFE3  F00C         	goto	l3232
  2587  001A00  EF02  F00D         	goto	l3238
  2588  001A04                     l3238:
  2589                           
  2590                           ;timer.c: 627:                 lcd_char(temp1);;timer.c: 629:             }
  2591  001A04  0E00               	movlw	0
  2592  001A06  0100               	movlb	0	; () banked
  2593  001A08  6F99               	movwf	(main@i_377+1)& (0+255),b
  2594  001A0A  0E00               	movlw	0
  2595  001A0C  6F98               	movwf	main@i_377& (0+255),b
  2596  001A0E                     l3240:
  2597                           
  2598                           ; BSR set to: 0
  2599  001A0E  BF99               	btfsc	(main@i_377+1)& (0+255),7,b
  2600  001A10  EF13  F00D         	goto	u2911
  2601  001A14  5199               	movf	(main@i_377+1)& (0+255),w,b
  2602  001A16  E109               	bnz	u2910
  2603  001A18  0E02               	movlw	2
  2604  001A1A  5D98               	subwf	main@i_377& (0+255),w,b
  2605  001A1C  A0D8               	btfss	status,0,c
  2606  001A1E  EF13  F00D         	goto	u2911
  2607  001A22  EF15  F00D         	goto	u2910
  2608  001A26                     u2911:
  2609  001A26  EF17  F00D         	goto	l3244
  2610  001A2A                     u2910:
  2611  001A2A  EF23  F00D         	goto	l3250
  2612  001A2E                     l3244:
  2613                           
  2614                           ; BSR set to: 0
  2615                           ;timer.c: 630:             else if((temp1 != 0) && (temp2 == 0)){
  2616  001A2E  0EA0               	movlw	low main@array_376
  2617  001A30  2598               	addwf	main@i_377& (0+255),w,b
  2618  001A32  6ED9               	movwf	fsr2l,c
  2619  001A34  0E00               	movlw	high main@array_376
  2620  001A36  2199               	addwfc	(main@i_377+1)& (0+255),w,b
  2621  001A38  6EDA               	movwf	fsr2h,c
  2622  001A3A  0E00               	movlw	0
  2623  001A3C  6EDF               	movwf	indf2,c
  2624  001A3E                     
  2625                           ; BSR set to: 0
  2626                           ;timer.c: 631:                 lcd_char('0');
  2627  001A3E  4B98               	infsnz	main@i_377& (0+255),f,b
  2628  001A40  2B99               	incf	(main@i_377+1)& (0+255),f,b
  2629  001A42  EF07  F00D         	goto	l3240
  2630  001A46                     l3250:
  2631                           
  2632                           ; BSR set to: 0
  2633                           ;timer.c: 633:             }
  2634  001A46  0E41               	movlw	65
  2635  001A48  ECB1  F014         	call	_lcd_char
  2636                           
  2637                           ;timer.c: 634:             else{
  2638  001A4C  0E3A               	movlw	58
  2639  001A4E  ECB1  F014         	call	_lcd_char
  2640                           
  2641                           ;timer.c: 635:                 lcd_char('0');
  2642  001A52  0E20               	movlw	32
  2643  001A54  ECB1  F014         	call	_lcd_char
  2644  001A58                     
  2645                           ;timer.c: 638:             lcd_char(':');
  2646  001A58  0EA0               	movlw	low main@array_376
  2647  001A5A  6E58               	movwf	sprintf@s^0,c
  2648  001A5C  0E00               	movlw	high main@array_376
  2649  001A5E  6E59               	movwf	(sprintf@s+1)^0,c
  2650  001A60  0E1D               	movlw	low STR_1
  2651  001A62  6E5A               	movwf	sprintf@fmt^0,c
  2652  001A64  0E0F               	movlw	high STR_1
  2653  001A66  6E5B               	movwf	(sprintf@fmt+1)^0,c
  2654  001A68  ECCB  F018         	call	_get_Ahours	;wreg free
  2655  001A6C  0100               	movlb	0	; () banked
  2656  001A6E  6F6A               	movwf	??_main& (0+255),b
  2657  001A70  516A               	movf	??_main& (0+255),w,b
  2658  001A72  6E5C               	movwf	(?_sprintf+4)^0,c
  2659  001A74  6A5D               	clrf	(?_sprintf+5)^0,c
  2660  001A76  ECE2  F017         	call	_sprintf	;wreg free
  2661  001A7A                     
  2662                           ;timer.c: 639: 
  2663  001A7A  C0A0  F0A5         	movff	main@array_376,main@temp1_380
  2664  001A7E                     
  2665                           ;timer.c: 640:             sprintf(array, "%lu", get_Aseconds());
  2666  001A7E  C0A1  F0A2         	movff	main@array_376+1,main@temp2_381
  2667  001A82                     
  2668                           ;timer.c: 641:             temp1 = array[0];
  2669  001A82  0100               	movlb	0	; () banked
  2670  001A84  51A5               	movf	main@temp1_380& (0+255),w,b
  2671  001A86  B4D8               	btfsc	status,2,c
  2672  001A88  EF48  F00D         	goto	u2921
  2673  001A8C  EF4A  F00D         	goto	u2920
  2674  001A90                     u2921:
  2675  001A90  EF5B  F00D         	goto	l3264
  2676  001A94                     u2920:
  2677  001A94                     
  2678                           ; BSR set to: 0
  2679  001A94  51A2               	movf	main@temp2_381& (0+255),w,b
  2680  001A96  B4D8               	btfsc	status,2,c
  2681  001A98  EF50  F00D         	goto	u2931
  2682  001A9C  EF52  F00D         	goto	u2930
  2683  001AA0                     u2931:
  2684  001AA0  EF5B  F00D         	goto	l3264
  2685  001AA4                     u2930:
  2686  001AA4                     
  2687                           ; BSR set to: 0
  2688                           ;timer.c: 642:             temp2 = array[1];
  2689  001AA4  51A5               	movf	main@temp1_380& (0+255),w,b
  2690  001AA6  ECB1  F014         	call	_lcd_char
  2691                           
  2692                           ;timer.c: 643:             if((temp1 != 0) && (temp2 != 0)){
  2693  001AAA  0100               	movlb	0	; () banked
  2694  001AAC  51A2               	movf	main@temp2_381& (0+255),w,b
  2695  001AAE  ECB1  F014         	call	_lcd_char
  2696                           
  2697                           ;timer.c: 644:                 lcd_char(temp1);
  2698  001AB2  EF7A  F00D         	goto	l199
  2699  001AB6                     l3264:
  2700                           
  2701                           ; BSR set to: 0
  2702  001AB6  51A5               	movf	main@temp1_380& (0+255),w,b
  2703  001AB8  B4D8               	btfsc	status,2,c
  2704  001ABA  EF61  F00D         	goto	u2941
  2705  001ABE  EF63  F00D         	goto	u2940
  2706  001AC2                     u2941:
  2707  001AC2  EF74  F00D         	goto	l3270
  2708  001AC6                     u2940:
  2709  001AC6                     
  2710                           ; BSR set to: 0
  2711  001AC6  51A2               	movf	main@temp2_381& (0+255),w,b
  2712  001AC8  A4D8               	btfss	status,2,c
  2713  001ACA  EF69  F00D         	goto	u2951
  2714  001ACE  EF6B  F00D         	goto	u2950
  2715  001AD2                     u2951:
  2716  001AD2  EF74  F00D         	goto	l3270
  2717  001AD6                     u2950:
  2718  001AD6                     
  2719                           ; BSR set to: 0
  2720                           ;timer.c: 646:             }
  2721  001AD6  0E30               	movlw	48
  2722  001AD8  ECB1  F014         	call	_lcd_char
  2723                           
  2724                           ;timer.c: 647:             else if((temp1 != 0) && (temp2 == 0)){
  2725  001ADC  0100               	movlb	0	; () banked
  2726  001ADE  51A5               	movf	main@temp1_380& (0+255),w,b
  2727  001AE0  ECB1  F014         	call	_lcd_char
  2728                           
  2729                           ;timer.c: 648:                 lcd_char('0');
  2730  001AE4  EF7A  F00D         	goto	l199
  2731  001AE8                     l3270:
  2732                           
  2733                           ; BSR set to: 0
  2734                           ;timer.c: 650:             }
  2735  001AE8  0E30               	movlw	48
  2736  001AEA  ECB1  F014         	call	_lcd_char
  2737                           
  2738                           ;timer.c: 651:             else{
  2739  001AEE  0E30               	movlw	48
  2740  001AF0  ECB1  F014         	call	_lcd_char
  2741  001AF4                     l199:
  2742                           
  2743                           ;timer.c: 653:                 lcd_char('0');
  2744  001AF4  0E3A               	movlw	58
  2745  001AF6  ECB1  F014         	call	_lcd_char
  2746  001AFA                     
  2747                           ;timer.c: 655:         }
  2748  001AFA  0EA0               	movlw	low main@array_376
  2749  001AFC  6E58               	movwf	sprintf@s^0,c
  2750  001AFE  0E00               	movlw	high main@array_376
  2751  001B00  6E59               	movwf	(sprintf@s+1)^0,c
  2752  001B02  0E1D               	movlw	low STR_1
  2753  001B04  6E5A               	movwf	sprintf@fmt^0,c
  2754  001B06  0E0F               	movlw	high STR_1
  2755  001B08  6E5B               	movwf	(sprintf@fmt+1)^0,c
  2756  001B0A  EC2C  F019         	call	_get_Aminutes	;wreg free
  2757  001B0E  0100               	movlb	0	; () banked
  2758  001B10  6F6A               	movwf	??_main& (0+255),b
  2759  001B12  516A               	movf	??_main& (0+255),w,b
  2760  001B14  6E5C               	movwf	(?_sprintf+4)^0,c
  2761  001B16  6A5D               	clrf	(?_sprintf+5)^0,c
  2762  001B18  ECE2  F017         	call	_sprintf	;wreg free
  2763  001B1C                     
  2764                           ;timer.c: 656: 
  2765  001B1C  C0A0  F0A5         	movff	main@array_376,main@temp1_380
  2766  001B20                     
  2767                           ;timer.c: 657: 
  2768  001B20  C0A1  F0A2         	movff	main@array_376+1,main@temp2_381
  2769  001B24                     
  2770                           ;timer.c: 658:         if ((i2c_read(104, 0x0F)&0x01) == 1){
  2771  001B24  0100               	movlb	0	; () banked
  2772  001B26  51A5               	movf	main@temp1_380& (0+255),w,b
  2773  001B28  B4D8               	btfsc	status,2,c
  2774  001B2A  EF99  F00D         	goto	u2961
  2775  001B2E  EF9B  F00D         	goto	u2960
  2776  001B32                     u2961:
  2777  001B32  EFAC  F00D         	goto	l3284
  2778  001B36                     u2960:
  2779  001B36                     
  2780                           ; BSR set to: 0
  2781  001B36  51A2               	movf	main@temp2_381& (0+255),w,b
  2782  001B38  B4D8               	btfsc	status,2,c
  2783  001B3A  EFA1  F00D         	goto	u2971
  2784  001B3E  EFA3  F00D         	goto	u2970
  2785  001B42                     u2971:
  2786  001B42  EFAC  F00D         	goto	l3284
  2787  001B46                     u2970:
  2788  001B46                     
  2789                           ; BSR set to: 0
  2790                           ;timer.c: 659:             alarmON = 1;
  2791  001B46  51A5               	movf	main@temp1_380& (0+255),w,b
  2792  001B48  ECB1  F014         	call	_lcd_char
  2793                           
  2794                           ;timer.c: 660:         }
  2795  001B4C  0100               	movlb	0	; () banked
  2796  001B4E  51A2               	movf	main@temp2_381& (0+255),w,b
  2797  001B50  ECB1  F014         	call	_lcd_char
  2798                           
  2799                           ;timer.c: 661:         else{
  2800  001B54  EFCB  F00D         	goto	l203
  2801  001B58                     l3284:
  2802                           
  2803                           ; BSR set to: 0
  2804  001B58  51A5               	movf	main@temp1_380& (0+255),w,b
  2805  001B5A  B4D8               	btfsc	status,2,c
  2806  001B5C  EFB2  F00D         	goto	u2981
  2807  001B60  EFB4  F00D         	goto	u2980
  2808  001B64                     u2981:
  2809  001B64  EFC5  F00D         	goto	l3290
  2810  001B68                     u2980:
  2811  001B68                     
  2812                           ; BSR set to: 0
  2813  001B68  51A2               	movf	main@temp2_381& (0+255),w,b
  2814  001B6A  A4D8               	btfss	status,2,c
  2815  001B6C  EFBA  F00D         	goto	u2991
  2816  001B70  EFBC  F00D         	goto	u2990
  2817  001B74                     u2991:
  2818  001B74  EFC5  F00D         	goto	l3290
  2819  001B78                     u2990:
  2820  001B78                     
  2821                           ; BSR set to: 0
  2822                           ;timer.c: 663:         }
  2823  001B78  0E30               	movlw	48
  2824  001B7A  ECB1  F014         	call	_lcd_char
  2825                           
  2826                           ;timer.c: 664: 
  2827  001B7E  0100               	movlb	0	; () banked
  2828  001B80  51A5               	movf	main@temp1_380& (0+255),w,b
  2829  001B82  ECB1  F014         	call	_lcd_char
  2830                           
  2831                           ;timer.c: 665: 
  2832  001B86  EFCB  F00D         	goto	l203
  2833  001B8A                     l3290:
  2834                           
  2835                           ; BSR set to: 0
  2836                           ;timer.c: 667:             if(alarm ==0){
  2837  001B8A  0E30               	movlw	48
  2838  001B8C  ECB1  F014         	call	_lcd_char
  2839                           
  2840                           ;timer.c: 668:                 i2c_write(104, 0x0E, 0x05);
  2841  001B90  0E30               	movlw	48
  2842  001B92  ECB1  F014         	call	_lcd_char
  2843  001B96                     l203:
  2844                           
  2845                           ;timer.c: 670:                 alarm = 1;
  2846  001B96  0E3A               	movlw	58
  2847  001B98  ECB1  F014         	call	_lcd_char
  2848  001B9C                     
  2849                           ;timer.c: 672:             else if(alarm ==1){
  2850  001B9C  0EA0               	movlw	low main@array_376
  2851  001B9E  6E58               	movwf	sprintf@s^0,c
  2852  001BA0  0E00               	movlw	high main@array_376
  2853  001BA2  6E59               	movwf	(sprintf@s+1)^0,c
  2854  001BA4  0E1D               	movlw	low STR_1
  2855  001BA6  6E5A               	movwf	sprintf@fmt^0,c
  2856  001BA8  0E0F               	movlw	high STR_1
  2857  001BAA  6E5B               	movwf	(sprintf@fmt+1)^0,c
  2858  001BAC  ECBA  F018         	call	_get_Aseconds	;wreg free
  2859  001BB0  0100               	movlb	0	; () banked
  2860  001BB2  6F6A               	movwf	??_main& (0+255),b
  2861  001BB4  516A               	movf	??_main& (0+255),w,b
  2862  001BB6  6E5C               	movwf	(?_sprintf+4)^0,c
  2863  001BB8  6A5D               	clrf	(?_sprintf+5)^0,c
  2864  001BBA  ECE2  F017         	call	_sprintf	;wreg free
  2865  001BBE                     
  2866                           ;timer.c: 673:                 i2c_write(104, 0x0E, 0x04);
  2867  001BBE  C0A0  F0A5         	movff	main@array_376,main@temp1_380
  2868  001BC2                     
  2869                           ;timer.c: 674:                 alarm = 0;
  2870  001BC2  C0A1  F0A2         	movff	main@array_376+1,main@temp2_381
  2871  001BC6                     
  2872                           ;timer.c: 675:             }
  2873  001BC6  0100               	movlb	0	; () banked
  2874  001BC8  51A5               	movf	main@temp1_380& (0+255),w,b
  2875  001BCA  B4D8               	btfsc	status,2,c
  2876  001BCC  EFEA  F00D         	goto	u3001
  2877  001BD0  EFEC  F00D         	goto	u3000
  2878  001BD4                     u3001:
  2879  001BD4  EFFD  F00D         	goto	l3304
  2880  001BD8                     u3000:
  2881  001BD8                     
  2882                           ; BSR set to: 0
  2883  001BD8  51A2               	movf	main@temp2_381& (0+255),w,b
  2884  001BDA  B4D8               	btfsc	status,2,c
  2885  001BDC  EFF2  F00D         	goto	u3011
  2886  001BE0  EFF4  F00D         	goto	u3010
  2887  001BE4                     u3011:
  2888  001BE4  EFFD  F00D         	goto	l3304
  2889  001BE8                     u3010:
  2890  001BE8                     
  2891                           ; BSR set to: 0
  2892                           ;timer.c: 676: 
  2893  001BE8  51A5               	movf	main@temp1_380& (0+255),w,b
  2894  001BEA  ECB1  F014         	call	_lcd_char
  2895                           
  2896                           ;timer.c: 677:             unsigned long num = 10000L;
  2897  001BEE  0100               	movlb	0	; () banked
  2898  001BF0  51A2               	movf	main@temp2_381& (0+255),w,b
  2899  001BF2  ECB1  F014         	call	_lcd_char
  2900                           
  2901                           ;timer.c: 678:             while (--num > 0) {
  2902  001BF6  EF1C  F00E         	goto	l178
  2903  001BFA                     l3304:
  2904                           
  2905                           ; BSR set to: 0
  2906  001BFA  51A5               	movf	main@temp1_380& (0+255),w,b
  2907  001BFC  B4D8               	btfsc	status,2,c
  2908  001BFE  EF03  F00E         	goto	u3021
  2909  001C02  EF05  F00E         	goto	u3020
  2910  001C06                     u3021:
  2911  001C06  EF16  F00E         	goto	l3310
  2912  001C0A                     u3020:
  2913  001C0A                     
  2914                           ; BSR set to: 0
  2915  001C0A  51A2               	movf	main@temp2_381& (0+255),w,b
  2916  001C0C  A4D8               	btfss	status,2,c
  2917  001C0E  EF0B  F00E         	goto	u3031
  2918  001C12  EF0D  F00E         	goto	u3030
  2919  001C16                     u3031:
  2920  001C16  EF16  F00E         	goto	l3310
  2921  001C1A                     u3030:
  2922  001C1A                     
  2923                           ; BSR set to: 0
  2924                           ;timer.c: 680:             }
  2925  001C1A  0E30               	movlw	48
  2926  001C1C  ECB1  F014         	call	_lcd_char
  2927                           
  2928                           ;timer.c: 681:             LATCbits.LATC2 =0;
  2929  001C20  0100               	movlb	0	; () banked
  2930  001C22  51A5               	movf	main@temp1_380& (0+255),w,b
  2931  001C24  ECB1  F014         	call	_lcd_char
  2932                           
  2933                           ;timer.c: 682:         }
  2934  001C28  EF1C  F00E         	goto	l178
  2935  001C2C                     l3310:
  2936                           
  2937                           ; BSR set to: 0
  2938                           ;timer.c: 684:         if(alarmON == 1){
  2939  001C2C  0E30               	movlw	48
  2940  001C2E  ECB1  F014         	call	_lcd_char
  2941                           
  2942                           ;timer.c: 685:             while(PORTAbits.RA4==1){
  2943  001C32  0E30               	movlw	48
  2944  001C34  ECB1  F014         	call	_lcd_char
  2945  001C38                     l178:
  2946                           
  2947                           ;timer.c: 690:                 _delay((unsigned long)((0.25)*(4000000/4000.0)));
  2948  001C38  0E0F               	movlw	15
  2949  001C3A  6E01               	movwf	i2c_read@registers^0,c
  2950  001C3C  0E68               	movlw	104
  2951  001C3E  ECCB  F010         	call	_i2c_read
  2952  001C42  0100               	movlb	0	; () banked
  2953  001C44  6F6A               	movwf	??_main& (0+255),b
  2954  001C46  A16A               	btfss	??_main& (0+255),0,b
  2955  001C48  EF28  F00E         	goto	u3041
  2956  001C4C  EF2A  F00E         	goto	u3040
  2957  001C50                     u3041:
  2958  001C50  EF30  F00E         	goto	l3314
  2959  001C54                     u3040:
  2960  001C54                     
  2961                           ; BSR set to: 0
  2962                           ;timer.c: 691:             }
  2963  001C54  0E00               	movlw	0
  2964  001C56  6F88               	movwf	(main@alarmON+1)& (0+255),b
  2965  001C58  0E01               	movlw	1
  2966  001C5A  6F87               	movwf	main@alarmON& (0+255),b
  2967                           
  2968                           ;timer.c: 692:             i2c_write(104, 0x0F,0x00);
  2969  001C5C  EF34  F00E         	goto	l3316
  2970  001C60                     l3314:
  2971                           
  2972                           ; BSR set to: 0
  2973                           ;timer.c: 694:     }
  2974  001C60  0E00               	movlw	0
  2975  001C62  6F88               	movwf	(main@alarmON+1)& (0+255),b
  2976  001C64  0E00               	movlw	0
  2977  001C66  6F87               	movwf	main@alarmON& (0+255),b
  2978  001C68                     l3316:
  2979                           
  2980                           ; BSR set to: 0
  2981  001C68  B88D               	btfsc	141,4,c	;volatile
  2982  001C6A  EF39  F00E         	goto	u3051
  2983  001C6E  EF3B  F00E         	goto	u3050
  2984  001C72                     u3051:
  2985  001C72  EF8A  F00E         	goto	l3334
  2986  001C76                     u3050:
  2987  001C76                     
  2988                           ; BSR set to: 0
  2989  001C76  519E               	movf	main@alarm& (0+255),w,b
  2990  001C78  119F               	iorwf	(main@alarm+1)& (0+255),w,b
  2991  001C7A  A4D8               	btfss	status,2,c
  2992  001C7C  EF42  F00E         	goto	u3061
  2993  001C80  EF44  F00E         	goto	u3060
  2994  001C84                     u3061:
  2995  001C84  EF59  F00E         	goto	l3324
  2996  001C88                     u3060:
  2997  001C88                     
  2998                           ; BSR set to: 0
  2999  001C88  0E0E               	movlw	14
  3000  001C8A  6E01               	movwf	i2c_write@registers^0,c
  3001  001C8C  0E05               	movlw	5
  3002  001C8E  6E02               	movwf	i2c_write@data^0,c
  3003  001C90  0E68               	movlw	104
  3004  001C92  EC91  F013         	call	_i2c_write
  3005  001C96  0E0A               	movlw	10
  3006  001C98  6E01               	movwf	i2c_write@registers^0,c
  3007  001C9A  0E80               	movlw	128
  3008  001C9C  6E02               	movwf	i2c_write@data^0,c
  3009  001C9E  0E68               	movlw	104
  3010  001CA0  EC91  F013         	call	_i2c_write
  3011  001CA4  0E00               	movlw	0
  3012  001CA6  0100               	movlb	0	; () banked
  3013  001CA8  6F9F               	movwf	(main@alarm+1)& (0+255),b
  3014  001CAA  0E01               	movlw	1
  3015  001CAC  6F9E               	movwf	main@alarm& (0+255),b
  3016  001CAE  EF6E  F00E         	goto	l3330
  3017  001CB2                     l3324:
  3018                           
  3019                           ; BSR set to: 0
  3020  001CB2  059E               	decf	main@alarm& (0+255),w,b
  3021  001CB4  119F               	iorwf	(main@alarm+1)& (0+255),w,b
  3022  001CB6  A4D8               	btfss	status,2,c
  3023  001CB8  EF60  F00E         	goto	u3071
  3024  001CBC  EF62  F00E         	goto	u3070
  3025  001CC0                     u3071:
  3026  001CC0  EF6E  F00E         	goto	l3330
  3027  001CC4                     u3070:
  3028  001CC4                     
  3029                           ; BSR set to: 0
  3030  001CC4  0E0E               	movlw	14
  3031  001CC6  6E01               	movwf	i2c_write@registers^0,c
  3032  001CC8  0E04               	movlw	4
  3033  001CCA  6E02               	movwf	i2c_write@data^0,c
  3034  001CCC  0E68               	movlw	104
  3035  001CCE  EC91  F013         	call	_i2c_write
  3036  001CD2  0E00               	movlw	0
  3037  001CD4  0100               	movlb	0	; () banked
  3038  001CD6  6F9F               	movwf	(main@alarm+1)& (0+255),b
  3039  001CD8  0E00               	movlw	0
  3040  001CDA  6F9E               	movwf	main@alarm& (0+255),b
  3041  001CDC                     l3330:
  3042                           
  3043                           ; BSR set to: 0
  3044  001CDC  0E10               	movlw	16
  3045  001CDE  6F76               	movwf	main@num_386& (0+255),b
  3046  001CE0  0E27               	movlw	39
  3047  001CE2  6F77               	movwf	(main@num_386+1)& (0+255),b
  3048  001CE4  0E00               	movlw	0
  3049  001CE6  6F78               	movwf	(main@num_386+2)& (0+255),b
  3050  001CE8  0E00               	movlw	0
  3051  001CEA  6F79               	movwf	(main@num_386+3)& (0+255),b
  3052  001CEC  EF79  F00E         	goto	l3332
  3053  001CF0                     l217:
  3054                           
  3055                           ; BSR set to: 0
  3056  001CF0  8485               	bsf	133,2,c	;volatile
  3057  001CF2                     l3332:
  3058                           
  3059                           ; BSR set to: 0
  3060  001CF2  0776               	decf	main@num_386& (0+255),f,b
  3061  001CF4  0E00               	movlw	0
  3062  001CF6  5B77               	subwfb	(main@num_386+1)& (0+255),f,b
  3063  001CF8  5B78               	subwfb	(main@num_386+2)& (0+255),f,b
  3064  001CFA  5B79               	subwfb	(main@num_386+3)& (0+255),f,b
  3065  001CFC  5176               	movf	main@num_386& (0+255),w,b
  3066  001CFE  1177               	iorwf	(main@num_386+1)& (0+255),w,b
  3067  001D00  1178               	iorwf	(main@num_386+2)& (0+255),w,b
  3068  001D02  1179               	iorwf	(main@num_386+3)& (0+255),w,b
  3069  001D04  A4D8               	btfss	status,2,c
  3070  001D06  EF87  F00E         	goto	u3081
  3071  001D0A  EF89  F00E         	goto	u3080
  3072  001D0E                     u3081:
  3073  001D0E  EF78  F00E         	goto	l217
  3074  001D12                     u3080:
  3075  001D12                     
  3076                           ; BSR set to: 0
  3077  001D12  9485               	bcf	133,2,c	;volatile
  3078  001D14                     l3334:
  3079                           
  3080                           ; BSR set to: 0
  3081  001D14  0587               	decf	main@alarmON& (0+255),w,b
  3082  001D16  1188               	iorwf	(main@alarmON+1)& (0+255),w,b
  3083  001D18  A4D8               	btfss	status,2,c
  3084  001D1A  EF91  F00E         	goto	u3091
  3085  001D1E  EF93  F00E         	goto	u3090
  3086  001D22                     u3091:
  3087  001D22  EFB9  F007         	goto	l2968
  3088  001D26                     u3090:
  3089  001D26  EF9F  F00E         	goto	l3342
  3090  001D2A                     l221:
  3091  001D2A  8A85               	bsf	133,5,c	;volatile
  3092  001D2C  0E53               	movlw	83
  3093  001D2E                     u3117:
  3094  001D2E  2EE8               	decfsz	wreg,f,c
  3095  001D30  D7FE               	bra	u3117
  3096  001D32  F000               	nop	
  3097  001D34  9A85               	bcf	133,5,c	;volatile
  3098  001D36  0E53               	movlw	83
  3099  001D38                     u3127:
  3100  001D38  2EE8               	decfsz	wreg,f,c
  3101  001D3A  D7FE               	bra	u3127
  3102  001D3C  F000               	nop	
  3103  001D3E                     l3342:
  3104  001D3E  B88D               	btfsc	141,4,c	;volatile
  3105  001D40  EFA4  F00E         	goto	u3101
  3106  001D44  EFA6  F00E         	goto	u3100
  3107  001D48                     u3101:
  3108  001D48  EF95  F00E         	goto	l221
  3109  001D4C                     u3100:
  3110  001D4C  0E0F               	movlw	15
  3111  001D4E  6E01               	movwf	i2c_write@registers^0,c
  3112  001D50  0E00               	movlw	0
  3113  001D52  6E02               	movwf	i2c_write@data^0,c
  3114  001D54  0E68               	movlw	104
  3115  001D56  EC91  F013         	call	_i2c_write
  3116  001D5A  EFB9  F007         	goto	l2968
  3117  001D5E  EF00  F000         	goto	start
  3118  001D62                     __end_of_main:
  3119                           	opt callstack 0
  3120                           
  3121 ;; *************** function _sprintf *****************
  3122 ;; Defined at:
  3123 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
  3124 ;; Parameters:    Size  Location     Type
  3125 ;;  s               2   87[COMRAM] PTR unsigned char 
  3126 ;;		 -> main@array_376(2), main@naming(3), main@array(2), 
  3127 ;;  fmt             2   89[COMRAM] PTR const unsigned char 
  3128 ;;		 -> STR_16(4), STR_15(4), STR_14(4), STR_13(4), 
  3129 ;;		 -> STR_12(4), STR_11(4), STR_10(4), STR_9(4), 
  3130 ;;		 -> STR_8(4), STR_7(4), STR_6(4), STR_5(4), 
  3131 ;;		 -> STR_4(4), STR_3(4), STR_2(4), STR_1(4), 
  3132 ;; Auto vars:     Size  Location     Type
  3133 ;;  f               6    4[BANK0 ] struct _IO_FILE
  3134 ;;  ap              2    2[BANK0 ] PTR void [1]
  3135 ;;		 -> ?_sprintf(2), 
  3136 ;;  ret             2    0        int 
  3137 ;; Return value:  Size  Location     Type
  3138 ;;                  2   87[COMRAM] int 
  3139 ;; Registers used:
  3140 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3141 ;; Tracked objects:
  3142 ;;		On entry : 0/0
  3143 ;;		On exit  : 0/0
  3144 ;;		Unchanged: 0/0
  3145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3146 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3147 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3149 ;;      Totals:         6      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3150 ;;Total ram usage:       16 bytes
  3151 ;; Hardware stack levels used:    1
  3152 ;; Hardware stack levels required when called:    7
  3153 ;; This function calls:
  3154 ;;		_vfprintf
  3155 ;; This function is called by:
  3156 ;;		_main
  3157 ;; This function uses a non-reentrant model
  3158 ;;
  3159                           
  3160                           	psect	text1
  3161  002FC4                     __ptext1:
  3162                           	opt callstack 0
  3163  002FC4                     _sprintf:
  3164                           	opt callstack 23
  3165  002FC4  0E5C               	movlw	low (?_sprintf+4)
  3166  002FC6  0100               	movlb	0	; () banked
  3167  002FC8  6F62               	movwf	sprintf@ap& (0+255),b
  3168  002FCA  0E00               	movlw	high (?_sprintf+4)
  3169  002FCC  6F63               	movwf	(sprintf@ap+1)& (0+255),b
  3170  002FCE  C058  F064         	movff	sprintf@s,sprintf@f
  3171  002FD2  C059  F065         	movff	sprintf@s+1,sprintf@f+1
  3172  002FD6                     
  3173                           ; BSR set to: 0
  3174  002FD6  0E00               	movlw	0
  3175  002FD8  6F67               	movwf	(sprintf@f+3)& (0+255),b
  3176  002FDA  0E00               	movlw	0
  3177  002FDC  6F66               	movwf	(sprintf@f+2)& (0+255),b
  3178  002FDE                     
  3179                           ; BSR set to: 0
  3180  002FDE  0E00               	movlw	0
  3181  002FE0  6F69               	movwf	(sprintf@f+5)& (0+255),b
  3182  002FE2  0E00               	movlw	0
  3183  002FE4  6F68               	movwf	(sprintf@f+4)& (0+255),b
  3184  002FE6                     
  3185                           ; BSR set to: 0
  3186  002FE6  0E64               	movlw	low sprintf@f
  3187  002FE8  6E50               	movwf	vfprintf@fp^0,c
  3188  002FEA  0E00               	movlw	high sprintf@f
  3189  002FEC  6E51               	movwf	(vfprintf@fp+1)^0,c
  3190  002FEE  C05A  F052         	movff	sprintf@fmt,vfprintf@fmt
  3191  002FF2  C05B  F053         	movff	sprintf@fmt+1,vfprintf@fmt+1
  3192  002FF6  0E62               	movlw	low sprintf@ap
  3193  002FF8  6E54               	movwf	vfprintf@ap^0,c
  3194  002FFA  0E00               	movlw	high sprintf@ap
  3195  002FFC  6E55               	movwf	(vfprintf@ap+1)^0,c
  3196  002FFE  ECFF  F016         	call	_vfprintf	;wreg free
  3197  003002  0100               	movlb	0	; () banked
  3198  003004  5166               	movf	(sprintf@f+2)& (0+255),w,b
  3199  003006  2458               	addwf	sprintf@s^0,w,c
  3200  003008  6ED9               	movwf	fsr2l,c
  3201  00300A  5167               	movf	(sprintf@f+3)& (0+255),w,b
  3202  00300C  2059               	addwfc	(sprintf@s+1)^0,w,c
  3203  00300E  6EDA               	movwf	fsr2h,c
  3204  003010  0E00               	movlw	0
  3205  003012  6EDF               	movwf	indf2,c
  3206  003014                     
  3207                           ; BSR set to: 0
  3208  003014  0012               	return		;funcret
  3209  003016                     __end_of_sprintf:
  3210                           	opt callstack 0
  3211                           
  3212 ;; *************** function _vfprintf *****************
  3213 ;; Defined at:
  3214 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3215 ;; Parameters:    Size  Location     Type
  3216 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
  3217 ;;		 -> sprintf@f(6), 
  3218 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
  3219 ;;		 -> STR_16(4), STR_15(4), STR_14(4), STR_13(4), 
  3220 ;;		 -> STR_12(4), STR_11(4), STR_10(4), STR_9(4), 
  3221 ;;		 -> STR_8(4), STR_7(4), STR_6(4), STR_5(4), 
  3222 ;;		 -> STR_4(4), STR_3(4), STR_2(4), STR_1(4), 
  3223 ;;  ap              2   83[COMRAM] PTR PTR void 
  3224 ;;		 -> sprintf@ap(2), 
  3225 ;; Auto vars:     Size  Location     Type
  3226 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
  3227 ;;		 -> STR_16(4), STR_15(4), STR_14(4), STR_13(4), 
  3228 ;;		 -> STR_12(4), STR_11(4), STR_10(4), STR_9(4), 
  3229 ;;		 -> STR_8(4), STR_7(4), STR_6(4), STR_5(4), 
  3230 ;;		 -> STR_4(4), STR_3(4), STR_2(4), STR_1(4), 
  3231 ;; Return value:  Size  Location     Type
  3232 ;;                  2   79[COMRAM] int 
  3233 ;; Registers used:
  3234 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3235 ;; Tracked objects:
  3236 ;;		On entry : 0/0
  3237 ;;		On exit  : 0/0
  3238 ;;		Unchanged: 0/0
  3239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3240 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3241 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3243 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3244 ;;Total ram usage:        8 bytes
  3245 ;; Hardware stack levels used:    1
  3246 ;; Hardware stack levels required when called:    6
  3247 ;; This function calls:
  3248 ;;		_vfpfcnvrt
  3249 ;; This function is called by:
  3250 ;;		_sprintf
  3251 ;; This function uses a non-reentrant model
  3252 ;;
  3253                           
  3254                           	psect	text2
  3255  002DFE                     __ptext2:
  3256                           	opt callstack 0
  3257  002DFE                     _vfprintf:
  3258                           	opt callstack 23
  3259  002DFE                     
  3260                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  3261  002DFE  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
  3262  002E02  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3263  002E06                     
  3264                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  3265  002E06  0E00               	movlw	0
  3266  002E08  0100               	movlb	0	; () banked
  3267  002E0A  6FAD               	movwf	(_nout+1)& (0+255),b
  3268  002E0C  0E00               	movlw	0
  3269  002E0E  6FAC               	movwf	_nout& (0+255),b
  3270                           
  3271                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  3272  002E10  EF1D  F017         	goto	l2590
  3273  002E14                     l2588:
  3274                           
  3275                           ; BSR set to: 0
  3276                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  3277  002E14  C050  F03C         	movff	vfprintf@fp,vfpfcnvrt@fp
  3278  002E18  C051  F03D         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3279  002E1C  0E56               	movlw	low vfprintf@cfmt
  3280  002E1E  6E3E               	movwf	vfpfcnvrt@fmt^0,c
  3281  002E20  0E00               	movlw	high vfprintf@cfmt
  3282  002E22  6E3F               	movwf	(vfpfcnvrt@fmt+1)^0,c
  3283  002E24  C054  F040         	movff	vfprintf@ap,vfpfcnvrt@ap
  3284  002E28  C055  F041         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3285  002E2C  ECB1  F00E         	call	_vfpfcnvrt	;wreg free
  3286  002E30  503C               	movf	?_vfpfcnvrt^0,w,c
  3287  002E32  0100               	movlb	0	; () banked
  3288  002E34  27AC               	addwf	_nout& (0+255),f,b
  3289  002E36  503D               	movf	(?_vfpfcnvrt+1)^0,w,c
  3290  002E38  23AD               	addwfc	(_nout+1)& (0+255),f,b
  3291  002E3A                     l2590:
  3292                           
  3293                           ; BSR set to: 0
  3294                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  3295  002E3A  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
  3296  002E3E  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3297  002E42                     	if	0	;tblptru may be non-zero
  3298  002E42                     	endif
  3299  002E42                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3300  002E42  0E00               	movlw	low (__mediumconst shr (0+16))
  3301  002E44  6EF8               	movwf	tblptru,c
  3302  002E46                     	endif
  3303  002E46  0008               	tblrd		*
  3304  002E48  50F5               	movf	tablat,w,c
  3305  002E4A  0900               	iorlw	0
  3306  002E4C  A4D8               	btfss	status,2,c
  3307  002E4E  EF2B  F017         	goto	u2161
  3308  002E52  EF2D  F017         	goto	u2160
  3309  002E56                     u2161:
  3310  002E56  EF0A  F017         	goto	l2588
  3311  002E5A                     u2160:
  3312  002E5A                     
  3313                           ; BSR set to: 0
  3314                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  3315  002E5A  C0AC  F050         	movff	_nout,?_vfprintf
  3316  002E5E  C0AD  F051         	movff	_nout+1,?_vfprintf+1
  3317  002E62                     
  3318                           ; BSR set to: 0
  3319  002E62  0012               	return		;funcret
  3320  002E64                     __end_of_vfprintf:
  3321                           	opt callstack 0
  3322                           
  3323 ;; *************** function _vfpfcnvrt *****************
  3324 ;; Defined at:
  3325 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3326 ;; Parameters:    Size  Location     Type
  3327 ;;  fp              2   59[COMRAM] PTR struct _IO_FILE
  3328 ;;		 -> sprintf@f(6), 
  3329 ;;  fmt             2   61[COMRAM] PTR PTR unsigned char 
  3330 ;;		 -> vfprintf@cfmt(2), 
  3331 ;;  ap              2   63[COMRAM] PTR PTR void 
  3332 ;;		 -> sprintf@ap(2), 
  3333 ;; Auto vars:     Size  Location     Type
  3334 ;;  llu             8   71[COMRAM] unsigned long long 
  3335 ;;  ll              8    0        long long 
  3336 ;;  f               4    0        long long 
  3337 ;;  vp              3    0        PTR void 
  3338 ;;  ct              3    0        unsigned char [3]
  3339 ;;  cp              3    0        PTR unsigned char 
  3340 ;;  i               2    0        int 
  3341 ;;  done            2    0        int 
  3342 ;;  c               1    0        unsigned char 
  3343 ;; Return value:  Size  Location     Type
  3344 ;;                  2   59[COMRAM] int 
  3345 ;; Registers used:
  3346 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3347 ;; Tracked objects:
  3348 ;;		On entry : 0/0
  3349 ;;		On exit  : 0/0
  3350 ;;		Unchanged: 0/0
  3351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3352 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3353 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3354 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3355 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3356 ;;Total ram usage:       20 bytes
  3357 ;; Hardware stack levels used:    1
  3358 ;; Hardware stack levels required when called:    5
  3359 ;; This function calls:
  3360 ;;		_fputc
  3361 ;;		_strncmp
  3362 ;;		_utoa
  3363 ;; This function is called by:
  3364 ;;		_vfprintf
  3365 ;; This function uses a non-reentrant model
  3366 ;;
  3367                           
  3368                           	psect	text3
  3369  001D62                     __ptext3:
  3370                           	opt callstack 0
  3371  001D62                     _vfpfcnvrt:
  3372                           	opt callstack 23
  3373  001D62                     
  3374                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  3375  001D62  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3376  001D66  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3377  001D6A  CFDE FFF6          	movff	postinc2,tblptrl
  3378  001D6E  CFDD FFF7          	movff	postdec2,tblptrh
  3379  001D72                     	if	0	;tblptru may be non-zero
  3380  001D72                     	endif
  3381  001D72                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3382  001D72  0E00               	movlw	low (__mediumconst shr (0+16))
  3383  001D74  6EF8               	movwf	tblptru,c
  3384  001D76                     	endif
  3385  001D76  0008               	tblrd		*
  3386  001D78  50F5               	movf	tablat,w,c
  3387  001D7A  0A25               	xorlw	37
  3388  001D7C  A4D8               	btfss	status,2,c
  3389  001D7E  EFC3  F00E         	goto	u1851
  3390  001D82  EFC5  F00E         	goto	u1850
  3391  001D86                     u1851:
  3392  001D86  EFAD  F00F         	goto	l2484
  3393  001D8A                     u1850:
  3394  001D8A                     
  3395                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  3396  001D8A  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3397  001D8E  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3398  001D92  2ADE               	incf	postinc2,f,c
  3399  001D94  0E00               	movlw	0
  3400  001D96  22DD               	addwfc	postdec2,f,c
  3401  001D98                     
  3402                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  3403  001D98  0E00               	movlw	0
  3404  001D9A  0100               	movlb	0	; () banked
  3405  001D9C  6FAF               	movwf	(_width+1)& (0+255),b
  3406  001D9E  0E00               	movlw	0
  3407  001DA0  6FAE               	movwf	_width& (0+255),b
  3408  001DA2  C0AE  F05E         	movff	_width,_flags
  3409  001DA6  C0AF  F05F         	movff	_width+1,_flags+1
  3410  001DAA                     
  3411                           ; BSR set to: 0
  3412                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  3413  001DAA  69B0               	setf	_prec& (0+255),b
  3414  001DAC  69B1               	setf	(_prec+1)& (0+255),b
  3415  001DAE                     
  3416                           ; BSR set to: 0
  3417                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
  3418  001DAE  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3419  001DB2  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3420  001DB6  CFDE FFF6          	movff	postinc2,tblptrl
  3421  001DBA  CFDD FFF7          	movff	postdec2,tblptrh
  3422  001DBE                     	if	0	;tblptru may be non-zero
  3423  001DBE                     	endif
  3424  001DBE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3425  001DBE  0E00               	movlw	low (__mediumconst shr (0+16))
  3426  001DC0  6EF8               	movwf	tblptru,c
  3427  001DC2                     	endif
  3428  001DC2  0008               	tblrd		*
  3429  001DC4  50F5               	movf	tablat,w,c
  3430  001DC6  0A75               	xorlw	117
  3431  001DC8  A4D8               	btfss	status,2,c
  3432  001DCA  EFE9  F00E         	goto	u1861
  3433  001DCE  EFEB  F00E         	goto	u1860
  3434  001DD2                     u1861:
  3435  001DD2  EF2C  F00F         	goto	l2460
  3436  001DD6                     u1860:
  3437  001DD6                     
  3438                           ; BSR set to: 0
  3439                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
  3440  001DD6  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3441  001DDA  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3442  001DDE  2ADE               	incf	postinc2,f,c
  3443  001DE0  0E00               	movlw	0
  3444  001DE2  22DD               	addwfc	postdec2,f,c
  3445                           
  3446                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  3447  001DE4  C040  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3448  001DE8  C041  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3449  001DEC  CFDF F042          	movff	indf2,??_vfpfcnvrt
  3450  001DF0  0E02               	movlw	2
  3451  001DF2  26DE               	addwf	postinc2,f,c
  3452  001DF4  CFDF F043          	movff	indf2,??_vfpfcnvrt+1
  3453  001DF8  0E00               	movlw	0
  3454  001DFA  22DD               	addwfc	postdec2,f,c
  3455  001DFC  C042  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3456  001E00  C043  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3457  001E04  CFDE F044          	movff	postinc2,??_vfpfcnvrt+2
  3458  001E08  CFDD F045          	movff	postdec2,??_vfpfcnvrt+3
  3459  001E0C  C044  F048         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3460  001E10  C045  F049         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3461  001E14  6A4A               	clrf	(vfpfcnvrt@llu+2)^0,c
  3462  001E16  6A4B               	clrf	(vfpfcnvrt@llu+3)^0,c
  3463  001E18  6A4C               	clrf	(vfpfcnvrt@llu+4)^0,c
  3464  001E1A  6A4D               	clrf	(vfpfcnvrt@llu+5)^0,c
  3465  001E1C  6A4E               	clrf	(vfpfcnvrt@llu+6)^0,c
  3466  001E1E  6A4F               	clrf	(vfpfcnvrt@llu+7)^0,c
  3467  001E20                     l2456:
  3468                           
  3469                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1187:      
      +                                 return utoa(fp, llu);
  3470  001E20  C03C  F01C         	movff	vfpfcnvrt@fp,utoa@fp
  3471  001E24  C03D  F01D         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  3472  001E28  C048  F01E         	movff	vfpfcnvrt@llu,utoa@d
  3473  001E2C  C049  F01F         	movff	vfpfcnvrt@llu+1,utoa@d+1
  3474  001E30  C04A  F020         	movff	vfpfcnvrt@llu+2,utoa@d+2
  3475  001E34  C04B  F021         	movff	vfpfcnvrt@llu+3,utoa@d+3
  3476  001E38  C04C  F022         	movff	vfpfcnvrt@llu+4,utoa@d+4
  3477  001E3C  C04D  F023         	movff	vfpfcnvrt@llu+5,utoa@d+5
  3478  001E40  C04E  F024         	movff	vfpfcnvrt@llu+6,utoa@d+6
  3479  001E44  C04F  F025         	movff	vfpfcnvrt@llu+7,utoa@d+7
  3480  001E48  ECCB  F00F         	call	_utoa	;wreg free
  3481  001E4C  C01C  F03C         	movff	?_utoa,?_vfpfcnvrt
  3482  001E50  C01D  F03D         	movff	?_utoa+1,?_vfpfcnvrt+1
  3483  001E54  EFCA  F00F         	goto	l409
  3484  001E58                     l2460:
  3485                           
  3486                           ; BSR set to: 0
  3487                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1192:      
      +                             if (!strncmp(*fmt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
  3488  001E58  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3489  001E5C  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3490  001E60  CFDE F001          	movff	postinc2,strncmp@_l
  3491  001E64  CFDD F002          	movff	postdec2,strncmp@_l+1
  3492  001E68  0E1E               	movlw	low (STR_1+1)
  3493  001E6A  6E03               	movwf	strncmp@_r^0,c
  3494  001E6C  0E0F               	movlw	high (STR_1+1)
  3495  001E6E  6E04               	movwf	(strncmp@_r+1)^0,c
  3496  001E70  0E00               	movlw	0
  3497  001E72  6E06               	movwf	(strncmp@n+1)^0,c
  3498  001E74  0E02               	movlw	2
  3499  001E76  6E05               	movwf	strncmp@n^0,c
  3500  001E78  EC6F  F011         	call	_strncmp	;wreg free
  3501  001E7C  5001               	movf	?_strncmp^0,w,c
  3502  001E7E  1002               	iorwf	(?_strncmp+1)^0,w,c
  3503  001E80  A4D8               	btfss	status,2,c
  3504  001E82  EF45  F00F         	goto	u1871
  3505  001E86  EF47  F00F         	goto	u1870
  3506  001E8A                     u1871:
  3507  001E8A  EF75  F00F         	goto	l2468
  3508  001E8E                     u1870:
  3509  001E8E                     
  3510                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1194:      
      +                                 *fmt += ((sizeof("lu")/sizeof("lu"[0]))-1);
  3511  001E8E  0E02               	movlw	2
  3512  001E90  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3513  001E94  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3514  001E98  26DE               	addwf	postinc2,f,c
  3515  001E9A  0E00               	movlw	0
  3516  001E9C  22DD               	addwfc	postdec2,f,c
  3517                           
  3518                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1195:      
      +                                 llu = (unsigned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (uns
      +                          igned long)0));
  3519  001E9E  C040  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3520  001EA2  C041  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3521  001EA6  CFDF F042          	movff	indf2,??_vfpfcnvrt
  3522  001EAA  0E04               	movlw	4
  3523  001EAC  26DE               	addwf	postinc2,f,c
  3524  001EAE  CFDF F043          	movff	indf2,??_vfpfcnvrt+1
  3525  001EB2  0E00               	movlw	0
  3526  001EB4  22DD               	addwfc	postdec2,f,c
  3527  001EB6  C042  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3528  001EBA  C043  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3529  001EBE  CFDE F044          	movff	postinc2,??_vfpfcnvrt+2
  3530  001EC2  CFDE F045          	movff	postinc2,??_vfpfcnvrt+3
  3531  001EC6  CFDE F046          	movff	postinc2,??_vfpfcnvrt+4
  3532  001ECA  CFDE F047          	movff	postinc2,??_vfpfcnvrt+5
  3533  001ECE  5044               	movf	(??_vfpfcnvrt+2)^0,w,c
  3534  001ED0  6E48               	movwf	vfpfcnvrt@llu^0,c
  3535  001ED2  5045               	movf	(??_vfpfcnvrt+3)^0,w,c
  3536  001ED4  6E49               	movwf	(vfpfcnvrt@llu+1)^0,c
  3537  001ED6  5046               	movf	(??_vfpfcnvrt+4)^0,w,c
  3538  001ED8  6E4A               	movwf	(vfpfcnvrt@llu+2)^0,c
  3539  001EDA  5047               	movf	(??_vfpfcnvrt+5)^0,w,c
  3540  001EDC  6E4B               	movwf	(vfpfcnvrt@llu+3)^0,c
  3541  001EDE  6A4C               	clrf	(vfpfcnvrt@llu+4)^0,c
  3542  001EE0  6A4D               	clrf	(vfpfcnvrt@llu+5)^0,c
  3543  001EE2  6A4E               	clrf	(vfpfcnvrt@llu+6)^0,c
  3544  001EE4  6A4F               	clrf	(vfpfcnvrt@llu+7)^0,c
  3545  001EE6  EF10  F00F         	goto	l2456
  3546  001EEA                     l2468:
  3547                           
  3548                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  3549  001EEA  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3550  001EEE  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3551  001EF2  CFDE FFF6          	movff	postinc2,tblptrl
  3552  001EF6  CFDD FFF7          	movff	postdec2,tblptrh
  3553  001EFA                     	if	0	;tblptru may be non-zero
  3554  001EFA                     	endif
  3555  001EFA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3556  001EFA  0E00               	movlw	low (__mediumconst shr (0+16))
  3557  001EFC  6EF8               	movwf	tblptru,c
  3558  001EFE                     	endif
  3559  001EFE  0008               	tblrd		*
  3560  001F00  50F5               	movf	tablat,w,c
  3561  001F02  0A25               	xorlw	37
  3562  001F04  A4D8               	btfss	status,2,c
  3563  001F06  EF87  F00F         	goto	u1881
  3564  001F0A  EF89  F00F         	goto	u1880
  3565  001F0E                     u1881:
  3566  001F0E  EFA0  F00F         	goto	l2478
  3567  001F12                     u1880:
  3568  001F12                     
  3569                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  3570  001F12  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3571  001F16  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3572  001F1A  2ADE               	incf	postinc2,f,c
  3573  001F1C  0E00               	movlw	0
  3574  001F1E  22DD               	addwfc	postdec2,f,c
  3575  001F20                     
  3576                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  3577  001F20  0E00               	movlw	0
  3578  001F22  6E02               	movwf	(fputc@c+1)^0,c
  3579  001F24  0E25               	movlw	37
  3580  001F26  6E01               	movwf	fputc@c^0,c
  3581  001F28  C03C  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3582  001F2C  C03D  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3583  001F30  ECCA  F012         	call	_fputc	;wreg free
  3584  001F34                     l2474:
  3585                           
  3586                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  3587  001F34  0E00               	movlw	0
  3588  001F36  6E3D               	movwf	(?_vfpfcnvrt+1)^0,c
  3589  001F38  0E01               	movlw	1
  3590  001F3A  6E3C               	movwf	?_vfpfcnvrt^0,c
  3591  001F3C  EFCA  F00F         	goto	l409
  3592  001F40                     l2478:
  3593                           
  3594                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  3595  001F40  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3596  001F44  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3597  001F48  2ADE               	incf	postinc2,f,c
  3598  001F4A  0E00               	movlw	0
  3599  001F4C  22DD               	addwfc	postdec2,f,c
  3600  001F4E                     
  3601                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  3602  001F4E  0E00               	movlw	0
  3603  001F50  6E3D               	movwf	(?_vfpfcnvrt+1)^0,c
  3604  001F52  0E00               	movlw	0
  3605  001F54  6E3C               	movwf	?_vfpfcnvrt^0,c
  3606  001F56  EFCA  F00F         	goto	l409
  3607  001F5A                     l2484:
  3608                           
  3609                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  3610  001F5A  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3611  001F5E  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3612  001F62  CFDE FFF6          	movff	postinc2,tblptrl
  3613  001F66  CFDD FFF7          	movff	postdec2,tblptrh
  3614  001F6A                     	if	0	;tblptru may be non-zero
  3615  001F6A                     	endif
  3616  001F6A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3617  001F6A  0E00               	movlw	low (__mediumconst shr (0+16))
  3618  001F6C  6EF8               	movwf	tblptru,c
  3619  001F6E                     	endif
  3620  001F6E  0008               	tblrd		*
  3621  001F70  50F5               	movf	tablat,w,c
  3622  001F72  6E01               	movwf	fputc@c^0,c
  3623  001F74  6A02               	clrf	(fputc@c+1)^0,c
  3624  001F76  C03C  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3625  001F7A  C03D  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3626  001F7E  ECCA  F012         	call	_fputc	;wreg free
  3627  001F82                     
  3628                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  3629  001F82  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3630  001F86  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3631  001F8A  2ADE               	incf	postinc2,f,c
  3632  001F8C  0E00               	movlw	0
  3633  001F8E  22DD               	addwfc	postdec2,f,c
  3634  001F90  EF9A  F00F         	goto	l2474
  3635  001F94                     l409:
  3636  001F94  0012               	return		;funcret
  3637  001F96                     __end_of_vfpfcnvrt:
  3638                           	opt callstack 0
  3639                           
  3640 ;; *************** function _utoa *****************
  3641 ;; Defined at:
  3642 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3643 ;; Parameters:    Size  Location     Type
  3644 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  3645 ;;		 -> sprintf@f(6), 
  3646 ;;  d               8   29[COMRAM] unsigned long long 
  3647 ;; Auto vars:     Size  Location     Type
  3648 ;;  n               8   49[COMRAM] unsigned long long 
  3649 ;;  i               2   57[COMRAM] int 
  3650 ;;  w               2   47[COMRAM] int 
  3651 ;;  p               2   45[COMRAM] int 
  3652 ;; Return value:  Size  Location     Type
  3653 ;;                  2   27[COMRAM] int 
  3654 ;; Registers used:
  3655 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3656 ;; Tracked objects:
  3657 ;;		On entry : 0/0
  3658 ;;		On exit  : 0/0
  3659 ;;		Unchanged: 0/0
  3660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3661 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3662 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3663 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3664 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3665 ;;Total ram usage:       32 bytes
  3666 ;; Hardware stack levels used:    1
  3667 ;; Hardware stack levels required when called:    4
  3668 ;; This function calls:
  3669 ;;		___lodiv
  3670 ;;		___lomod
  3671 ;;		_pad
  3672 ;; This function is called by:
  3673 ;;		_vfpfcnvrt
  3674 ;; This function uses a non-reentrant model
  3675 ;;
  3676                           
  3677                           	psect	text4
  3678  001F96                     __ptext4:
  3679                           	opt callstack 0
  3680  001F96                     _utoa:
  3681                           	opt callstack 23
  3682  001F96                     
  3683                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  3684  001F96  0100               	movlb	0	; () banked
  3685  001F98  BFB1               	btfsc	(_prec+1)& (0+255),7,b
  3686  001F9A  EFD1  F00F         	goto	u1731
  3687  001F9E  EFD3  F00F         	goto	u1730
  3688  001FA2                     u1731:
  3689  001FA2  EFD4  F00F         	goto	l2392
  3690  001FA6                     u1730:
  3691  001FA6                     
  3692                           ; BSR set to: 0
  3693                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
  3694  001FA6  925E               	bcf	_flags^0,1,c
  3695  001FA8                     l2392:
  3696                           
  3697                           ; BSR set to: 0
  3698                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
  3699  001FA8  BFB1               	btfsc	(_prec+1)& (0+255),7,b
  3700  001FAA  EFE1  F00F         	goto	u1740
  3701  001FAE  51B1               	movf	(_prec+1)& (0+255),w,b
  3702  001FB0  E106               	bnz	u1741
  3703  001FB2  05B0               	decf	_prec& (0+255),w,b
  3704  001FB4  B0D8               	btfsc	status,0,c
  3705  001FB6  EFDF  F00F         	goto	u1741
  3706  001FBA  EFE1  F00F         	goto	u1740
  3707  001FBE                     u1741:
  3708  001FBE  EFE7  F00F         	goto	l394
  3709  001FC2                     u1740:
  3710  001FC2                     
  3711                           ; BSR set to: 0
  3712  001FC2  0E00               	movlw	0
  3713  001FC4  6E2F               	movwf	(utoa@p+1)^0,c
  3714  001FC6  0E01               	movlw	1
  3715  001FC8  6E2E               	movwf	utoa@p^0,c
  3716  001FCA  EFEB  F00F         	goto	l396
  3717  001FCE                     l394:
  3718                           
  3719                           ; BSR set to: 0
  3720  001FCE  C0B0  F02E         	movff	_prec,utoa@p
  3721  001FD2  C0B1  F02F         	movff	_prec+1,utoa@p+1
  3722  001FD6                     l396:
  3723                           
  3724                           ; BSR set to: 0
  3725                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
  3726  001FD6  C0AE  F030         	movff	_width,utoa@w
  3727  001FDA  C0AF  F031         	movff	_width+1,utoa@w+1
  3728                           
  3729                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
  3730  001FDE  C01E  F032         	movff	utoa@d,utoa@n
  3731  001FE2  C01F  F033         	movff	utoa@d+1,utoa@n+1
  3732  001FE6  C020  F034         	movff	utoa@d+2,utoa@n+2
  3733  001FEA  C021  F035         	movff	utoa@d+3,utoa@n+3
  3734  001FEE  C022  F036         	movff	utoa@d+4,utoa@n+4
  3735  001FF2  C023  F037         	movff	utoa@d+5,utoa@n+5
  3736  001FF6  C024  F038         	movff	utoa@d+6,utoa@n+6
  3737  001FFA  C025  F039         	movff	utoa@d+7,utoa@n+7
  3738  001FFE                     
  3739                           ; BSR set to: 0
  3740                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
  3741  001FFE  0E00               	movlw	0
  3742  002000  6E3B               	movwf	(utoa@i+1)^0,c
  3743  002002  0E1F               	movlw	31
  3744  002004  6E3A               	movwf	utoa@i^0,c
  3745  002006                     
  3746                           ; BSR set to: 0
  3747                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
  3748  002006  0E00               	movlw	0
  3749  002008  6FD1               	movwf	(_dbuf+31)& (0+255),b
  3750                           
  3751                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3752  00200A  EF7D  F010         	goto	l2410
  3753  00200E                     l2400:
  3754                           
  3755                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
  3756  00200E  063A               	decf	utoa@i^0,f,c
  3757  002010  A0D8               	btfss	status,0,c
  3758  002012  063B               	decf	(utoa@i+1)^0,f,c
  3759  002014                     
  3760                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
  3761  002014  0EB2               	movlw	low _dbuf
  3762  002016  243A               	addwf	utoa@i^0,w,c
  3763  002018  6ED9               	movwf	fsr2l,c
  3764  00201A  0E00               	movlw	high _dbuf
  3765  00201C  203B               	addwfc	(utoa@i+1)^0,w,c
  3766  00201E  6EDA               	movwf	fsr2h,c
  3767  002020  C032  F001         	movff	utoa@n,___lomod@dividend
  3768  002024  C033  F002         	movff	utoa@n+1,___lomod@dividend+1
  3769  002028  C034  F003         	movff	utoa@n+2,___lomod@dividend+2
  3770  00202C  C035  F004         	movff	utoa@n+3,___lomod@dividend+3
  3771  002030  C036  F005         	movff	utoa@n+4,___lomod@dividend+4
  3772  002034  C037  F006         	movff	utoa@n+5,___lomod@dividend+5
  3773  002038  C038  F007         	movff	utoa@n+6,___lomod@dividend+6
  3774  00203C  C039  F008         	movff	utoa@n+7,___lomod@dividend+7
  3775  002040  0E0A               	movlw	10
  3776  002042  6E09               	movwf	___lomod@divisor^0,c
  3777  002044  0E00               	movlw	0
  3778  002046  6E0A               	movwf	(___lomod@divisor+1)^0,c
  3779  002048  0E00               	movlw	0
  3780  00204A  6E0B               	movwf	(___lomod@divisor+2)^0,c
  3781  00204C  0E00               	movlw	0
  3782  00204E  6E0C               	movwf	(___lomod@divisor+3)^0,c
  3783  002050  0E00               	movlw	0
  3784  002052  6E0D               	movwf	(___lomod@divisor+4)^0,c
  3785  002054  0E00               	movlw	0
  3786  002056  6E0E               	movwf	(___lomod@divisor+5)^0,c
  3787  002058  0E00               	movlw	0
  3788  00205A  6E0F               	movwf	(___lomod@divisor+6)^0,c
  3789  00205C  0E00               	movlw	0
  3790  00205E  6E10               	movwf	(___lomod@divisor+7)^0,c
  3791  002060  EC62  F012         	call	___lomod	;wreg free
  3792  002064  C001  F026         	movff	?___lomod,??_utoa
  3793  002068  C002  F027         	movff	?___lomod+1,??_utoa+1
  3794  00206C  C003  F028         	movff	?___lomod+2,??_utoa+2
  3795  002070  C004  F029         	movff	?___lomod+3,??_utoa+3
  3796  002074  C005  F02A         	movff	?___lomod+4,??_utoa+4
  3797  002078  C006  F02B         	movff	?___lomod+5,??_utoa+5
  3798  00207C  C007  F02C         	movff	?___lomod+6,??_utoa+6
  3799  002080  C008  F02D         	movff	?___lomod+7,??_utoa+7
  3800  002084  5026               	movf	??_utoa^0,w,c
  3801  002086  0F30               	addlw	48
  3802  002088  6EDF               	movwf	indf2,c
  3803  00208A                     
  3804                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
  3805  00208A  062E               	decf	utoa@p^0,f,c
  3806  00208C  A0D8               	btfss	status,0,c
  3807  00208E  062F               	decf	(utoa@p+1)^0,f,c
  3808  002090                     
  3809                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
  3810  002090  0630               	decf	utoa@w^0,f,c
  3811  002092  A0D8               	btfss	status,0,c
  3812  002094  0631               	decf	(utoa@w+1)^0,f,c
  3813  002096                     
  3814                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
  3815  002096  C032  F001         	movff	utoa@n,___lodiv@dividend
  3816  00209A  C033  F002         	movff	utoa@n+1,___lodiv@dividend+1
  3817  00209E  C034  F003         	movff	utoa@n+2,___lodiv@dividend+2
  3818  0020A2  C035  F004         	movff	utoa@n+3,___lodiv@dividend+3
  3819  0020A6  C036  F005         	movff	utoa@n+4,___lodiv@dividend+4
  3820  0020AA  C037  F006         	movff	utoa@n+5,___lodiv@dividend+5
  3821  0020AE  C038  F007         	movff	utoa@n+6,___lodiv@dividend+6
  3822  0020B2  C039  F008         	movff	utoa@n+7,___lodiv@dividend+7
  3823  0020B6  0E0A               	movlw	10
  3824  0020B8  6E09               	movwf	___lodiv@divisor^0,c
  3825  0020BA  0E00               	movlw	0
  3826  0020BC  6E0A               	movwf	(___lodiv@divisor+1)^0,c
  3827  0020BE  0E00               	movlw	0
  3828  0020C0  6E0B               	movwf	(___lodiv@divisor+2)^0,c
  3829  0020C2  0E00               	movlw	0
  3830  0020C4  6E0C               	movwf	(___lodiv@divisor+3)^0,c
  3831  0020C6  0E00               	movlw	0
  3832  0020C8  6E0D               	movwf	(___lodiv@divisor+4)^0,c
  3833  0020CA  0E00               	movlw	0
  3834  0020CC  6E0E               	movwf	(___lodiv@divisor+5)^0,c
  3835  0020CE  0E00               	movlw	0
  3836  0020D0  6E0F               	movwf	(___lodiv@divisor+6)^0,c
  3837  0020D2  0E00               	movlw	0
  3838  0020D4  6E10               	movwf	(___lodiv@divisor+7)^0,c
  3839  0020D6  ECEA  F011         	call	___lodiv	;wreg free
  3840  0020DA  C001  F032         	movff	?___lodiv,utoa@n
  3841  0020DE  C002  F033         	movff	?___lodiv+1,utoa@n+1
  3842  0020E2  C003  F034         	movff	?___lodiv+2,utoa@n+2
  3843  0020E6  C004  F035         	movff	?___lodiv+3,utoa@n+3
  3844  0020EA  C005  F036         	movff	?___lodiv+4,utoa@n+4
  3845  0020EE  C006  F037         	movff	?___lodiv+5,utoa@n+5
  3846  0020F2  C007  F038         	movff	?___lodiv+6,utoa@n+6
  3847  0020F6  C008  F039         	movff	?___lodiv+7,utoa@n+7
  3848  0020FA                     l2410:
  3849                           
  3850                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3851  0020FA  503A               	movf	utoa@i^0,w,c
  3852  0020FC  103B               	iorwf	(utoa@i+1)^0,w,c
  3853  0020FE  B4D8               	btfsc	status,2,c
  3854  002100  EF84  F010         	goto	u1751
  3855  002104  EF86  F010         	goto	u1750
  3856  002108                     u1751:
  3857  002108  EFB6  F010         	goto	l2420
  3858  00210C                     u1750:
  3859  00210C  5032               	movf	utoa@n^0,w,c
  3860  00210E  1033               	iorwf	(utoa@n+1)^0,w,c
  3861  002110  1034               	iorwf	(utoa@n+2)^0,w,c
  3862  002112  1035               	iorwf	(utoa@n+3)^0,w,c
  3863  002114  1036               	iorwf	(utoa@n+4)^0,w,c
  3864  002116  1037               	iorwf	(utoa@n+5)^0,w,c
  3865  002118  1038               	iorwf	(utoa@n+6)^0,w,c
  3866  00211A  1039               	iorwf	(utoa@n+7)^0,w,c
  3867  00211C  A4D8               	btfss	status,2,c
  3868  00211E  EF93  F010         	goto	u1761
  3869  002122  EF95  F010         	goto	u1760
  3870  002126                     u1761:
  3871  002126  EF07  F010         	goto	l2400
  3872  00212A                     u1760:
  3873  00212A  BE2F               	btfsc	(utoa@p+1)^0,7,c
  3874  00212C  EFA2  F010         	goto	u1770
  3875  002130  502F               	movf	(utoa@p+1)^0,w,c
  3876  002132  E106               	bnz	u1771
  3877  002134  042E               	decf	utoa@p^0,w,c
  3878  002136  B0D8               	btfsc	status,0,c
  3879  002138  EFA0  F010         	goto	u1771
  3880  00213C  EFA2  F010         	goto	u1770
  3881  002140                     u1771:
  3882  002140  EF07  F010         	goto	l2400
  3883  002144                     u1770:
  3884  002144  BE31               	btfsc	(utoa@w+1)^0,7,c
  3885  002146  EFAD  F010         	goto	u1781
  3886  00214A  5031               	movf	(utoa@w+1)^0,w,c
  3887  00214C  E108               	bnz	u1780
  3888  00214E  0430               	decf	utoa@w^0,w,c
  3889  002150  A0D8               	btfss	status,0,c
  3890  002152  EFAD  F010         	goto	u1781
  3891  002156  EFAF  F010         	goto	u1780
  3892  00215A                     u1781:
  3893  00215A  EFB6  F010         	goto	l2420
  3894  00215E                     u1780:
  3895  00215E  B25E               	btfsc	_flags^0,1,c
  3896  002160  EFB4  F010         	goto	u1791
  3897  002164  EFB6  F010         	goto	u1790
  3898  002168                     u1791:
  3899  002168  EF07  F010         	goto	l2400
  3900  00216C                     u1790:
  3901  00216C                     l2420:
  3902                           
  3903                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
  3904  00216C  C01C  F011         	movff	utoa@fp,pad@fp
  3905  002170  C01D  F012         	movff	utoa@fp+1,pad@fp+1
  3906  002174  0EB2               	movlw	low _dbuf
  3907  002176  243A               	addwf	utoa@i^0,w,c
  3908  002178  6E13               	movwf	pad@buf^0,c
  3909  00217A  0E00               	movlw	high _dbuf
  3910  00217C  203B               	addwfc	(utoa@i+1)^0,w,c
  3911  00217E  6E14               	movwf	(pad@buf+1)^0,c
  3912  002180  C030  F015         	movff	utoa@w,pad@p
  3913  002184  C031  F016         	movff	utoa@w+1,pad@p+1
  3914  002188  ECF3  F013         	call	_pad	;wreg free
  3915  00218C  C011  F01C         	movff	?_pad,?_utoa
  3916  002190  C012  F01D         	movff	?_pad+1,?_utoa+1
  3917  002194  0012               	return		;funcret
  3918  002196                     __end_of_utoa:
  3919                           	opt callstack 0
  3920                           
  3921 ;; *************** function _pad *****************
  3922 ;; Defined at:
  3923 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3924 ;; Parameters:    Size  Location     Type
  3925 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  3926 ;;		 -> sprintf@f(6), 
  3927 ;;  buf             2   18[COMRAM] PTR unsigned char 
  3928 ;;		 -> dbuf(32), 
  3929 ;;  p               2   20[COMRAM] int 
  3930 ;; Auto vars:     Size  Location     Type
  3931 ;;  w               2   25[COMRAM] int 
  3932 ;;  i               2   23[COMRAM] int 
  3933 ;; Return value:  Size  Location     Type
  3934 ;;                  2   16[COMRAM] int 
  3935 ;; Registers used:
  3936 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3937 ;; Tracked objects:
  3938 ;;		On entry : 0/0
  3939 ;;		On exit  : 0/0
  3940 ;;		Unchanged: 0/0
  3941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3942 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3943 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3944 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3945 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3946 ;;Total ram usage:       11 bytes
  3947 ;; Hardware stack levels used:    1
  3948 ;; Hardware stack levels required when called:    3
  3949 ;; This function calls:
  3950 ;;		_fputc
  3951 ;;		_fputs
  3952 ;;		_strlen
  3953 ;; This function is called by:
  3954 ;;		_utoa
  3955 ;; This function uses a non-reentrant model
  3956 ;;
  3957                           
  3958                           	psect	text5
  3959  0027E6                     __ptext5:
  3960                           	opt callstack 0
  3961  0027E6                     _pad:
  3962                           	opt callstack 23
  3963  0027E6                     
  3964                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  3965  0027E6  A05E               	btfss	_flags^0,0,c
  3966  0027E8  EFF8  F013         	goto	u1621
  3967  0027EC  EFFA  F013         	goto	u1620
  3968  0027F0                     u1621:
  3969  0027F0  EF04  F014         	goto	l2332
  3970  0027F4                     u1620:
  3971  0027F4                     
  3972                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  3973  0027F4  C013  F00A         	movff	pad@buf,fputs@s
  3974  0027F8  C014  F00B         	movff	pad@buf+1,fputs@s+1
  3975  0027FC  C011  F00C         	movff	pad@fp,fputs@fp
  3976  002800  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  3977  002804  EC0B  F018         	call	_fputs	;wreg free
  3978  002808                     l2332:
  3979                           
  3980                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  3981  002808  BE16               	btfsc	(pad@p+1)^0,7,c
  3982  00280A  EF09  F014         	goto	u1631
  3983  00280E  EF0B  F014         	goto	u1630
  3984  002812                     u1631:
  3985  002812  EF11  F014         	goto	l2336
  3986  002816                     u1630:
  3987  002816  C015  F01A         	movff	pad@p,pad@w
  3988  00281A  C016  F01B         	movff	pad@p+1,pad@w+1
  3989  00281E  EF15  F014         	goto	l384
  3990  002822                     l2336:
  3991  002822  0E00               	movlw	0
  3992  002824  6E1B               	movwf	(pad@w+1)^0,c
  3993  002826  0E00               	movlw	0
  3994  002828  6E1A               	movwf	pad@w^0,c
  3995  00282A                     l384:
  3996                           
  3997                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  3998  00282A  0E00               	movlw	0
  3999  00282C  6E19               	movwf	(pad@i+1)^0,c
  4000  00282E  0E00               	movlw	0
  4001  002830  6E18               	movwf	pad@i^0,c
  4002                           
  4003                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  4004  002832  EF27  F014         	goto	l2342
  4005  002836                     l2338:
  4006                           
  4007                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  4008  002836  0E00               	movlw	0
  4009  002838  6E02               	movwf	(fputc@c+1)^0,c
  4010  00283A  0E20               	movlw	32
  4011  00283C  6E01               	movwf	fputc@c^0,c
  4012  00283E  C011  F003         	movff	pad@fp,fputc@fp
  4013  002842  C012  F004         	movff	pad@fp+1,fputc@fp+1
  4014  002846  ECCA  F012         	call	_fputc	;wreg free
  4015  00284A                     
  4016                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  4017  00284A  4A18               	infsnz	pad@i^0,f,c
  4018  00284C  2A19               	incf	(pad@i+1)^0,f,c
  4019  00284E                     l2342:
  4020                           
  4021                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  4022  00284E  501A               	movf	pad@w^0,w,c
  4023  002850  5C18               	subwf	pad@i^0,w,c
  4024  002852  5019               	movf	(pad@i+1)^0,w,c
  4025  002854  0A80               	xorlw	128
  4026  002856  6E17               	movwf	??_pad^0,c
  4027  002858  501B               	movf	(pad@w+1)^0,w,c
  4028  00285A  0A80               	xorlw	128
  4029  00285C  5817               	subwfb	??_pad^0,w,c
  4030  00285E  A0D8               	btfss	status,0,c
  4031  002860  EF34  F014         	goto	u1641
  4032  002864  EF36  F014         	goto	u1640
  4033  002868                     u1641:
  4034  002868  EF1B  F014         	goto	l2338
  4035  00286C                     u1640:
  4036  00286C                     
  4037                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  4038  00286C  B05E               	btfsc	_flags^0,0,c
  4039  00286E  EF3B  F014         	goto	u1651
  4040  002872  EF3D  F014         	goto	u1650
  4041  002876                     u1651:
  4042  002876  EF47  F014         	goto	l2346
  4043  00287A                     u1650:
  4044  00287A                     
  4045                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  4046  00287A  C013  F00A         	movff	pad@buf,fputs@s
  4047  00287E  C014  F00B         	movff	pad@buf+1,fputs@s+1
  4048  002882  C011  F00C         	movff	pad@fp,fputs@fp
  4049  002886  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  4050  00288A  EC0B  F018         	call	_fputs	;wreg free
  4051  00288E                     l2346:
  4052                           
  4053                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  4054  00288E  C013  F001         	movff	pad@buf,strlen@s
  4055  002892  C014  F002         	movff	pad@buf+1,strlen@s+1
  4056  002896  EC4F  F018         	call	_strlen	;wreg free
  4057  00289A  501A               	movf	pad@w^0,w,c
  4058  00289C  2401               	addwf	?_strlen^0,w,c
  4059  00289E  6E11               	movwf	?_pad^0,c
  4060  0028A0  501B               	movf	(pad@w+1)^0,w,c
  4061  0028A2  2002               	addwfc	(?_strlen+1)^0,w,c
  4062  0028A4  6E12               	movwf	(?_pad+1)^0,c
  4063  0028A6  0012               	return		;funcret
  4064  0028A8                     __end_of_pad:
  4065                           	opt callstack 0
  4066                           
  4067 ;; *************** function _strlen *****************
  4068 ;; Defined at:
  4069 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  4070 ;; Parameters:    Size  Location     Type
  4071 ;;  s               2    0[COMRAM] PTR const unsigned char 
  4072 ;;		 -> dbuf(32), 
  4073 ;; Auto vars:     Size  Location     Type
  4074 ;;  a               2    2[COMRAM] PTR const unsigned char 
  4075 ;;		 -> dbuf(32), 
  4076 ;; Return value:  Size  Location     Type
  4077 ;;                  2    0[COMRAM] unsigned int 
  4078 ;; Registers used:
  4079 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4080 ;; Tracked objects:
  4081 ;;		On entry : 0/0
  4082 ;;		On exit  : 0/0
  4083 ;;		Unchanged: 0/0
  4084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4085 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4086 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4088 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4089 ;;Total ram usage:        4 bytes
  4090 ;; Hardware stack levels used:    1
  4091 ;; This function calls:
  4092 ;;		Nothing
  4093 ;; This function is called by:
  4094 ;;		_pad
  4095 ;; This function uses a non-reentrant model
  4096 ;;
  4097                           
  4098                           	psect	text6
  4099  00309E                     __ptext6:
  4100                           	opt callstack 0
  4101  00309E                     _strlen:
  4102                           	opt callstack 25
  4103  00309E  C001  F003         	movff	strlen@s,strlen@a
  4104  0030A2  C002  F004         	movff	strlen@s+1,strlen@a+1
  4105  0030A6  EF57  F018         	goto	l2322
  4106  0030AA                     l2320:
  4107  0030AA  4A01               	infsnz	strlen@s^0,f,c
  4108  0030AC  2A02               	incf	(strlen@s+1)^0,f,c
  4109  0030AE                     l2322:
  4110  0030AE  C001  FFD9         	movff	strlen@s,fsr2l
  4111  0030B2  C002  FFDA         	movff	strlen@s+1,fsr2h
  4112  0030B6  50DF               	movf	indf2,w,c
  4113  0030B8  A4D8               	btfss	status,2,c
  4114  0030BA  EF61  F018         	goto	u1611
  4115  0030BE  EF63  F018         	goto	u1610
  4116  0030C2                     u1611:
  4117  0030C2  EF55  F018         	goto	l2320
  4118  0030C6                     u1610:
  4119  0030C6  5003               	movf	strlen@a^0,w,c
  4120  0030C8  5C01               	subwf	strlen@s^0,w,c
  4121  0030CA  6E01               	movwf	?_strlen^0,c
  4122  0030CC  5004               	movf	(strlen@a+1)^0,w,c
  4123  0030CE  5802               	subwfb	(strlen@s+1)^0,w,c
  4124  0030D0  6E02               	movwf	(?_strlen+1)^0,c
  4125  0030D2  0012               	return		;funcret
  4126  0030D4                     __end_of_strlen:
  4127                           	opt callstack 0
  4128                           
  4129 ;; *************** function _fputs *****************
  4130 ;; Defined at:
  4131 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  4132 ;; Parameters:    Size  Location     Type
  4133 ;;  s               2    9[COMRAM] PTR const unsigned char 
  4134 ;;		 -> dbuf(32), 
  4135 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  4136 ;;		 -> sprintf@f(6), 
  4137 ;; Auto vars:     Size  Location     Type
  4138 ;;  i               2   14[COMRAM] int 
  4139 ;;  c               1   13[COMRAM] unsigned char 
  4140 ;; Return value:  Size  Location     Type
  4141 ;;                  2    9[COMRAM] int 
  4142 ;; Registers used:
  4143 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4144 ;; Tracked objects:
  4145 ;;		On entry : 0/0
  4146 ;;		On exit  : 0/0
  4147 ;;		Unchanged: 0/0
  4148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4149 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4150 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4152 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4153 ;;Total ram usage:        7 bytes
  4154 ;; Hardware stack levels used:    1
  4155 ;; Hardware stack levels required when called:    2
  4156 ;; This function calls:
  4157 ;;		_fputc
  4158 ;; This function is called by:
  4159 ;;		_pad
  4160 ;; This function uses a non-reentrant model
  4161 ;;
  4162                           
  4163                           	psect	text7
  4164  003016                     __ptext7:
  4165                           	opt callstack 0
  4166  003016                     _fputs:
  4167                           	opt callstack 23
  4168  003016  0E00               	movlw	0
  4169  003018  6E10               	movwf	(fputs@i+1)^0,c
  4170  00301A  0E00               	movlw	0
  4171  00301C  6E0F               	movwf	fputs@i^0,c
  4172  00301E  EF1C  F018         	goto	l2316
  4173  003022                     l2312:
  4174  003022  C00E  F001         	movff	fputs@c,fputc@c
  4175  003026  6A02               	clrf	(fputc@c+1)^0,c
  4176  003028  C00C  F003         	movff	fputs@fp,fputc@fp
  4177  00302C  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  4178  003030  ECCA  F012         	call	_fputc	;wreg free
  4179  003034  4A0F               	infsnz	fputs@i^0,f,c
  4180  003036  2A10               	incf	(fputs@i+1)^0,f,c
  4181  003038                     l2316:
  4182  003038  500F               	movf	fputs@i^0,w,c
  4183  00303A  240A               	addwf	fputs@s^0,w,c
  4184  00303C  6ED9               	movwf	fsr2l,c
  4185  00303E  5010               	movf	(fputs@i+1)^0,w,c
  4186  003040  200B               	addwfc	(fputs@s+1)^0,w,c
  4187  003042  6EDA               	movwf	fsr2h,c
  4188  003044  50DF               	movf	indf2,w,c
  4189  003046  6E0E               	movwf	fputs@c^0,c
  4190  003048  500E               	movf	fputs@c^0,w,c
  4191  00304A  A4D8               	btfss	status,2,c
  4192  00304C  EF2A  F018         	goto	u1601
  4193  003050  EF2C  F018         	goto	u1600
  4194  003054                     u1601:
  4195  003054  EF11  F018         	goto	l2312
  4196  003058                     u1600:
  4197  003058  0012               	return		;funcret
  4198  00305A                     __end_of_fputs:
  4199                           	opt callstack 0
  4200                           
  4201 ;; *************** function _fputc *****************
  4202 ;; Defined at:
  4203 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  4204 ;; Parameters:    Size  Location     Type
  4205 ;;  c               2    0[COMRAM] int 
  4206 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  4207 ;;		 -> sprintf@f(6), 
  4208 ;; Auto vars:     Size  Location     Type
  4209 ;;		None
  4210 ;; Return value:  Size  Location     Type
  4211 ;;                  2    0[COMRAM] int 
  4212 ;; Registers used:
  4213 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4214 ;; Tracked objects:
  4215 ;;		On entry : 0/0
  4216 ;;		On exit  : 0/0
  4217 ;;		Unchanged: 0/0
  4218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4219 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4221 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4222 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4223 ;;Total ram usage:        9 bytes
  4224 ;; Hardware stack levels used:    1
  4225 ;; Hardware stack levels required when called:    1
  4226 ;; This function calls:
  4227 ;;		_putch
  4228 ;; This function is called by:
  4229 ;;		_pad
  4230 ;;		_vfpfcnvrt
  4231 ;;		_fputs
  4232 ;; This function uses a non-reentrant model
  4233 ;;
  4234                           
  4235                           	psect	text8
  4236  002594                     __ptext8:
  4237                           	opt callstack 0
  4238  002594                     _fputc:
  4239                           	opt callstack 23
  4240  002594  5003               	movf	fputc@fp^0,w,c
  4241  002596  1004               	iorwf	(fputc@fp+1)^0,w,c
  4242  002598  B4D8               	btfsc	status,2,c
  4243  00259A  EFD1  F012         	goto	u1561
  4244  00259E  EFD3  F012         	goto	u1560
  4245  0025A2                     u1561:
  4246  0025A2  EFDC  F012         	goto	l2300
  4247  0025A6                     u1560:
  4248  0025A6  5003               	movf	fputc@fp^0,w,c
  4249  0025A8  1004               	iorwf	(fputc@fp+1)^0,w,c
  4250  0025AA  A4D8               	btfss	status,2,c
  4251  0025AC  EFDA  F012         	goto	u1571
  4252  0025B0  EFDC  F012         	goto	u1570
  4253  0025B4                     u1571:
  4254  0025B4  EFE1  F012         	goto	l2302
  4255  0025B8                     u1570:
  4256  0025B8                     l2300:
  4257  0025B8  5001               	movf	fputc@c^0,w,c
  4258  0025BA  EC56  F019         	call	_putch
  4259  0025BE  EF2E  F013         	goto	l1103
  4260  0025C2                     l2302:
  4261  0025C2  EE20 F004          	lfsr	2,4
  4262  0025C6  5003               	movf	fputc@fp^0,w,c
  4263  0025C8  26D9               	addwf	fsr2l,f,c
  4264  0025CA  5004               	movf	(fputc@fp+1)^0,w,c
  4265  0025CC  22DA               	addwfc	fsr2h,f,c
  4266  0025CE  50DE               	movf	postinc2,w,c
  4267  0025D0  10DE               	iorwf	postinc2,w,c
  4268  0025D2  B4D8               	btfsc	status,2,c
  4269  0025D4  EFEE  F012         	goto	u1581
  4270  0025D8  EFF0  F012         	goto	u1580
  4271  0025DC                     u1581:
  4272  0025DC  EF0B  F013         	goto	l2306
  4273  0025E0                     u1580:
  4274  0025E0  EE20 F004          	lfsr	2,4
  4275  0025E4  5003               	movf	fputc@fp^0,w,c
  4276  0025E6  26D9               	addwf	fsr2l,f,c
  4277  0025E8  5004               	movf	(fputc@fp+1)^0,w,c
  4278  0025EA  22DA               	addwfc	fsr2h,f,c
  4279  0025EC  EE10 F002          	lfsr	1,2
  4280  0025F0  5003               	movf	fputc@fp^0,w,c
  4281  0025F2  26E1               	addwf	fsr1l,f,c
  4282  0025F4  5004               	movf	(fputc@fp+1)^0,w,c
  4283  0025F6  22E2               	addwfc	fsr1h,f,c
  4284  0025F8  50DE               	movf	postinc2,w,c
  4285  0025FA  5CE6               	subwf	postinc1,w,c
  4286  0025FC  50E6               	movf	postinc1,w,c
  4287  0025FE  0A80               	xorlw	128
  4288  002600  6E09               	movwf	(??_fputc+4)^0,c
  4289  002602  50DE               	movf	postinc2,w,c
  4290  002604  0A80               	xorlw	128
  4291  002606  5809               	subwfb	(??_fputc+4)^0,w,c
  4292  002608  B0D8               	btfsc	status,0,c
  4293  00260A  EF09  F013         	goto	u1591
  4294  00260E  EF0B  F013         	goto	u1590
  4295  002612                     u1591:
  4296  002612  EF2E  F013         	goto	l1103
  4297  002616                     u1590:
  4298  002616                     l2306:
  4299  002616  EE20 F002          	lfsr	2,2
  4300  00261A  5003               	movf	fputc@fp^0,w,c
  4301  00261C  26D9               	addwf	fsr2l,f,c
  4302  00261E  5004               	movf	(fputc@fp+1)^0,w,c
  4303  002620  22DA               	addwfc	fsr2h,f,c
  4304  002622  CFDE F005          	movff	postinc2,??_fputc
  4305  002626  CFDD F006          	movff	postdec2,??_fputc+1
  4306  00262A  C003  FFD9         	movff	fputc@fp,fsr2l
  4307  00262E  C004  FFDA         	movff	fputc@fp+1,fsr2h
  4308  002632  CFDE F007          	movff	postinc2,??_fputc+2
  4309  002636  CFDD F008          	movff	postdec2,??_fputc+3
  4310  00263A  5005               	movf	??_fputc^0,w,c
  4311  00263C  2407               	addwf	(??_fputc+2)^0,w,c
  4312  00263E  6ED9               	movwf	fsr2l,c
  4313  002640  5006               	movf	(??_fputc+1)^0,w,c
  4314  002642  2008               	addwfc	(??_fputc+3)^0,w,c
  4315  002644  6EDA               	movwf	fsr2h,c
  4316  002646  C001  FFDF         	movff	fputc@c,indf2
  4317  00264A  EE20 F002          	lfsr	2,2
  4318  00264E  5003               	movf	fputc@fp^0,w,c
  4319  002650  26D9               	addwf	fsr2l,f,c
  4320  002652  5004               	movf	(fputc@fp+1)^0,w,c
  4321  002654  22DA               	addwfc	fsr2h,f,c
  4322  002656  2ADE               	incf	postinc2,f,c
  4323  002658  0E00               	movlw	0
  4324  00265A  22DD               	addwfc	postdec2,f,c
  4325  00265C                     l1103:
  4326  00265C  0012               	return		;funcret
  4327  00265E                     __end_of_fputc:
  4328                           	opt callstack 0
  4329                           
  4330 ;; *************** function _putch *****************
  4331 ;; Defined at:
  4332 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
  4333 ;; Parameters:    Size  Location     Type
  4334 ;;  c               1    wreg     unsigned char 
  4335 ;; Auto vars:     Size  Location     Type
  4336 ;;  c               1    0[COMRAM] unsigned char 
  4337 ;; Return value:  Size  Location     Type
  4338 ;;                  1    wreg      void 
  4339 ;; Registers used:
  4340 ;;		wreg
  4341 ;; Tracked objects:
  4342 ;;		On entry : 0/0
  4343 ;;		On exit  : 0/0
  4344 ;;		Unchanged: 0/0
  4345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4349 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4350 ;;Total ram usage:        0 bytes
  4351 ;; Hardware stack levels used:    1
  4352 ;; This function calls:
  4353 ;;		Nothing
  4354 ;; This function is called by:
  4355 ;;		_fputc
  4356 ;; This function uses a non-reentrant model
  4357 ;;
  4358                           
  4359                           	psect	text9
  4360  0032AC                     __ptext9:
  4361                           	opt callstack 0
  4362  0032AC                     _putch:
  4363                           	opt callstack 23
  4364  0032AC  0012               	return		;funcret
  4365  0032AE                     __end_of_putch:
  4366                           	opt callstack 0
  4367                           
  4368 ;; *************** function ___lomod *****************
  4369 ;; Defined at:
  4370 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lomod.c"
  4371 ;; Parameters:    Size  Location     Type
  4372 ;;  dividend        8    0[COMRAM] unsigned long long 
  4373 ;;  divisor         8    8[COMRAM] unsigned long long 
  4374 ;; Auto vars:     Size  Location     Type
  4375 ;;  counter         1   16[COMRAM] unsigned char 
  4376 ;; Return value:  Size  Location     Type
  4377 ;;                  8    0[COMRAM] unsigned long long 
  4378 ;; Registers used:
  4379 ;;		wreg, status,2, status,0
  4380 ;; Tracked objects:
  4381 ;;		On entry : 0/0
  4382 ;;		On exit  : 0/0
  4383 ;;		Unchanged: 0/0
  4384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4385 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4386 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4388 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4389 ;;Total ram usage:       17 bytes
  4390 ;; Hardware stack levels used:    1
  4391 ;; This function calls:
  4392 ;;		Nothing
  4393 ;; This function is called by:
  4394 ;;		_utoa
  4395 ;; This function uses a non-reentrant model
  4396 ;;
  4397                           
  4398                           	psect	text10
  4399  0024C4                     __ptext10:
  4400                           	opt callstack 0
  4401  0024C4                     ___lomod:
  4402                           	opt callstack 26
  4403  0024C4  5009               	movf	___lomod@divisor^0,w,c
  4404  0024C6  100A               	iorwf	(___lomod@divisor+1)^0,w,c
  4405  0024C8  100B               	iorwf	(___lomod@divisor+2)^0,w,c
  4406  0024CA  100C               	iorwf	(___lomod@divisor+3)^0,w,c
  4407  0024CC  100D               	iorwf	(___lomod@divisor+4)^0,w,c
  4408  0024CE  100E               	iorwf	(___lomod@divisor+5)^0,w,c
  4409  0024D0  100F               	iorwf	(___lomod@divisor+6)^0,w,c
  4410  0024D2  1010               	iorwf	(___lomod@divisor+7)^0,w,c
  4411  0024D4  B4D8               	btfsc	status,2,c
  4412  0024D6  EF6F  F012         	goto	u1701
  4413  0024DA  EF71  F012         	goto	u1700
  4414  0024DE                     u1701:
  4415  0024DE  EFB9  F012         	goto	l868
  4416  0024E2                     u1700:
  4417  0024E2  0E01               	movlw	1
  4418  0024E4  6E11               	movwf	___lomod@counter^0,c
  4419  0024E6  EF7F  F012         	goto	l2378
  4420  0024EA                     l2376:
  4421  0024EA  90D8               	bcf	status,0,c
  4422  0024EC  3609               	rlcf	___lomod@divisor^0,f,c
  4423  0024EE  360A               	rlcf	(___lomod@divisor+1)^0,f,c
  4424  0024F0  360B               	rlcf	(___lomod@divisor+2)^0,f,c
  4425  0024F2  360C               	rlcf	(___lomod@divisor+3)^0,f,c
  4426  0024F4  360D               	rlcf	(___lomod@divisor+4)^0,f,c
  4427  0024F6  360E               	rlcf	(___lomod@divisor+5)^0,f,c
  4428  0024F8  360F               	rlcf	(___lomod@divisor+6)^0,f,c
  4429  0024FA  3610               	rlcf	(___lomod@divisor+7)^0,f,c
  4430  0024FC  2A11               	incf	___lomod@counter^0,f,c
  4431  0024FE                     l2378:
  4432  0024FE  AE10               	btfss	(___lomod@divisor+7)^0,7,c
  4433  002500  EF84  F012         	goto	u1711
  4434  002504  EF86  F012         	goto	u1710
  4435  002508                     u1711:
  4436  002508  EF75  F012         	goto	l2376
  4437  00250C                     u1710:
  4438  00250C                     l2380:
  4439  00250C  5009               	movf	___lomod@divisor^0,w,c
  4440  00250E  5C01               	subwf	___lomod@dividend^0,w,c
  4441  002510  500A               	movf	(___lomod@divisor+1)^0,w,c
  4442  002512  5802               	subwfb	(___lomod@dividend+1)^0,w,c
  4443  002514  500B               	movf	(___lomod@divisor+2)^0,w,c
  4444  002516  5803               	subwfb	(___lomod@dividend+2)^0,w,c
  4445  002518  500C               	movf	(___lomod@divisor+3)^0,w,c
  4446  00251A  5804               	subwfb	(___lomod@dividend+3)^0,w,c
  4447  00251C  500D               	movf	(___lomod@divisor+4)^0,w,c
  4448  00251E  5805               	subwfb	(___lomod@dividend+4)^0,w,c
  4449  002520  500E               	movf	(___lomod@divisor+5)^0,w,c
  4450  002522  5806               	subwfb	(___lomod@dividend+5)^0,w,c
  4451  002524  500F               	movf	(___lomod@divisor+6)^0,w,c
  4452  002526  5807               	subwfb	(___lomod@dividend+6)^0,w,c
  4453  002528  5010               	movf	(___lomod@divisor+7)^0,w,c
  4454  00252A  5808               	subwfb	(___lomod@dividend+7)^0,w,c
  4455  00252C  A0D8               	btfss	status,0,c
  4456  00252E  EF9B  F012         	goto	u1721
  4457  002532  EF9D  F012         	goto	u1720
  4458  002536                     u1721:
  4459  002536  EFAD  F012         	goto	l2384
  4460  00253A                     u1720:
  4461  00253A  5009               	movf	___lomod@divisor^0,w,c
  4462  00253C  5E01               	subwf	___lomod@dividend^0,f,c
  4463  00253E  500A               	movf	(___lomod@divisor+1)^0,w,c
  4464  002540  5A02               	subwfb	(___lomod@dividend+1)^0,f,c
  4465  002542  500B               	movf	(___lomod@divisor+2)^0,w,c
  4466  002544  5A03               	subwfb	(___lomod@dividend+2)^0,f,c
  4467  002546  500C               	movf	(___lomod@divisor+3)^0,w,c
  4468  002548  5A04               	subwfb	(___lomod@dividend+3)^0,f,c
  4469  00254A  500D               	movf	(___lomod@divisor+4)^0,w,c
  4470  00254C  5A05               	subwfb	(___lomod@dividend+4)^0,f,c
  4471  00254E  500E               	movf	(___lomod@divisor+5)^0,w,c
  4472  002550  5A06               	subwfb	(___lomod@dividend+5)^0,f,c
  4473  002552  500F               	movf	(___lomod@divisor+6)^0,w,c
  4474  002554  5A07               	subwfb	(___lomod@dividend+6)^0,f,c
  4475  002556  5010               	movf	(___lomod@divisor+7)^0,w,c
  4476  002558  5A08               	subwfb	(___lomod@dividend+7)^0,f,c
  4477  00255A                     l2384:
  4478  00255A  90D8               	bcf	status,0,c
  4479  00255C  3210               	rrcf	(___lomod@divisor+7)^0,f,c
  4480  00255E  320F               	rrcf	(___lomod@divisor+6)^0,f,c
  4481  002560  320E               	rrcf	(___lomod@divisor+5)^0,f,c
  4482  002562  320D               	rrcf	(___lomod@divisor+4)^0,f,c
  4483  002564  320C               	rrcf	(___lomod@divisor+3)^0,f,c
  4484  002566  320B               	rrcf	(___lomod@divisor+2)^0,f,c
  4485  002568  320A               	rrcf	(___lomod@divisor+1)^0,f,c
  4486  00256A  3209               	rrcf	___lomod@divisor^0,f,c
  4487  00256C  2E11               	decfsz	___lomod@counter^0,f,c
  4488  00256E  EF86  F012         	goto	l2380
  4489  002572                     l868:
  4490  002572  C001  F001         	movff	___lomod@dividend,?___lomod
  4491  002576  C002  F002         	movff	___lomod@dividend+1,?___lomod+1
  4492  00257A  C003  F003         	movff	___lomod@dividend+2,?___lomod+2
  4493  00257E  C004  F004         	movff	___lomod@dividend+3,?___lomod+3
  4494  002582  C005  F005         	movff	___lomod@dividend+4,?___lomod+4
  4495  002586  C006  F006         	movff	___lomod@dividend+5,?___lomod+5
  4496  00258A  C007  F007         	movff	___lomod@dividend+6,?___lomod+6
  4497  00258E  C008  F008         	movff	___lomod@dividend+7,?___lomod+7
  4498  002592  0012               	return		;funcret
  4499  002594                     __end_of___lomod:
  4500                           	opt callstack 0
  4501                           
  4502 ;; *************** function ___lodiv *****************
  4503 ;; Defined at:
  4504 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lodiv.c"
  4505 ;; Parameters:    Size  Location     Type
  4506 ;;  dividend        8    0[COMRAM] unsigned long long 
  4507 ;;  divisor         8    8[COMRAM] unsigned long long 
  4508 ;; Auto vars:     Size  Location     Type
  4509 ;;  quotient        8   16[COMRAM] unsigned long long 
  4510 ;;  counter         1   24[COMRAM] unsigned char 
  4511 ;; Return value:  Size  Location     Type
  4512 ;;                  8    0[COMRAM] unsigned long long 
  4513 ;; Registers used:
  4514 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4515 ;; Tracked objects:
  4516 ;;		On entry : 0/0
  4517 ;;		On exit  : 0/0
  4518 ;;		Unchanged: 0/0
  4519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4520 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4521 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4523 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4524 ;;Total ram usage:       25 bytes
  4525 ;; Hardware stack levels used:    1
  4526 ;; This function calls:
  4527 ;;		Nothing
  4528 ;; This function is called by:
  4529 ;;		_utoa
  4530 ;; This function uses a non-reentrant model
  4531 ;;
  4532                           
  4533                           	psect	text11
  4534  0023D4                     __ptext11:
  4535                           	opt callstack 0
  4536  0023D4                     ___lodiv:
  4537                           	opt callstack 26
  4538  0023D4  EE20  F011         	lfsr	2,___lodiv@quotient
  4539  0023D8  0E07               	movlw	7
  4540  0023DA                     u1661:
  4541  0023DA  6ADE               	clrf	postinc2,c
  4542  0023DC  06E8               	decf	wreg,f,c
  4543  0023DE  E2FD               	bc	u1661
  4544  0023E0  5009               	movf	___lodiv@divisor^0,w,c
  4545  0023E2  100A               	iorwf	(___lodiv@divisor+1)^0,w,c
  4546  0023E4  100B               	iorwf	(___lodiv@divisor+2)^0,w,c
  4547  0023E6  100C               	iorwf	(___lodiv@divisor+3)^0,w,c
  4548  0023E8  100D               	iorwf	(___lodiv@divisor+4)^0,w,c
  4549  0023EA  100E               	iorwf	(___lodiv@divisor+5)^0,w,c
  4550  0023EC  100F               	iorwf	(___lodiv@divisor+6)^0,w,c
  4551  0023EE  1010               	iorwf	(___lodiv@divisor+7)^0,w,c
  4552  0023F0  B4D8               	btfsc	status,2,c
  4553  0023F2  EFFD  F011         	goto	u1671
  4554  0023F6  EFFF  F011         	goto	u1670
  4555  0023FA                     u1671:
  4556  0023FA  EF51  F012         	goto	l858
  4557  0023FE                     u1670:
  4558  0023FE  0E01               	movlw	1
  4559  002400  6E19               	movwf	___lodiv@counter^0,c
  4560  002402  EF0D  F012         	goto	l2358
  4561  002406                     l2356:
  4562  002406  90D8               	bcf	status,0,c
  4563  002408  3609               	rlcf	___lodiv@divisor^0,f,c
  4564  00240A  360A               	rlcf	(___lodiv@divisor+1)^0,f,c
  4565  00240C  360B               	rlcf	(___lodiv@divisor+2)^0,f,c
  4566  00240E  360C               	rlcf	(___lodiv@divisor+3)^0,f,c
  4567  002410  360D               	rlcf	(___lodiv@divisor+4)^0,f,c
  4568  002412  360E               	rlcf	(___lodiv@divisor+5)^0,f,c
  4569  002414  360F               	rlcf	(___lodiv@divisor+6)^0,f,c
  4570  002416  3610               	rlcf	(___lodiv@divisor+7)^0,f,c
  4571  002418  2A19               	incf	___lodiv@counter^0,f,c
  4572  00241A                     l2358:
  4573  00241A  AE10               	btfss	(___lodiv@divisor+7)^0,7,c
  4574  00241C  EF12  F012         	goto	u1681
  4575  002420  EF14  F012         	goto	u1680
  4576  002424                     u1681:
  4577  002424  EF03  F012         	goto	l2356
  4578  002428                     u1680:
  4579  002428                     l2360:
  4580  002428  90D8               	bcf	status,0,c
  4581  00242A  3611               	rlcf	___lodiv@quotient^0,f,c
  4582  00242C  3612               	rlcf	(___lodiv@quotient+1)^0,f,c
  4583  00242E  3613               	rlcf	(___lodiv@quotient+2)^0,f,c
  4584  002430  3614               	rlcf	(___lodiv@quotient+3)^0,f,c
  4585  002432  3615               	rlcf	(___lodiv@quotient+4)^0,f,c
  4586  002434  3616               	rlcf	(___lodiv@quotient+5)^0,f,c
  4587  002436  3617               	rlcf	(___lodiv@quotient+6)^0,f,c
  4588  002438  3618               	rlcf	(___lodiv@quotient+7)^0,f,c
  4589  00243A  5009               	movf	___lodiv@divisor^0,w,c
  4590  00243C  5C01               	subwf	___lodiv@dividend^0,w,c
  4591  00243E  500A               	movf	(___lodiv@divisor+1)^0,w,c
  4592  002440  5802               	subwfb	(___lodiv@dividend+1)^0,w,c
  4593  002442  500B               	movf	(___lodiv@divisor+2)^0,w,c
  4594  002444  5803               	subwfb	(___lodiv@dividend+2)^0,w,c
  4595  002446  500C               	movf	(___lodiv@divisor+3)^0,w,c
  4596  002448  5804               	subwfb	(___lodiv@dividend+3)^0,w,c
  4597  00244A  500D               	movf	(___lodiv@divisor+4)^0,w,c
  4598  00244C  5805               	subwfb	(___lodiv@dividend+4)^0,w,c
  4599  00244E  500E               	movf	(___lodiv@divisor+5)^0,w,c
  4600  002450  5806               	subwfb	(___lodiv@dividend+5)^0,w,c
  4601  002452  500F               	movf	(___lodiv@divisor+6)^0,w,c
  4602  002454  5807               	subwfb	(___lodiv@dividend+6)^0,w,c
  4603  002456  5010               	movf	(___lodiv@divisor+7)^0,w,c
  4604  002458  5808               	subwfb	(___lodiv@dividend+7)^0,w,c
  4605  00245A  A0D8               	btfss	status,0,c
  4606  00245C  EF32  F012         	goto	u1691
  4607  002460  EF34  F012         	goto	u1690
  4608  002464                     u1691:
  4609  002464  EF45  F012         	goto	l2368
  4610  002468                     u1690:
  4611  002468  5009               	movf	___lodiv@divisor^0,w,c
  4612  00246A  5E01               	subwf	___lodiv@dividend^0,f,c
  4613  00246C  500A               	movf	(___lodiv@divisor+1)^0,w,c
  4614  00246E  5A02               	subwfb	(___lodiv@dividend+1)^0,f,c
  4615  002470  500B               	movf	(___lodiv@divisor+2)^0,w,c
  4616  002472  5A03               	subwfb	(___lodiv@dividend+2)^0,f,c
  4617  002474  500C               	movf	(___lodiv@divisor+3)^0,w,c
  4618  002476  5A04               	subwfb	(___lodiv@dividend+3)^0,f,c
  4619  002478  500D               	movf	(___lodiv@divisor+4)^0,w,c
  4620  00247A  5A05               	subwfb	(___lodiv@dividend+4)^0,f,c
  4621  00247C  500E               	movf	(___lodiv@divisor+5)^0,w,c
  4622  00247E  5A06               	subwfb	(___lodiv@dividend+5)^0,f,c
  4623  002480  500F               	movf	(___lodiv@divisor+6)^0,w,c
  4624  002482  5A07               	subwfb	(___lodiv@dividend+6)^0,f,c
  4625  002484  5010               	movf	(___lodiv@divisor+7)^0,w,c
  4626  002486  5A08               	subwfb	(___lodiv@dividend+7)^0,f,c
  4627  002488  8011               	bsf	___lodiv@quotient^0,0,c
  4628  00248A                     l2368:
  4629  00248A  90D8               	bcf	status,0,c
  4630  00248C  3210               	rrcf	(___lodiv@divisor+7)^0,f,c
  4631  00248E  320F               	rrcf	(___lodiv@divisor+6)^0,f,c
  4632  002490  320E               	rrcf	(___lodiv@divisor+5)^0,f,c
  4633  002492  320D               	rrcf	(___lodiv@divisor+4)^0,f,c
  4634  002494  320C               	rrcf	(___lodiv@divisor+3)^0,f,c
  4635  002496  320B               	rrcf	(___lodiv@divisor+2)^0,f,c
  4636  002498  320A               	rrcf	(___lodiv@divisor+1)^0,f,c
  4637  00249A  3209               	rrcf	___lodiv@divisor^0,f,c
  4638  00249C  2E19               	decfsz	___lodiv@counter^0,f,c
  4639  00249E  EF14  F012         	goto	l2360
  4640  0024A2                     l858:
  4641  0024A2  C011  F001         	movff	___lodiv@quotient,?___lodiv
  4642  0024A6  C012  F002         	movff	___lodiv@quotient+1,?___lodiv+1
  4643  0024AA  C013  F003         	movff	___lodiv@quotient+2,?___lodiv+2
  4644  0024AE  C014  F004         	movff	___lodiv@quotient+3,?___lodiv+3
  4645  0024B2  C015  F005         	movff	___lodiv@quotient+4,?___lodiv+4
  4646  0024B6  C016  F006         	movff	___lodiv@quotient+5,?___lodiv+5
  4647  0024BA  C017  F007         	movff	___lodiv@quotient+6,?___lodiv+6
  4648  0024BE  C018  F008         	movff	___lodiv@quotient+7,?___lodiv+7
  4649  0024C2  0012               	return		;funcret
  4650  0024C4                     __end_of___lodiv:
  4651                           	opt callstack 0
  4652                           
  4653 ;; *************** function _strncmp *****************
  4654 ;; Defined at:
  4655 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strncmp.c"
  4656 ;; Parameters:    Size  Location     Type
  4657 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  4658 ;;		 -> STR_16(4), STR_15(4), STR_14(4), STR_13(4), 
  4659 ;;		 -> STR_12(4), STR_11(4), STR_10(4), STR_9(4), 
  4660 ;;		 -> STR_8(4), STR_7(4), STR_6(4), STR_5(4), 
  4661 ;;		 -> STR_4(4), STR_3(4), STR_2(4), STR_1(4), 
  4662 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  4663 ;;		 -> STR_19(3), 
  4664 ;;  n               2    4[COMRAM] unsigned int 
  4665 ;; Auto vars:     Size  Location     Type
  4666 ;;  r               2    9[COMRAM] PTR const unsigned char 
  4667 ;;		 -> STR_19(3), 
  4668 ;;  l               2    7[COMRAM] PTR const unsigned char 
  4669 ;;		 -> STR_16(4), STR_15(4), STR_14(4), STR_13(4), 
  4670 ;;		 -> STR_12(4), STR_11(4), STR_10(4), STR_9(4), 
  4671 ;;		 -> STR_8(4), STR_7(4), STR_6(4), STR_5(4), 
  4672 ;;		 -> STR_4(4), STR_3(4), STR_2(4), STR_1(4), 
  4673 ;; Return value:  Size  Location     Type
  4674 ;;                  2    0[COMRAM] int 
  4675 ;; Registers used:
  4676 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  4677 ;; Tracked objects:
  4678 ;;		On entry : 0/0
  4679 ;;		On exit  : 0/0
  4680 ;;		Unchanged: 0/0
  4681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4682 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4683 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4684 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4685 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4686 ;;Total ram usage:       11 bytes
  4687 ;; Hardware stack levels used:    1
  4688 ;; This function calls:
  4689 ;;		Nothing
  4690 ;; This function is called by:
  4691 ;;		_vfpfcnvrt
  4692 ;; This function uses a non-reentrant model
  4693 ;;
  4694                           
  4695                           	psect	text12
  4696  0022DE                     __ptext12:
  4697                           	opt callstack 0
  4698  0022DE                     _strncmp:
  4699                           	opt callstack 27
  4700  0022DE  C001  F008         	movff	strncmp@_l,strncmp@l
  4701  0022E2  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  4702  0022E6  C003  F00A         	movff	strncmp@_r,strncmp@r
  4703  0022EA  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  4704  0022EE  0605               	decf	strncmp@n^0,f,c
  4705  0022F0  A0D8               	btfss	status,0,c
  4706  0022F2  0606               	decf	(strncmp@n+1)^0,f,c
  4707  0022F4  2805               	incf	strncmp@n^0,w,c
  4708  0022F6  E106               	bnz	u1801
  4709  0022F8  2806               	incf	(strncmp@n+1)^0,w,c
  4710  0022FA  A4D8               	btfss	status,2,c
  4711  0022FC  EF82  F011         	goto	u1801
  4712  002300  EF84  F011         	goto	u1800
  4713  002304                     u1801:
  4714  002304  EF91  F011         	goto	l2432
  4715  002308                     u1800:
  4716  002308  0E00               	movlw	0
  4717  00230A  6E02               	movwf	(?_strncmp+1)^0,c
  4718  00230C  0E00               	movlw	0
  4719  00230E  6E01               	movwf	?_strncmp^0,c
  4720  002310  EFE9  F011         	goto	l1131
  4721  002314                     l2430:
  4722  002314  4A08               	infsnz	strncmp@l^0,f,c
  4723  002316  2A09               	incf	(strncmp@l+1)^0,f,c
  4724  002318  4A0A               	infsnz	strncmp@r^0,f,c
  4725  00231A  2A0B               	incf	(strncmp@r+1)^0,f,c
  4726  00231C  0605               	decf	strncmp@n^0,f,c
  4727  00231E  A0D8               	btfss	status,0,c
  4728  002320  0606               	decf	(strncmp@n+1)^0,f,c
  4729  002322                     l2432:
  4730  002322  C008  FFF6         	movff	strncmp@l,tblptrl
  4731  002326  C009  FFF7         	movff	strncmp@l+1,tblptrh
  4732  00232A                     	if	0	;tblptru may be non-zero
  4733  00232A                     	endif
  4734  00232A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4735  00232A  0E00               	movlw	low (__mediumconst shr (0+16))
  4736  00232C  6EF8               	movwf	tblptru,c
  4737  00232E                     	endif
  4738  00232E  0008               	tblrd		*
  4739  002330  50F5               	movf	tablat,w,c
  4740  002332  0900               	iorlw	0
  4741  002334  B4D8               	btfsc	status,2,c
  4742  002336  EF9F  F011         	goto	u1811
  4743  00233A  EFA1  F011         	goto	u1810
  4744  00233E                     u1811:
  4745  00233E  EFD3  F011         	goto	l2440
  4746  002342                     u1810:
  4747  002342  C00A  FFF6         	movff	strncmp@r,tblptrl
  4748  002346  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  4749  00234A                     	if	0	;tblptru may be non-zero
  4750  00234A                     	endif
  4751  00234A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4752  00234A  0E00               	movlw	low (__mediumconst shr (0+16))
  4753  00234C  6EF8               	movwf	tblptru,c
  4754  00234E                     	endif
  4755  00234E  0008               	tblrd		*
  4756  002350  50F5               	movf	tablat,w,c
  4757  002352  0900               	iorlw	0
  4758  002354  B4D8               	btfsc	status,2,c
  4759  002356  EFAF  F011         	goto	u1821
  4760  00235A  EFB1  F011         	goto	u1820
  4761  00235E                     u1821:
  4762  00235E  EFD3  F011         	goto	l2440
  4763  002362                     u1820:
  4764  002362  5005               	movf	strncmp@n^0,w,c
  4765  002364  1006               	iorwf	(strncmp@n+1)^0,w,c
  4766  002366  B4D8               	btfsc	status,2,c
  4767  002368  EFB8  F011         	goto	u1831
  4768  00236C  EFBA  F011         	goto	u1830
  4769  002370                     u1831:
  4770  002370  EFD3  F011         	goto	l2440
  4771  002374                     u1830:
  4772  002374  C008  FFF6         	movff	strncmp@l,tblptrl
  4773  002378  C009  FFF7         	movff	strncmp@l+1,tblptrh
  4774  00237C                     	if	0	;tblptru may be non-zero
  4775  00237C                     	endif
  4776  00237C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4777  00237C  0E00               	movlw	low (__mediumconst shr (0+16))
  4778  00237E  6EF8               	movwf	tblptru,c
  4779  002380                     	endif
  4780  002380  0008               	tblrd		*
  4781  002382  CFF5 F007          	movff	tablat,??_strncmp
  4782  002386  C00A  FFF6         	movff	strncmp@r,tblptrl
  4783  00238A  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  4784  00238E                     	if	0	;tblptru may be non-zero
  4785  00238E                     	endif
  4786  00238E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4787  00238E  0E00               	movlw	low (__mediumconst shr (0+16))
  4788  002390  6EF8               	movwf	tblptru,c
  4789  002392                     	endif
  4790  002392  0008               	tblrd		*
  4791  002394  50F5               	movf	tablat,w,c
  4792  002396  1807               	xorwf	??_strncmp^0,w,c
  4793  002398  B4D8               	btfsc	status,2,c
  4794  00239A  EFD1  F011         	goto	u1841
  4795  00239E  EFD3  F011         	goto	u1840
  4796  0023A2                     u1841:
  4797  0023A2  EF8A  F011         	goto	l2430
  4798  0023A6                     u1840:
  4799  0023A6                     l2440:
  4800  0023A6  C008  FFF6         	movff	strncmp@l,tblptrl
  4801  0023AA  C009  FFF7         	movff	strncmp@l+1,tblptrh
  4802  0023AE                     	if	0	;tblptru may be non-zero
  4803  0023AE                     	endif
  4804  0023AE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4805  0023AE  0E00               	movlw	low (__mediumconst shr (0+16))
  4806  0023B0  6EF8               	movwf	tblptru,c
  4807  0023B2                     	endif
  4808  0023B2  0008               	tblrd		*
  4809  0023B4  CFF5 F007          	movff	tablat,??_strncmp
  4810  0023B8  C00A  FFF6         	movff	strncmp@r,tblptrl
  4811  0023BC  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  4812  0023C0                     	if	0	;tblptru may be non-zero
  4813  0023C0                     	endif
  4814  0023C0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4815  0023C0  0E00               	movlw	low (__mediumconst shr (0+16))
  4816  0023C2  6EF8               	movwf	tblptru,c
  4817  0023C4                     	endif
  4818  0023C4  0008               	tblrd		*
  4819  0023C6  50F5               	movf	tablat,w,c
  4820  0023C8  5C07               	subwf	??_strncmp^0,w,c
  4821  0023CA  6E01               	movwf	?_strncmp^0,c
  4822  0023CC  6A02               	clrf	(?_strncmp+1)^0,c
  4823  0023CE  A0D8               	btfss	status,0,c
  4824  0023D0  0602               	decf	(?_strncmp+1)^0,f,c
  4825  0023D2                     l1131:
  4826  0023D2  0012               	return		;funcret
  4827  0023D4                     __end_of_strncmp:
  4828                           	opt callstack 0
  4829                           
  4830 ;; *************** function _set_years *****************
  4831 ;; Defined at:
  4832 ;;		line 226 in file "timer.c"
  4833 ;; Parameters:    Size  Location     Type
  4834 ;;  year            1    wreg     unsigned char 
  4835 ;; Auto vars:     Size  Location     Type
  4836 ;;  year            1   10[COMRAM] unsigned char 
  4837 ;; Return value:  Size  Location     Type
  4838 ;;                  1    wreg      void 
  4839 ;; Registers used:
  4840 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4841 ;; Tracked objects:
  4842 ;;		On entry : 0/0
  4843 ;;		On exit  : 0/0
  4844 ;;		Unchanged: 0/0
  4845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4847 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4848 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4849 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4850 ;;Total ram usage:        3 bytes
  4851 ;; Hardware stack levels used:    1
  4852 ;; Hardware stack levels required when called:    1
  4853 ;; This function calls:
  4854 ;;		___awdiv
  4855 ;;		___awmod
  4856 ;;		_i2c_write
  4857 ;; This function is called by:
  4858 ;;		_main
  4859 ;; This function uses a non-reentrant model
  4860 ;;
  4861                           
  4862                           	psect	text13
  4863  002E64                     __ptext13:
  4864                           	opt callstack 0
  4865  002E64                     _set_years:
  4866                           	opt callstack 29
  4867                           
  4868                           ;incstack = 0
  4869                           ;set_years@year stored from wreg
  4870  002E64  6E0B               	movwf	set_years@year^0,c
  4871  002E66                     
  4872                           ;timer.c: 228: 
  4873  002E66  0E64               	movlw	100
  4874  002E68  600B               	cpfslt	set_years@year^0,c
  4875  002E6A  EF39  F017         	goto	u2411
  4876  002E6E  EF3B  F017         	goto	u2410
  4877  002E72                     u2411:
  4878  002E72  EF5D  F017         	goto	l90
  4879  002E76                     u2410:
  4880  002E76                     
  4881                           ;timer.c: 230: 
  4882  002E76  C00B  F001         	movff	set_years@year,___awmod@dividend
  4883  002E7A  6A02               	clrf	(___awmod@dividend+1)^0,c
  4884  002E7C  0E00               	movlw	0
  4885  002E7E  6E04               	movwf	(___awmod@divisor+1)^0,c
  4886  002E80  0E0A               	movlw	10
  4887  002E82  6E03               	movwf	___awmod@divisor^0,c
  4888  002E84  EC0E  F015         	call	___awmod	;wreg free
  4889  002E88  C001  F009         	movff	?___awmod,??_set_years
  4890  002E8C  C002  F00A         	movff	?___awmod+1,??_set_years+1
  4891  002E90  C00B  F001         	movff	set_years@year,___awdiv@dividend
  4892  002E94  6A02               	clrf	(___awdiv@dividend+1)^0,c
  4893  002E96  0E00               	movlw	0
  4894  002E98  6E04               	movwf	(___awdiv@divisor+1)^0,c
  4895  002E9A  0E0A               	movlw	10
  4896  002E9C  6E03               	movwf	___awdiv@divisor^0,c
  4897  002E9E  EC2F  F013         	call	___awdiv	;wreg free
  4898  002EA2  5001               	movf	?___awdiv^0,w,c
  4899  002EA4  0D10               	mullw	16
  4900  002EA6  50F3               	movf	243,w,c
  4901  002EA8  2409               	addwf	??_set_years^0,w,c
  4902  002EAA  6E0B               	movwf	set_years@year^0,c
  4903  002EAC                     
  4904                           ;timer.c: 233:  unsigned char Amin = i2c_read(104, 0x08);
  4905  002EAC  0E06               	movlw	6
  4906  002EAE  6E01               	movwf	i2c_write@registers^0,c
  4907  002EB0  C00B  F002         	movff	set_years@year,i2c_write@data
  4908  002EB4  0E68               	movlw	104
  4909  002EB6  EC91  F013         	call	_i2c_write
  4910  002EBA                     l90:
  4911  002EBA  0012               	return		;funcret
  4912  002EBC                     __end_of_set_years:
  4913                           	opt callstack 0
  4914                           
  4915 ;; *************** function _set_seconds *****************
  4916 ;; Defined at:
  4917 ;;		line 74 in file "timer.c"
  4918 ;; Parameters:    Size  Location     Type
  4919 ;;  sec             1    wreg     unsigned char 
  4920 ;; Auto vars:     Size  Location     Type
  4921 ;;  sec             1   11[COMRAM] unsigned char 
  4922 ;;  curr_sec        1   10[COMRAM] unsigned char 
  4923 ;; Return value:  Size  Location     Type
  4924 ;;                  1    wreg      void 
  4925 ;; Registers used:
  4926 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4927 ;; Tracked objects:
  4928 ;;		On entry : 0/0
  4929 ;;		On exit  : 0/0
  4930 ;;		Unchanged: 0/0
  4931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4933 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4934 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4935 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4936 ;;Total ram usage:        4 bytes
  4937 ;; Hardware stack levels used:    1
  4938 ;; Hardware stack levels required when called:    1
  4939 ;; This function calls:
  4940 ;;		___awdiv
  4941 ;;		___awmod
  4942 ;;		_i2c_read
  4943 ;;		_i2c_write
  4944 ;; This function is called by:
  4945 ;;		_main
  4946 ;; This function uses a non-reentrant model
  4947 ;;
  4948                           
  4949                           	psect	text14
  4950  002BF0                     __ptext14:
  4951                           	opt callstack 0
  4952  002BF0                     _set_seconds:
  4953                           	opt callstack 29
  4954                           
  4955                           ;incstack = 0
  4956                           ;set_seconds@sec stored from wreg
  4957  002BF0  6E0C               	movwf	set_seconds@sec^0,c
  4958  002BF2                     
  4959                           ;timer.c: 76:      min = ((min/10)<<4)+(min%10);
  4960  002BF2  0E3C               	movlw	60
  4961  002BF4  600C               	cpfslt	set_seconds@sec^0,c
  4962  002BF6  EFFF  F015         	goto	u2321
  4963  002BFA  EF01  F016         	goto	u2320
  4964  002BFE                     u2321:
  4965  002BFE  EF2C  F016         	goto	l48
  4966  002C02                     u2320:
  4967  002C02                     
  4968                           ;timer.c: 78: 
  4969  002C02  C00C  F001         	movff	set_seconds@sec,___awmod@dividend
  4970  002C06  6A02               	clrf	(___awmod@dividend+1)^0,c
  4971  002C08  0E00               	movlw	0
  4972  002C0A  6E04               	movwf	(___awmod@divisor+1)^0,c
  4973  002C0C  0E0A               	movlw	10
  4974  002C0E  6E03               	movwf	___awmod@divisor^0,c
  4975  002C10  EC0E  F015         	call	___awmod	;wreg free
  4976  002C14  C001  F009         	movff	?___awmod,??_set_seconds
  4977  002C18  C002  F00A         	movff	?___awmod+1,??_set_seconds+1
  4978  002C1C  C00C  F001         	movff	set_seconds@sec,___awdiv@dividend
  4979  002C20  6A02               	clrf	(___awdiv@dividend+1)^0,c
  4980  002C22  0E00               	movlw	0
  4981  002C24  6E04               	movwf	(___awdiv@divisor+1)^0,c
  4982  002C26  0E0A               	movlw	10
  4983  002C28  6E03               	movwf	___awdiv@divisor^0,c
  4984  002C2A  EC2F  F013         	call	___awdiv	;wreg free
  4985  002C2E  5001               	movf	?___awdiv^0,w,c
  4986  002C30  0D10               	mullw	16
  4987  002C32  50F3               	movf	243,w,c
  4988  002C34  2409               	addwf	??_set_seconds^0,w,c
  4989  002C36  6E0C               	movwf	set_seconds@sec^0,c
  4990  002C38                     
  4991                           ;timer.c: 81: }
  4992  002C38  0E00               	movlw	0
  4993  002C3A  6E01               	movwf	i2c_read@registers^0,c
  4994  002C3C  0E68               	movlw	104
  4995  002C3E  ECCB  F010         	call	_i2c_read
  4996  002C42  6E0B               	movwf	set_seconds@curr_sec^0,c
  4997  002C44                     
  4998                           ;timer.c: 84: 
  4999  002C44  0E80               	movlw	128
  5000  002C46  160B               	andwf	set_seconds@curr_sec^0,f,c
  5001  002C48                     
  5002                           ;timer.c: 87:  unsigned char hour = i2c_read(104, 0x02);
  5003  002C48  0E00               	movlw	0
  5004  002C4A  6E01               	movwf	i2c_write@registers^0,c
  5005  002C4C  500B               	movf	set_seconds@curr_sec^0,w,c
  5006  002C4E  100C               	iorwf	set_seconds@sec^0,w,c
  5007  002C50  6E02               	movwf	i2c_write@data^0,c
  5008  002C52  0E68               	movlw	104
  5009  002C54  EC91  F013         	call	_i2c_write
  5010  002C58                     l48:
  5011  002C58  0012               	return		;funcret
  5012  002C5A                     __end_of_set_seconds:
  5013                           	opt callstack 0
  5014                           
  5015 ;; *************** function _set_months *****************
  5016 ;; Defined at:
  5017 ;;		line 178 in file "timer.c"
  5018 ;; Parameters:    Size  Location     Type
  5019 ;;  month           1    wreg     unsigned char 
  5020 ;; Auto vars:     Size  Location     Type
  5021 ;;  month           1   10[COMRAM] unsigned char 
  5022 ;; Return value:  Size  Location     Type
  5023 ;;                  1    wreg      void 
  5024 ;; Registers used:
  5025 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5026 ;; Tracked objects:
  5027 ;;		On entry : 0/0
  5028 ;;		On exit  : 0/0
  5029 ;;		Unchanged: 0/0
  5030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5032 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5033 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5034 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5035 ;;Total ram usage:        3 bytes
  5036 ;; Hardware stack levels used:    1
  5037 ;; Hardware stack levels required when called:    1
  5038 ;; This function calls:
  5039 ;;		___awdiv
  5040 ;;		___awmod
  5041 ;;		_i2c_write
  5042 ;; This function is called by:
  5043 ;;		_main
  5044 ;; This function uses a non-reentrant model
  5045 ;;
  5046                           
  5047                           	psect	text15
  5048  002D2E                     __ptext15:
  5049                           	opt callstack 0
  5050  002D2E                     _set_months:
  5051                           	opt callstack 29
  5052                           
  5053                           ;incstack = 0
  5054                           ;set_months@month stored from wreg
  5055  002D2E  6E0B               	movwf	set_months@month^0,c
  5056  002D30                     
  5057                           ;timer.c: 180: 
  5058  002D30  500B               	movf	set_months@month^0,w,c
  5059  002D32  B4D8               	btfsc	status,2,c
  5060  002D34  EF9E  F016         	goto	u2371
  5061  002D38  EFA0  F016         	goto	u2370
  5062  002D3C                     u2371:
  5063  002D3C  EFCA  F016         	goto	l76
  5064  002D40                     u2370:
  5065  002D40  0E0D               	movlw	13
  5066  002D42  600B               	cpfslt	set_months@month^0,c
  5067  002D44  EFA6  F016         	goto	u2381
  5068  002D48  EFA8  F016         	goto	u2380
  5069  002D4C                     u2381:
  5070  002D4C  EFCA  F016         	goto	l76
  5071  002D50                     u2380:
  5072  002D50                     
  5073                           ;timer.c: 182: 
  5074  002D50  C00B  F001         	movff	set_months@month,___awmod@dividend
  5075  002D54  6A02               	clrf	(___awmod@dividend+1)^0,c
  5076  002D56  0E00               	movlw	0
  5077  002D58  6E04               	movwf	(___awmod@divisor+1)^0,c
  5078  002D5A  0E0A               	movlw	10
  5079  002D5C  6E03               	movwf	___awmod@divisor^0,c
  5080  002D5E  EC0E  F015         	call	___awmod	;wreg free
  5081  002D62  C001  F009         	movff	?___awmod,??_set_months
  5082  002D66  C002  F00A         	movff	?___awmod+1,??_set_months+1
  5083  002D6A  C00B  F001         	movff	set_months@month,___awdiv@dividend
  5084  002D6E  6A02               	clrf	(___awdiv@dividend+1)^0,c
  5085  002D70  0E00               	movlw	0
  5086  002D72  6E04               	movwf	(___awdiv@divisor+1)^0,c
  5087  002D74  0E0A               	movlw	10
  5088  002D76  6E03               	movwf	___awdiv@divisor^0,c
  5089  002D78  EC2F  F013         	call	___awdiv	;wreg free
  5090  002D7C  5001               	movf	?___awdiv^0,w,c
  5091  002D7E  0D10               	mullw	16
  5092  002D80  50F3               	movf	243,w,c
  5093  002D82  2409               	addwf	??_set_months^0,w,c
  5094  002D84  6E0B               	movwf	set_months@month^0,c
  5095  002D86                     
  5096                           ;timer.c: 185:  unsigned char year = i2c_read(104, 0x06);
  5097  002D86  0E05               	movlw	5
  5098  002D88  6E01               	movwf	i2c_write@registers^0,c
  5099  002D8A  C00B  F002         	movff	set_months@month,i2c_write@data
  5100  002D8E  0E68               	movlw	104
  5101  002D90  EC91  F013         	call	_i2c_write
  5102  002D94                     l76:
  5103  002D94  0012               	return		;funcret
  5104  002D96                     __end_of_set_months:
  5105                           	opt callstack 0
  5106                           
  5107 ;; *************** function _set_minutes *****************
  5108 ;; Defined at:
  5109 ;;		line 104 in file "timer.c"
  5110 ;; Parameters:    Size  Location     Type
  5111 ;;  min             1    wreg     unsigned char 
  5112 ;; Auto vars:     Size  Location     Type
  5113 ;;  min             1   10[COMRAM] unsigned char 
  5114 ;; Return value:  Size  Location     Type
  5115 ;;                  1    wreg      void 
  5116 ;; Registers used:
  5117 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5118 ;; Tracked objects:
  5119 ;;		On entry : 0/0
  5120 ;;		On exit  : 0/0
  5121 ;;		Unchanged: 0/0
  5122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5124 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5125 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5126 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5127 ;;Total ram usage:        3 bytes
  5128 ;; Hardware stack levels used:    1
  5129 ;; Hardware stack levels required when called:    1
  5130 ;; This function calls:
  5131 ;;		___awdiv
  5132 ;;		___awmod
  5133 ;;		_i2c_write
  5134 ;; This function is called by:
  5135 ;;		_main
  5136 ;; This function uses a non-reentrant model
  5137 ;;
  5138                           
  5139                           	psect	text16
  5140  002EBC                     __ptext16:
  5141                           	opt callstack 0
  5142  002EBC                     _set_minutes:
  5143                           	opt callstack 29
  5144                           
  5145                           ;incstack = 0
  5146                           ;set_minutes@min stored from wreg
  5147  002EBC  6E0B               	movwf	set_minutes@min^0,c
  5148  002EBE                     
  5149                           ;timer.c: 106:   curr_hour &= 0x40;
  5150  002EBE  0E3C               	movlw	60
  5151  002EC0  600B               	cpfslt	set_minutes@min^0,c
  5152  002EC2  EF65  F017         	goto	u2331
  5153  002EC6  EF67  F017         	goto	u2330
  5154  002ECA                     u2331:
  5155  002ECA  EF89  F017         	goto	l55
  5156  002ECE                     u2330:
  5157  002ECE                     
  5158                           ;timer.c: 108: 
  5159  002ECE  C00B  F001         	movff	set_minutes@min,___awmod@dividend
  5160  002ED2  6A02               	clrf	(___awmod@dividend+1)^0,c
  5161  002ED4  0E00               	movlw	0
  5162  002ED6  6E04               	movwf	(___awmod@divisor+1)^0,c
  5163  002ED8  0E0A               	movlw	10
  5164  002EDA  6E03               	movwf	___awmod@divisor^0,c
  5165  002EDC  EC0E  F015         	call	___awmod	;wreg free
  5166  002EE0  C001  F009         	movff	?___awmod,??_set_minutes
  5167  002EE4  C002  F00A         	movff	?___awmod+1,??_set_minutes+1
  5168  002EE8  C00B  F001         	movff	set_minutes@min,___awdiv@dividend
  5169  002EEC  6A02               	clrf	(___awdiv@dividend+1)^0,c
  5170  002EEE  0E00               	movlw	0
  5171  002EF0  6E04               	movwf	(___awdiv@divisor+1)^0,c
  5172  002EF2  0E0A               	movlw	10
  5173  002EF4  6E03               	movwf	___awdiv@divisor^0,c
  5174  002EF6  EC2F  F013         	call	___awdiv	;wreg free
  5175  002EFA  5001               	movf	?___awdiv^0,w,c
  5176  002EFC  0D10               	mullw	16
  5177  002EFE  50F3               	movf	243,w,c
  5178  002F00  2409               	addwf	??_set_minutes^0,w,c
  5179  002F02  6E0B               	movwf	set_minutes@min^0,c
  5180  002F04                     
  5181                           ;timer.c: 111: }
  5182  002F04  0E01               	movlw	1
  5183  002F06  6E01               	movwf	i2c_write@registers^0,c
  5184  002F08  C00B  F002         	movff	set_minutes@min,i2c_write@data
  5185  002F0C  0E68               	movlw	104
  5186  002F0E  EC91  F013         	call	_i2c_write
  5187  002F12                     l55:
  5188  002F12  0012               	return		;funcret
  5189  002F14                     __end_of_set_minutes:
  5190                           	opt callstack 0
  5191                           
  5192 ;; *************** function _set_hours *****************
  5193 ;; Defined at:
  5194 ;;		line 128 in file "timer.c"
  5195 ;; Parameters:    Size  Location     Type
  5196 ;;  hour            1    wreg     unsigned char 
  5197 ;; Auto vars:     Size  Location     Type
  5198 ;;  hour            1   11[COMRAM] unsigned char 
  5199 ;;  curr_hour       1   10[COMRAM] unsigned char 
  5200 ;; Return value:  Size  Location     Type
  5201 ;;                  1    wreg      void 
  5202 ;; Registers used:
  5203 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5204 ;; Tracked objects:
  5205 ;;		On entry : 0/0
  5206 ;;		On exit  : 0/0
  5207 ;;		Unchanged: 0/0
  5208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5210 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5211 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5212 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5213 ;;Total ram usage:        4 bytes
  5214 ;; Hardware stack levels used:    1
  5215 ;; Hardware stack levels required when called:    1
  5216 ;; This function calls:
  5217 ;;		___awdiv
  5218 ;;		___awmod
  5219 ;;		_i2c_read
  5220 ;;		_i2c_write
  5221 ;; This function is called by:
  5222 ;;		_main
  5223 ;; This function uses a non-reentrant model
  5224 ;;
  5225                           
  5226                           	psect	text17
  5227  002C5A                     __ptext17:
  5228                           	opt callstack 0
  5229  002C5A                     _set_hours:
  5230                           	opt callstack 29
  5231                           
  5232                           ;incstack = 0
  5233                           ;set_hours@hour stored from wreg
  5234  002C5A  6E0C               	movwf	set_hours@hour^0,c
  5235  002C5C                     
  5236                           ;timer.c: 130:  }
  5237  002C5C  0E18               	movlw	24
  5238  002C5E  600C               	cpfslt	set_hours@hour^0,c
  5239  002C60  EF34  F016         	goto	u2341
  5240  002C64  EF36  F016         	goto	u2340
  5241  002C68                     u2341:
  5242  002C68  EF61  F016         	goto	l62
  5243  002C6C                     u2340:
  5244  002C6C                     
  5245                           ;timer.c: 132: 
  5246  002C6C  C00C  F001         	movff	set_hours@hour,___awmod@dividend
  5247  002C70  6A02               	clrf	(___awmod@dividend+1)^0,c
  5248  002C72  0E00               	movlw	0
  5249  002C74  6E04               	movwf	(___awmod@divisor+1)^0,c
  5250  002C76  0E0A               	movlw	10
  5251  002C78  6E03               	movwf	___awmod@divisor^0,c
  5252  002C7A  EC0E  F015         	call	___awmod	;wreg free
  5253  002C7E  C001  F009         	movff	?___awmod,??_set_hours
  5254  002C82  C002  F00A         	movff	?___awmod+1,??_set_hours+1
  5255  002C86  C00C  F001         	movff	set_hours@hour,___awdiv@dividend
  5256  002C8A  6A02               	clrf	(___awdiv@dividend+1)^0,c
  5257  002C8C  0E00               	movlw	0
  5258  002C8E  6E04               	movwf	(___awdiv@divisor+1)^0,c
  5259  002C90  0E0A               	movlw	10
  5260  002C92  6E03               	movwf	___awdiv@divisor^0,c
  5261  002C94  EC2F  F013         	call	___awdiv	;wreg free
  5262  002C98  5001               	movf	?___awdiv^0,w,c
  5263  002C9A  0D10               	mullw	16
  5264  002C9C  50F3               	movf	243,w,c
  5265  002C9E  2409               	addwf	??_set_hours^0,w,c
  5266  002CA0  6E0C               	movwf	set_hours@hour^0,c
  5267  002CA2                     
  5268                           ;timer.c: 135: 
  5269  002CA2  0E02               	movlw	2
  5270  002CA4  6E01               	movwf	i2c_read@registers^0,c
  5271  002CA6  0E68               	movlw	104
  5272  002CA8  ECCB  F010         	call	_i2c_read
  5273  002CAC  6E0B               	movwf	set_hours@curr_hour^0,c
  5274  002CAE                     
  5275                           ;timer.c: 138: 
  5276  002CAE  0E40               	movlw	64
  5277  002CB0  160B               	andwf	set_hours@curr_hour^0,f,c
  5278  002CB2                     
  5279                           ;timer.c: 141: }
  5280  002CB2  0E02               	movlw	2
  5281  002CB4  6E01               	movwf	i2c_write@registers^0,c
  5282  002CB6  500B               	movf	set_hours@curr_hour^0,w,c
  5283  002CB8  100C               	iorwf	set_hours@hour^0,w,c
  5284  002CBA  6E02               	movwf	i2c_write@data^0,c
  5285  002CBC  0E68               	movlw	104
  5286  002CBE  EC91  F013         	call	_i2c_write
  5287  002CC2                     l62:
  5288  002CC2  0012               	return		;funcret
  5289  002CC4                     __end_of_set_hours:
  5290                           	opt callstack 0
  5291                           
  5292 ;; *************** function _set_days *****************
  5293 ;; Defined at:
  5294 ;;		line 202 in file "timer.c"
  5295 ;; Parameters:    Size  Location     Type
  5296 ;;  day             1    wreg     unsigned char 
  5297 ;; Auto vars:     Size  Location     Type
  5298 ;;  day             1   10[COMRAM] unsigned char 
  5299 ;; Return value:  Size  Location     Type
  5300 ;;                  1    wreg      void 
  5301 ;; Registers used:
  5302 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5303 ;; Tracked objects:
  5304 ;;		On entry : 0/0
  5305 ;;		On exit  : 0/0
  5306 ;;		Unchanged: 0/0
  5307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5309 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5310 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5311 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5312 ;;Total ram usage:        3 bytes
  5313 ;; Hardware stack levels used:    1
  5314 ;; Hardware stack levels required when called:    1
  5315 ;; This function calls:
  5316 ;;		___awdiv
  5317 ;;		___awmod
  5318 ;;		_i2c_write
  5319 ;; This function is called by:
  5320 ;;		_main
  5321 ;; This function uses a non-reentrant model
  5322 ;;
  5323                           
  5324                           	psect	text18
  5325  002D96                     __ptext18:
  5326                           	opt callstack 0
  5327  002D96                     _set_days:
  5328                           	opt callstack 29
  5329                           
  5330                           ;incstack = 0
  5331                           ;set_days@day stored from wreg
  5332  002D96  6E0B               	movwf	set_days@day^0,c
  5333  002D98                     
  5334                           ;timer.c: 204: 
  5335  002D98  500B               	movf	set_days@day^0,w,c
  5336  002D9A  B4D8               	btfsc	status,2,c
  5337  002D9C  EFD2  F016         	goto	u2391
  5338  002DA0  EFD4  F016         	goto	u2390
  5339  002DA4                     u2391:
  5340  002DA4  EFFE  F016         	goto	l83
  5341  002DA8                     u2390:
  5342  002DA8  0E20               	movlw	32
  5343  002DAA  600B               	cpfslt	set_days@day^0,c
  5344  002DAC  EFDA  F016         	goto	u2401
  5345  002DB0  EFDC  F016         	goto	u2400
  5346  002DB4                     u2401:
  5347  002DB4  EFFE  F016         	goto	l83
  5348  002DB8                     u2400:
  5349  002DB8                     
  5350                           ;timer.c: 206: 
  5351  002DB8  C00B  F001         	movff	set_days@day,___awmod@dividend
  5352  002DBC  6A02               	clrf	(___awmod@dividend+1)^0,c
  5353  002DBE  0E00               	movlw	0
  5354  002DC0  6E04               	movwf	(___awmod@divisor+1)^0,c
  5355  002DC2  0E0A               	movlw	10
  5356  002DC4  6E03               	movwf	___awmod@divisor^0,c
  5357  002DC6  EC0E  F015         	call	___awmod	;wreg free
  5358  002DCA  C001  F009         	movff	?___awmod,??_set_days
  5359  002DCE  C002  F00A         	movff	?___awmod+1,??_set_days+1
  5360  002DD2  C00B  F001         	movff	set_days@day,___awdiv@dividend
  5361  002DD6  6A02               	clrf	(___awdiv@dividend+1)^0,c
  5362  002DD8  0E00               	movlw	0
  5363  002DDA  6E04               	movwf	(___awdiv@divisor+1)^0,c
  5364  002DDC  0E0A               	movlw	10
  5365  002DDE  6E03               	movwf	___awdiv@divisor^0,c
  5366  002DE0  EC2F  F013         	call	___awdiv	;wreg free
  5367  002DE4  5001               	movf	?___awdiv^0,w,c
  5368  002DE6  0D10               	mullw	16
  5369  002DE8  50F3               	movf	243,w,c
  5370  002DEA  2409               	addwf	??_set_days^0,w,c
  5371  002DEC  6E0B               	movwf	set_days@day^0,c
  5372  002DEE                     
  5373                           ;timer.c: 209:  unsigned char Asec = i2c_read(104, 0x07);
  5374  002DEE  0E04               	movlw	4
  5375  002DF0  6E01               	movwf	i2c_write@registers^0,c
  5376  002DF2  C00B  F002         	movff	set_days@day,i2c_write@data
  5377  002DF6  0E68               	movlw	104
  5378  002DF8  EC91  F013         	call	_i2c_write
  5379  002DFC                     l83:
  5380  002DFC  0012               	return		;funcret
  5381  002DFE                     __end_of_set_days:
  5382                           	opt callstack 0
  5383                           
  5384 ;; *************** function _set_dayname *****************
  5385 ;; Defined at:
  5386 ;;		line 157 in file "timer.c"
  5387 ;; Parameters:    Size  Location     Type
  5388 ;;  name            1    wreg     unsigned char 
  5389 ;; Auto vars:     Size  Location     Type
  5390 ;;  name            1    3[COMRAM] unsigned char 
  5391 ;; Return value:  Size  Location     Type
  5392 ;;                  1    wreg      void 
  5393 ;; Registers used:
  5394 ;;		wreg, status,2, status,0, cstack
  5395 ;; Tracked objects:
  5396 ;;		On entry : 0/0
  5397 ;;		On exit  : 0/0
  5398 ;;		Unchanged: 0/0
  5399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5401 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5403 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5404 ;;Total ram usage:        1 bytes
  5405 ;; Hardware stack levels used:    1
  5406 ;; Hardware stack levels required when called:    1
  5407 ;; This function calls:
  5408 ;;		_i2c_write
  5409 ;; This function is called by:
  5410 ;;		_main
  5411 ;; This function uses a non-reentrant model
  5412 ;;
  5413                           
  5414                           	psect	text19
  5415  0030D4                     __ptext19:
  5416                           	opt callstack 0
  5417  0030D4                     _set_dayname:
  5418                           	opt callstack 29
  5419                           
  5420                           ;incstack = 0
  5421                           ;set_dayname@name stored from wreg
  5422  0030D4  6E04               	movwf	set_dayname@name^0,c
  5423  0030D6                     
  5424                           ;timer.c: 159: 
  5425  0030D6  5004               	movf	set_dayname@name^0,w,c
  5426  0030D8  B4D8               	btfsc	status,2,c
  5427  0030DA  EF71  F018         	goto	u2351
  5428  0030DE  EF73  F018         	goto	u2350
  5429  0030E2                     u2351:
  5430  0030E2  EF82  F018         	goto	l69
  5431  0030E6                     u2350:
  5432  0030E6  0E08               	movlw	8
  5433  0030E8  6004               	cpfslt	set_dayname@name^0,c
  5434  0030EA  EF79  F018         	goto	u2361
  5435  0030EE  EF7B  F018         	goto	u2360
  5436  0030F2                     u2361:
  5437  0030F2  EF82  F018         	goto	l69
  5438  0030F6                     u2360:
  5439  0030F6                     
  5440                           ;timer.c: 161:  unsigned char day = i2c_read(104, 0x04);
  5441  0030F6  0E03               	movlw	3
  5442  0030F8  6E01               	movwf	i2c_write@registers^0,c
  5443  0030FA  C004  F002         	movff	set_dayname@name,i2c_write@data
  5444  0030FE  0E68               	movlw	104
  5445  003100  EC91  F013         	call	_i2c_write
  5446  003104                     l69:
  5447  003104  0012               	return		;funcret
  5448  003106                     __end_of_set_dayname:
  5449                           	opt callstack 0
  5450                           
  5451 ;; *************** function _set_Aseconds *****************
  5452 ;; Defined at:
  5453 ;;		line 250 in file "timer.c"
  5454 ;; Parameters:    Size  Location     Type
  5455 ;;  Asec            1    wreg     unsigned char 
  5456 ;; Auto vars:     Size  Location     Type
  5457 ;;  Asec            1   10[COMRAM] unsigned char 
  5458 ;; Return value:  Size  Location     Type
  5459 ;;                  1    wreg      void 
  5460 ;; Registers used:
  5461 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5462 ;; Tracked objects:
  5463 ;;		On entry : 0/0
  5464 ;;		On exit  : 0/0
  5465 ;;		Unchanged: 0/0
  5466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5468 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5469 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5470 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5471 ;;Total ram usage:        3 bytes
  5472 ;; Hardware stack levels used:    1
  5473 ;; Hardware stack levels required when called:    1
  5474 ;; This function calls:
  5475 ;;		___awdiv
  5476 ;;		___awmod
  5477 ;;		_i2c_write
  5478 ;; This function is called by:
  5479 ;;		_main
  5480 ;; This function uses a non-reentrant model
  5481 ;;
  5482                           
  5483                           	psect	text20
  5484  002F14                     __ptext20:
  5485                           	opt callstack 0
  5486  002F14                     _set_Aseconds:
  5487                           	opt callstack 29
  5488                           
  5489                           ;incstack = 0
  5490                           ;set_Aseconds@Asec stored from wreg
  5491  002F14  6E0B               	movwf	set_Aseconds@Asec^0,c
  5492  002F16                     
  5493                           ;timer.c: 252: 
  5494  002F16  0E3C               	movlw	60
  5495  002F18  600B               	cpfslt	set_Aseconds@Asec^0,c
  5496  002F1A  EF91  F017         	goto	u2421
  5497  002F1E  EF93  F017         	goto	u2420
  5498  002F22                     u2421:
  5499  002F22  EFB5  F017         	goto	l97
  5500  002F26                     u2420:
  5501  002F26                     
  5502                           ;timer.c: 254: 
  5503  002F26  C00B  F001         	movff	set_Aseconds@Asec,___awmod@dividend
  5504  002F2A  6A02               	clrf	(___awmod@dividend+1)^0,c
  5505  002F2C  0E00               	movlw	0
  5506  002F2E  6E04               	movwf	(___awmod@divisor+1)^0,c
  5507  002F30  0E0A               	movlw	10
  5508  002F32  6E03               	movwf	___awmod@divisor^0,c
  5509  002F34  EC0E  F015         	call	___awmod	;wreg free
  5510  002F38  C001  F009         	movff	?___awmod,??_set_Aseconds
  5511  002F3C  C002  F00A         	movff	?___awmod+1,??_set_Aseconds+1
  5512  002F40  C00B  F001         	movff	set_Aseconds@Asec,___awdiv@dividend
  5513  002F44  6A02               	clrf	(___awdiv@dividend+1)^0,c
  5514  002F46  0E00               	movlw	0
  5515  002F48  6E04               	movwf	(___awdiv@divisor+1)^0,c
  5516  002F4A  0E0A               	movlw	10
  5517  002F4C  6E03               	movwf	___awdiv@divisor^0,c
  5518  002F4E  EC2F  F013         	call	___awdiv	;wreg free
  5519  002F52  5001               	movf	?___awdiv^0,w,c
  5520  002F54  0D10               	mullw	16
  5521  002F56  50F3               	movf	243,w,c
  5522  002F58  2409               	addwf	??_set_Aseconds^0,w,c
  5523  002F5A  6E0B               	movwf	set_Aseconds@Asec^0,c
  5524  002F5C                     
  5525                           ;timer.c: 257:  unsigned char Ahour = i2c_read(104, 0x09);
  5526  002F5C  0E07               	movlw	7
  5527  002F5E  6E01               	movwf	i2c_write@registers^0,c
  5528  002F60  C00B  F002         	movff	set_Aseconds@Asec,i2c_write@data
  5529  002F64  0E68               	movlw	104
  5530  002F66  EC91  F013         	call	_i2c_write
  5531  002F6A                     l97:
  5532  002F6A  0012               	return		;funcret
  5533  002F6C                     __end_of_set_Aseconds:
  5534                           	opt callstack 0
  5535                           
  5536 ;; *************** function _set_Aminutes *****************
  5537 ;; Defined at:
  5538 ;;		line 274 in file "timer.c"
  5539 ;; Parameters:    Size  Location     Type
  5540 ;;  Amin            1    wreg     unsigned char 
  5541 ;; Auto vars:     Size  Location     Type
  5542 ;;  Amin            1   10[COMRAM] unsigned char 
  5543 ;; Return value:  Size  Location     Type
  5544 ;;                  1    wreg      void 
  5545 ;; Registers used:
  5546 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5547 ;; Tracked objects:
  5548 ;;		On entry : 0/0
  5549 ;;		On exit  : 0/0
  5550 ;;		Unchanged: 0/0
  5551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5553 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5554 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5555 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5556 ;;Total ram usage:        3 bytes
  5557 ;; Hardware stack levels used:    1
  5558 ;; Hardware stack levels required when called:    1
  5559 ;; This function calls:
  5560 ;;		___awdiv
  5561 ;;		___awmod
  5562 ;;		_i2c_write
  5563 ;; This function is called by:
  5564 ;;		_main
  5565 ;; This function uses a non-reentrant model
  5566 ;;
  5567                           
  5568                           	psect	text21
  5569  002F6C                     __ptext21:
  5570                           	opt callstack 0
  5571  002F6C                     _set_Aminutes:
  5572                           	opt callstack 29
  5573                           
  5574                           ;incstack = 0
  5575                           ;set_Aminutes@Amin stored from wreg
  5576  002F6C  6E0B               	movwf	set_Aminutes@Amin^0,c
  5577  002F6E                     
  5578                           ;timer.c: 276:   Acurr_hour &= 0x40;
  5579  002F6E  0E3C               	movlw	60
  5580  002F70  600B               	cpfslt	set_Aminutes@Amin^0,c
  5581  002F72  EFBD  F017         	goto	u2431
  5582  002F76  EFBF  F017         	goto	u2430
  5583  002F7A                     u2431:
  5584  002F7A  EFE1  F017         	goto	l104
  5585  002F7E                     u2430:
  5586  002F7E                     
  5587                           ;timer.c: 278: 
  5588  002F7E  C00B  F001         	movff	set_Aminutes@Amin,___awmod@dividend
  5589  002F82  6A02               	clrf	(___awmod@dividend+1)^0,c
  5590  002F84  0E00               	movlw	0
  5591  002F86  6E04               	movwf	(___awmod@divisor+1)^0,c
  5592  002F88  0E0A               	movlw	10
  5593  002F8A  6E03               	movwf	___awmod@divisor^0,c
  5594  002F8C  EC0E  F015         	call	___awmod	;wreg free
  5595  002F90  C001  F009         	movff	?___awmod,??_set_Aminutes
  5596  002F94  C002  F00A         	movff	?___awmod+1,??_set_Aminutes+1
  5597  002F98  C00B  F001         	movff	set_Aminutes@Amin,___awdiv@dividend
  5598  002F9C  6A02               	clrf	(___awdiv@dividend+1)^0,c
  5599  002F9E  0E00               	movlw	0
  5600  002FA0  6E04               	movwf	(___awdiv@divisor+1)^0,c
  5601  002FA2  0E0A               	movlw	10
  5602  002FA4  6E03               	movwf	___awdiv@divisor^0,c
  5603  002FA6  EC2F  F013         	call	___awdiv	;wreg free
  5604  002FAA  5001               	movf	?___awdiv^0,w,c
  5605  002FAC  0D10               	mullw	16
  5606  002FAE  50F3               	movf	243,w,c
  5607  002FB0  2409               	addwf	??_set_Aminutes^0,w,c
  5608  002FB2  6E0B               	movwf	set_Aminutes@Amin^0,c
  5609  002FB4                     
  5610                           ;timer.c: 281: }
  5611  002FB4  0E08               	movlw	8
  5612  002FB6  6E01               	movwf	i2c_write@registers^0,c
  5613  002FB8  C00B  F002         	movff	set_Aminutes@Amin,i2c_write@data
  5614  002FBC  0E68               	movlw	104
  5615  002FBE  EC91  F013         	call	_i2c_write
  5616  002FC2                     l104:
  5617  002FC2  0012               	return		;funcret
  5618  002FC4                     __end_of_set_Aminutes:
  5619                           	opt callstack 0
  5620                           
  5621 ;; *************** function _set_Ahours *****************
  5622 ;; Defined at:
  5623 ;;		line 298 in file "timer.c"
  5624 ;; Parameters:    Size  Location     Type
  5625 ;;  Ahour           1    wreg     unsigned char 
  5626 ;; Auto vars:     Size  Location     Type
  5627 ;;  Ahour           1   11[COMRAM] unsigned char 
  5628 ;;  Acurr_hour      1   10[COMRAM] unsigned char 
  5629 ;; Return value:  Size  Location     Type
  5630 ;;                  1    wreg      void 
  5631 ;; Registers used:
  5632 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5633 ;; Tracked objects:
  5634 ;;		On entry : 0/0
  5635 ;;		On exit  : 0/0
  5636 ;;		Unchanged: 0/0
  5637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5639 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5640 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5641 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5642 ;;Total ram usage:        4 bytes
  5643 ;; Hardware stack levels used:    1
  5644 ;; Hardware stack levels required when called:    1
  5645 ;; This function calls:
  5646 ;;		___awdiv
  5647 ;;		___awmod
  5648 ;;		_i2c_read
  5649 ;;		_i2c_write
  5650 ;; This function is called by:
  5651 ;;		_main
  5652 ;; This function uses a non-reentrant model
  5653 ;;
  5654                           
  5655                           	psect	text22
  5656  002CC4                     __ptext22:
  5657                           	opt callstack 0
  5658  002CC4                     _set_Ahours:
  5659                           	opt callstack 29
  5660                           
  5661                           ;incstack = 0
  5662                           ;set_Ahours@Ahour stored from wreg
  5663  002CC4  6E0C               	movwf	set_Ahours@Ahour^0,c
  5664  002CC6                     
  5665                           ;timer.c: 300:     TRISAbits.TRISA3 = 1;
  5666  002CC6  0E18               	movlw	24
  5667  002CC8  600C               	cpfslt	set_Ahours@Ahour^0,c
  5668  002CCA  EF69  F016         	goto	u2441
  5669  002CCE  EF6B  F016         	goto	u2440
  5670  002CD2                     u2441:
  5671  002CD2  EF96  F016         	goto	l111
  5672  002CD6                     u2440:
  5673  002CD6                     
  5674                           ;timer.c: 302:     TRISAbits.TRISA5 = 1;
  5675  002CD6  C00C  F001         	movff	set_Ahours@Ahour,___awmod@dividend
  5676  002CDA  6A02               	clrf	(___awmod@dividend+1)^0,c
  5677  002CDC  0E00               	movlw	0
  5678  002CDE  6E04               	movwf	(___awmod@divisor+1)^0,c
  5679  002CE0  0E0A               	movlw	10
  5680  002CE2  6E03               	movwf	___awmod@divisor^0,c
  5681  002CE4  EC0E  F015         	call	___awmod	;wreg free
  5682  002CE8  C001  F009         	movff	?___awmod,??_set_Ahours
  5683  002CEC  C002  F00A         	movff	?___awmod+1,??_set_Ahours+1
  5684  002CF0  C00C  F001         	movff	set_Ahours@Ahour,___awdiv@dividend
  5685  002CF4  6A02               	clrf	(___awdiv@dividend+1)^0,c
  5686  002CF6  0E00               	movlw	0
  5687  002CF8  6E04               	movwf	(___awdiv@divisor+1)^0,c
  5688  002CFA  0E0A               	movlw	10
  5689  002CFC  6E03               	movwf	___awdiv@divisor^0,c
  5690  002CFE  EC2F  F013         	call	___awdiv	;wreg free
  5691  002D02  5001               	movf	?___awdiv^0,w,c
  5692  002D04  0D10               	mullw	16
  5693  002D06  50F3               	movf	243,w,c
  5694  002D08  2409               	addwf	??_set_Ahours^0,w,c
  5695  002D0A  6E0C               	movwf	set_Ahours@Ahour^0,c
  5696  002D0C                     
  5697                           ;timer.c: 305:     TRISCbits.TRISC0 = 0;
  5698  002D0C  0E09               	movlw	9
  5699  002D0E  6E01               	movwf	i2c_read@registers^0,c
  5700  002D10  0E68               	movlw	104
  5701  002D12  ECCB  F010         	call	_i2c_read
  5702  002D16  6E0B               	movwf	set_Ahours@Acurr_hour^0,c
  5703  002D18                     
  5704                           ;timer.c: 308:     PORTCbits.RC1 = 0;
  5705  002D18  0E40               	movlw	64
  5706  002D1A  160B               	andwf	set_Ahours@Acurr_hour^0,f,c
  5707  002D1C                     
  5708                           ;timer.c: 311:     TRISCbits.TRISC5 = 0;
  5709  002D1C  0E09               	movlw	9
  5710  002D1E  6E01               	movwf	i2c_write@registers^0,c
  5711  002D20  500B               	movf	set_Ahours@Acurr_hour^0,w,c
  5712  002D22  100C               	iorwf	set_Ahours@Ahour^0,w,c
  5713  002D24  6E02               	movwf	i2c_write@data^0,c
  5714  002D26  0E68               	movlw	104
  5715  002D28  EC91  F013         	call	_i2c_write
  5716  002D2C                     l111:
  5717  002D2C  0012               	return		;funcret
  5718  002D2E                     __end_of_set_Ahours:
  5719                           	opt callstack 0
  5720                           
  5721 ;; *************** function ___awmod *****************
  5722 ;; Defined at:
  5723 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  5724 ;; Parameters:    Size  Location     Type
  5725 ;;  dividend        2    0[COMRAM] int 
  5726 ;;  divisor         2    2[COMRAM] int 
  5727 ;; Auto vars:     Size  Location     Type
  5728 ;;  sign            1    5[COMRAM] unsigned char 
  5729 ;;  counter         1    4[COMRAM] unsigned char 
  5730 ;; Return value:  Size  Location     Type
  5731 ;;                  2    0[COMRAM] int 
  5732 ;; Registers used:
  5733 ;;		wreg, status,2, status,0
  5734 ;; Tracked objects:
  5735 ;;		On entry : 0/0
  5736 ;;		On exit  : 0/0
  5737 ;;		Unchanged: 0/0
  5738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5739 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5740 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5742 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5743 ;;Total ram usage:        6 bytes
  5744 ;; Hardware stack levels used:    1
  5745 ;; This function calls:
  5746 ;;		Nothing
  5747 ;; This function is called by:
  5748 ;;		_set_seconds
  5749 ;;		_set_minutes
  5750 ;;		_set_hours
  5751 ;;		_set_months
  5752 ;;		_set_days
  5753 ;;		_set_years
  5754 ;;		_set_Aseconds
  5755 ;;		_set_Aminutes
  5756 ;;		_set_Ahours
  5757 ;; This function uses a non-reentrant model
  5758 ;;
  5759                           
  5760                           	psect	text23
  5761  002A1C                     __ptext23:
  5762                           	opt callstack 0
  5763  002A1C                     ___awmod:
  5764                           	opt callstack 29
  5765  002A1C  0E00               	movlw	0
  5766  002A1E  6E06               	movwf	___awmod@sign^0,c
  5767  002A20  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  5768  002A22  EF17  F015         	goto	u2230
  5769  002A26  EF15  F015         	goto	u2231
  5770  002A2A                     u2231:
  5771  002A2A  EF1D  F015         	goto	l2644
  5772  002A2E                     u2230:
  5773  002A2E  6C01               	negf	___awmod@dividend^0,c
  5774  002A30  1E02               	comf	(___awmod@dividend+1)^0,f,c
  5775  002A32  B0D8               	btfsc	status,0,c
  5776  002A34  2A02               	incf	(___awmod@dividend+1)^0,f,c
  5777  002A36  0E01               	movlw	1
  5778  002A38  6E06               	movwf	___awmod@sign^0,c
  5779  002A3A                     l2644:
  5780  002A3A  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  5781  002A3C  EF24  F015         	goto	u2240
  5782  002A40  EF22  F015         	goto	u2241
  5783  002A44                     u2241:
  5784  002A44  EF28  F015         	goto	l2648
  5785  002A48                     u2240:
  5786  002A48  6C03               	negf	___awmod@divisor^0,c
  5787  002A4A  1E04               	comf	(___awmod@divisor+1)^0,f,c
  5788  002A4C  B0D8               	btfsc	status,0,c
  5789  002A4E  2A04               	incf	(___awmod@divisor+1)^0,f,c
  5790  002A50                     l2648:
  5791  002A50  5003               	movf	___awmod@divisor^0,w,c
  5792  002A52  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  5793  002A54  B4D8               	btfsc	status,2,c
  5794  002A56  EF2F  F015         	goto	u2251
  5795  002A5A  EF31  F015         	goto	u2250
  5796  002A5E                     u2251:
  5797  002A5E  EF55  F015         	goto	l2664
  5798  002A62                     u2250:
  5799  002A62  0E01               	movlw	1
  5800  002A64  6E05               	movwf	___awmod@counter^0,c
  5801  002A66  EF39  F015         	goto	l2654
  5802  002A6A                     l2652:
  5803  002A6A  90D8               	bcf	status,0,c
  5804  002A6C  3603               	rlcf	___awmod@divisor^0,f,c
  5805  002A6E  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  5806  002A70  2A05               	incf	___awmod@counter^0,f,c
  5807  002A72                     l2654:
  5808  002A72  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  5809  002A74  EF3E  F015         	goto	u2261
  5810  002A78  EF40  F015         	goto	u2260
  5811  002A7C                     u2261:
  5812  002A7C  EF35  F015         	goto	l2652
  5813  002A80                     u2260:
  5814  002A80                     l2656:
  5815  002A80  5003               	movf	___awmod@divisor^0,w,c
  5816  002A82  5C01               	subwf	___awmod@dividend^0,w,c
  5817  002A84  5004               	movf	(___awmod@divisor+1)^0,w,c
  5818  002A86  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  5819  002A88  A0D8               	btfss	status,0,c
  5820  002A8A  EF49  F015         	goto	u2271
  5821  002A8E  EF4B  F015         	goto	u2270
  5822  002A92                     u2271:
  5823  002A92  EF4F  F015         	goto	l2660
  5824  002A96                     u2270:
  5825  002A96  5003               	movf	___awmod@divisor^0,w,c
  5826  002A98  5E01               	subwf	___awmod@dividend^0,f,c
  5827  002A9A  5004               	movf	(___awmod@divisor+1)^0,w,c
  5828  002A9C  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  5829  002A9E                     l2660:
  5830  002A9E  90D8               	bcf	status,0,c
  5831  002AA0  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  5832  002AA2  3203               	rrcf	___awmod@divisor^0,f,c
  5833  002AA4  2E05               	decfsz	___awmod@counter^0,f,c
  5834  002AA6  EF40  F015         	goto	l2656
  5835  002AAA                     l2664:
  5836  002AAA  5006               	movf	___awmod@sign^0,w,c
  5837  002AAC  B4D8               	btfsc	status,2,c
  5838  002AAE  EF5B  F015         	goto	u2281
  5839  002AB2  EF5D  F015         	goto	u2280
  5840  002AB6                     u2281:
  5841  002AB6  EF61  F015         	goto	l2668
  5842  002ABA                     u2280:
  5843  002ABA  6C01               	negf	___awmod@dividend^0,c
  5844  002ABC  1E02               	comf	(___awmod@dividend+1)^0,f,c
  5845  002ABE  B0D8               	btfsc	status,0,c
  5846  002AC0  2A02               	incf	(___awmod@dividend+1)^0,f,c
  5847  002AC2                     l2668:
  5848  002AC2  C001  F001         	movff	___awmod@dividend,?___awmod
  5849  002AC6  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  5850  002ACA  0012               	return		;funcret
  5851  002ACC                     __end_of___awmod:
  5852                           	opt callstack 0
  5853                           
  5854 ;; *************** function ___awdiv *****************
  5855 ;; Defined at:
  5856 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
  5857 ;; Parameters:    Size  Location     Type
  5858 ;;  dividend        2    0[COMRAM] int 
  5859 ;;  divisor         2    2[COMRAM] int 
  5860 ;; Auto vars:     Size  Location     Type
  5861 ;;  quotient        2    6[COMRAM] int 
  5862 ;;  sign            1    5[COMRAM] unsigned char 
  5863 ;;  counter         1    4[COMRAM] unsigned char 
  5864 ;; Return value:  Size  Location     Type
  5865 ;;                  2    0[COMRAM] int 
  5866 ;; Registers used:
  5867 ;;		wreg, status,2, status,0
  5868 ;; Tracked objects:
  5869 ;;		On entry : 0/0
  5870 ;;		On exit  : 0/0
  5871 ;;		Unchanged: 0/0
  5872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5873 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5874 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5876 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5877 ;;Total ram usage:        8 bytes
  5878 ;; Hardware stack levels used:    1
  5879 ;; This function calls:
  5880 ;;		Nothing
  5881 ;; This function is called by:
  5882 ;;		_set_seconds
  5883 ;;		_set_minutes
  5884 ;;		_set_hours
  5885 ;;		_set_months
  5886 ;;		_set_days
  5887 ;;		_set_years
  5888 ;;		_set_Aseconds
  5889 ;;		_set_Aminutes
  5890 ;;		_set_Ahours
  5891 ;; This function uses a non-reentrant model
  5892 ;;
  5893                           
  5894                           	psect	text24
  5895  00265E                     __ptext24:
  5896                           	opt callstack 0
  5897  00265E                     ___awdiv:
  5898                           	opt callstack 29
  5899  00265E  0E00               	movlw	0
  5900  002660  6E06               	movwf	___awdiv@sign^0,c
  5901  002662  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  5902  002664  EF38  F013         	goto	u2170
  5903  002668  EF36  F013         	goto	u2171
  5904  00266C                     u2171:
  5905  00266C  EF3E  F013         	goto	l2600
  5906  002670                     u2170:
  5907  002670  6C03               	negf	___awdiv@divisor^0,c
  5908  002672  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  5909  002674  B0D8               	btfsc	status,0,c
  5910  002676  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  5911  002678  0E01               	movlw	1
  5912  00267A  6E06               	movwf	___awdiv@sign^0,c
  5913  00267C                     l2600:
  5914  00267C  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  5915  00267E  EF45  F013         	goto	u2180
  5916  002682  EF43  F013         	goto	u2181
  5917  002686                     u2181:
  5918  002686  EF4B  F013         	goto	l2606
  5919  00268A                     u2180:
  5920  00268A  6C01               	negf	___awdiv@dividend^0,c
  5921  00268C  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  5922  00268E  B0D8               	btfsc	status,0,c
  5923  002690  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  5924  002692  0E01               	movlw	1
  5925  002694  1A06               	xorwf	___awdiv@sign^0,f,c
  5926  002696                     l2606:
  5927  002696  0E00               	movlw	0
  5928  002698  6E08               	movwf	(___awdiv@quotient+1)^0,c
  5929  00269A  0E00               	movlw	0
  5930  00269C  6E07               	movwf	___awdiv@quotient^0,c
  5931  00269E  5003               	movf	___awdiv@divisor^0,w,c
  5932  0026A0  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  5933  0026A2  B4D8               	btfsc	status,2,c
  5934  0026A4  EF56  F013         	goto	u2191
  5935  0026A8  EF58  F013         	goto	u2190
  5936  0026AC                     u2191:
  5937  0026AC  EF80  F013         	goto	l2628
  5938  0026B0                     u2190:
  5939  0026B0  0E01               	movlw	1
  5940  0026B2  6E05               	movwf	___awdiv@counter^0,c
  5941  0026B4  EF60  F013         	goto	l2614
  5942  0026B8                     l2612:
  5943  0026B8  90D8               	bcf	status,0,c
  5944  0026BA  3603               	rlcf	___awdiv@divisor^0,f,c
  5945  0026BC  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  5946  0026BE  2A05               	incf	___awdiv@counter^0,f,c
  5947  0026C0                     l2614:
  5948  0026C0  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  5949  0026C2  EF65  F013         	goto	u2201
  5950  0026C6  EF67  F013         	goto	u2200
  5951  0026CA                     u2201:
  5952  0026CA  EF5C  F013         	goto	l2612
  5953  0026CE                     u2200:
  5954  0026CE                     l2616:
  5955  0026CE  90D8               	bcf	status,0,c
  5956  0026D0  3607               	rlcf	___awdiv@quotient^0,f,c
  5957  0026D2  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  5958  0026D4  5003               	movf	___awdiv@divisor^0,w,c
  5959  0026D6  5C01               	subwf	___awdiv@dividend^0,w,c
  5960  0026D8  5004               	movf	(___awdiv@divisor+1)^0,w,c
  5961  0026DA  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  5962  0026DC  A0D8               	btfss	status,0,c
  5963  0026DE  EF73  F013         	goto	u2211
  5964  0026E2  EF75  F013         	goto	u2210
  5965  0026E6                     u2211:
  5966  0026E6  EF7A  F013         	goto	l2624
  5967  0026EA                     u2210:
  5968  0026EA  5003               	movf	___awdiv@divisor^0,w,c
  5969  0026EC  5E01               	subwf	___awdiv@dividend^0,f,c
  5970  0026EE  5004               	movf	(___awdiv@divisor+1)^0,w,c
  5971  0026F0  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  5972  0026F2  8007               	bsf	___awdiv@quotient^0,0,c
  5973  0026F4                     l2624:
  5974  0026F4  90D8               	bcf	status,0,c
  5975  0026F6  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  5976  0026F8  3203               	rrcf	___awdiv@divisor^0,f,c
  5977  0026FA  2E05               	decfsz	___awdiv@counter^0,f,c
  5978  0026FC  EF67  F013         	goto	l2616
  5979  002700                     l2628:
  5980  002700  5006               	movf	___awdiv@sign^0,w,c
  5981  002702  B4D8               	btfsc	status,2,c
  5982  002704  EF86  F013         	goto	u2221
  5983  002708  EF88  F013         	goto	u2220
  5984  00270C                     u2221:
  5985  00270C  EF8C  F013         	goto	l2632
  5986  002710                     u2220:
  5987  002710  6C07               	negf	___awdiv@quotient^0,c
  5988  002712  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  5989  002714  B0D8               	btfsc	status,0,c
  5990  002716  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  5991  002718                     l2632:
  5992  002718  C007  F001         	movff	___awdiv@quotient,?___awdiv
  5993  00271C  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  5994  002720  0012               	return		;funcret
  5995  002722                     __end_of___awdiv:
  5996                           	opt callstack 0
  5997                           
  5998 ;; *************** function _rtc_init *****************
  5999 ;; Defined at:
  6000 ;;		line 39 in file "timer.c"
  6001 ;; Parameters:    Size  Location     Type
  6002 ;;		None
  6003 ;; Auto vars:     Size  Location     Type
  6004 ;;  i               2    7[COMRAM] unsigned int 
  6005 ;;  hour            1   10[COMRAM] unsigned char 
  6006 ;;  sec             1    9[COMRAM] unsigned char 
  6007 ;; Return value:  Size  Location     Type
  6008 ;;                  1    wreg      void 
  6009 ;; Registers used:
  6010 ;;		wreg, status,2, status,0, cstack
  6011 ;; Tracked objects:
  6012 ;;		On entry : 0/0
  6013 ;;		On exit  : 0/0
  6014 ;;		Unchanged: 0/0
  6015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6017 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6019 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6020 ;;Total ram usage:        4 bytes
  6021 ;; Hardware stack levels used:    1
  6022 ;; Hardware stack levels required when called:    1
  6023 ;; This function calls:
  6024 ;;		_i2c_read
  6025 ;;		_i2c_write
  6026 ;; This function is called by:
  6027 ;;		_main
  6028 ;; This function uses a non-reentrant model
  6029 ;;
  6030                           
  6031                           	psect	text25
  6032  002B70                     __ptext25:
  6033                           	opt callstack 0
  6034  002B70                     _rtc_init:
  6035                           	opt callstack 29
  6036  002B70                     
  6037                           ;timer.c: 41: 
  6038  002B70  0E00               	movlw	0
  6039  002B72  6E01               	movwf	i2c_read@registers^0,c
  6040  002B74  0E68               	movlw	104
  6041  002B76  ECCB  F010         	call	_i2c_read
  6042  002B7A  6E0A               	movwf	rtc_init@sec^0,c
  6043  002B7C                     
  6044                           ;timer.c: 44:  if (sec<60) {
  6045  002B7C  AE0A               	btfss	rtc_init@sec^0,7,c
  6046  002B7E  EFC3  F015         	goto	u2291
  6047  002B82  EFC5  F015         	goto	u2290
  6048  002B86                     u2291:
  6049  002B86  EFE2  F015         	goto	l2688
  6050  002B8A                     u2290:
  6051  002B8A                     
  6052                           ;timer.c: 45: 
  6053  002B8A  0E00               	movlw	0
  6054  002B8C  6E01               	movwf	i2c_write@registers^0,c
  6055  002B8E  500A               	movf	rtc_init@sec^0,w,c
  6056  002B90  0B7F               	andlw	127
  6057  002B92  6E02               	movwf	i2c_write@data^0,c
  6058  002B94  0E68               	movlw	104
  6059  002B96  EC91  F013         	call	_i2c_write
  6060  002B9A                     
  6061                           ;timer.c: 47: 
  6062  002B9A  0E00               	movlw	0
  6063  002B9C  6E09               	movwf	(rtc_init@i+1)^0,c
  6064  002B9E  0E00               	movlw	0
  6065  002BA0  6E08               	movwf	rtc_init@i^0,c
  6066  002BA2                     l2684:
  6067                           
  6068                           ;timer.c: 48: 
  6069  002BA2  0EC8               	movlw	200
  6070  002BA4                     u3137:
  6071  002BA4  D000               	nop2	
  6072  002BA6  2EE8               	decfsz	wreg,f,c
  6073  002BA8  D7FD               	bra	u3137
  6074  002BAA                     
  6075                           ;timer.c: 49:   unsigned char curr_sec = i2c_read(104, 0x00);
  6076  002BAA  4A08               	infsnz	rtc_init@i^0,f,c
  6077  002BAC  2A09               	incf	(rtc_init@i+1)^0,f,c
  6078  002BAE  0EF4               	movlw	244
  6079  002BB0  5C08               	subwf	rtc_init@i^0,w,c
  6080  002BB2  0E01               	movlw	1
  6081  002BB4  5809               	subwfb	(rtc_init@i+1)^0,w,c
  6082  002BB6  A0D8               	btfss	status,0,c
  6083  002BB8  EFE0  F015         	goto	u2301
  6084  002BBC  EFE2  F015         	goto	u2300
  6085  002BC0                     u2301:
  6086  002BC0  EFD1  F015         	goto	l2684
  6087  002BC4                     u2300:
  6088  002BC4                     l2688:
  6089                           
  6090                           ;timer.c: 53: 
  6091  002BC4  0E02               	movlw	2
  6092  002BC6  6E01               	movwf	i2c_read@registers^0,c
  6093  002BC8  0E68               	movlw	104
  6094  002BCA  ECCB  F010         	call	_i2c_read
  6095  002BCE  6E0B               	movwf	rtc_init@hour^0,c
  6096  002BD0                     
  6097                           ;timer.c: 56:  }
  6098  002BD0  AC0B               	btfss	rtc_init@hour^0,6,c
  6099  002BD2  EFED  F015         	goto	u2311
  6100  002BD6  EFEF  F015         	goto	u2310
  6101  002BDA                     u2311:
  6102  002BDA  EFF7  F015         	goto	l41
  6103  002BDE                     u2310:
  6104  002BDE                     
  6105                           ;timer.c: 57: }
  6106  002BDE  0E02               	movlw	2
  6107  002BE0  6E01               	movwf	i2c_write@registers^0,c
  6108  002BE2  500B               	movf	rtc_init@hour^0,w,c
  6109  002BE4  0BBF               	andlw	191
  6110  002BE6  6E02               	movwf	i2c_write@data^0,c
  6111  002BE8  0E68               	movlw	104
  6112  002BEA  EC91  F013         	call	_i2c_write
  6113  002BEE                     l41:
  6114  002BEE  0012               	return		;funcret
  6115  002BF0                     __end_of_rtc_init:
  6116                           	opt callstack 0
  6117                           
  6118 ;; *************** function _i2c_write *****************
  6119 ;; Defined at:
  6120 ;;		line 103 in file "i2c.c"
  6121 ;; Parameters:    Size  Location     Type
  6122 ;;  address         1    wreg     unsigned char 
  6123 ;;  registers       1    0[COMRAM] unsigned char 
  6124 ;;  data            1    1[COMRAM] unsigned char 
  6125 ;; Auto vars:     Size  Location     Type
  6126 ;;  address         1    2[COMRAM] unsigned char 
  6127 ;; Return value:  Size  Location     Type
  6128 ;;                  1    wreg      void 
  6129 ;; Registers used:
  6130 ;;		wreg, status,2, status,0
  6131 ;; Tracked objects:
  6132 ;;		On entry : 0/0
  6133 ;;		On exit  : 0/0
  6134 ;;		Unchanged: 0/0
  6135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6136 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6137 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6139 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6140 ;;Total ram usage:        3 bytes
  6141 ;; Hardware stack levels used:    1
  6142 ;; This function calls:
  6143 ;;		Nothing
  6144 ;; This function is called by:
  6145 ;;		_rtc_init
  6146 ;;		_set_seconds
  6147 ;;		_set_minutes
  6148 ;;		_set_hours
  6149 ;;		_set_dayname
  6150 ;;		_set_months
  6151 ;;		_set_days
  6152 ;;		_set_years
  6153 ;;		_set_Aseconds
  6154 ;;		_set_Aminutes
  6155 ;;		_set_Ahours
  6156 ;;		_main
  6157 ;; This function uses a non-reentrant model
  6158 ;;
  6159                           
  6160                           	psect	text26
  6161  002722                     __ptext26:
  6162                           	opt callstack 0
  6163  002722                     _i2c_write:
  6164                           	opt callstack 29
  6165                           
  6166                           ;incstack = 0
  6167                           ;i2c_write@address stored from wreg
  6168  002722  6E03               	movwf	i2c_write@address^0,c
  6169  002724                     
  6170                           ;i2c.c: 104:  SSP1CON2bits.SEN = 1;
  6171  002724  8097               	bsf	151,0,c	;volatile
  6172  002726                     l330:
  6173  002726  B097               	btfsc	151,0,c	;volatile
  6174  002728  EF98  F013         	goto	u2051
  6175  00272C  EF9A  F013         	goto	u2050
  6176  002730                     u2051:
  6177  002730  EF93  F013         	goto	l330
  6178  002734                     u2050:
  6179  002734                     
  6180                           ;i2c.c: 107:  SSP1BUF = (address << 1) & 0xfe;
  6181  002734  5003               	movf	i2c_write@address^0,w,c
  6182  002736  2403               	addwf	i2c_write@address^0,w,c
  6183  002738  0BFE               	andlw	254
  6184  00273A  6E92               	movwf	146,c	;volatile
  6185  00273C                     l333:
  6186  00273C  B495               	btfsc	149,2,c	;volatile
  6187  00273E  EFA3  F013         	goto	u2061
  6188  002742  EFA5  F013         	goto	u2060
  6189  002746                     u2061:
  6190  002746  EF9E  F013         	goto	l333
  6191  00274A                     u2060:
  6192  00274A                     
  6193                           ;i2c.c: 112:  if (SSP1CON2bits.ACKSTAT == 1) {
  6194  00274A  AC97               	btfss	151,6,c	;volatile
  6195  00274C  EFAA  F013         	goto	u2071
  6196  002750  EFAC  F013         	goto	u2070
  6197  002754                     u2071:
  6198  002754  EFB6  F013         	goto	l336
  6199  002758                     u2070:
  6200  002758                     
  6201                           ;i2c.c: 113:   SSP1CON2bits.PEN = 1;
  6202  002758  8497               	bsf	151,2,c	;volatile
  6203  00275A                     l337:
  6204  00275A  B497               	btfsc	151,2,c	;volatile
  6205  00275C  EFB2  F013         	goto	u2081
  6206  002760  EFB4  F013         	goto	u2080
  6207  002764                     u2081:
  6208  002764  EFAD  F013         	goto	l337
  6209  002768                     u2080:
  6210  002768  EFF2  F013         	goto	l340
  6211  00276C                     l336:
  6212                           
  6213                           ;i2c.c: 118:  SSP1BUF = registers;
  6214  00276C  C001  FF92         	movff	i2c_write@registers,3986	;volatile
  6215  002770                     l341:
  6216  002770  B495               	btfsc	149,2,c	;volatile
  6217  002772  EFBD  F013         	goto	u2091
  6218  002776  EFBF  F013         	goto	u2090
  6219  00277A                     u2091:
  6220  00277A  EFB8  F013         	goto	l341
  6221  00277E                     u2090:
  6222  00277E                     
  6223                           ;i2c.c: 123:  if (SSP1CON2bits.ACKSTAT == 1) {
  6224  00277E  AC97               	btfss	151,6,c	;volatile
  6225  002780  EFC4  F013         	goto	u2101
  6226  002784  EFC6  F013         	goto	u2100
  6227  002788                     u2101:
  6228  002788  EFD0  F013         	goto	l344
  6229  00278C                     u2100:
  6230  00278C                     
  6231                           ;i2c.c: 124:   SSP1CON2bits.PEN = 1;
  6232  00278C  8497               	bsf	151,2,c	;volatile
  6233  00278E                     l345:
  6234  00278E  B497               	btfsc	151,2,c	;volatile
  6235  002790  EFCC  F013         	goto	u2111
  6236  002794  EFCE  F013         	goto	u2110
  6237  002798                     u2111:
  6238  002798  EFC7  F013         	goto	l345
  6239  00279C                     u2110:
  6240  00279C  EFF2  F013         	goto	l340
  6241  0027A0                     l344:
  6242                           
  6243                           ;i2c.c: 129:  SSP1BUF = data;
  6244  0027A0  C002  FF92         	movff	i2c_write@data,3986	;volatile
  6245  0027A4                     l348:
  6246  0027A4  B495               	btfsc	149,2,c	;volatile
  6247  0027A6  EFD7  F013         	goto	u2121
  6248  0027AA  EFD9  F013         	goto	u2120
  6249  0027AE                     u2121:
  6250  0027AE  EFD2  F013         	goto	l348
  6251  0027B2                     u2120:
  6252  0027B2                     
  6253                           ;i2c.c: 133:  if (SSP1CON2bits.ACKSTAT == 1) {
  6254  0027B2  AC97               	btfss	151,6,c	;volatile
  6255  0027B4  EFDE  F013         	goto	u2131
  6256  0027B8  EFE0  F013         	goto	u2130
  6257  0027BC                     u2131:
  6258  0027BC  EFEA  F013         	goto	l351
  6259  0027C0                     u2130:
  6260  0027C0                     
  6261                           ;i2c.c: 134:   SSP1CON2bits.PEN = 1;
  6262  0027C0  8497               	bsf	151,2,c	;volatile
  6263  0027C2                     l352:
  6264  0027C2  B497               	btfsc	151,2,c	;volatile
  6265  0027C4  EFE6  F013         	goto	u2141
  6266  0027C8  EFE8  F013         	goto	u2140
  6267  0027CC                     u2141:
  6268  0027CC  EFE1  F013         	goto	l352
  6269  0027D0                     u2140:
  6270  0027D0  EFF2  F013         	goto	l340
  6271  0027D4                     l351:
  6272                           
  6273                           ;i2c.c: 139:     SSP1CON2bits.PEN = 1;
  6274  0027D4  8497               	bsf	151,2,c	;volatile
  6275  0027D6                     l355:
  6276  0027D6  B497               	btfsc	151,2,c	;volatile
  6277  0027D8  EFF0  F013         	goto	u2151
  6278  0027DC  EFF2  F013         	goto	u2150
  6279  0027E0                     u2151:
  6280  0027E0  EFEB  F013         	goto	l355
  6281  0027E4                     u2150:
  6282  0027E4                     l340:
  6283  0027E4  0012               	return		;funcret
  6284  0027E6                     __end_of_i2c_write:
  6285                           	opt callstack 0
  6286                           
  6287 ;; *************** function _lcd_init *****************
  6288 ;; Defined at:
  6289 ;;		line 61 in file "lcd.c"
  6290 ;; Parameters:    Size  Location     Type
  6291 ;;		None
  6292 ;; Auto vars:     Size  Location     Type
  6293 ;;		None
  6294 ;; Return value:  Size  Location     Type
  6295 ;;                  1    wreg      void 
  6296 ;; Registers used:
  6297 ;;		wreg, status,2, status,0, cstack
  6298 ;; Tracked objects:
  6299 ;;		On entry : 0/0
  6300 ;;		On exit  : 0/0
  6301 ;;		Unchanged: 0/0
  6302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6306 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6307 ;;Total ram usage:        0 bytes
  6308 ;; Hardware stack levels used:    1
  6309 ;; Hardware stack levels required when called:    1
  6310 ;; This function calls:
  6311 ;;		_lcd_command
  6312 ;; This function is called by:
  6313 ;;		_main
  6314 ;; This function uses a non-reentrant model
  6315 ;;
  6316                           
  6317                           	psect	text27
  6318  0031B8                     __ptext27:
  6319                           	opt callstack 0
  6320  0031B8                     _lcd_init:
  6321                           	opt callstack 29
  6322  0031B8                     
  6323                           ;lcd.c: 62:  lcd_command(0x33);
  6324  0031B8  0E33               	movlw	51
  6325  0031BA  EC54  F014         	call	_lcd_command
  6326                           
  6327                           ;lcd.c: 63:  lcd_command(0x32);
  6328  0031BE  0E32               	movlw	50
  6329  0031C0  EC54  F014         	call	_lcd_command
  6330                           
  6331                           ;lcd.c: 64:  lcd_command(0x2C);
  6332  0031C4  0E2C               	movlw	44
  6333  0031C6  EC54  F014         	call	_lcd_command
  6334                           
  6335                           ;lcd.c: 65:  lcd_command(0x0C);
  6336  0031CA  0E0C               	movlw	12
  6337  0031CC  EC54  F014         	call	_lcd_command
  6338                           
  6339                           ;lcd.c: 66:  lcd_command(0x01);
  6340  0031D0  0E01               	movlw	1
  6341  0031D2  EC54  F014         	call	_lcd_command
  6342  0031D6  0012               	return		;funcret
  6343  0031D8                     __end_of_lcd_init:
  6344                           	opt callstack 0
  6345                           
  6346 ;; *************** function _lcd_command *****************
  6347 ;; Defined at:
  6348 ;;		line 13 in file "lcd.c"
  6349 ;; Parameters:    Size  Location     Type
  6350 ;;  x               1    wreg     unsigned char 
  6351 ;; Auto vars:     Size  Location     Type
  6352 ;;  x               1    2[COMRAM] unsigned char 
  6353 ;;  temp            1    1[COMRAM] unsigned char 
  6354 ;; Return value:  Size  Location     Type
  6355 ;;                  1    wreg      void 
  6356 ;; Registers used:
  6357 ;;		wreg, status,2, status,0, cstack
  6358 ;; Tracked objects:
  6359 ;;		On entry : 0/0
  6360 ;;		On exit  : 0/0
  6361 ;;		Unchanged: 0/0
  6362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6364 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6365 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6366 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6367 ;;Total ram usage:        3 bytes
  6368 ;; Hardware stack levels used:    1
  6369 ;; This function calls:
  6370 ;;		Nothing
  6371 ;; This function is called by:
  6372 ;;		_main
  6373 ;;		_lcd_init
  6374 ;; This function uses a non-reentrant model
  6375 ;;
  6376                           
  6377                           	psect	text28
  6378  0028A8                     __ptext28:
  6379                           	opt callstack 0
  6380  0028A8                     _lcd_command:
  6381                           	opt callstack 29
  6382                           
  6383                           ;incstack = 0
  6384                           ;lcd_command@x stored from wreg
  6385  0028A8  6E03               	movwf	lcd_command@x^0,c
  6386  0028AA                     
  6387                           ;lcd.c: 14:  char temp;;lcd.c: 17:  TRISDbits.TRISD0 = 0;
  6388  0028AA  908B               	bcf	139,0,c	;volatile
  6389                           
  6390                           ;lcd.c: 18:  TRISDbits.TRISD1 = 0;
  6391  0028AC  928B               	bcf	139,1,c	;volatile
  6392                           
  6393                           ;lcd.c: 19:  TRISDbits.TRISD2 = 0;
  6394  0028AE  948B               	bcf	139,2,c	;volatile
  6395                           
  6396                           ;lcd.c: 20:  TRISDbits.TRISD3 = 0;
  6397  0028B0  968B               	bcf	139,3,c	;volatile
  6398                           
  6399                           ;lcd.c: 21:  TRISDbits.TRISD4 = 0;
  6400  0028B2  988B               	bcf	139,4,c	;volatile
  6401                           
  6402                           ;lcd.c: 22:  TRISDbits.TRISD7 = 0;
  6403  0028B4  9E8B               	bcf	139,7,c	;volatile
  6404  0028B6                     
  6405                           ;lcd.c: 24:  temp = x;
  6406  0028B6  C003  F002         	movff	lcd_command@x,lcd_command@temp
  6407  0028BA                     
  6408                           ;lcd.c: 27:     PORTD = 0;
  6409  0028BA  0E00               	movlw	0
  6410  0028BC  6E90               	movwf	144,c	;volatile
  6411  0028BE                     
  6412                           ;lcd.c: 28:     _delay((unsigned long)((5)*(4000000/4000.0)));
  6413  0028BE  0E07               	movlw	7
  6414  0028C0  6E01               	movwf	??_lcd_command^0,c
  6415  0028C2  0E7D               	movlw	125
  6416  0028C4                     u3147:
  6417  0028C4  2EE8               	decfsz	wreg,f,c
  6418  0028C6  D7FE               	bra	u3147
  6419  0028C8  2E01               	decfsz	??_lcd_command^0,f,c
  6420  0028CA  D7FC               	bra	u3147
  6421  0028CC  F000               	nop	
  6422  0028CE                     
  6423                           ;lcd.c: 30:  x = x >>4;
  6424  0028CE  3803               	swapf	lcd_command@x^0,w,c
  6425  0028D0  0B0F               	andlw	15
  6426  0028D2  6E03               	movwf	lcd_command@x^0,c
  6427  0028D4                     
  6428                           ;lcd.c: 31:  x = x & 0xF;
  6429  0028D4  5003               	movf	lcd_command@x^0,w,c
  6430  0028D6  0B0F               	andlw	15
  6431  0028D8  6E03               	movwf	lcd_command@x^0,c
  6432  0028DA                     
  6433                           ;lcd.c: 32:  x = x | 0x80;
  6434  0028DA  5003               	movf	lcd_command@x^0,w,c
  6435  0028DC  0980               	iorlw	128
  6436  0028DE  6E03               	movwf	lcd_command@x^0,c
  6437  0028E0                     
  6438                           ;lcd.c: 33:  PORTD = x;
  6439  0028E0  C003  FF90         	movff	lcd_command@x,3984	;volatile
  6440  0028E4                     
  6441                           ;lcd.c: 34:  _delay((unsigned long)((5)*(4000000/4000.0)));
  6442  0028E4  0E07               	movlw	7
  6443  0028E6  6E01               	movwf	??_lcd_command^0,c
  6444  0028E8  0E7D               	movlw	125
  6445  0028EA                     u3157:
  6446  0028EA  2EE8               	decfsz	wreg,f,c
  6447  0028EC  D7FE               	bra	u3157
  6448  0028EE  2E01               	decfsz	??_lcd_command^0,f,c
  6449  0028F0  D7FC               	bra	u3157
  6450  0028F2  F000               	nop	
  6451  0028F4                     
  6452                           ;lcd.c: 36:  x = x & 0xF;
  6453  0028F4  5003               	movf	lcd_command@x^0,w,c
  6454  0028F6  0B0F               	andlw	15
  6455  0028F8  6E03               	movwf	lcd_command@x^0,c
  6456  0028FA                     
  6457                           ;lcd.c: 37:  PORTD = x;
  6458  0028FA  C003  FF90         	movff	lcd_command@x,3984	;volatile
  6459  0028FE                     
  6460                           ;lcd.c: 38:  _delay((unsigned long)((5)*(4000000/4000.0)));
  6461  0028FE  0E07               	movlw	7
  6462  002900  6E01               	movwf	??_lcd_command^0,c
  6463  002902  0E7D               	movlw	125
  6464  002904                     u3167:
  6465  002904  2EE8               	decfsz	wreg,f,c
  6466  002906  D7FE               	bra	u3167
  6467  002908  2E01               	decfsz	??_lcd_command^0,f,c
  6468  00290A  D7FC               	bra	u3167
  6469  00290C  F000               	nop	
  6470  00290E                     
  6471                           ;lcd.c: 40:  PORTD = 0;
  6472  00290E  0E00               	movlw	0
  6473  002910  6E90               	movwf	144,c	;volatile
  6474  002912                     
  6475                           ;lcd.c: 41:  _delay((unsigned long)((5)*(4000000/4000.0)));
  6476  002912  0E07               	movlw	7
  6477  002914  6E01               	movwf	??_lcd_command^0,c
  6478  002916  0E7D               	movlw	125
  6479  002918                     u3177:
  6480  002918  2EE8               	decfsz	wreg,f,c
  6481  00291A  D7FE               	bra	u3177
  6482  00291C  2E01               	decfsz	??_lcd_command^0,f,c
  6483  00291E  D7FC               	bra	u3177
  6484  002920  F000               	nop	
  6485  002922                     
  6486                           ;lcd.c: 44:  x = temp;
  6487  002922  C002  F003         	movff	lcd_command@temp,lcd_command@x
  6488  002926                     
  6489                           ;lcd.c: 45:  x = x & 0xF;
  6490  002926  5003               	movf	lcd_command@x^0,w,c
  6491  002928  0B0F               	andlw	15
  6492  00292A  6E03               	movwf	lcd_command@x^0,c
  6493  00292C                     
  6494                           ;lcd.c: 46:  x = x | 0x80;
  6495  00292C  5003               	movf	lcd_command@x^0,w,c
  6496  00292E  0980               	iorlw	128
  6497  002930  6E03               	movwf	lcd_command@x^0,c
  6498  002932                     
  6499                           ;lcd.c: 47:  PORTD = x;
  6500  002932  C003  FF90         	movff	lcd_command@x,3984	;volatile
  6501  002936                     
  6502                           ;lcd.c: 48:  _delay((unsigned long)((5)*(4000000/4000.0)));
  6503  002936  0E07               	movlw	7
  6504  002938  6E01               	movwf	??_lcd_command^0,c
  6505  00293A  0E7D               	movlw	125
  6506  00293C                     u3187:
  6507  00293C  2EE8               	decfsz	wreg,f,c
  6508  00293E  D7FE               	bra	u3187
  6509  002940  2E01               	decfsz	??_lcd_command^0,f,c
  6510  002942  D7FC               	bra	u3187
  6511  002944  F000               	nop	
  6512  002946                     
  6513                           ;lcd.c: 50:  x = x & 0xF;
  6514  002946  5003               	movf	lcd_command@x^0,w,c
  6515  002948  0B0F               	andlw	15
  6516  00294A  6E03               	movwf	lcd_command@x^0,c
  6517  00294C                     
  6518                           ;lcd.c: 51:  PORTD = x;
  6519  00294C  C003  FF90         	movff	lcd_command@x,3984	;volatile
  6520  002950                     
  6521                           ;lcd.c: 52:  _delay((unsigned long)((5)*(4000000/4000.0)));
  6522  002950  0E07               	movlw	7
  6523  002952  6E01               	movwf	??_lcd_command^0,c
  6524  002954  0E7D               	movlw	125
  6525  002956                     u3197:
  6526  002956  2EE8               	decfsz	wreg,f,c
  6527  002958  D7FE               	bra	u3197
  6528  00295A  2E01               	decfsz	??_lcd_command^0,f,c
  6529  00295C  D7FC               	bra	u3197
  6530  00295E  F000               	nop	
  6531  002960  0012               	return		;funcret
  6532  002962                     __end_of_lcd_command:
  6533                           	opt callstack 0
  6534                           
  6535 ;; *************** function _lcd_char *****************
  6536 ;; Defined at:
  6537 ;;		line 75 in file "lcd.c"
  6538 ;; Parameters:    Size  Location     Type
  6539 ;;  x               1    wreg     unsigned char 
  6540 ;; Auto vars:     Size  Location     Type
  6541 ;;  x               1    2[COMRAM] unsigned char 
  6542 ;;  temp            1    1[COMRAM] unsigned char 
  6543 ;; Return value:  Size  Location     Type
  6544 ;;                  1    wreg      void 
  6545 ;; Registers used:
  6546 ;;		wreg, status,2, status,0, cstack
  6547 ;; Tracked objects:
  6548 ;;		On entry : 0/0
  6549 ;;		On exit  : 0/0
  6550 ;;		Unchanged: 0/0
  6551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6553 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6554 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6555 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6556 ;;Total ram usage:        3 bytes
  6557 ;; Hardware stack levels used:    1
  6558 ;; This function calls:
  6559 ;;		Nothing
  6560 ;; This function is called by:
  6561 ;;		_main
  6562 ;; This function uses a non-reentrant model
  6563 ;;
  6564                           
  6565                           	psect	text29
  6566  002962                     __ptext29:
  6567                           	opt callstack 0
  6568  002962                     _lcd_char:
  6569                           	opt callstack 30
  6570                           
  6571                           ;incstack = 0
  6572                           ;lcd_char@x stored from wreg
  6573  002962  6E03               	movwf	lcd_char@x^0,c
  6574  002964                     
  6575                           ;lcd.c: 76:  char temp;;lcd.c: 79:  TRISDbits.TRISD0 = 0;
  6576  002964  908B               	bcf	139,0,c	;volatile
  6577                           
  6578                           ;lcd.c: 80:  TRISDbits.TRISD1 = 0;
  6579  002966  928B               	bcf	139,1,c	;volatile
  6580                           
  6581                           ;lcd.c: 81:  TRISDbits.TRISD2 = 0;
  6582  002968  948B               	bcf	139,2,c	;volatile
  6583                           
  6584                           ;lcd.c: 82:  TRISDbits.TRISD3 = 0;
  6585  00296A  968B               	bcf	139,3,c	;volatile
  6586                           
  6587                           ;lcd.c: 83:  TRISDbits.TRISD4 = 0;
  6588  00296C  988B               	bcf	139,4,c	;volatile
  6589                           
  6590                           ;lcd.c: 84:  TRISDbits.TRISD7 = 0;
  6591  00296E  9E8B               	bcf	139,7,c	;volatile
  6592  002970                     
  6593                           ;lcd.c: 86:  temp = x;
  6594  002970  C003  F002         	movff	lcd_char@x,lcd_char@temp
  6595  002974                     
  6596                           ;lcd.c: 89:  PORTD = 0x10;
  6597  002974  0E10               	movlw	16
  6598  002976  6E90               	movwf	144,c	;volatile
  6599  002978                     
  6600                           ;lcd.c: 90:  _delay((unsigned long)((5)*(4000000/4000.0)));
  6601  002978  0E07               	movlw	7
  6602  00297A  6E01               	movwf	??_lcd_char^0,c
  6603  00297C  0E7D               	movlw	125
  6604  00297E                     u3207:
  6605  00297E  2EE8               	decfsz	wreg,f,c
  6606  002980  D7FE               	bra	u3207
  6607  002982  2E01               	decfsz	??_lcd_char^0,f,c
  6608  002984  D7FC               	bra	u3207
  6609  002986  F000               	nop	
  6610  002988                     
  6611                           ;lcd.c: 92:  x = x >>4;
  6612  002988  3803               	swapf	lcd_char@x^0,w,c
  6613  00298A  0B0F               	andlw	15
  6614  00298C  6E03               	movwf	lcd_char@x^0,c
  6615  00298E                     
  6616                           ;lcd.c: 93:  x = x & 0xF;
  6617  00298E  5003               	movf	lcd_char@x^0,w,c
  6618  002990  0B0F               	andlw	15
  6619  002992  6E03               	movwf	lcd_char@x^0,c
  6620  002994                     
  6621                           ;lcd.c: 94:  x = x | 0x90;
  6622  002994  5003               	movf	lcd_char@x^0,w,c
  6623  002996  0990               	iorlw	144
  6624  002998  6E03               	movwf	lcd_char@x^0,c
  6625  00299A                     
  6626                           ;lcd.c: 95:  PORTD = x;
  6627  00299A  C003  FF90         	movff	lcd_char@x,3984	;volatile
  6628  00299E                     
  6629                           ;lcd.c: 96:  _delay((unsigned long)((5)*(4000000/4000.0)));
  6630  00299E  0E07               	movlw	7
  6631  0029A0  6E01               	movwf	??_lcd_char^0,c
  6632  0029A2  0E7D               	movlw	125
  6633  0029A4                     u3217:
  6634  0029A4  2EE8               	decfsz	wreg,f,c
  6635  0029A6  D7FE               	bra	u3217
  6636  0029A8  2E01               	decfsz	??_lcd_char^0,f,c
  6637  0029AA  D7FC               	bra	u3217
  6638  0029AC  F000               	nop	
  6639  0029AE                     
  6640                           ;lcd.c: 98:  x = x & 0x1F;
  6641  0029AE  5003               	movf	lcd_char@x^0,w,c
  6642  0029B0  0B1F               	andlw	31
  6643  0029B2  6E03               	movwf	lcd_char@x^0,c
  6644  0029B4                     
  6645                           ;lcd.c: 99:  PORTD = x;
  6646  0029B4  C003  FF90         	movff	lcd_char@x,3984	;volatile
  6647  0029B8                     
  6648                           ;lcd.c: 100:  _delay((unsigned long)((5)*(4000000/4000.0)));
  6649  0029B8  0E07               	movlw	7
  6650  0029BA  6E01               	movwf	??_lcd_char^0,c
  6651  0029BC  0E7D               	movlw	125
  6652  0029BE                     u3227:
  6653  0029BE  2EE8               	decfsz	wreg,f,c
  6654  0029C0  D7FE               	bra	u3227
  6655  0029C2  2E01               	decfsz	??_lcd_char^0,f,c
  6656  0029C4  D7FC               	bra	u3227
  6657  0029C6  F000               	nop	
  6658  0029C8                     
  6659                           ;lcd.c: 102:  PORTD = 0x10;
  6660  0029C8  0E10               	movlw	16
  6661  0029CA  6E90               	movwf	144,c	;volatile
  6662  0029CC                     
  6663                           ;lcd.c: 103:  _delay((unsigned long)((5)*(4000000/4000.0)));
  6664  0029CC  0E07               	movlw	7
  6665  0029CE  6E01               	movwf	??_lcd_char^0,c
  6666  0029D0  0E7D               	movlw	125
  6667  0029D2                     u3237:
  6668  0029D2  2EE8               	decfsz	wreg,f,c
  6669  0029D4  D7FE               	bra	u3237
  6670  0029D6  2E01               	decfsz	??_lcd_char^0,f,c
  6671  0029D8  D7FC               	bra	u3237
  6672  0029DA  F000               	nop	
  6673  0029DC                     
  6674                           ;lcd.c: 106:  x = temp;
  6675  0029DC  C002  F003         	movff	lcd_char@temp,lcd_char@x
  6676  0029E0                     
  6677                           ;lcd.c: 107:  x = x & 0xF;
  6678  0029E0  5003               	movf	lcd_char@x^0,w,c
  6679  0029E2  0B0F               	andlw	15
  6680  0029E4  6E03               	movwf	lcd_char@x^0,c
  6681  0029E6                     
  6682                           ;lcd.c: 108:  x = x | 0x90;
  6683  0029E6  5003               	movf	lcd_char@x^0,w,c
  6684  0029E8  0990               	iorlw	144
  6685  0029EA  6E03               	movwf	lcd_char@x^0,c
  6686  0029EC                     
  6687                           ;lcd.c: 109:  PORTD = x;
  6688  0029EC  C003  FF90         	movff	lcd_char@x,3984	;volatile
  6689  0029F0                     
  6690                           ;lcd.c: 110:  _delay((unsigned long)((5)*(4000000/4000.0)));
  6691  0029F0  0E07               	movlw	7
  6692  0029F2  6E01               	movwf	??_lcd_char^0,c
  6693  0029F4  0E7D               	movlw	125
  6694  0029F6                     u3247:
  6695  0029F6  2EE8               	decfsz	wreg,f,c
  6696  0029F8  D7FE               	bra	u3247
  6697  0029FA  2E01               	decfsz	??_lcd_char^0,f,c
  6698  0029FC  D7FC               	bra	u3247
  6699  0029FE  F000               	nop	
  6700  002A00                     
  6701                           ;lcd.c: 112:  x = x & 0x1F;
  6702  002A00  5003               	movf	lcd_char@x^0,w,c
  6703  002A02  0B1F               	andlw	31
  6704  002A04  6E03               	movwf	lcd_char@x^0,c
  6705  002A06                     
  6706                           ;lcd.c: 113:  PORTD = x;
  6707  002A06  C003  FF90         	movff	lcd_char@x,3984	;volatile
  6708  002A0A                     
  6709                           ;lcd.c: 114:  _delay((unsigned long)((5)*(4000000/4000.0)));
  6710  002A0A  0E07               	movlw	7
  6711  002A0C  6E01               	movwf	??_lcd_char^0,c
  6712  002A0E  0E7D               	movlw	125
  6713  002A10                     u3257:
  6714  002A10  2EE8               	decfsz	wreg,f,c
  6715  002A12  D7FE               	bra	u3257
  6716  002A14  2E01               	decfsz	??_lcd_char^0,f,c
  6717  002A16  D7FC               	bra	u3257
  6718  002A18  F000               	nop	
  6719  002A1A  0012               	return		;funcret
  6720  002A1C                     __end_of_lcd_char:
  6721                           	opt callstack 0
  6722                           
  6723 ;; *************** function _i2c_init *****************
  6724 ;; Defined at:
  6725 ;;		line 10 in file "i2c.c"
  6726 ;; Parameters:    Size  Location     Type
  6727 ;;		None
  6728 ;; Auto vars:     Size  Location     Type
  6729 ;;		None
  6730 ;; Return value:  Size  Location     Type
  6731 ;;                  1    wreg      void 
  6732 ;; Registers used:
  6733 ;;		wreg, status,2
  6734 ;; Tracked objects:
  6735 ;;		On entry : 0/0
  6736 ;;		On exit  : 0/0
  6737 ;;		Unchanged: 0/0
  6738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6742 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6743 ;;Total ram usage:        0 bytes
  6744 ;; Hardware stack levels used:    1
  6745 ;; This function calls:
  6746 ;;		Nothing
  6747 ;; This function is called by:
  6748 ;;		_main
  6749 ;; This function uses a non-reentrant model
  6750 ;;
  6751                           
  6752                           	psect	text30
  6753  003106                     __ptext30:
  6754                           	opt callstack 0
  6755  003106                     _i2c_init:
  6756                           	opt callstack 30
  6757  003106                     
  6758                           ;i2c.c: 12:     TRISCbits.TRISC3 = 1;
  6759  003106  868A               	bsf	138,3,c	;volatile
  6760                           
  6761                           ;i2c.c: 13:     TRISCbits.TRISC4 = 1;
  6762  003108  888A               	bsf	138,4,c	;volatile
  6763  00310A                     
  6764                           ;i2c.c: 17:     SSP1CLKPPS = 0x13;
  6765  00310A  0E13               	movlw	19
  6766  00310C  010E               	movlb	14	; () banked
  6767  00310E  6FB7               	movwf	183,b	;volatile
  6768                           
  6769                           ;i2c.c: 18:     SSP1DATPPS = 0x14;
  6770  003110  0E14               	movlw	20
  6771  003112  6FB8               	movwf	184,b	;volatile
  6772                           
  6773                           ;i2c.c: 20:     RC4PPS = 0x10;
  6774  003114  0E10               	movlw	16
  6775  003116  6FFB               	movwf	251,b	;volatile
  6776                           
  6777                           ;i2c.c: 21:     RC3PPS = 0x0F;
  6778  003118  0E0F               	movlw	15
  6779  00311A  6FFA               	movwf	250,b	;volatile
  6780                           
  6781                           ;i2c.c: 24:     SSP1ADD = 12;
  6782  00311C  0E0C               	movlw	12
  6783  00311E  6E93               	movwf	147,c	;volatile
  6784                           
  6785                           ;i2c.c: 26:     SSP1CON1bits.SSPM = 8;
  6786  003120  5096               	movf	150,w,c	;volatile
  6787  003122  0BF0               	andlw	-16
  6788  003124  0908               	iorlw	8
  6789  003126  6E96               	movwf	150,c	;volatile
  6790  003128                     
  6791                           ; BSR set to: 14
  6792                           ;i2c.c: 28:     SSP1CON1bits.WCOL = 0;
  6793  003128  9E96               	bcf	150,7,c	;volatile
  6794  00312A                     
  6795                           ; BSR set to: 14
  6796                           ;i2c.c: 29:     SSP1CON1bits.SSPOV = 0;
  6797  00312A  9C96               	bcf	150,6,c	;volatile
  6798  00312C                     
  6799                           ; BSR set to: 14
  6800                           ;i2c.c: 30:     SSP1CON1bits.SSPEN = 1;
  6801  00312C  8A96               	bsf	150,5,c	;volatile
  6802  00312E                     
  6803                           ; BSR set to: 14
  6804  00312E  0012               	return		;funcret
  6805  003130                     __end_of_i2c_init:
  6806                           	opt callstack 0
  6807                           
  6808 ;; *************** function _get_years *****************
  6809 ;; Defined at:
  6810 ;;		line 216 in file "timer.c"
  6811 ;; Parameters:    Size  Location     Type
  6812 ;;		None
  6813 ;; Auto vars:     Size  Location     Type
  6814 ;;  year            1    8[COMRAM] unsigned char 
  6815 ;; Return value:  Size  Location     Type
  6816 ;;                  1    wreg      unsigned char 
  6817 ;; Registers used:
  6818 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6819 ;; Tracked objects:
  6820 ;;		On entry : 0/0
  6821 ;;		On exit  : 0/0
  6822 ;;		Unchanged: 0/0
  6823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6825 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6826 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6827 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6828 ;;Total ram usage:        2 bytes
  6829 ;; Hardware stack levels used:    1
  6830 ;; Hardware stack levels required when called:    1
  6831 ;; This function calls:
  6832 ;;		_i2c_read
  6833 ;; This function is called by:
  6834 ;;		_main
  6835 ;; This function uses a non-reentrant model
  6836 ;;
  6837                           
  6838                           	psect	text31
  6839  0031D8                     __ptext31:
  6840                           	opt callstack 0
  6841  0031D8                     _get_years:
  6842                           	opt callstack 29
  6843  0031D8                     
  6844                           ;timer.c: 217: 
  6845  0031D8  0E06               	movlw	6
  6846  0031DA  6E01               	movwf	i2c_read@registers^0,c
  6847  0031DC  0E68               	movlw	104
  6848  0031DE  ECCB  F010         	call	_i2c_read
  6849  0031E2  6E09               	movwf	get_years@year^0,c
  6850  0031E4                     
  6851                           ;timer.c: 220:  if (Asec<60) {
  6852  0031E4  C009  F008         	movff	get_years@year,??_get_years
  6853  0031E8  0E0F               	movlw	15
  6854  0031EA  1608               	andwf	??_get_years^0,f,c
  6855  0031EC  3809               	swapf	get_years@year^0,w,c
  6856  0031EE  0B0F               	andlw	15
  6857  0031F0  0D0A               	mullw	10
  6858  0031F2  50F3               	movf	243,w,c
  6859  0031F4  2408               	addwf	??_get_years^0,w,c
  6860  0031F6  0012               	return		;funcret
  6861  0031F8                     __end_of_get_years:
  6862                           	opt callstack 0
  6863                           
  6864 ;; *************** function _get_seconds *****************
  6865 ;; Defined at:
  6866 ;;		line 64 in file "timer.c"
  6867 ;; Parameters:    Size  Location     Type
  6868 ;;		None
  6869 ;; Auto vars:     Size  Location     Type
  6870 ;;  sec             1    8[COMRAM] unsigned char 
  6871 ;; Return value:  Size  Location     Type
  6872 ;;                  1    wreg      unsigned char 
  6873 ;; Registers used:
  6874 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6875 ;; Tracked objects:
  6876 ;;		On entry : 0/0
  6877 ;;		On exit  : 0/0
  6878 ;;		Unchanged: 0/0
  6879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6881 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6882 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6883 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6884 ;;Total ram usage:        2 bytes
  6885 ;; Hardware stack levels used:    1
  6886 ;; Hardware stack levels required when called:    1
  6887 ;; This function calls:
  6888 ;;		_i2c_read
  6889 ;; This function is called by:
  6890 ;;		_main
  6891 ;; This function uses a non-reentrant model
  6892 ;;
  6893                           
  6894                           	psect	text32
  6895  003130                     __ptext32:
  6896                           	opt callstack 0
  6897  003130                     _get_seconds:
  6898                           	opt callstack 29
  6899  003130                     
  6900                           ;timer.c: 65: 
  6901  003130  0E00               	movlw	0
  6902  003132  6E01               	movwf	i2c_read@registers^0,c
  6903  003134  0E68               	movlw	104
  6904  003136  ECCB  F010         	call	_i2c_read
  6905  00313A  6E09               	movwf	get_seconds@sec^0,c
  6906  00313C                     
  6907                           ;timer.c: 68: 
  6908  00313C  C009  F008         	movff	get_seconds@sec,??_get_seconds
  6909  003140  0E0F               	movlw	15
  6910  003142  1608               	andwf	??_get_seconds^0,f,c
  6911  003144  3809               	swapf	get_seconds@sec^0,w,c
  6912  003146  0B0F               	andlw	15
  6913  003148  0B07               	andlw	7
  6914  00314A  0D0A               	mullw	10
  6915  00314C  50F3               	movf	243,w,c
  6916  00314E  2408               	addwf	??_get_seconds^0,w,c
  6917  003150  0012               	return		;funcret
  6918  003152                     __end_of_get_seconds:
  6919                           	opt callstack 0
  6920                           
  6921 ;; *************** function _get_months *****************
  6922 ;; Defined at:
  6923 ;;		line 168 in file "timer.c"
  6924 ;; Parameters:    Size  Location     Type
  6925 ;;		None
  6926 ;; Auto vars:     Size  Location     Type
  6927 ;;  month           1    8[COMRAM] unsigned char 
  6928 ;; Return value:  Size  Location     Type
  6929 ;;                  1    wreg      unsigned char 
  6930 ;; Registers used:
  6931 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6932 ;; Tracked objects:
  6933 ;;		On entry : 0/0
  6934 ;;		On exit  : 0/0
  6935 ;;		Unchanged: 0/0
  6936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6938 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6939 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6940 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6941 ;;Total ram usage:        2 bytes
  6942 ;; Hardware stack levels used:    1
  6943 ;; Hardware stack levels required when called:    1
  6944 ;; This function calls:
  6945 ;;		_i2c_read
  6946 ;; This function is called by:
  6947 ;;		_main
  6948 ;; This function uses a non-reentrant model
  6949 ;;
  6950                           
  6951                           	psect	text33
  6952  0031F8                     __ptext33:
  6953                           	opt callstack 0
  6954  0031F8                     _get_months:
  6955                           	opt callstack 29
  6956  0031F8                     
  6957                           ;timer.c: 169: 
  6958  0031F8  0E05               	movlw	5
  6959  0031FA  6E01               	movwf	i2c_read@registers^0,c
  6960  0031FC  0E68               	movlw	104
  6961  0031FE  ECCB  F010         	call	_i2c_read
  6962  003202  6E09               	movwf	get_months@month^0,c
  6963  003204                     
  6964                           ;timer.c: 172:  if (day>0 && day<32) {
  6965  003204  C009  F008         	movff	get_months@month,??_get_months
  6966  003208  0E0F               	movlw	15
  6967  00320A  1608               	andwf	??_get_months^0,f,c
  6968  00320C  3809               	swapf	get_months@month^0,w,c
  6969  00320E  0B0F               	andlw	15
  6970  003210  0D0A               	mullw	10
  6971  003212  50F3               	movf	243,w,c
  6972  003214  2408               	addwf	??_get_months^0,w,c
  6973  003216  0012               	return		;funcret
  6974  003218                     __end_of_get_months:
  6975                           	opt callstack 0
  6976                           
  6977 ;; *************** function _get_minutes *****************
  6978 ;; Defined at:
  6979 ;;		line 94 in file "timer.c"
  6980 ;; Parameters:    Size  Location     Type
  6981 ;;		None
  6982 ;; Auto vars:     Size  Location     Type
  6983 ;;  min             1    8[COMRAM] unsigned char 
  6984 ;; Return value:  Size  Location     Type
  6985 ;;                  1    wreg      unsigned char 
  6986 ;; Registers used:
  6987 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6988 ;; Tracked objects:
  6989 ;;		On entry : 0/0
  6990 ;;		On exit  : 0/0
  6991 ;;		Unchanged: 0/0
  6992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6994 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6995 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6996 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6997 ;;Total ram usage:        2 bytes
  6998 ;; Hardware stack levels used:    1
  6999 ;; Hardware stack levels required when called:    1
  7000 ;; This function calls:
  7001 ;;		_i2c_read
  7002 ;; This function is called by:
  7003 ;;		_main
  7004 ;; This function uses a non-reentrant model
  7005 ;;
  7006                           
  7007                           	psect	text34
  7008  003218                     __ptext34:
  7009                           	opt callstack 0
  7010  003218                     _get_minutes:
  7011                           	opt callstack 29
  7012  003218                     
  7013                           ;timer.c: 95: 
  7014  003218  0E01               	movlw	1
  7015  00321A  6E01               	movwf	i2c_read@registers^0,c
  7016  00321C  0E68               	movlw	104
  7017  00321E  ECCB  F010         	call	_i2c_read
  7018  003222  6E09               	movwf	get_minutes@min^0,c
  7019  003224                     
  7020                           ;timer.c: 98:  if (hour<24) {
  7021  003224  C009  F008         	movff	get_minutes@min,??_get_minutes
  7022  003228  0E0F               	movlw	15
  7023  00322A  1608               	andwf	??_get_minutes^0,f,c
  7024  00322C  3809               	swapf	get_minutes@min^0,w,c
  7025  00322E  0B0F               	andlw	15
  7026  003230  0D0A               	mullw	10
  7027  003232  50F3               	movf	243,w,c
  7028  003234  2408               	addwf	??_get_minutes^0,w,c
  7029  003236  0012               	return		;funcret
  7030  003238                     __end_of_get_minutes:
  7031                           	opt callstack 0
  7032                           
  7033 ;; *************** function _get_hours *****************
  7034 ;; Defined at:
  7035 ;;		line 118 in file "timer.c"
  7036 ;; Parameters:    Size  Location     Type
  7037 ;;		None
  7038 ;; Auto vars:     Size  Location     Type
  7039 ;;  hour            1    8[COMRAM] unsigned char 
  7040 ;; Return value:  Size  Location     Type
  7041 ;;                  1    wreg      unsigned char 
  7042 ;; Registers used:
  7043 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7044 ;; Tracked objects:
  7045 ;;		On entry : 0/0
  7046 ;;		On exit  : 0/0
  7047 ;;		Unchanged: 0/0
  7048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7050 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7051 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7052 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7053 ;;Total ram usage:        2 bytes
  7054 ;; Hardware stack levels used:    1
  7055 ;; Hardware stack levels required when called:    1
  7056 ;; This function calls:
  7057 ;;		_i2c_read
  7058 ;; This function is called by:
  7059 ;;		_main
  7060 ;; This function uses a non-reentrant model
  7061 ;;
  7062                           
  7063                           	psect	text35
  7064  003152                     __ptext35:
  7065                           	opt callstack 0
  7066  003152                     _get_hours:
  7067                           	opt callstack 29
  7068  003152                     
  7069                           ;timer.c: 119:  return name;
  7070  003152  0E02               	movlw	2
  7071  003154  6E01               	movwf	i2c_read@registers^0,c
  7072  003156  0E68               	movlw	104
  7073  003158  ECCB  F010         	call	_i2c_read
  7074  00315C  6E09               	movwf	get_hours@hour^0,c
  7075  00315E                     
  7076                           ;timer.c: 122: 
  7077  00315E  C009  F008         	movff	get_hours@hour,??_get_hours
  7078  003162  0E0F               	movlw	15
  7079  003164  1608               	andwf	??_get_hours^0,f,c
  7080  003166  3809               	swapf	get_hours@hour^0,w,c
  7081  003168  0B0F               	andlw	15
  7082  00316A  0B03               	andlw	3
  7083  00316C  0D0A               	mullw	10
  7084  00316E  50F3               	movf	243,w,c
  7085  003170  2408               	addwf	??_get_hours^0,w,c
  7086  003172  0012               	return		;funcret
  7087  003174                     __end_of_get_hours:
  7088                           	opt callstack 0
  7089                           
  7090 ;; *************** function _get_days *****************
  7091 ;; Defined at:
  7092 ;;		line 192 in file "timer.c"
  7093 ;; Parameters:    Size  Location     Type
  7094 ;;		None
  7095 ;; Auto vars:     Size  Location     Type
  7096 ;;  day             1    8[COMRAM] unsigned char 
  7097 ;; Return value:  Size  Location     Type
  7098 ;;                  1    wreg      unsigned char 
  7099 ;; Registers used:
  7100 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7101 ;; Tracked objects:
  7102 ;;		On entry : 0/0
  7103 ;;		On exit  : 0/0
  7104 ;;		Unchanged: 0/0
  7105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7107 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7108 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7109 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7110 ;;Total ram usage:        2 bytes
  7111 ;; Hardware stack levels used:    1
  7112 ;; Hardware stack levels required when called:    1
  7113 ;; This function calls:
  7114 ;;		_i2c_read
  7115 ;; This function is called by:
  7116 ;;		_main
  7117 ;; This function uses a non-reentrant model
  7118 ;;
  7119                           
  7120                           	psect	text36
  7121  003238                     __ptext36:
  7122                           	opt callstack 0
  7123  003238                     _get_days:
  7124                           	opt callstack 29
  7125  003238                     
  7126                           ;timer.c: 193: 
  7127  003238  0E04               	movlw	4
  7128  00323A  6E01               	movwf	i2c_read@registers^0,c
  7129  00323C  0E68               	movlw	104
  7130  00323E  ECCB  F010         	call	_i2c_read
  7131  003242  6E09               	movwf	get_days@day^0,c
  7132  003244                     
  7133                           ;timer.c: 196:  if (year<100){
  7134  003244  C009  F008         	movff	get_days@day,??_get_days
  7135  003248  0E0F               	movlw	15
  7136  00324A  1608               	andwf	??_get_days^0,f,c
  7137  00324C  3809               	swapf	get_days@day^0,w,c
  7138  00324E  0B0F               	andlw	15
  7139  003250  0D0A               	mullw	10
  7140  003252  50F3               	movf	243,w,c
  7141  003254  2408               	addwf	??_get_days^0,w,c
  7142  003256  0012               	return		;funcret
  7143  003258                     __end_of_get_days:
  7144                           	opt callstack 0
  7145                           
  7146 ;; *************** function _get_dayname *****************
  7147 ;; Defined at:
  7148 ;;		line 148 in file "timer.c"
  7149 ;; Parameters:    Size  Location     Type
  7150 ;;		None
  7151 ;; Auto vars:     Size  Location     Type
  7152 ;;  name            1    7[COMRAM] unsigned char 
  7153 ;; Return value:  Size  Location     Type
  7154 ;;                  1    wreg      unsigned char 
  7155 ;; Registers used:
  7156 ;;		wreg, status,2, status,0, cstack
  7157 ;; Tracked objects:
  7158 ;;		On entry : 0/0
  7159 ;;		On exit  : 0/0
  7160 ;;		Unchanged: 0/0
  7161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7163 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7165 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7166 ;;Total ram usage:        1 bytes
  7167 ;; Hardware stack levels used:    1
  7168 ;; Hardware stack levels required when called:    1
  7169 ;; This function calls:
  7170 ;;		_i2c_read
  7171 ;; This function is called by:
  7172 ;;		_main
  7173 ;; This function uses a non-reentrant model
  7174 ;;
  7175                           
  7176                           	psect	text37
  7177  003292                     __ptext37:
  7178                           	opt callstack 0
  7179  003292                     _get_dayname:
  7180                           	opt callstack 29
  7181  003292                     
  7182                           ;timer.c: 150:   month = ((month/10)<<4)+(month%10);
  7183  003292  0E03               	movlw	3
  7184  003294  6E01               	movwf	i2c_read@registers^0,c
  7185  003296  0E68               	movlw	104
  7186  003298  ECCB  F010         	call	_i2c_read
  7187  00329C  6E08               	movwf	get_dayname@name^0,c
  7188  00329E                     
  7189                           ;timer.c: 151: 
  7190  00329E  5008               	movf	get_dayname@name^0,w,c
  7191  0032A0  0012               	return		;funcret
  7192  0032A2                     __end_of_get_dayname:
  7193                           	opt callstack 0
  7194                           
  7195 ;; *************** function _get_Aseconds *****************
  7196 ;; Defined at:
  7197 ;;		line 240 in file "timer.c"
  7198 ;; Parameters:    Size  Location     Type
  7199 ;;		None
  7200 ;; Auto vars:     Size  Location     Type
  7201 ;;  Asec            1    8[COMRAM] unsigned char 
  7202 ;; Return value:  Size  Location     Type
  7203 ;;                  1    wreg      unsigned char 
  7204 ;; Registers used:
  7205 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7206 ;; Tracked objects:
  7207 ;;		On entry : 0/0
  7208 ;;		On exit  : 0/0
  7209 ;;		Unchanged: 0/0
  7210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7212 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7213 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7214 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7215 ;;Total ram usage:        2 bytes
  7216 ;; Hardware stack levels used:    1
  7217 ;; Hardware stack levels required when called:    1
  7218 ;; This function calls:
  7219 ;;		_i2c_read
  7220 ;; This function is called by:
  7221 ;;		_main
  7222 ;; This function uses a non-reentrant model
  7223 ;;
  7224                           
  7225                           	psect	text38
  7226  003174                     __ptext38:
  7227                           	opt callstack 0
  7228  003174                     _get_Aseconds:
  7229                           	opt callstack 29
  7230  003174                     
  7231                           ;timer.c: 241: 
  7232  003174  0E07               	movlw	7
  7233  003176  6E01               	movwf	i2c_read@registers^0,c
  7234  003178  0E68               	movlw	104
  7235  00317A  ECCB  F010         	call	_i2c_read
  7236  00317E  6E09               	movwf	get_Aseconds@Asec^0,c
  7237  003180                     
  7238                           ;timer.c: 244:  if (Amin<60) {
  7239  003180  C009  F008         	movff	get_Aseconds@Asec,??_get_Aseconds
  7240  003184  0E0F               	movlw	15
  7241  003186  1608               	andwf	??_get_Aseconds^0,f,c
  7242  003188  3809               	swapf	get_Aseconds@Asec^0,w,c
  7243  00318A  0B0F               	andlw	15
  7244  00318C  0B07               	andlw	7
  7245  00318E  0D0A               	mullw	10
  7246  003190  50F3               	movf	243,w,c
  7247  003192  2408               	addwf	??_get_Aseconds^0,w,c
  7248  003194  0012               	return		;funcret
  7249  003196                     __end_of_get_Aseconds:
  7250                           	opt callstack 0
  7251                           
  7252 ;; *************** function _get_Aminutes *****************
  7253 ;; Defined at:
  7254 ;;		line 264 in file "timer.c"
  7255 ;; Parameters:    Size  Location     Type
  7256 ;;		None
  7257 ;; Auto vars:     Size  Location     Type
  7258 ;;  Amin            1    8[COMRAM] unsigned char 
  7259 ;; Return value:  Size  Location     Type
  7260 ;;                  1    wreg      unsigned char 
  7261 ;; Registers used:
  7262 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7263 ;; Tracked objects:
  7264 ;;		On entry : 0/0
  7265 ;;		On exit  : 0/0
  7266 ;;		Unchanged: 0/0
  7267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7269 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7270 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7271 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7272 ;;Total ram usage:        2 bytes
  7273 ;; Hardware stack levels used:    1
  7274 ;; Hardware stack levels required when called:    1
  7275 ;; This function calls:
  7276 ;;		_i2c_read
  7277 ;; This function is called by:
  7278 ;;		_main
  7279 ;; This function uses a non-reentrant model
  7280 ;;
  7281                           
  7282                           	psect	text39
  7283  003258                     __ptext39:
  7284                           	opt callstack 0
  7285  003258                     _get_Aminutes:
  7286                           	opt callstack 29
  7287  003258                     
  7288                           ;timer.c: 265: 
  7289  003258  0E08               	movlw	8
  7290  00325A  6E01               	movwf	i2c_read@registers^0,c
  7291  00325C  0E68               	movlw	104
  7292  00325E  ECCB  F010         	call	_i2c_read
  7293  003262  6E09               	movwf	get_Aminutes@Amin^0,c
  7294  003264                     
  7295                           ;timer.c: 268:  if (Ahour<24) {
  7296  003264  C009  F008         	movff	get_Aminutes@Amin,??_get_Aminutes
  7297  003268  0E0F               	movlw	15
  7298  00326A  1608               	andwf	??_get_Aminutes^0,f,c
  7299  00326C  3809               	swapf	get_Aminutes@Amin^0,w,c
  7300  00326E  0B0F               	andlw	15
  7301  003270  0D0A               	mullw	10
  7302  003272  50F3               	movf	243,w,c
  7303  003274  2408               	addwf	??_get_Aminutes^0,w,c
  7304  003276  0012               	return		;funcret
  7305  003278                     __end_of_get_Aminutes:
  7306                           	opt callstack 0
  7307                           
  7308 ;; *************** function _get_Ahours *****************
  7309 ;; Defined at:
  7310 ;;		line 288 in file "timer.c"
  7311 ;; Parameters:    Size  Location     Type
  7312 ;;		None
  7313 ;; Auto vars:     Size  Location     Type
  7314 ;;  Ahour           1    8[COMRAM] unsigned char 
  7315 ;; Return value:  Size  Location     Type
  7316 ;;                  1    wreg      unsigned char 
  7317 ;; Registers used:
  7318 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7319 ;; Tracked objects:
  7320 ;;		On entry : 0/0
  7321 ;;		On exit  : 0/0
  7322 ;;		Unchanged: 0/0
  7323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7325 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7326 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7327 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7328 ;;Total ram usage:        2 bytes
  7329 ;; Hardware stack levels used:    1
  7330 ;; Hardware stack levels required when called:    1
  7331 ;; This function calls:
  7332 ;;		_i2c_read
  7333 ;; This function is called by:
  7334 ;;		_main
  7335 ;; This function uses a non-reentrant model
  7336 ;;
  7337                           
  7338                           	psect	text40
  7339  003196                     __ptext40:
  7340                           	opt callstack 0
  7341  003196                     _get_Ahours:
  7342                           	opt callstack 29
  7343  003196                     
  7344                           ;timer.c: 289:     int alarm = 0;
  7345  003196  0E09               	movlw	9
  7346  003198  6E01               	movwf	i2c_read@registers^0,c
  7347  00319A  0E68               	movlw	104
  7348  00319C  ECCB  F010         	call	_i2c_read
  7349  0031A0  6E09               	movwf	get_Ahours@Ahour^0,c
  7350  0031A2                     
  7351                           ;timer.c: 292: 
  7352  0031A2  C009  F008         	movff	get_Ahours@Ahour,??_get_Ahours
  7353  0031A6  0E0F               	movlw	15
  7354  0031A8  1608               	andwf	??_get_Ahours^0,f,c
  7355  0031AA  3809               	swapf	get_Ahours@Ahour^0,w,c
  7356  0031AC  0B0F               	andlw	15
  7357  0031AE  0B03               	andlw	3
  7358  0031B0  0D0A               	mullw	10
  7359  0031B2  50F3               	movf	243,w,c
  7360  0031B4  2408               	addwf	??_get_Ahours^0,w,c
  7361  0031B6  0012               	return		;funcret
  7362  0031B8                     __end_of_get_Ahours:
  7363                           	opt callstack 0
  7364                           
  7365 ;; *************** function _i2c_read *****************
  7366 ;; Defined at:
  7367 ;;		line 36 in file "i2c.c"
  7368 ;; Parameters:    Size  Location     Type
  7369 ;;  address         1    wreg     unsigned char 
  7370 ;;  registers       1    0[COMRAM] unsigned char 
  7371 ;; Auto vars:     Size  Location     Type
  7372 ;;  address         1    6[COMRAM] unsigned char 
  7373 ;;  num             4    1[COMRAM] unsigned long 
  7374 ;;  read            1    5[COMRAM] unsigned char 
  7375 ;; Return value:  Size  Location     Type
  7376 ;;                  1    wreg      unsigned char 
  7377 ;; Registers used:
  7378 ;;		wreg, status,2, status,0
  7379 ;; Tracked objects:
  7380 ;;		On entry : 0/0
  7381 ;;		On exit  : 0/0
  7382 ;;		Unchanged: 0/0
  7383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7384 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7385 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7387 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7388 ;;Total ram usage:        7 bytes
  7389 ;; Hardware stack levels used:    1
  7390 ;; This function calls:
  7391 ;;		Nothing
  7392 ;; This function is called by:
  7393 ;;		_rtc_init
  7394 ;;		_get_seconds
  7395 ;;		_set_seconds
  7396 ;;		_get_minutes
  7397 ;;		_get_hours
  7398 ;;		_set_hours
  7399 ;;		_get_dayname
  7400 ;;		_get_months
  7401 ;;		_get_days
  7402 ;;		_get_years
  7403 ;;		_get_Aseconds
  7404 ;;		_get_Aminutes
  7405 ;;		_get_Ahours
  7406 ;;		_set_Ahours
  7407 ;;		_main
  7408 ;; This function uses a non-reentrant model
  7409 ;;
  7410                           
  7411                           	psect	text41
  7412  002196                     __ptext41:
  7413                           	opt callstack 0
  7414  002196                     _i2c_read:
  7415                           	opt callstack 29
  7416                           
  7417                           ;incstack = 0
  7418                           ;i2c_read@address stored from wreg
  7419  002196  6E07               	movwf	i2c_read@address^0,c
  7420  002198                     
  7421                           ;i2c.c: 37:  SSP1CON2bits.SEN = 1;
  7422  002198  8097               	bsf	151,0,c	;volatile
  7423  00219A                     l287:
  7424  00219A  B097               	btfsc	151,0,c	;volatile
  7425  00219C  EFD2  F010         	goto	u1891
  7426  0021A0  EFD4  F010         	goto	u1890
  7427  0021A4                     u1891:
  7428  0021A4  EFCD  F010         	goto	l287
  7429  0021A8                     u1890:
  7430  0021A8                     
  7431                           ;i2c.c: 40:  SSP1BUF = (address << 1) & 0xfe;
  7432  0021A8  5007               	movf	i2c_read@address^0,w,c
  7433  0021AA  2407               	addwf	i2c_read@address^0,w,c
  7434  0021AC  0BFE               	andlw	254
  7435  0021AE  6E92               	movwf	146,c	;volatile
  7436  0021B0                     l290:
  7437  0021B0  B495               	btfsc	149,2,c	;volatile
  7438  0021B2  EFDD  F010         	goto	u1901
  7439  0021B6  EFDF  F010         	goto	u1900
  7440  0021BA                     u1901:
  7441  0021BA  EFD8  F010         	goto	l290
  7442  0021BE                     u1900:
  7443  0021BE                     
  7444                           ;i2c.c: 45:  if (SSP1CON2bits.ACKSTAT == 1) {
  7445  0021BE  AC97               	btfss	151,6,c	;volatile
  7446  0021C0  EFE4  F010         	goto	u1911
  7447  0021C4  EFE6  F010         	goto	u1910
  7448  0021C8                     u1911:
  7449  0021C8  EFF1  F010         	goto	l293
  7450  0021CC                     u1910:
  7451  0021CC                     
  7452                           ;i2c.c: 46:   SSP1CON2bits.PEN = 1;
  7453  0021CC  8497               	bsf	151,2,c	;volatile
  7454  0021CE                     l294:
  7455  0021CE  B497               	btfsc	151,2,c	;volatile
  7456  0021D0  EFEC  F010         	goto	u1921
  7457  0021D4  EFEE  F010         	goto	u1920
  7458  0021D8                     u1921:
  7459  0021D8  EFE7  F010         	goto	l294
  7460  0021DC                     u1920:
  7461  0021DC                     l2498:
  7462                           
  7463                           ;i2c.c: 48:   return 0;
  7464  0021DC  0E00               	movlw	0
  7465  0021DE  EF6E  F011         	goto	l297
  7466  0021E2                     l293:
  7467                           
  7468                           ;i2c.c: 51:  SSP1BUF = registers;
  7469  0021E2  C001  FF92         	movff	i2c_read@registers,3986	;volatile
  7470  0021E6                     l298:
  7471  0021E6  B495               	btfsc	149,2,c	;volatile
  7472  0021E8  EFF8  F010         	goto	u1931
  7473  0021EC  EFFA  F010         	goto	u1930
  7474  0021F0                     u1931:
  7475  0021F0  EFF3  F010         	goto	l298
  7476  0021F4                     u1930:
  7477  0021F4                     
  7478                           ;i2c.c: 56:  if (SSP1CON2bits.ACKSTAT == 1) {
  7479  0021F4  AC97               	btfss	151,6,c	;volatile
  7480  0021F6  EFFF  F010         	goto	u1941
  7481  0021FA  EF01  F011         	goto	u1940
  7482  0021FE                     u1941:
  7483  0021FE  EF0B  F011         	goto	l301
  7484  002202                     u1940:
  7485  002202                     
  7486                           ;i2c.c: 57:   SSP1CON2bits.PEN = 1;
  7487  002202  8497               	bsf	151,2,c	;volatile
  7488  002204                     l302:
  7489  002204  B497               	btfsc	151,2,c	;volatile
  7490  002206  EF07  F011         	goto	u1951
  7491  00220A  EF09  F011         	goto	u1950
  7492  00220E                     u1951:
  7493  00220E  EF02  F011         	goto	l302
  7494  002212                     u1950:
  7495  002212  EFEE  F010         	goto	l2498
  7496  002216                     l301:
  7497                           
  7498                           ;i2c.c: 63:  SSP1CON2bits.RSEN = 1;
  7499  002216  8297               	bsf	151,1,c	;volatile
  7500  002218                     l305:
  7501  002218  B297               	btfsc	151,1,c	;volatile
  7502  00221A  EF11  F011         	goto	u1961
  7503  00221E  EF13  F011         	goto	u1960
  7504  002222                     u1961:
  7505  002222  EF0C  F011         	goto	l305
  7506  002226                     u1960:
  7507  002226                     
  7508                           ;i2c.c: 66:  SSP1BUF = (address << 1) | 0x01;
  7509  002226  80D8               	bsf	status,0,c
  7510  002228  3407               	rlcf	i2c_read@address^0,w,c
  7511  00222A  6E92               	movwf	146,c	;volatile
  7512  00222C                     l308:
  7513  00222C  B495               	btfsc	149,2,c	;volatile
  7514  00222E  EF1B  F011         	goto	u1971
  7515  002232  EF1D  F011         	goto	u1970
  7516  002236                     u1971:
  7517  002236  EF16  F011         	goto	l308
  7518  00223A                     u1970:
  7519  00223A                     
  7520                           ;i2c.c: 70:  if (SSP1CON2bits.ACKSTAT == 1) {
  7521  00223A  AC97               	btfss	151,6,c	;volatile
  7522  00223C  EF22  F011         	goto	u1981
  7523  002240  EF24  F011         	goto	u1980
  7524  002244                     u1981:
  7525  002244  EF2E  F011         	goto	l311
  7526  002248                     u1980:
  7527  002248                     
  7528                           ;i2c.c: 71:   SSP1CON2bits.PEN = 1;
  7529  002248  8497               	bsf	151,2,c	;volatile
  7530  00224A                     l312:
  7531  00224A  B497               	btfsc	151,2,c	;volatile
  7532  00224C  EF2A  F011         	goto	u1991
  7533  002250  EF2C  F011         	goto	u1990
  7534  002254                     u1991:
  7535  002254  EF25  F011         	goto	l312
  7536  002258                     u1990:
  7537  002258  EFEE  F010         	goto	l2498
  7538  00225C                     l311:
  7539                           
  7540                           ;i2c.c: 76:  SSP1CON2bits.RCEN = 1;
  7541  00225C  8697               	bsf	151,3,c	;volatile
  7542  00225E                     
  7543                           ;i2c.c: 78:  unsigned long num = 10000L;
  7544  00225E  0E10               	movlw	16
  7545  002260  6E02               	movwf	i2c_read@num^0,c
  7546  002262  0E27               	movlw	39
  7547  002264  6E03               	movwf	(i2c_read@num+1)^0,c
  7548  002266  0E00               	movlw	0
  7549  002268  6E04               	movwf	(i2c_read@num+2)^0,c
  7550  00226A  0E00               	movlw	0
  7551  00226C  6E05               	movwf	(i2c_read@num+3)^0,c
  7552                           
  7553                           ;i2c.c: 79:  while (SSP1STATbits.BF == 0) {
  7554  00226E  EF53  F011         	goto	l315
  7555  002272                     l2518:
  7556                           
  7557                           ;i2c.c: 80:         if (--num == 0) {
  7558  002272  0602               	decf	i2c_read@num^0,f,c
  7559  002274  0E00               	movlw	0
  7560  002276  5A03               	subwfb	(i2c_read@num+1)^0,f,c
  7561  002278  5A04               	subwfb	(i2c_read@num+2)^0,f,c
  7562  00227A  5A05               	subwfb	(i2c_read@num+3)^0,f,c
  7563  00227C  5002               	movf	i2c_read@num^0,w,c
  7564  00227E  1003               	iorwf	(i2c_read@num+1)^0,w,c
  7565  002280  1004               	iorwf	(i2c_read@num+2)^0,w,c
  7566  002282  1005               	iorwf	(i2c_read@num+3)^0,w,c
  7567  002284  A4D8               	btfss	status,2,c
  7568  002286  EF47  F011         	goto	u2001
  7569  00228A  EF49  F011         	goto	u2000
  7570  00228E                     u2001:
  7571  00228E  EF53  F011         	goto	l315
  7572  002292                     u2000:
  7573  002292                     
  7574                           ;i2c.c: 81:             SSP1CON2bits.PEN = 1;
  7575  002292  8497               	bsf	151,2,c	;volatile
  7576  002294                     l318:
  7577  002294  B497               	btfsc	151,2,c	;volatile
  7578  002296  EF4F  F011         	goto	u2011
  7579  00229A  EF51  F011         	goto	u2010
  7580  00229E                     u2011:
  7581  00229E  EF4A  F011         	goto	l318
  7582  0022A2                     u2010:
  7583  0022A2  EFEE  F010         	goto	l2498
  7584  0022A6                     l315:
  7585                           
  7586                           ;i2c.c: 79:  while (SSP1STATbits.BF == 0) {
  7587  0022A6  A095               	btfss	149,0,c	;volatile
  7588  0022A8  EF58  F011         	goto	u2021
  7589  0022AC  EF5A  F011         	goto	u2020
  7590  0022B0                     u2021:
  7591  0022B0  EF39  F011         	goto	l2518
  7592  0022B4                     u2020:
  7593  0022B4                     
  7594                           ;i2c.c: 87:  unsigned char read = SSP1BUF;
  7595  0022B4  CF92 F006          	movff	3986,i2c_read@read	;volatile
  7596                           
  7597                           ;i2c.c: 90:  SSP1CON2bits.ACKDT = 1;
  7598  0022B8  8A97               	bsf	151,5,c	;volatile
  7599                           
  7600                           ;i2c.c: 91:  SSP1CON2bits.ACKEN = 1;
  7601  0022BA  8897               	bsf	151,4,c	;volatile
  7602  0022BC                     l322:
  7603  0022BC  B897               	btfsc	151,4,c	;volatile
  7604  0022BE  EF63  F011         	goto	u2031
  7605  0022C2  EF65  F011         	goto	u2030
  7606  0022C6                     u2031:
  7607  0022C6  EF5E  F011         	goto	l322
  7608  0022CA                     u2030:
  7609  0022CA                     
  7610                           ;i2c.c: 94:  SSP1CON2bits.PEN = 1;
  7611  0022CA  8497               	bsf	151,2,c	;volatile
  7612  0022CC                     l325:
  7613  0022CC  B497               	btfsc	151,2,c	;volatile
  7614  0022CE  EF6B  F011         	goto	u2041
  7615  0022D2  EF6D  F011         	goto	u2040
  7616  0022D6                     u2041:
  7617  0022D6  EF66  F011         	goto	l325
  7618  0022DA                     u2040:
  7619  0022DA                     
  7620                           ;i2c.c: 97:  return read;
  7621  0022DA  5006               	movf	i2c_read@read^0,w,c
  7622  0022DC                     l297:
  7623  0022DC  0012               	return		;funcret
  7624  0022DE                     __end_of_i2c_read:
  7625                           	opt callstack 0
  7626                           
  7627 ;; *************** function _adc_init *****************
  7628 ;; Defined at:
  7629 ;;		line 9 in file "adc.c"
  7630 ;; Parameters:    Size  Location     Type
  7631 ;;		None
  7632 ;; Auto vars:     Size  Location     Type
  7633 ;;		None
  7634 ;; Return value:  Size  Location     Type
  7635 ;;                  1    wreg      void 
  7636 ;; Registers used:
  7637 ;;		wreg, status,2
  7638 ;; Tracked objects:
  7639 ;;		On entry : 0/0
  7640 ;;		On exit  : 0/0
  7641 ;;		Unchanged: 0/0
  7642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7647 ;;Total ram usage:        0 bytes
  7648 ;; Hardware stack levels used:    1
  7649 ;; This function calls:
  7650 ;;		Nothing
  7651 ;; This function is called by:
  7652 ;;		_main
  7653 ;; This function uses a non-reentrant model
  7654 ;;
  7655                           
  7656                           	psect	text42
  7657  0032A2                     __ptext42:
  7658                           	opt callstack 0
  7659  0032A2                     _adc_init:
  7660                           	opt callstack 30
  7661  0032A2                     
  7662                           ;adc.c: 10:     TRISAbits.TRISA0 = 1;
  7663  0032A2  8088               	bsf	136,0,c	;volatile
  7664  0032A4                     
  7665                           ;adc.c: 13:     ANSELC = 0x0;
  7666  0032A4  0E00               	movlw	0
  7667  0032A6  010F               	movlb	15	; () banked
  7668  0032A8  6F21               	movwf	33,b	;volatile
  7669  0032AA                     
  7670                           ; BSR set to: 15
  7671  0032AA  0012               	return		;funcret
  7672  0032AC                     __end_of_adc_init:
  7673                           	opt callstack 0
  7674                           
  7675 ;; *************** function _adcNum0 *****************
  7676 ;; Defined at:
  7677 ;;		line 19 in file "adc.c"
  7678 ;; Parameters:    Size  Location     Type
  7679 ;;		None
  7680 ;; Auto vars:     Size  Location     Type
  7681 ;;		None
  7682 ;; Return value:  Size  Location     Type
  7683 ;;                  4    0[COMRAM] unsigned long 
  7684 ;; Registers used:
  7685 ;;		wreg, status,2, status,0
  7686 ;; Tracked objects:
  7687 ;;		On entry : 0/0
  7688 ;;		On exit  : 0/0
  7689 ;;		Unchanged: 0/0
  7690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7691 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7693 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7694 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7695 ;;Total ram usage:        7 bytes
  7696 ;; Hardware stack levels used:    1
  7697 ;; This function calls:
  7698 ;;		Nothing
  7699 ;; This function is called by:
  7700 ;;		_main
  7701 ;; This function uses a non-reentrant model
  7702 ;;
  7703                           
  7704                           	psect	text43
  7705  00305A                     __ptext43:
  7706                           	opt callstack 0
  7707  00305A                     _adcNum0:
  7708                           	opt callstack 30
  7709  00305A                     
  7710                           ;adc.c: 20:     ADCON0 = 0x00;
  7711  00305A  0E00               	movlw	0
  7712  00305C  6E60               	movwf	96,c	;volatile
  7713                           
  7714                           ;adc.c: 21:     ADPCH = 0;
  7715  00305E  0E00               	movlw	0
  7716  003060  010F               	movlb	15	; () banked
  7717  003062  6F5F               	movwf	95,b	;volatile
  7718  003064                     
  7719                           ; BSR set to: 15
  7720                           ;adc.c: 22:     ADCON0bits.ADON = 1;
  7721  003064  8E60               	bsf	96,7,c	;volatile
  7722  003066                     
  7723                           ; BSR set to: 15
  7724                           ;adc.c: 23:     ADCON0bits.GO = 1;
  7725  003066  8060               	bsf	96,0,c	;volatile
  7726  003068                     l243:
  7727  003068  B060               	btfsc	96,0,c	;volatile
  7728  00306A  EF39  F018         	goto	u2451
  7729  00306E  EF3B  F018         	goto	u2450
  7730  003072                     u2451:
  7731  003072  EF34  F018         	goto	l243
  7732  003076                     u2450:
  7733  003076                     
  7734                           ;adc.c: 27:     ADCON0bits.ADON = 0;
  7735  003076  9E60               	bcf	96,7,c	;volatile
  7736  003078                     
  7737                           ;adc.c: 30:     return (ADRES >> 6);
  7738  003078  CF63 F005          	movff	3939,??_adcNum0	;volatile
  7739  00307C  CF64 F006          	movff	3940,??_adcNum0+1	;volatile
  7740  003080  0E06               	movlw	6
  7741  003082  6E07               	movwf	(??_adcNum0+2)^0,c
  7742  003084                     u2465:
  7743  003084  90D8               	bcf	status,0,c
  7744  003086  3206               	rrcf	(??_adcNum0+1)^0,f,c
  7745  003088  3205               	rrcf	??_adcNum0^0,f,c
  7746  00308A  2E07               	decfsz	(??_adcNum0+2)^0,f,c
  7747  00308C  EF42  F018         	goto	u2465
  7748  003090  C005  F001         	movff	??_adcNum0,?_adcNum0
  7749  003094  C006  F002         	movff	??_adcNum0+1,?_adcNum0+1
  7750  003098  6A03               	clrf	(?_adcNum0+2)^0,c
  7751  00309A  6A04               	clrf	(?_adcNum0+3)^0,c
  7752  00309C  0012               	return		;funcret
  7753  00309E                     __end_of_adcNum0:
  7754                           	opt callstack 0
  7755                           
  7756 ;; *************** function ___lldiv *****************
  7757 ;; Defined at:
  7758 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\__lldiv.c"
  7759 ;; Parameters:    Size  Location     Type
  7760 ;;  dividend        4    0[COMRAM] unsigned long 
  7761 ;;  divisor         4    4[COMRAM] unsigned long 
  7762 ;; Auto vars:     Size  Location     Type
  7763 ;;  quotient        4    8[COMRAM] unsigned long 
  7764 ;;  counter         1   12[COMRAM] unsigned char 
  7765 ;; Return value:  Size  Location     Type
  7766 ;;                  4    0[COMRAM] unsigned long 
  7767 ;; Registers used:
  7768 ;;		wreg, status,2, status,0
  7769 ;; Tracked objects:
  7770 ;;		On entry : 0/0
  7771 ;;		On exit  : 0/0
  7772 ;;		Unchanged: 0/0
  7773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7774 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7775 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7777 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7778 ;;Total ram usage:       13 bytes
  7779 ;; Hardware stack levels used:    1
  7780 ;; This function calls:
  7781 ;;		Nothing
  7782 ;; This function is called by:
  7783 ;;		_main
  7784 ;; This function uses a non-reentrant model
  7785 ;;
  7786                           
  7787                           	psect	text44
  7788  002ACC                     __ptext44:
  7789                           	opt callstack 0
  7790  002ACC                     ___lldiv:
  7791                           	opt callstack 30
  7792  002ACC  0E00               	movlw	0
  7793  002ACE  6E09               	movwf	___lldiv@quotient^0,c
  7794  002AD0  0E00               	movlw	0
  7795  002AD2  6E0A               	movwf	(___lldiv@quotient+1)^0,c
  7796  002AD4  0E00               	movlw	0
  7797  002AD6  6E0B               	movwf	(___lldiv@quotient+2)^0,c
  7798  002AD8  0E00               	movlw	0
  7799  002ADA  6E0C               	movwf	(___lldiv@quotient+3)^0,c
  7800  002ADC  5005               	movf	___lldiv@divisor^0,w,c
  7801  002ADE  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
  7802  002AE0  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
  7803  002AE2  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
  7804  002AE4  B4D8               	btfsc	status,2,c
  7805  002AE6  EF77  F015         	goto	u2471
  7806  002AEA  EF79  F015         	goto	u2470
  7807  002AEE                     u2471:
  7808  002AEE  EFAF  F015         	goto	l447
  7809  002AF2                     u2470:
  7810  002AF2  0E01               	movlw	1
  7811  002AF4  6E0D               	movwf	___lldiv@counter^0,c
  7812  002AF6  EF83  F015         	goto	l2920
  7813  002AFA                     l2918:
  7814  002AFA  90D8               	bcf	status,0,c
  7815  002AFC  3605               	rlcf	___lldiv@divisor^0,f,c
  7816  002AFE  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
  7817  002B00  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
  7818  002B02  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
  7819  002B04  2A0D               	incf	___lldiv@counter^0,f,c
  7820  002B06                     l2920:
  7821  002B06  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
  7822  002B08  EF88  F015         	goto	u2481
  7823  002B0C  EF8A  F015         	goto	u2480
  7824  002B10                     u2481:
  7825  002B10  EF7D  F015         	goto	l2918
  7826  002B14                     u2480:
  7827  002B14                     l2922:
  7828  002B14  90D8               	bcf	status,0,c
  7829  002B16  3609               	rlcf	___lldiv@quotient^0,f,c
  7830  002B18  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
  7831  002B1A  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
  7832  002B1C  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
  7833  002B1E  5005               	movf	___lldiv@divisor^0,w,c
  7834  002B20  5C01               	subwf	___lldiv@dividend^0,w,c
  7835  002B22  5006               	movf	(___lldiv@divisor+1)^0,w,c
  7836  002B24  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
  7837  002B26  5007               	movf	(___lldiv@divisor+2)^0,w,c
  7838  002B28  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
  7839  002B2A  5008               	movf	(___lldiv@divisor+3)^0,w,c
  7840  002B2C  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
  7841  002B2E  A0D8               	btfss	status,0,c
  7842  002B30  EF9C  F015         	goto	u2491
  7843  002B34  EF9E  F015         	goto	u2490
  7844  002B38                     u2491:
  7845  002B38  EFA7  F015         	goto	l2930
  7846  002B3C                     u2490:
  7847  002B3C  5005               	movf	___lldiv@divisor^0,w,c
  7848  002B3E  5E01               	subwf	___lldiv@dividend^0,f,c
  7849  002B40  5006               	movf	(___lldiv@divisor+1)^0,w,c
  7850  002B42  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
  7851  002B44  5007               	movf	(___lldiv@divisor+2)^0,w,c
  7852  002B46  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
  7853  002B48  5008               	movf	(___lldiv@divisor+3)^0,w,c
  7854  002B4A  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
  7855  002B4C  8009               	bsf	___lldiv@quotient^0,0,c
  7856  002B4E                     l2930:
  7857  002B4E  90D8               	bcf	status,0,c
  7858  002B50  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
  7859  002B52  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
  7860  002B54  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
  7861  002B56  3205               	rrcf	___lldiv@divisor^0,f,c
  7862  002B58  2E0D               	decfsz	___lldiv@counter^0,f,c
  7863  002B5A  EF8A  F015         	goto	l2922
  7864  002B5E                     l447:
  7865  002B5E  C009  F001         	movff	___lldiv@quotient,?___lldiv
  7866  002B62  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  7867  002B66  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  7868  002B6A  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  7869  002B6E  0012               	return		;funcret
  7870  002B70                     __end_of___lldiv:
  7871                           	opt callstack 0
  7872                           
  7873                           	psect	rparam
  7874  0000                     tosu	equ	0xFFF
  7875                           tosh	equ	0xFFE
  7876                           tosl	equ	0xFFD
  7877                           stkptr	equ	0xFFC
  7878                           pclatu	equ	0xFFB
  7879                           pclath	equ	0xFFA
  7880                           pcl	equ	0xFF9
  7881                           tblptru	equ	0xFF8
  7882                           tblptrh	equ	0xFF7
  7883                           tblptrl	equ	0xFF6
  7884                           tablat	equ	0xFF5
  7885                           prodh	equ	0xFF4
  7886                           prodl	equ	0xFF3
  7887                           indf0	equ	0xFEF
  7888                           postinc0	equ	0xFEE
  7889                           postdec0	equ	0xFED
  7890                           preinc0	equ	0xFEC
  7891                           plusw0	equ	0xFEB
  7892                           fsr0h	equ	0xFEA
  7893                           fsr0l	equ	0xFE9
  7894                           wreg	equ	0xFE8
  7895                           indf1	equ	0xFE7
  7896                           postinc1	equ	0xFE6
  7897                           postdec1	equ	0xFE5
  7898                           preinc1	equ	0xFE4
  7899                           plusw1	equ	0xFE3
  7900                           fsr1h	equ	0xFE2
  7901                           fsr1l	equ	0xFE1
  7902                           bsr	equ	0xFE0
  7903                           indf2	equ	0xFDF
  7904                           postinc2	equ	0xFDE
  7905                           postdec2	equ	0xFDD
  7906                           preinc2	equ	0xFDC
  7907                           plusw2	equ	0xFDB
  7908                           fsr2h	equ	0xFDA
  7909                           fsr2l	equ	0xFD9
  7910                           status	equ	0xFD8


Data Sizes:
    Strings     32
    Constant    0
    Data        0
    BSS         44
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     93      95
    BANK0           160     72     114
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_19(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_19(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_16(CODE[4]), STR_15(CODE[4]), STR_14(CODE[4]), STR_13(CODE[4]), 
		 -> STR_12(CODE[4]), STR_11(CODE[4]), STR_10(CODE[4]), STR_9(CODE[4]), 
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[4]), 
		 -> STR_4(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), STR_1(CODE[4]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_16(CODE[4]), STR_15(CODE[4]), STR_14(CODE[4]), STR_13(CODE[4]), 
		 -> STR_12(CODE[4]), STR_11(CODE[4]), STR_10(CODE[4]), STR_9(CODE[4]), 
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[4]), 
		 -> STR_4(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), STR_1(CODE[4]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_16(CODE[4]), STR_15(CODE[4]), STR_14(CODE[4]), STR_13(CODE[4]), 
		 -> STR_12(CODE[4]), STR_11(CODE[4]), STR_10(CODE[4]), STR_9(CODE[4]), 
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[4]), 
		 -> STR_4(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), STR_1(CODE[4]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 3
		 -> main@array_376(BANK0[2]), main@naming(BANK0[3]), main@array(BANK0[2]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 3
		 -> main@array_376(BANK0[2]), main@naming(BANK0[3]), main@array(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1455_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 3
		 -> main@array_376(BANK0[2]), main@naming(BANK0[3]), main@array(BANK0[2]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 3
		 -> main@array_376(BANK0[2]), main@naming(BANK0[3]), main@array(BANK0[2]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_16(CODE[4]), STR_15(CODE[4]), STR_14(CODE[4]), STR_13(CODE[4]), 
		 -> STR_12(CODE[4]), STR_11(CODE[4]), STR_10(CODE[4]), STR_9(CODE[4]), 
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[4]), 
		 -> STR_4(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), STR_1(CODE[4]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 4
		 -> STR_16(CODE[4]), STR_15(CODE[4]), STR_14(CODE[4]), STR_13(CODE[4]), 
		 -> STR_12(CODE[4]), STR_11(CODE[4]), STR_10(CODE[4]), STR_9(CODE[4]), 
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[4]), 
		 -> STR_4(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), STR_1(CODE[4]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_utoa
    _utoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _set_years->___awdiv
    _set_seconds->___awdiv
    _set_months->___awdiv
    _set_minutes->___awdiv
    _set_hours->___awdiv
    _set_days->___awdiv
    _set_dayname->_i2c_write
    _set_Aseconds->___awdiv
    _set_Aminutes->___awdiv
    _set_Ahours->___awdiv
    _rtc_init->_i2c_read
    _lcd_init->_lcd_command
    _get_years->_i2c_read
    _get_seconds->_i2c_read
    _get_months->_i2c_read
    _get_minutes->_i2c_read
    _get_hours->_i2c_read
    _get_days->_i2c_read
    _get_dayname->_i2c_read
    _get_Aseconds->_i2c_read
    _get_Aminutes->_i2c_read
    _get_Ahours->_i2c_read

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                62    62      0   95668
                                             10 BANK0     62    62      0
                            ___lldiv
                            _adcNum0
                           _adc_init
                         _get_Ahours
                       _get_Aminutes
                       _get_Aseconds
                        _get_dayname
                           _get_days
                          _get_hours
                        _get_minutes
                         _get_months
                        _get_seconds
                          _get_years
                           _i2c_init
                           _i2c_read
                          _i2c_write
                           _lcd_char
                        _lcd_command
                           _lcd_init
                           _rtc_init
                         _set_Ahours
                       _set_Aminutes
                       _set_Aseconds
                        _set_dayname
                           _set_days
                          _set_hours
                        _set_minutes
                         _set_months
                        _set_seconds
                          _set_years
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             16    10      6    8835
                                             87 COMRAM     6     0      6
                                              0 BANK0     10    10      0
                         _get_Ahours (ARG)
                       _get_Aminutes (ARG)
                       _get_Aseconds (ARG)
                           _get_days (ARG)
                          _get_hours (ARG)
                        _get_minutes (ARG)
                         _get_months (ARG)
                        _get_seconds (ARG)
                          _get_years (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    6202
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           46    40      6    5846
                                             59 COMRAM    20    14      6
                              _fputc
                            _strncmp
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                32    22     10    3911
                                             27 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             17     1     16     311
                                              0 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             25     9     16     314
                                              0 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (1) _set_years                                            3     3      0    5919
                                              8 COMRAM     3     3      0
                            ___awdiv
                            ___awmod
                          _i2c_write
 ---------------------------------------------------------------------------------
 (1) _set_seconds                                          4     4      0    7271
                                              8 COMRAM     4     4      0
                            ___awdiv
                            ___awmod
                           _i2c_read
                          _i2c_write
 ---------------------------------------------------------------------------------
 (1) _set_months                                           3     3      0    5941
                                              8 COMRAM     3     3      0
                            ___awdiv
                            ___awmod
                          _i2c_write
 ---------------------------------------------------------------------------------
 (1) _set_minutes                                          3     3      0    5919
                                              8 COMRAM     3     3      0
                            ___awdiv
                            ___awmod
                          _i2c_write
 ---------------------------------------------------------------------------------
 (1) _set_hours                                            4     4      0    7271
                                              8 COMRAM     4     4      0
                            ___awdiv
                            ___awmod
                           _i2c_read
                          _i2c_write
 ---------------------------------------------------------------------------------
 (1) _set_days                                             3     3      0    5941
                                              8 COMRAM     3     3      0
                            ___awdiv
                            ___awmod
                          _i2c_write
 ---------------------------------------------------------------------------------
 (1) _set_dayname                                          1     1      0    2564
                                              3 COMRAM     1     1      0
                          _i2c_write
 ---------------------------------------------------------------------------------
 (1) _set_Aseconds                                         3     3      0    5919
                                              8 COMRAM     3     3      0
                            ___awdiv
                            ___awmod
                          _i2c_write
 ---------------------------------------------------------------------------------
 (1) _set_Aminutes                                         3     3      0    5919
                                              8 COMRAM     3     3      0
                            ___awdiv
                            ___awmod
                          _i2c_write
 ---------------------------------------------------------------------------------
 (1) _set_Ahours                                           4     4      0    7271
                                              8 COMRAM     4     4      0
                            ___awdiv
                            ___awmod
                           _i2c_read
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4    1664
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1668
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _rtc_init                                             4     4      0    3962
                                              7 COMRAM     4     4      0
                           _i2c_read
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _i2c_write                                            3     1      2    2498
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     295
                        _lcd_command
 ---------------------------------------------------------------------------------
 (2) _lcd_command                                          3     3      0     295
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _lcd_char                                             3     3      0     295
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _i2c_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_years                                            2     2      0    1373
                                              7 COMRAM     2     2      0
                           _i2c_read
 ---------------------------------------------------------------------------------
 (1) _get_seconds                                          2     2      0    1373
                                              7 COMRAM     2     2      0
                           _i2c_read
 ---------------------------------------------------------------------------------
 (1) _get_months                                           2     2      0    1373
                                              7 COMRAM     2     2      0
                           _i2c_read
 ---------------------------------------------------------------------------------
 (1) _get_minutes                                          2     2      0    1373
                                              7 COMRAM     2     2      0
                           _i2c_read
 ---------------------------------------------------------------------------------
 (1) _get_hours                                            2     2      0    1373
                                              7 COMRAM     2     2      0
                           _i2c_read
 ---------------------------------------------------------------------------------
 (1) _get_days                                             2     2      0    1373
                                              7 COMRAM     2     2      0
                           _i2c_read
 ---------------------------------------------------------------------------------
 (1) _get_dayname                                          1     1      0    1351
                                              7 COMRAM     1     1      0
                           _i2c_read
 ---------------------------------------------------------------------------------
 (1) _get_Aseconds                                         2     2      0    1373
                                              7 COMRAM     2     2      0
                           _i2c_read
 ---------------------------------------------------------------------------------
 (1) _get_Aminutes                                         2     2      0    1373
                                              7 COMRAM     2     2      0
                           _i2c_read
 ---------------------------------------------------------------------------------
 (1) _get_Ahours                                           2     2      0    1373
                                              7 COMRAM     2     2      0
                           _i2c_read
 ---------------------------------------------------------------------------------
 (2) _i2c_read                                             7     6      1    1328
                                              0 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 (1) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adcNum0                                              7     3      4       0
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             13     5      8    1378
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lldiv
   _adcNum0
   _adc_init
   _get_Ahours
     _i2c_read
   _get_Aminutes
     _i2c_read
   _get_Aseconds
     _i2c_read
   _get_dayname
     _i2c_read
   _get_days
     _i2c_read
   _get_hours
     _i2c_read
   _get_minutes
     _i2c_read
   _get_months
     _i2c_read
   _get_seconds
     _i2c_read
   _get_years
     _i2c_read
   _i2c_init
   _i2c_read
   _i2c_write
   _lcd_char
   _lcd_command
   _lcd_init
     _lcd_command
   _rtc_init
     _i2c_read
     _i2c_write
   _set_Ahours
     ___awdiv
     ___awmod
     _i2c_read
     _i2c_write
   _set_Aminutes
     ___awdiv
     ___awmod
     _i2c_write
   _set_Aseconds
     ___awdiv
     ___awmod
     _i2c_write
   _set_dayname
     _i2c_write
   _set_days
     ___awdiv
     ___awmod
     _i2c_write
   _set_hours
     ___awdiv
     ___awmod
     _i2c_read
     _i2c_write
   _set_minutes
     ___awdiv
     ___awmod
     _i2c_write
   _set_months
     ___awdiv
     ___awmod
     _i2c_write
   _set_seconds
     ___awdiv
     ___awmod
     _i2c_read
     _i2c_write
   _set_years
     ___awdiv
     ___awmod
     _i2c_write
   _sprintf
     _get_Ahours (ARG)
       _i2c_read
     _get_Aminutes (ARG)
       _i2c_read
     _get_Aseconds (ARG)
       _i2c_read
     _get_days (ARG)
       _i2c_read
     _get_hours (ARG)
       _i2c_read
     _get_minutes (ARG)
       _i2c_read
     _get_months (ARG)
       _i2c_read
     _get_seconds (ARG)
       _i2c_read
     _get_years (ARG)
       _i2c_read
     _vfprintf (ARG)
       _vfpfcnvrt
         _fputc
           _putch
         _strncmp
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E87      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     48      72       5       71.3%
BITBANK14           88      0       0      33        0.0%
BANK14              88      0       0      34        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5D      5F       1      100.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      D1       6        0.0%
DATA                 0      0      D1       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Apr 24 14:01:16 2020

           ?_get_minutes 0001             ?_get_seconds 0001              main@AsetNum 009C  
            main@u24_370 0084              main@u60_371 008B             lcd_char@temp 0002  
            get_days@day 0009                       l41 2BEE                       l51 3236  
                     l44 3150                       l62 2CC2                       l55 2F12  
                     l72 3216                       l48 2C58                       l65 32A0  
                     l58 3172                       l90 2EBA                       l83 2DFC  
                     l76 2D94                       l93 3194                       l69 3104  
                     l86 31F6                       l79 3256                       l97 2F6A  
           ___awdiv@sign 0006              __CFG_LVP$ON 000000             rtc_init@hour 000B  
                    l100 3276                      l111 2D2C                      l104 2FC2  
                    l121 113A                      l107 31B6                      l203 1B96  
                    l123 114E                      l300 21F4                      l301 2216  
                    l221 1D2A                      l310 223A                      l302 2204  
                    l311 225C                      l143 13B4                      l119 0FF0  
                    l240 32AA                      l312 224A                      l321 22B4  
                    l305 2218                      l217 1CF0                      l322 22BC  
                    l330 2726                      l218 1D12                      l243 3068  
                    l315 22A6                      l147 1456                      l139 1312  
                    l324 22CA                      l308 222C                      l340 27E4  
                    l404 2194                      l245 3076                      l325 22CC  
                    l261 2A1A                      l341 2770                      l333 273C  
                    l173 17F0                      l165 16A0                      l246 309C  
                    l318 2294                      l350 27B2                      l255 2960  
                    l351 27D4                      l343 277E                      l335 274A  
                    l183 18DC                      l352 27C2                      l344 27A0  
                    l336 276C                      l416 2E5A                      l345 278E  
                    l337 275A                      l409 1F94                      l417 2E62  
                    l185 1964                      l177 1820                      l169 1742  
                    l290 21B0                      l258 31D6                      l178 1C38  
                    l355 27D6                      l187 1978                      l292 21BE  
                    l284 312E                      l348 27A4                      l293 21E2  
                    l454 2B6E                      l294 21CE                      l447 2B5E  
                    l287 219A                      l199 1AF4                      l384 282A  
                    l297 22DC                      l298 21E6                      l394 1FCE  
                    l651 2720                      l387 286C                      l396 1FD6  
                    l389 28A6                      l664 2ACA                      l865 24C2  
                    l858 24A2                      l875 2592                      l868 2572  
                    _pad 27E6             ___awmod@sign 0006                      wreg 000FE8  
            main@alarmON 0087             lcd_command@x 0003                     l1103 265C  
                   l1111 3058                     l1121 32AC                     l1131 23D2  
                   l1118 3014                     l1127 30D2                     l3000 11BA  
                   l3010 122C                     l3002 11C4                     l2300 25B8  
                   l3100 14E6                     l3020 1264                     l2302 25C2  
                   l2310 3016                     l3102 14FE                     l3110 1546  
                   l3030 12B2                     l3022 1276                     l3014 124C  
                   l3006 11CE                     l2304 25E0                     l2312 3022  
                   l2320 30AA                     l2400 200E                     l3200 1844  
                   l3120 15CC                     l3104 1516                     l3112 159C  
                   l3040 1306                     l3032 12C2                     l3024 1298  
                   l3016 125C                     l3008 1222                     l2306 2616  
                   l2314 3034                     l2322 30AE                     l2330 27F4  
                   l2402 2014                     l2410 20FA                     l3210 1884  
                   l3202 184E                     l3130 1604                     l3122 15DC  
                   l3114 15A2                     l3106 152E                     l3050 1354  
                   l3042 1318                     l3034 12D4                     l3026 129C  
                   l2316 3038                     l2324 30C6                     l2340 284A  
                   l2332 2808                     l2412 210C                     l2420 216C  
                   l2404 208A                     l3300 1BD8                     l3220 195C  
                   l3212 189C                     l3204 1860                     l3140 1650  
                   l3132 1626                     l3124 15E2                     l3116 15AC  
                   l3060 13A8                     l3052 1364                     l3044 133A  
                   l3036 12E4                     l3028 12A0                     l2510 2248  
                   l2502 2202                     l2430 2314                     l2350 23D4  
                   l2318 309E                     l2342 284E                     l2334 2816  
                   l2414 212A                     l2406 2090                     l3310 1C2C  
                   l3302 1BE8                     l3230 19BC                     l3222 197A  
                   l3214 1934                     l3206 1866                     l3150 16A6  
                   l3142 1662                     l3134 162A                     l3070 13F6  
                   l3062 13BA                     l3054 1376                     l3046 133E  
                   l3038 12F4                     l2520 2292                     l2600 267C  
                   l2440 23A6                     l2432 2322                     l2424 22DE  
                   l2360 2428                     l2352 23E0                     l2344 287A  
                   l2336 2822                     l2328 27E6                     l2416 2144  
                   l2408 2096                     l3320 1C88                     l3312 1C54  
                   l3304 1BFA                     l3240 1A0E                     l3232 19C6  
                   l3224 199A                     l3216 1942                     l3208 186E  
                   l3160 16F2                     l3152 16C8                     l3144 1672  
                   l3136 162E                     l3128 15EC                     l3080 144A  
                   l3072 1406                     l3064 13DC                     l3056 1386  
                   l3048 1342                     l2530 2724                     l2610 26B0  
                   l2602 268A                     l2434 2342                     l2426 2308  
                   l2370 249C                     l2362 243A                     l2354 23FE  
                   l2346 288E                     l2338 2836                     l2418 215E  
                   l2450 1DAA                     l3330 1CDC                     l3322 1CA4  
                   l3314 1C60                     l3306 1C0A                     l3250 1A46  
                   l3226 19AC                     l3218 1948                     l3170 1754  
                   l3162 1704                     l3154 16CC                     l3146 1682  
                   l3138 1640                     l3090 1496                     l3082 145C  
                   l3074 1418                     l3066 13E0                     l3058 1396  
                   l2516 225E                     l2508 2226                     l2540 28AA  
                   l2532 2734                     l2620 26EA                     l2612 26B8  
                   l2604 2692                     l2700 2BF2                     l2436 2362  
                   l2364 2468                     l2356 2406                     l2380 250C  
                   l2372 24C4                     l2460 1E58                     l2452 1DAE  
                   l2444 1D62                     l3340 1D34                     l3332 1CF2  
                   l3324 1CB2                     l3316 1C68                     l3308 1C1A  
                   l3260 1A94                     l3252 1A58                     l3244 1A2E  
                   l3228 19B2                     l3236 19D0                     l3180 17A0  
                   l3172 1776                     l3164 1714                     l3156 16D0  
                   l3148 1694                     l3084 1466                     l3076 1428  
                   l3068 13E4                     l2526 22DA                     l2518 2272  
                   l2710 3218                     l2550 28D4                     l2542 28B6  
                   l2534 2758                     l2630 2710                     l2622 26F2  
                   l2614 26C0                     l2606 2696                     l2702 2C02  
                   l2438 2374                     l2366 2488                     l2358 241A  
                   l2382 253A                     l2374 24E2                     l2390 1FA6  
                   l2470 1F12                     l2462 1E8E                     l2454 1DD6  
                   l2446 1D8A                     l3342 1D3E                     l3326 1CC4  
                   l3318 1C76                     l3334 1D14                     l3270 1AE8  
                   l3262 1AA4                     l3254 1A7A                     l3246 1A3E  
                   l3238 1A04                     l3190 17FC                     l3182 17B2  
                   l3174 177A                     l3166 1724                     l3158 16E2  
                   l3094 149E                     l3078 1438                     l2712 3224  
                   l2560 28FA                     l2552 28DA                     l2544 28BA  
                   l2536 278C                     l2632 2718                     l2624 26F4  
                   l2616 26CE                     l2608 269E                     l2640 2A2E  
                   l2800 2F5C                     l2720 2F04                     l2704 2C38  
                   l2368 248A                     l2384 255A                     l2376 24EA  
                   l2296 2594                     l2392 1FA8                     l2480 1F4E  
                   l2472 1F20                     l2456 1E20                     l2448 1D98  
                   l3344 1D4C                     l3328 1CD2                     l3280 1B36  
                   l3272 1AFA                     l3264 1AB6                     l3256 1A7E  
                   l3192 1810                     l3184 17C2                     l3176 177E  
                   l3168 1736                     l3096 14B6                     l3088 1486  
                   l2802 3258                     l2722 3152                     l2570 2926  
                   l2562 28FE                     l2554 28E0                     l2546 28BE  
                   l2538 27C0                     l2626 26FA                     l2618 26D4  
                   l2650 2A62                     l2642 2A36                     l2810 2F7E  
                   l2730 2C6C                     l2706 2C44                     l2386 256C  
                   l2378 24FE                     l2298 25A6                     l2394 1FC2  
                   l2474 1F34                     l3338 1D2C                     l3290 1B8A  
                   l3282 1B46                     l3274 1B1C                     l3266 1AC6  
                   l3258 1A82                     l3194 181A                     l3186 17D2  
                   l3178 1790                     l3098 14CE                     l2492 2198  
                   l2804 3264                     l2740 329E                     l2724 315E  
                   l2580 294C                     l2572 292C                     l2564 290E  
                   l2556 28E4                     l2548 28CE                     l2628 2700  
                   l2660 2A9E                     l2652 2A6A                     l2644 2A3A  
                   l2636 2A1C                     l2820 2CC6                     l2812 2FB4  
                   l2732 2CA2                     l2716 2EBE                     l2708 2C48  
                   l2396 1FFE                     l2388 1F96                     l2468 1EEA  
                   l2484 1F5A                     l2900 2FC4                     l3292 1B9C  
                   l3284 1B58                     l3276 1B20                     l3268 1AD6  
                   l3188 17E4                     l3196 182A                     l2830 32A2  
                   l2494 21A8                     l2814 3196                     l2750 31F8  
                   l2582 2950                     l2574 2932                     l2566 2912  
                   l2558 28F4                     l2662 2AA4                     l2654 2A72  
                   l2646 2A48                     l2638 2A20                     l2822 2CD6  
                   l2734 2CAE                     l2718 2ECE                     l2398 2006  
                   l2486 1F82                     l2478 1F40                     l2590 2E3A  
                   l2902 2FD6                     l3294 1BBE                     l3286 1B68  
                   l3278 1B24                     l3198 183E                     l3454 11E4  
                   l2920 2B06                     l2912 2ACC                     l2832 32A4  
                   l2496 21CC                     l2816 31A2                     l2752 3204  
                   l2840 3128                     l2576 2936                     l2568 2922  
                   l2672 2B70                     l2592 265E                     l2656 2A80  
                   l2664 2AAA                     l2648 2A50                     l2824 2D0C  
                   l2808 2F6E                     l2744 30D6                     l2736 2CB2  
                   l2728 2C5C                     l2760 2D50                     l2584 2DFE  
                   l2904 2FDE                     l3296 1BC2                     l3288 1B78  
                   l3456 155E                     l2930 2B4E                     l2922 2B14  
                   l2914 2ADC                     l2850 3066                     l2498 21DC  
                   l2738 3292                     l2842 312A                     l2578 2946  
                   l2834 31B8                     l2690 2BD0                     l2674 2B7C  
                   l2594 2662                     l2666 2ABA                     l2658 2A96  
                   l2826 2D18                     l2746 30E6                     l2770 2D98  
                   l2762 2D86                     l2586 2E06                     l2906 2FE6  
                   l3298 1BC6                     l3458 19E6                     l2932 2B58  
                   l2924 2B1E                     l2916 2AF2                     l2852 3078  
                   l2764 3238                     l2780 31E4                     l2844 312C  
                   l2836 3106                     l2860 2974                     l2692 2BDE  
                   l2684 2BA2                     l2676 2B8A                     l2596 2670  
                   l2668 2AC2                     l2828 2D1C                     l2748 30F6  
                   l2772 2DA8                     l2756 2D30                     l2588 2E14  
                   l2908 3002                     l2940 0F4C                     l2926 2B3C  
                   l2918 2AFA                     l2846 305A                     l2790 3174  
                   l2766 3244                     l2694 3130                     l2838 310A  
                   l2870 299A                     l2862 2978                     l2686 2BAA  
                   l2678 2B9A                     l2598 2678                     l2774 2DB8  
                   l2758 2D40                     l2950 0F5A                     l2942 0F50  
                   l2934 0F22                     ?_pad 0011                     l2928 2B4C  
                   l2848 3064                     l2792 3180                     l2696 313C  
                   l2880 29C8                     l2872 299E                     l2864 2988  
                   l2856 2964                     l2688 2BC4                     l2776 2DEE  
                   l2784 2E66                     l2960 0F6A                     l2952 0F62  
                   l2944 0F54                     l2936 0F44                     l2778 31D8  
                   l2890 29EC                     l2882 29CC                     l2874 29AE  
                   l2866 298E                     l2858 2970                     l2786 2E76  
                   l2970 0F80                     l2962 0F6C                     l2954 0F64  
                   l2946 0F56                     l2938 0F48                     l2892 29F0  
                   l2884 29DC                     l2876 29B4                     l2868 2994  
                   l2796 2F16                     l2788 2EAC                     l2980 111E  
                   l2972 0F98                     l2964 0F6E                     l2956 0F66  
                   l2948 0F58                     l2894 2A00                     l2886 29E0  
                   l2878 29B8                     l2798 2F26                     l2990 1188  
                   l2982 1132                     l2974 0FB0                     l2966 0F70  
                   l2958 0F68                     l2896 2A06                     l2888 29E6  
                   l2992 1192                     l2984 1150                     l2976 110A  
                   l2968 0F72                     l2898 2A0A                     l2994 119C  
                   l2986 1170                     l2978 1118                     l2996 11A6  
                   l2988 1182                     l2998 11B0                     STR_1 0F1D  
                   STR_2 0F1D                     STR_3 0F1D                     STR_4 0F11  
                   STR_5 0F0D                     STR_6 0F05                     STR_7 0F01  
                   STR_8 0F19                     STR_9 0F09                     u2000 2292  
                   u2001 228E                     u2010 22A2                     u2011 229E  
                   u2020 22B4                     u2100 278C                     u2021 22B0  
                   u2101 2788                     u2030 22CA                     u2110 279C  
                   u2031 22C6                     u2111 2798                     u2040 22DA  
                   u2120 27B2                     u2200 26CE                     u3000 1BD8  
                   u2041 22D6                     u2121 27AE                     u2201 26CA  
                   u3001 1BD4                     u2130 27C0                     u2050 2734  
                   u2210 26EA                     u3010 1BE8                     u2131 27BC  
                   u2051 2730                     u2211 26E6                     u3011 1BE4  
                   u2140 27D0                     u2060 274A                     u2300 2BC4  
                   u2220 2710                     u3100 1D4C                     u3020 1C0A  
                   u2141 27CC                     u2061 2746                     u2301 2BC0  
                   u2221 270C                     u3101 1D48                     u3021 1C06  
                   u2150 27E4                     u2070 2758                     u2310 2BDE  
                   u2230 2A2E                     u3030 1C1A                     u2151 27E0  
                   u2071 2754                     u2311 2BDA                     u2231 2A2A  
                   u3031 1C16                     u2080 2768                     u2240 2A48  
                   u2400 2DB8                     u2320 2C02                     u1600 3058  
                   u2160 2E5A                     u3040 1C54                     u2081 2764  
                   u2241 2A44                     u2401 2DB4                     u2321 2BFE  
                   u1601 3054                     u2161 2E56                     u3041 1C50  
                   u2090 277E                     u2170 2670                     u2250 2A62  
                   u2330 2ECE                     u2410 2E76                     u1610 30C6  
                   u3050 1C76                     u2091 277A                     u2171 266C  
                   u2251 2A5E                     u2331 2ECA                     u2411 2E72  
                   u1611 30C2                     u3051 1C72                     u2180 268A  
                   u2260 2A80                     u2420 2F26                     u2340 2C6C  
                   u1700 24E2                     u1620 27F4                     u3060 1C88  
                   u2500 0F80                     u2181 2686                     u2261 2A7C  
                   u2421 2F22                     u2341 2C68                     u1701 24DE  
                   u1621 27F0                     u3117 1D2E                     u3061 1C84  
                   u2501 0F7C                     u2190 26B0                     u2270 2A96  
                   u2430 2F7E                     u2350 30E6                     u1710 250C  
                   u1630 2816                     u3070 1CC4                     u2510 0F98  
                   u3207 297E                     u2191 26AC                     u2271 2A92  
                   u2431 2F7A                     u2351 30E2                     u1711 2508  
                   u1631 2812                     u3127 1D38                     u3071 1CC0  
                   u2511 0F94                     u2280 2ABA                     u2440 2CD6  
                   u2360 30F6                     u1800 2308                     u1720 253A  
                   u1560 25A6                     u1640 286C                     u3080 1D12  
                   u2600 12F4                     u2520 1118                     u3217 29A4  
                   u3137 2BA4                     u2281 2AB6                     u2441 2CD2  
                   u2361 30F2                     u1801 2304                     u1721 2536  
                   u1561 25A2                     u1641 2868                     u3081 1D0E  
                   u2601 12F0                     u2521 1114                     u2450 3076  
                   u2290 2B8A                     u2370 2D40                     u1810 2342  
                   u1570 25B8                     u1650 287A                     u1730 1FA6  
                   u3090 1D26                     u2610 1354                     u2530 1132  
                   u2451 3072                     u3227 29BE                     u3147 28C4  
                   u2291 2B86                     u2371 2D3C                     u1811 233E  
                   u1571 25B4                     u1651 2876                     u1731 1FA2  
                   u3091 1D22                     u2611 1350                     u2531 112E  
                   u1900 21BE                     u2380 2D50                     u1820 2362  
                   u1580 25E0                     u1740 1FC2                     u2700 15C8  
                   u2620 1364                     u2540 1170                     u1901 21BA  
                   u3237 29D2                     u3157 28EA                     u2381 2D4C  
                   u1821 235E                     u1661 23DA                     u1581 25DC  
                   u1741 1FBE                     u2701 15C4                     u2621 1360  
                   u2541 116C                     u2470 2AF2                     u1910 21CC  
                   u2390 2DA8                     u1830 2374                     u1670 23FE  
                   u1590 2616                     u1750 210C                     u2710 1640  
                   u2630 1386                     u2550 1182                     u2471 2AEE  
                   u1911 21C8                     u3247 29F6                     u3167 2904  
                   u2391 2DA4                     u1831 2370                     u1671 23FA  
                   u1591 2612                     u1751 2108                     u2711 163C  
                   u2631 1382                     u2551 117E                     u2480 2B14  
                   u1920 21DC                     u1840 23A6                     u1680 2428  
                   u1760 212A                     u2800 17A0                     u2720 1650  
                   u2640 1396                     u2560 1248                     u2481 2B10  
                   u2465 3084                     u1921 21D8                     u3257 2A10  
                   u3177 2918                     u1841 23A2                     u1681 2424  
                   u1761 2126                     u2801 179C                     u2721 164C  
                   u2641 1392                     u2561 1244                     u2490 2B3C  
                   u1930 21F4                     u1690 2468                     u1770 2144  
                   u1850 1D8A                     u2810 17C2                     u2730 1672  
                   u2650 13F6                     u2570 12B2                     u2491 2B38  
                   u1931 21F0                     u3187 293C                     u1691 2464  
                   u1771 2140                     u1851 1D86                     u2811 17BE  
                   u2731 166E                     u2651 13F2                     u2571 12AE  
                   u1940 2202                     u1780 215E                     u1860 1DD6  
                   u2900 19AC                     u2820 17D2                     u2740 1682  
                   u2660 1406                     u2580 12C2                     u1941 21FE  
                   u3197 2956                     u1781 215A                     u1861 1DD2  
                   u2901 19A8                     u2821 17CE                     u2741 167E  
                   u2661 1402                     u2581 12BE                     u1950 2212  
                   u1790 216C                     u1870 1E8E                     u2910 1A2A  
                   u2830 1810                     u2750 16E2                     u2670 1428  
                   u2590 12E4                     u1951 220E                     u1791 2168  
                   u1871 1E8A                     u2911 1A26                     u2831 180C  
                   u2751 16DE                     u2671 1424                     u2591 12E0  
                   u1960 2226                     u1880 1F12                     u2920 1A94  
                   u2840 183E                     u2760 16F2                     u2680 1438  
                   u1961 2222                     u1881 1F0E                     u2921 1A90  
                   u2841 183A                     u2761 16EE                     u2681 1434  
                   u1970 223A                     u1890 21A8                     u2930 1AA4  
                   u2850 1860                     u2770 1714                     u2690 1482  
                   u1971 2236                     u1891 21A4                     u2931 1AA0  
                   u2851 185C                     u2771 1710                     u2691 147E  
                   u1980 2248                     u2940 1AC6                     u2860 1884  
                   u2780 1724                     u1981 2244                     u2941 1AC2  
                   u2861 1880                     u2781 1720                     u1990 2258  
                   u2950 1AD6                     u2870 1942                     u2790 1790  
                   u1991 2254                     u2951 1AD2                     u2871 193E  
                   u2791 178C                     u2960 1B36                     u2880 195C  
                   u2961 1B32                     u2881 1958                     u2970 1B46  
                   u2890 199A                     u2971 1B42                     u2891 1996  
                   u2980 1B68                     u2981 1B64                     u2990 1B78  
                   u2991 1B74              main@num_372 0072              main@num_386 0076  
                   _dbuf 00B2                     _main 0F22                     _prec 00B0  
                   _nout 00AC                     pad@i 0018                     pad@p 0015  
                   fsr1h 000FE2                     fsr2h 000FDA                     indf2 000FDF  
                   fsr1l 000FE1                     pad@w 001A                     fsr2l 000FD9  
                   _utoa 1F96                     prodl 000FF3                     start 0000  
           ___param_bank 000000                    ??_pad 0017     set_Ahours@Acurr_hour 000B  
                  ?_main 0001                    _ADPCH 000F5F          __end_of_adcNum0 309E  
        __end_of___awdiv 2722                    _ADRES 000F63                    STR_10 0F15  
                  STR_11 0F1D                    STR_12 0F1D                    STR_13 0F1D  
                  STR_14 0F1D                    STR_15 0F1D                    STR_16 0F1D  
          __CFG_WDTE$OFF 000000                    STR_19 0F1E          __end_of___awmod 2ACC  
        __end_of___lldiv 2B70                    ?_utoa 001C          __end_of___lodiv 24C4  
        ___awdiv@divisor 0003          __end_of___lomod 2594              i2c_read@num 0002  
        ___awdiv@counter 0005             vfpfcnvrt@fmt 003E             vfpfcnvrt@llu 0048  
                  _PORTD 000F90                    _flags 005E                    _fputc 2594  
                  _fputs 3016                    pad@fp 0011                    _width 00AE  
                  _putch 32AC                    main@i 0092                    tablat 000FF5  
                  nvmcon 000F81                    utoa@d 001E                    utoa@i 003A  
                  utoa@n 0032                    utoa@p 002E                    utoa@w 0030  
                  status 000FD8          __end_of_sprintf 3016          __end_of_strncmp 23D4  
       ___lodiv@dividend 0001          get_Ahours@Ahour 0009          __initialization 3278  
           __end_of_main 1D62             __end_of_utoa 2196         __end_of_i2c_init 3130  
       __end_of_i2c_read 22DE     __end_of_get_Aminutes 3278     __end_of_get_Aseconds 3196  
          get_hours@hour 0009                   ??_main 006A                   ??_utoa 0026  
          __activetblptr 000003            main@array_376 00A0         ___lodiv@quotient 0011  
                 _ADCON0 000F60                   ?_fputc 0001                   ?_fputs 000A  
       ___awdiv@dividend 0001                   _ANSELA 000F11                   ?_putch 0001  
                 _ANSELC 000F21         __end_of_adc_init 32AC             i2c_read@read 0006  
                 _RC3PPS 000EFA                   _RC4PPS 000EFB       __size_of_i2c_write 00C4  
           ?_set_dayname 0001     __size_of_get_dayname 0010            main@temp1_380 00A5  
          main@temp2_381 00A2         __end_of_lcd_char 2A1C         __end_of_get_days 3258  
           vfprintf@cfmt 0056         __end_of_lcd_init 31D8     __size_of_lcd_command 00BA  
           ?_set_minutes 0001             ?_set_seconds 0001                ??_adcNum0 0005  
              ??___awdiv 0005            get_years@year 0009                ??___awmod 0005  
              ??___lldiv 0009                ??___lodiv 0011                ??___lomod 0011  
   __size_of_get_minutes 0020     __size_of_get_seconds 0022          set_months@month 000B  
                 clear_0 3282         ___awdiv@quotient 0007          ___awmod@divisor 0003  
                 _value0 00A8          ___awmod@counter 0005                   pad@buf 0013  
                 main@u7 007C                   _strlen 309E                   fputc@c 0001  
        get_dayname@name 0008         __end_of_set_days 2DFE                   fputs@c 000E  
                 fputs@i 000F                   fputs@s 000A             __mediumconst 0000  
       __end_of_rtc_init 2BF0                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8                   putch@c 0001         __end_of_vfprintf 2E64  
                 utoa@fp 001C                ??_sprintf 005E                ??_strncmp 0007  
             __accesstop 0060  __end_of__initialization 328C            ___rparam_used 000001  
         __pcstackCOMRAM 0001            __end_of_fputc 265E            __end_of_fputs 305A  
          __end_of_putch 32AE        __end_of_i2c_write 27E6       __size_of_get_hours 0022  
     __size_of_get_years 0020                  ??_fputc 0005                  ??_fputs 000E  
                ??_putch 0001               __pbssBANK0 00A8                ?_i2c_init 0001  
              ?_i2c_read 0001      set_seconds@curr_sec 000B            ?_set_Aminutes 0001  
          ?_set_Aseconds 0001           get_minutes@min 0009           get_seconds@sec 0009  
        lcd_command@temp 0002         get_Aminutes@Amin 0009         set_Aminutes@Amin 000B  
       get_Aseconds@Asec 0009         set_Aseconds@Asec 000B    __size_of_get_Aminutes 0020  
  __size_of_get_Aseconds 0022               _get_Ahours 3196                ?_adc_init 0001  
     __size_of_set_hours 006A                  ?_strlen 0001       __size_of_set_years 0058  
     __size_of_vfpfcnvrt 0234               _get_months 31F8                  _SSP1ADD 000F93  
                _SSP1BUF 000F92                ?_lcd_char 0001                ?_get_days 0001  
              ?_lcd_init 0001         ___lomod@dividend 0001             _get_Aminutes 3258  
           _get_Aseconds 3174           ??_set_Aminutes 0009           ??_set_Aseconds 0009  
             ??_i2c_init 0001               ??_i2c_read 0002                  __Hparam 0000  
                __Lparam 0000                ?_set_days 0001     __size_of_set_dayname 0032  
      __end_of_get_hours 3174                ?_rtc_init 0001        __end_of_get_years 31F8  
                _adcNum0 305A                  ___awdiv 265E                  ___awmod 2A1C  
                ___lldiv 2ACC                  ___lodiv 23D4                  ___lomod 24C4  
              ?_vfprintf 0050             __psmallconst 0F00     __size_of_set_minutes 0058  
   __size_of_set_seconds 006A                  __pcinit 3278                  __ramtop 0F00  
            set_days@day 000B          i2c_read@address 0007               ??_adc_init 0001  
                __ptext0 0F22                  __ptext1 2FC4                  __ptext2 2DFE  
                __ptext3 1D62                  __ptext4 1F96                  __ptext5 27E6  
                __ptext6 309E                  __ptext7 3016                  __ptext8 2594  
                __ptext9 32AC          __size_of_strlen 0036             __size_of_pad 00C2  
       ___awmod@dividend 0001                  main@u12 007E                  main@u31 0080  
                main@u24 007A                  main@u60 0089                  main@u99 0082  
             ??_lcd_char 0001               ??_get_days 0008                  _sprintf 2FC4  
                main@num 006E               ??_lcd_init 0004                  _strncmp 22DE  
   end_of_initialization 328C               _set_Ahours 2CC4                  fputc@fp 0003  
                fputs@fp 000C        __end_of_set_hours 2CC4        __end_of_set_years 2EBC  
        ___lldiv@divisor 0005          ___lldiv@counter 000D               ??_set_days 0009  
      __end_of_vfpfcnvrt 1F96               _set_months 2D2E               ??_rtc_init 0008  
                postdec2 000FDD                  postinc0 000FEE                  postinc1 000FE6  
                postinc2 000FDE               ??_vfprintf 0056              ?_get_Ahours 0001  
                strlen@a 0003                  strlen@s 0001                _PORTAbits 000F8D  
              _PORTCbits 000F8F            i2c_write@data 0002                _TRISAbits 000F88  
              _TRISCbits 000F8A                _TRISDbits 000F8B              ?_get_months 0001  
            rtc_init@sec 000A            ??_get_dayname 0008               main@naming 008F  
          ??_lcd_command 0001               main@setNum 009A            ??_get_minutes 0008  
          ??_get_seconds 0008              vfpfcnvrt@ap 0040              vfpfcnvrt@fp 003C  
   __end_of_set_Aminutes 2FC4     __end_of_set_Aseconds 2F6C           __end_of_strlen 30D4  
    start_initialization 3278          ___lodiv@divisor 0009          ___lodiv@counter 0019  
            __end_of_pad 28A8                _i2c_write 2722           set_minutes@min 000B  
         set_seconds@sec 000C              ?_set_Ahours 0001      __size_of_get_Ahours 0022  
      __size_of_i2c_init 002A        __size_of_i2c_read 0148              vfprintf@fmt 0052  
            ?_set_months 0001      __end_of_get_dayname 32A2      __size_of_get_months 0020  
    __end_of_lcd_command 2962      __end_of_get_minutes 3238      __end_of_get_seconds 3152  
               ??_strlen 0003          set_Ahours@Ahour 000C        __size_of_adc_init 000A  
            __pbssCOMRAM 005E            __pcstackBANK0 0060               ?_i2c_write 0001  
      __size_of_lcd_char 00BA        __size_of_get_days 0020        __size_of_lcd_init 0020  
               ?_adcNum0 0001                 ?___awdiv 0001                 ?___awmod 0001  
               ?___lldiv 0001        __size_of_set_days 0068                 ?___lodiv 0001  
               ?___lomod 0001        __size_of_rtc_init 0080                _get_hours 3152  
    __size_of_set_Ahours 006A                _get_years 31D8        __size_of_vfprintf 0066  
     set_hours@curr_hour 000B          ___lomod@divisor 0009              __smallconst 0F00  
        ___lomod@counter 0011                 ?_sprintf 0058           __size_of_fputc 00CA  
         __size_of_fputs 0044      __size_of_set_months 0068                 ?_strncmp 0001  
         __size_of_putch 0002          get_months@month 0009                 _LATCbits 000F85  
            _get_dayname 3292            ??_set_dayname 0004          set_dayname@name 0004  
            _lcd_command 28A8                _set_hours 2C5A                _set_years 2E64  
            _get_minutes 3218              _get_seconds 3130            ??_set_minutes 0009  
          ??_set_seconds 0009    __size_of_set_Aminutes 0058    __size_of_set_Aseconds 0058  
           ??_get_Ahours 0008        i2c_read@registers 0001                _vfpfcnvrt 1D62  
             ?_get_hours 0001                lcd_char@x 0003               ?_get_years 0001  
             _ADCON0bits 000F60                main@i_353 0094                main@i_362 0096  
              main@i_377 0098                main@check 008D                main@alarm 009E  
              main@array 00A3                main@temp1 00A7                main@temp2 00A6  
           ??_get_months 0008              ??_i2c_write 0003            set_hours@hour 000C  
               _i2c_init 3106                 _i2c_read 2196       __end_of_get_Ahours 31B8  
           _set_Aminutes 2F6C             _set_Aseconds 2F14                 __Hrparam 0000  
             vfprintf@ap 0054                 __Lrparam 0000               vfprintf@fp 0050  
             ?_set_hours 0001               ?_set_years 0001      __end_of_set_dayname 3106  
     __end_of_get_months 3218         __size_of_adcNum0 0044         __size_of___awdiv 00C4  
       __size_of___awmod 00B0         __size_of___lldiv 00A4         __size_of___lodiv 00F0  
       __size_of___lomod 00D0               ?_vfpfcnvrt 003C                 _adc_init 32A2  
    __end_of_set_minutes 2F14      __end_of_set_seconds 2C5A               sprintf@fmt 005A  
          set_years@year 000B                 __ptext10 24C4                 __ptext11 23D4  
               __ptext20 2F14                 __ptext12 22DE                 __ptext21 2F6C  
               __ptext13 2E64                 __ptext30 3106                 __ptext22 2CC4  
               __ptext14 2BF0                 __ptext31 31D8                 __ptext23 2A1C  
               __ptext15 2D2E                 __ptext40 3196                 __ptext32 3130  
               __ptext24 265E                 __ptext16 2EBC                 __ptext41 2196  
               __ptext33 31F8                 __ptext25 2B70                 __ptext17 2C5A  
               __ptext42 32A2                 __ptext34 3218                 __ptext26 2722  
               __ptext18 2D96                 __ptext43 305A                 __ptext35 3152  
               __ptext27 31B8                 __ptext19 30D4                 __ptext44 2ACC  
               __ptext36 3238                 __ptext28 28A8                 __ptext37 3292  
               __ptext29 2962                 __ptext38 3174                 __ptext39 3258  
           _SSP1CON1bits 000F96             _SSP1CON2bits 000F97                 _lcd_char 2962  
               _get_days 3238                 _lcd_init 31B8             ??_set_Ahours 0009  
       __size_of_sprintf 0052         __size_of_strncmp 00F6            __size_of_main 0E40  
          __size_of_utoa 0200                 _set_days 2D96             ??_set_months 0009  
               _rtc_init 2B70                 _vfprintf 2DFE                rtc_init@i 0008  
           _SSP1STATbits 000F95                 main@temp 0086              ??_get_hours 0008  
            ??_get_years 0008       __end_of_set_Ahours 2D2E            ?_get_Aminutes 0001  
          ?_get_Aseconds 0001       __end_of_set_months 2D96                sprintf@ap 0062  
       ___lldiv@dividend 0001              _set_dayname 30D4                strncmp@_l 0001  
              strncmp@_r 0003              ??_set_hours 0009              ??_set_years 0009  
     i2c_write@registers 0001              _set_minutes 2EBC              _set_seconds 2BF0  
            ??_vfpfcnvrt 0042                 sprintf@f 0064                 sprintf@s 0058  
             _SSP1DATPPS 000EB8               _SSP1CLKPPS 000EB7         ___lldiv@quotient 0009  
               strncmp@l 0008                 strncmp@n 0005                 strncmp@r 000A  
       i2c_write@address 0003           ??_get_Aminutes 0008           ??_get_Aseconds 0008  
           ?_get_dayname 0001             ?_lcd_command 0001  
