

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Feb 12 15:13:33 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F47K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    33                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    34  0000                     
    35                           ; Version 2.10
    36                           ; Generated 31/07/2019 GMT
    37                           ; 
    38                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC18F47K40 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69  0000                     
    70                           	psect	idataBANK0
    71  001E2A                     __pidataBANK0:
    72                           	opt callstack 0
    73                           
    74                           ;initializer for _r1
    75  001E2A  80E8               	dw	33000
    76  001E2C  0000               	dw	0
    77                           
    78                           ;initializer for _volt
    79  001E2E  0005               	dw	5
    80  0000                     _ADRES	set	3939
    81  0000                     _ADCON0bits	set	3936
    82  0000                     _ADCON0	set	3936
    83  0000                     _TRISAbits	set	3976
    84  0000                     _PORTC	set	3983
    85  0000                     _TRISCbits	set	3978
    86                           
    87                           	psect	smallconst
    88  000F00                     __psmallconst:
    89                           	opt callstack 0
    90  000F00  00                 	db	0
    91  000F01                     STR_1:
    92  000F01  25                 	db	37
    93  000F02  6C                 	db	108	;'l'
    94  000F03  75                 	db	117	;'u'
    95  000F04  00                 	db	0
    96  0000                     
    97                           ; #config settings
    98  000F05  00                 	db	0	; dummy byte at the end
    99  0000                     
   100                           	psect	cinit
   101  001D8E                     __pcinit:
   102                           	opt callstack 0
   103  001D8E                     start_initialization:
   104                           	opt callstack 0
   105  001D8E                     __initialization:
   106                           	opt callstack 0
   107                           
   108                           ; NVMREG Errata
   109  001D8E                     	if	3969
   110  001D8E  8E81               	bsf	129,7,c
   111  001D90  9C81               	bcf	129,6,c
   112  001D92                     	endif
   113                           
   114                           ; Initialize objects allocated to BANK0 (6 bytes)
   115                           ; load TBLPTR registers with __pidataBANK0
   116  001D92  0E2A               	movlw	low __pidataBANK0
   117  001D94  6EF6               	movwf	tblptrl,c
   118  001D96  0E1E               	movlw	high __pidataBANK0
   119  001D98  6EF7               	movwf	tblptrh,c
   120  001D9A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   121  001D9C  6EF8               	movwf	tblptru,c
   122  001D9E  EE00  F0AC         	lfsr	0,__pdataBANK0
   123  001DA2  EE10 F006          	lfsr	1,6
   124  001DA6                     copy_data0:
   125  001DA6  0009               	tblrd		*+
   126  001DA8  CFF5 FFEE          	movff	tablat,postinc0
   127  001DAC  50E5               	movf	postdec1,w,c
   128  001DAE  50E1               	movf	fsr1l,w,c
   129  001DB0  E1FA               	bnz	copy_data0
   130                           
   131                           ; Clear objects allocated to BANK0 (48 bytes)
   132  001DB2  EE00  F060         	lfsr	0,__pbssBANK0
   133  001DB6  0E30               	movlw	48
   134  001DB8                     clear_0:
   135  001DB8  6AEE               	clrf	postinc0,c
   136  001DBA  06E8               	decf	wreg,f,c
   137  001DBC  E1FD               	bnz	clear_0
   138  001DBE                     end_of_initialization:
   139                           	opt callstack 0
   140  001DBE                     __end_of__initialization:
   141                           	opt callstack 0
   142  001DBE  0E00               	movlw	low (__Lsmallconst shr (0+16))
   143  001DC0  6EF8               	movwf	tblptru,c
   144  001DC2  0E0F               	movlw	high __Lsmallconst
   145  001DC4  6EF7               	movwf	tblptrh,c
   146  001DC6  0100               	movlb	0
   147  001DC8  EF83  F007         	goto	_main	;jump to C main() function
   148                           
   149                           	psect	bssBANK0
   150  000060                     __pbssBANK0:
   151                           	opt callstack 0
   152  000060                     _R:
   153                           	opt callstack 0
   154  000060                     	ds	4
   155  000064                     _value:
   156                           	opt callstack 0
   157  000064                     	ds	4
   158  000068                     _nout:
   159                           	opt callstack 0
   160  000068                     	ds	2
   161  00006A                     _width:
   162                           	opt callstack 0
   163  00006A                     	ds	2
   164  00006C                     _prec:
   165                           	opt callstack 0
   166  00006C                     	ds	2
   167  00006E                     _flags:
   168                           	opt callstack 0
   169  00006E                     	ds	2
   170  000070                     _dbuf:
   171                           	opt callstack 0
   172  000070                     	ds	32
   173                           
   174                           	psect	dataBANK0
   175  0000AC                     __pdataBANK0:
   176                           	opt callstack 0
   177  0000AC                     _r1:
   178                           	opt callstack 0
   179  0000AC                     	ds	4
   180  0000B0                     _volt:
   181                           	opt callstack 0
   182  0000B0                     	ds	2
   183                           
   184                           	psect	cstackBANK0
   185  000090                     __pcstackBANK0:
   186                           	opt callstack 0
   187  000090                     	ds	2
   188  000092                     sprintf@ap:
   189                           	opt callstack 0
   190                           
   191                           ; 2 bytes @ 0x2
   192  000092                     	ds	2
   193  000094                     sprintf@f:
   194                           	opt callstack 0
   195                           
   196                           ; 6 bytes @ 0x4
   197  000094                     	ds	6
   198  00009A                     ??_main:
   199                           
   200                           ; 1 bytes @ 0xA
   201  00009A                     	ds	2
   202  00009C                     main@array:
   203                           	opt callstack 0
   204                           
   205                           ; 7 bytes @ 0xC
   206  00009C                     	ds	7
   207  0000A3                     main@Vout:
   208                           	opt callstack 0
   209                           
   210                           ; 4 bytes @ 0x13
   211  0000A3                     	ds	4
   212  0000A7                     main@temp:
   213                           	opt callstack 0
   214                           
   215                           ; 1 bytes @ 0x17
   216  0000A7                     	ds	1
   217  0000A8                     main@i:
   218                           	opt callstack 0
   219                           
   220                           ; 2 bytes @ 0x18
   221  0000A8                     	ds	2
   222  0000AA                     main@i_187:
   223                           	opt callstack 0
   224                           
   225                           ; 2 bytes @ 0x1A
   226  0000AA                     	ds	2
   227                           
   228                           	psect	cstackCOMRAM
   229  000001                     __pcstackCOMRAM:
   230                           	opt callstack 0
   231  000001                     ??_lcd_command:
   232  000001                     ??_lcd_char:
   233  000001                     ?_strlen:
   234                           	opt callstack 0
   235  000001                     ?_strncmp:
   236                           	opt callstack 0
   237  000001                     ?_adcNum:
   238                           	opt callstack 0
   239  000001                     ?___lmul:
   240                           	opt callstack 0
   241  000001                     ?___lodiv:
   242                           	opt callstack 0
   243  000001                     ?___lomod:
   244                           	opt callstack 0
   245  000001                     fputc@c:
   246                           	opt callstack 0
   247  000001                     strlen@s:
   248                           	opt callstack 0
   249  000001                     strncmp@_l:
   250                           	opt callstack 0
   251  000001                     ___lmul@multiplier:
   252                           	opt callstack 0
   253  000001                     ___lodiv@dividend:
   254                           	opt callstack 0
   255  000001                     ___lomod@dividend:
   256                           	opt callstack 0
   257                           
   258                           ; 8 bytes @ 0x0
   259  000001                     	ds	1
   260  000002                     lcd_command@temp:
   261                           	opt callstack 0
   262  000002                     lcd_char@temp:
   263                           	opt callstack 0
   264                           
   265                           ; 1 bytes @ 0x1
   266  000002                     	ds	1
   267  000003                     lcd_command@x:
   268                           	opt callstack 0
   269  000003                     lcd_char@x:
   270                           	opt callstack 0
   271  000003                     fputc@fp:
   272                           	opt callstack 0
   273  000003                     strlen@a:
   274                           	opt callstack 0
   275  000003                     strncmp@_r:
   276                           	opt callstack 0
   277                           
   278                           ; 2 bytes @ 0x2
   279  000003                     	ds	1
   280  000004                     
   281                           ; 1 bytes @ 0x3
   282  000004                     	ds	1
   283  000005                     ??_fputc:
   284  000005                     ??_adcNum:
   285  000005                     strncmp@n:
   286                           	opt callstack 0
   287  000005                     ___lmul@multiplicand:
   288                           	opt callstack 0
   289                           
   290                           ; 4 bytes @ 0x4
   291  000005                     	ds	2
   292  000007                     ??_strncmp:
   293                           
   294                           ; 1 bytes @ 0x6
   295  000007                     	ds	1
   296  000008                     strncmp@l:
   297                           	opt callstack 0
   298                           
   299                           ; 2 bytes @ 0x7
   300  000008                     	ds	1
   301  000009                     ___lmul@product:
   302                           	opt callstack 0
   303  000009                     ___lodiv@divisor:
   304                           	opt callstack 0
   305  000009                     ___lomod@divisor:
   306                           	opt callstack 0
   307                           
   308                           ; 8 bytes @ 0x8
   309  000009                     	ds	1
   310  00000A                     fputs@s:
   311                           	opt callstack 0
   312  00000A                     strncmp@r:
   313                           	opt callstack 0
   314                           
   315                           ; 2 bytes @ 0x9
   316  00000A                     	ds	2
   317  00000C                     fputs@fp:
   318                           	opt callstack 0
   319                           
   320                           ; 2 bytes @ 0xB
   321  00000C                     	ds	1
   322  00000D                     ?___lldiv:
   323                           	opt callstack 0
   324  00000D                     ___lldiv@dividend:
   325                           	opt callstack 0
   326                           
   327                           ; 4 bytes @ 0xC
   328  00000D                     	ds	1
   329  00000E                     fputs@c:
   330                           	opt callstack 0
   331                           
   332                           ; 1 bytes @ 0xD
   333  00000E                     	ds	1
   334  00000F                     fputs@i:
   335                           	opt callstack 0
   336                           
   337                           ; 2 bytes @ 0xE
   338  00000F                     	ds	2
   339  000011                     ?_pad:
   340                           	opt callstack 0
   341  000011                     ___lomod@counter:
   342                           	opt callstack 0
   343  000011                     pad@fp:
   344                           	opt callstack 0
   345  000011                     ___lldiv@divisor:
   346                           	opt callstack 0
   347  000011                     ___lodiv@quotient:
   348                           	opt callstack 0
   349                           
   350                           ; 8 bytes @ 0x10
   351  000011                     	ds	2
   352  000013                     pad@buf:
   353                           	opt callstack 0
   354                           
   355                           ; 2 bytes @ 0x12
   356  000013                     	ds	2
   357  000015                     pad@p:
   358                           	opt callstack 0
   359  000015                     ___lldiv@quotient:
   360                           	opt callstack 0
   361                           
   362                           ; 4 bytes @ 0x14
   363  000015                     	ds	2
   364  000017                     ??_pad:
   365                           
   366                           ; 1 bytes @ 0x16
   367  000017                     	ds	1
   368  000018                     pad@i:
   369                           	opt callstack 0
   370                           
   371                           ; 2 bytes @ 0x17
   372  000018                     	ds	1
   373  000019                     ___lldiv@counter:
   374                           	opt callstack 0
   375  000019                     ___lodiv@counter:
   376                           	opt callstack 0
   377                           
   378                           ; 1 bytes @ 0x18
   379  000019                     	ds	1
   380  00001A                     pad@w:
   381                           	opt callstack 0
   382                           
   383                           ; 2 bytes @ 0x19
   384  00001A                     	ds	2
   385  00001C                     ?_utoa:
   386                           	opt callstack 0
   387  00001C                     utoa@fp:
   388                           	opt callstack 0
   389                           
   390                           ; 2 bytes @ 0x1B
   391  00001C                     	ds	2
   392  00001E                     utoa@d:
   393                           	opt callstack 0
   394                           
   395                           ; 8 bytes @ 0x1D
   396  00001E                     	ds	8
   397  000026                     ??_utoa:
   398                           
   399                           ; 1 bytes @ 0x25
   400  000026                     	ds	8
   401  00002E                     utoa@p:
   402                           	opt callstack 0
   403                           
   404                           ; 2 bytes @ 0x2D
   405  00002E                     	ds	2
   406  000030                     utoa@w:
   407                           	opt callstack 0
   408                           
   409                           ; 2 bytes @ 0x2F
   410  000030                     	ds	2
   411  000032                     utoa@n:
   412                           	opt callstack 0
   413                           
   414                           ; 8 bytes @ 0x31
   415  000032                     	ds	8
   416  00003A                     utoa@i:
   417                           	opt callstack 0
   418                           
   419                           ; 2 bytes @ 0x39
   420  00003A                     	ds	2
   421  00003C                     ?_vfpfcnvrt:
   422                           	opt callstack 0
   423  00003C                     vfpfcnvrt@fp:
   424                           	opt callstack 0
   425                           
   426                           ; 2 bytes @ 0x3B
   427  00003C                     	ds	2
   428  00003E                     vfpfcnvrt@fmt:
   429                           	opt callstack 0
   430                           
   431                           ; 2 bytes @ 0x3D
   432  00003E                     	ds	2
   433  000040                     vfpfcnvrt@ap:
   434                           	opt callstack 0
   435                           
   436                           ; 2 bytes @ 0x3F
   437  000040                     	ds	2
   438  000042                     ??_vfpfcnvrt:
   439                           
   440                           ; 1 bytes @ 0x41
   441  000042                     	ds	6
   442  000048                     vfpfcnvrt@llu:
   443                           	opt callstack 0
   444                           
   445                           ; 8 bytes @ 0x47
   446  000048                     	ds	8
   447  000050                     ?_vfprintf:
   448                           	opt callstack 0
   449  000050                     vfprintf@fp:
   450                           	opt callstack 0
   451                           
   452                           ; 2 bytes @ 0x4F
   453  000050                     	ds	2
   454  000052                     vfprintf@fmt:
   455                           	opt callstack 0
   456                           
   457                           ; 2 bytes @ 0x51
   458  000052                     	ds	2
   459  000054                     vfprintf@ap:
   460                           	opt callstack 0
   461                           
   462                           ; 2 bytes @ 0x53
   463  000054                     	ds	2
   464  000056                     vfprintf@cfmt:
   465                           	opt callstack 0
   466                           
   467                           ; 2 bytes @ 0x55
   468  000056                     	ds	2
   469  000058                     ?_sprintf:
   470                           	opt callstack 0
   471  000058                     sprintf@s:
   472                           	opt callstack 0
   473                           
   474                           ; 2 bytes @ 0x57
   475  000058                     	ds	2
   476  00005A                     sprintf@fmt:
   477                           	opt callstack 0
   478                           
   479                           ; 2 bytes @ 0x59
   480  00005A                     	ds	6
   481  000060                     
   482                           ; 1 bytes @ 0x5F
   483 ;;
   484 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   485 ;;
   486 ;; *************** function _main *****************
   487 ;; Defined at:
   488 ;;		line 204 in file "uP Part 2.c"
   489 ;; Parameters:    Size  Location     Type
   490 ;;		None
   491 ;; Auto vars:     Size  Location     Type
   492 ;;  temp            1   23[BANK0 ] unsigned char 
   493 ;;  i               2   26[BANK0 ] int 
   494 ;;  i               2   24[BANK0 ] int 
   495 ;;  array           7   12[BANK0 ] unsigned char [7]
   496 ;;  Vout            4   19[BANK0 ] unsigned long 
   497 ;; Return value:  Size  Location     Type
   498 ;;                  1    wreg      void 
   499 ;; Registers used:
   500 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   501 ;; Tracked objects:
   502 ;;		On entry : 0/0
   503 ;;		On exit  : 0/0
   504 ;;		Unchanged: 0/0
   505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   507 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   508 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   509 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   510 ;;Total ram usage:       18 bytes
   511 ;; Hardware stack levels required when called:    8
   512 ;; This function calls:
   513 ;;		___lldiv
   514 ;;		___lmul
   515 ;;		_adcNum
   516 ;;		_adc_init
   517 ;;		_lcd_char
   518 ;;		_lcd_command
   519 ;;		_lcd_init
   520 ;;		_sprintf
   521 ;; This function is called by:
   522 ;;		Startup code after reset
   523 ;; This function uses a non-reentrant model
   524 ;;
   525                           
   526                           	psect	text0
   527  000F06                     __ptext0:
   528                           	opt callstack 0
   529  000F06                     _main:
   530                           	opt callstack 23
   531  000F06                     
   532                           ;uP Part 2.c: 205:     adc_init();
   533  000F06  EC11  F00F         	call	_adc_init	;wreg free
   534  000F0A                     
   535                           ;uP Part 2.c: 206:     lcd_init();
   536  000F0A  EC01  F00F         	call	_lcd_init	;wreg free
   537  000F0E                     l1605:
   538                           
   539                           ;uP Part 2.c: 218:         value = adcNum()-3;
   540  000F0E  EC80  F00E         	call	_adcNum	;wreg free
   541  000F12  0EFD               	movlw	253
   542  000F14  2401               	addwf	?_adcNum^0,w,c
   543  000F16  0100               	movlb	0	; () banked
   544  000F18  6F64               	movwf	_value& (0+255),b
   545  000F1A  0EFF               	movlw	255
   546  000F1C  2002               	addwfc	(?_adcNum+1)^0,w,c
   547  000F1E  6F65               	movwf	(_value+1)& (0+255),b
   548  000F20  0EFF               	movlw	255
   549  000F22  2003               	addwfc	(?_adcNum+2)^0,w,c
   550  000F24  6F66               	movwf	(_value+2)& (0+255),b
   551  000F26  0EFF               	movlw	255
   552  000F28  2004               	addwfc	(?_adcNum+3)^0,w,c
   553  000F2A  6F67               	movwf	(_value+3)& (0+255),b
   554  000F2C                     
   555                           ; BSR set to: 0
   556                           ;uP Part 2.c: 221:         unsigned long Vout = (value*volt*1000)/1023;
   557  000F2C  C064  F001         	movff	_value,___lmul@multiplier
   558  000F30  C065  F002         	movff	_value+1,___lmul@multiplier+1
   559  000F34  C066  F003         	movff	_value+2,___lmul@multiplier+2
   560  000F38  C067  F004         	movff	_value+3,___lmul@multiplier+3
   561  000F3C  0E88               	movlw	136
   562  000F3E  6E05               	movwf	___lmul@multiplicand^0,c
   563  000F40  0E13               	movlw	19
   564  000F42  6E06               	movwf	(___lmul@multiplicand+1)^0,c
   565  000F44  0E00               	movlw	0
   566  000F46  6E07               	movwf	(___lmul@multiplicand+2)^0,c
   567  000F48  0E00               	movlw	0
   568  000F4A  6E08               	movwf	(___lmul@multiplicand+3)^0,c
   569  000F4C  ECF1  F00D         	call	___lmul	;wreg free
   570  000F50  C001  F00D         	movff	?___lmul,___lldiv@dividend
   571  000F54  C002  F00E         	movff	?___lmul+1,___lldiv@dividend+1
   572  000F58  C003  F00F         	movff	?___lmul+2,___lldiv@dividend+2
   573  000F5C  C004  F010         	movff	?___lmul+3,___lldiv@dividend+3
   574  000F60  0EFF               	movlw	255
   575  000F62  6E11               	movwf	___lldiv@divisor^0,c
   576  000F64  0E03               	movlw	3
   577  000F66  6E12               	movwf	(___lldiv@divisor+1)^0,c
   578  000F68  0E00               	movlw	0
   579  000F6A  6E13               	movwf	(___lldiv@divisor+2)^0,c
   580  000F6C  0E00               	movlw	0
   581  000F6E  6E14               	movwf	(___lldiv@divisor+3)^0,c
   582  000F70  EC9F  F00D         	call	___lldiv	;wreg free
   583  000F74  C00D  F0A3         	movff	?___lldiv,main@Vout
   584  000F78  C00E  F0A4         	movff	?___lldiv+1,main@Vout+1
   585  000F7C  C00F  F0A5         	movff	?___lldiv+2,main@Vout+2
   586  000F80  C010  F0A6         	movff	?___lldiv+3,main@Vout+3
   587  000F84                     
   588                           ;uP Part 2.c: 222:         R = (Vout*r1)/((volt*1000)-Vout);
   589  000F84  C0A3  F001         	movff	main@Vout,___lmul@multiplier
   590  000F88  C0A4  F002         	movff	main@Vout+1,___lmul@multiplier+1
   591  000F8C  C0A5  F003         	movff	main@Vout+2,___lmul@multiplier+2
   592  000F90  C0A6  F004         	movff	main@Vout+3,___lmul@multiplier+3
   593  000F94  0EE8               	movlw	232
   594  000F96  6E05               	movwf	___lmul@multiplicand^0,c
   595  000F98  0E80               	movlw	128
   596  000F9A  6E06               	movwf	(___lmul@multiplicand+1)^0,c
   597  000F9C  0E00               	movlw	0
   598  000F9E  6E07               	movwf	(___lmul@multiplicand+2)^0,c
   599  000FA0  0E00               	movlw	0
   600  000FA2  6E08               	movwf	(___lmul@multiplicand+3)^0,c
   601  000FA4  ECF1  F00D         	call	___lmul	;wreg free
   602  000FA8  C001  F00D         	movff	?___lmul,___lldiv@dividend
   603  000FAC  C002  F00E         	movff	?___lmul+1,___lldiv@dividend+1
   604  000FB0  C003  F00F         	movff	?___lmul+2,___lldiv@dividend+2
   605  000FB4  C004  F010         	movff	?___lmul+3,___lldiv@dividend+3
   606  000FB8  0100               	movlb	0	; () banked
   607  000FBA  51A3               	movf	main@Vout& (0+255),w,b
   608  000FBC  0888               	sublw	136
   609  000FBE  6E11               	movwf	___lldiv@divisor^0,c
   610  000FC0  0E13               	movlw	19
   611  000FC2  55A4               	subfwb	(main@Vout+1)& (0+255),w,b
   612  000FC4  6E12               	movwf	(___lldiv@divisor+1)^0,c
   613  000FC6  0E00               	movlw	0
   614  000FC8  55A5               	subfwb	(main@Vout+2)& (0+255),w,b
   615  000FCA  6E13               	movwf	(___lldiv@divisor+2)^0,c
   616  000FCC  0E00               	movlw	0
   617  000FCE  55A6               	subfwb	(main@Vout+3)& (0+255),w,b
   618  000FD0  6E14               	movwf	(___lldiv@divisor+3)^0,c
   619  000FD2  EC9F  F00D         	call	___lldiv	;wreg free
   620  000FD6  C00D  F060         	movff	?___lldiv,_R
   621  000FDA  C00E  F061         	movff	?___lldiv+1,_R+1
   622  000FDE  C00F  F062         	movff	?___lldiv+2,_R+2
   623  000FE2  C010  F063         	movff	?___lldiv+3,_R+3
   624  000FE6                     
   625                           ;uP Part 2.c: 224:        char array[7];;uP Part 2.c: 226:        for(int i=0; i<7; i++)
      +                          {
   626  000FE6  0E00               	movlw	0
   627  000FE8  0100               	movlb	0	; () banked
   628  000FEA  6FA9               	movwf	(main@i+1)& (0+255),b
   629  000FEC  0E00               	movlw	0
   630  000FEE  6FA8               	movwf	main@i& (0+255),b
   631  000FF0                     l1617:
   632                           
   633                           ; BSR set to: 0
   634                           ;uP Part 2.c: 227:            array[i]=0;
   635  000FF0  0E9C               	movlw	low main@array
   636  000FF2  25A8               	addwf	main@i& (0+255),w,b
   637  000FF4  6ED9               	movwf	fsr2l,c
   638  000FF6  0E00               	movlw	high main@array
   639  000FF8  21A9               	addwfc	(main@i+1)& (0+255),w,b
   640  000FFA  6EDA               	movwf	fsr2h,c
   641  000FFC  0E00               	movlw	0
   642  000FFE  6EDF               	movwf	indf2,c
   643  001000                     
   644                           ; BSR set to: 0
   645                           ;uP Part 2.c: 228:        }
   646  001000  4BA8               	infsnz	main@i& (0+255),f,b
   647  001002  2BA9               	incf	(main@i+1)& (0+255),f,b
   648  001004                     
   649                           ; BSR set to: 0
   650  001004  BFA9               	btfsc	(main@i+1)& (0+255),7,b
   651  001006  EF0E  F008         	goto	u881
   652  00100A  51A9               	movf	(main@i+1)& (0+255),w,b
   653  00100C  E109               	bnz	u880
   654  00100E  0E07               	movlw	7
   655  001010  5DA8               	subwf	main@i& (0+255),w,b
   656  001012  A0D8               	btfss	status,0,c
   657  001014  EF0E  F008         	goto	u881
   658  001018  EF10  F008         	goto	u880
   659  00101C                     u881:
   660  00101C  EFF8  F007         	goto	l1617
   661  001020                     u880:
   662  001020                     
   663                           ; BSR set to: 0
   664                           ;uP Part 2.c: 230:        sprintf(array, "%lu", R);
   665  001020  0E9C               	movlw	low main@array
   666  001022  6E58               	movwf	sprintf@s^0,c
   667  001024  0E00               	movlw	high main@array
   668  001026  6E59               	movwf	(sprintf@s+1)^0,c
   669  001028  0E01               	movlw	low STR_1
   670  00102A  6E5A               	movwf	sprintf@fmt^0,c
   671  00102C  0E0F               	movlw	high STR_1
   672  00102E  6E5B               	movwf	(sprintf@fmt+1)^0,c
   673  001030  C060  F05C         	movff	_R,?_sprintf+4
   674  001034  C061  F05D         	movff	_R+1,?_sprintf+5
   675  001038  C062  F05E         	movff	_R+2,?_sprintf+6
   676  00103C  C063  F05F         	movff	_R+3,?_sprintf+7
   677  001040  EC57  F00E         	call	_sprintf	;wreg free
   678  001044                     
   679                           ;uP Part 2.c: 233:         if ((R<1000) || (R>1000000)){
   680  001044  0100               	movlb	0	; () banked
   681  001046  5163               	movf	(_R+3)& (0+255),w,b
   682  001048  1162               	iorwf	(_R+2)& (0+255),w,b
   683  00104A  E10B               	bnz	u890
   684  00104C  0EE8               	movlw	232
   685  00104E  5D60               	subwf	_R& (0+255),w,b
   686  001050  0E03               	movlw	3
   687  001052  5961               	subwfb	(_R+1)& (0+255),w,b
   688  001054  A0D8               	btfss	status,0,c
   689  001056  EF2F  F008         	goto	u891
   690  00105A  EF31  F008         	goto	u890
   691  00105E                     u891:
   692  00105E  EF40  F008         	goto	l1629
   693  001062                     u890:
   694  001062                     
   695                           ; BSR set to: 0
   696  001062  5163               	movf	(_R+3)& (0+255),w,b
   697  001064  E10D               	bnz	u900
   698  001066  0E41               	movlw	65
   699  001068  5D60               	subwf	_R& (0+255),w,b
   700  00106A  0E42               	movlw	66
   701  00106C  5961               	subwfb	(_R+1)& (0+255),w,b
   702  00106E  0E0F               	movlw	15
   703  001070  5962               	subwfb	(_R+2)& (0+255),w,b
   704  001072  A0D8               	btfss	status,0,c
   705  001074  EF3E  F008         	goto	u901
   706  001078  EF40  F008         	goto	u900
   707  00107C                     u901:
   708  00107C  EF66  F008         	goto	l1631
   709  001080                     u900:
   710  001080                     l1629:
   711                           
   712                           ; BSR set to: 0
   713                           ;uP Part 2.c: 235:             lcd_char('O');
   714  001080  0E4F               	movlw	79
   715  001082  EC42  F00D         	call	_lcd_char
   716                           
   717                           ;uP Part 2.c: 236:             lcd_char('u');
   718  001086  0E75               	movlw	117
   719  001088  EC42  F00D         	call	_lcd_char
   720                           
   721                           ;uP Part 2.c: 237:             lcd_char('t');
   722  00108C  0E74               	movlw	116
   723  00108E  EC42  F00D         	call	_lcd_char
   724                           
   725                           ;uP Part 2.c: 238:             lcd_char(' ');
   726  001092  0E20               	movlw	32
   727  001094  EC42  F00D         	call	_lcd_char
   728                           
   729                           ;uP Part 2.c: 239:             lcd_char('o');
   730  001098  0E6F               	movlw	111
   731  00109A  EC42  F00D         	call	_lcd_char
   732                           
   733                           ;uP Part 2.c: 240:             lcd_char('f');
   734  00109E  0E66               	movlw	102
   735  0010A0  EC42  F00D         	call	_lcd_char
   736                           
   737                           ;uP Part 2.c: 241:             lcd_char(' ');
   738  0010A4  0E20               	movlw	32
   739  0010A6  EC42  F00D         	call	_lcd_char
   740                           
   741                           ;uP Part 2.c: 242:             lcd_char('B');
   742  0010AA  0E42               	movlw	66
   743  0010AC  EC42  F00D         	call	_lcd_char
   744                           
   745                           ;uP Part 2.c: 243:             lcd_char('o');
   746  0010B0  0E6F               	movlw	111
   747  0010B2  EC42  F00D         	call	_lcd_char
   748                           
   749                           ;uP Part 2.c: 244:             lcd_char('u');
   750  0010B6  0E75               	movlw	117
   751  0010B8  EC42  F00D         	call	_lcd_char
   752                           
   753                           ;uP Part 2.c: 245:             lcd_char('n');
   754  0010BC  0E6E               	movlw	110
   755  0010BE  EC42  F00D         	call	_lcd_char
   756                           
   757                           ;uP Part 2.c: 246:             lcd_char('d');
   758  0010C2  0E64               	movlw	100
   759  0010C4  EC42  F00D         	call	_lcd_char
   760                           
   761                           ;uP Part 2.c: 247:         }
   762  0010C8  EFA7  F008         	goto	l1651
   763  0010CC                     l1631:
   764                           
   765                           ; BSR set to: 0
   766                           ;uP Part 2.c: 250:             lcd_char('R');
   767  0010CC  0E52               	movlw	82
   768  0010CE  EC42  F00D         	call	_lcd_char
   769                           
   770                           ;uP Part 2.c: 251:             lcd_char('=');
   771  0010D2  0E3D               	movlw	61
   772  0010D4  EC42  F00D         	call	_lcd_char
   773                           
   774                           ;uP Part 2.c: 252:             lcd_char(' ');
   775  0010D8  0E20               	movlw	32
   776  0010DA  EC42  F00D         	call	_lcd_char
   777  0010DE                     
   778                           ;uP Part 2.c: 255:             for(int i=0; i<7; i++){
   779  0010DE  0E00               	movlw	0
   780  0010E0  0100               	movlb	0	; () banked
   781  0010E2  6FAB               	movwf	(main@i_187+1)& (0+255),b
   782  0010E4  0E00               	movlw	0
   783  0010E6  6FAA               	movwf	main@i_187& (0+255),b
   784  0010E8                     l1639:
   785                           
   786                           ; BSR set to: 0
   787                           ;uP Part 2.c: 256:                 char temp = array[i];
   788  0010E8  0E9C               	movlw	low main@array
   789  0010EA  25AA               	addwf	main@i_187& (0+255),w,b
   790  0010EC  6ED9               	movwf	fsr2l,c
   791  0010EE  0E00               	movlw	high main@array
   792  0010F0  21AB               	addwfc	(main@i_187+1)& (0+255),w,b
   793  0010F2  6EDA               	movwf	fsr2h,c
   794  0010F4  50DF               	movf	indf2,w,c
   795  0010F6  6FA7               	movwf	main@temp& (0+255),b
   796  0010F8                     
   797                           ; BSR set to: 0
   798                           ;uP Part 2.c: 257:                 if(temp != 0){
   799  0010F8  51A7               	movf	main@temp& (0+255),w,b
   800  0010FA  B4D8               	btfsc	status,2,c
   801  0010FC  EF82  F008         	goto	u911
   802  001100  EF84  F008         	goto	u910
   803  001104                     u911:
   804  001104  EF98  F008         	goto	l1649
   805  001108                     u910:
   806  001108                     
   807                           ; BSR set to: 0
   808                           ;uP Part 2.c: 258:                     lcd_char(temp);
   809  001108  51A7               	movf	main@temp& (0+255),w,b
   810  00110A  EC42  F00D         	call	_lcd_char
   811  00110E                     
   812                           ;uP Part 2.c: 263:             }
   813  00110E  0100               	movlb	0	; () banked
   814  001110  4BAA               	infsnz	main@i_187& (0+255),f,b
   815  001112  2BAB               	incf	(main@i_187+1)& (0+255),f,b
   816  001114                     
   817                           ; BSR set to: 0
   818  001114  BFAB               	btfsc	(main@i_187+1)& (0+255),7,b
   819  001116  EF96  F008         	goto	u921
   820  00111A  51AB               	movf	(main@i_187+1)& (0+255),w,b
   821  00111C  E109               	bnz	u920
   822  00111E  0E07               	movlw	7
   823  001120  5DAA               	subwf	main@i_187& (0+255),w,b
   824  001122  A0D8               	btfss	status,0,c
   825  001124  EF96  F008         	goto	u921
   826  001128  EF98  F008         	goto	u920
   827  00112C                     u921:
   828  00112C  EF74  F008         	goto	l1639
   829  001130                     u920:
   830  001130                     l1649:
   831                           
   832                           ; BSR set to: 0
   833                           ;uP Part 2.c: 264:             lcd_char(' ');
   834  001130  0E20               	movlw	32
   835  001132  EC42  F00D         	call	_lcd_char
   836                           
   837                           ;uP Part 2.c: 265:             lcd_char('O');
   838  001136  0E4F               	movlw	79
   839  001138  EC42  F00D         	call	_lcd_char
   840                           
   841                           ;uP Part 2.c: 266:             lcd_char('h');
   842  00113C  0E68               	movlw	104
   843  00113E  EC42  F00D         	call	_lcd_char
   844                           
   845                           ;uP Part 2.c: 267:             lcd_char('m');
   846  001142  0E6D               	movlw	109
   847  001144  EC42  F00D         	call	_lcd_char
   848                           
   849                           ;uP Part 2.c: 268:             lcd_char('s');
   850  001148  0E73               	movlw	115
   851  00114A  EC42  F00D         	call	_lcd_char
   852  00114E                     l1651:
   853                           
   854                           ;uP Part 2.c: 270:         _delay((unsigned long)((2000)*(4000000/4000.0)));
   855  00114E  0E0B               	movlw	11
   856  001150  0100               	movlb	0	; () banked
   857  001152  6F9B               	movwf	(??_main+1)& (0+255),b
   858  001154  0E26               	movlw	38
   859  001156  6F9A               	movwf	??_main& (0+255),b
   860  001158  0E5D               	movlw	93
   861  00115A                     u937:
   862  00115A  2EE8               	decfsz	wreg,f,c
   863  00115C  D7FE               	bra	u937
   864  00115E  2F9A               	decfsz	??_main& (0+255),f,b
   865  001160  D7FC               	bra	u937
   866  001162  2F9B               	decfsz	(??_main+1)& (0+255),f,b
   867  001164  D7FA               	bra	u937
   868  001166  D000               	nop2	
   869  001168                     
   870                           ;uP Part 2.c: 273:         lcd_command(0x01);
   871  001168  0E01               	movlw	1
   872  00116A  ECE5  F00C         	call	_lcd_command
   873  00116E  EF87  F007         	goto	l1605
   874  001172  EF00  F000         	goto	start
   875  001176                     __end_of_main:
   876                           	opt callstack 0
   877                           
   878 ;; *************** function _sprintf *****************
   879 ;; Defined at:
   880 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
   881 ;; Parameters:    Size  Location     Type
   882 ;;  s               2   87[COMRAM] PTR unsigned char 
   883 ;;		 -> main@array(7), 
   884 ;;  fmt             2   89[COMRAM] PTR const unsigned char 
   885 ;;		 -> STR_1(4), 
   886 ;; Auto vars:     Size  Location     Type
   887 ;;  f               6    4[BANK0 ] struct _IO_FILE
   888 ;;  ap              2    2[BANK0 ] PTR void [1]
   889 ;;		 -> ?_sprintf(2), 
   890 ;;  ret             2    0        int 
   891 ;; Return value:  Size  Location     Type
   892 ;;                  2   87[COMRAM] int 
   893 ;; Registers used:
   894 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   895 ;; Tracked objects:
   896 ;;		On entry : 0/0
   897 ;;		On exit  : 0/0
   898 ;;		Unchanged: 0/0
   899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   900 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   901 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   903 ;;      Totals:         8      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   904 ;;Total ram usage:       18 bytes
   905 ;; Hardware stack levels used:    1
   906 ;; Hardware stack levels required when called:    7
   907 ;; This function calls:
   908 ;;		_vfprintf
   909 ;; This function is called by:
   910 ;;		_main
   911 ;; This function uses a non-reentrant model
   912 ;;
   913                           
   914                           	psect	text1
   915  001CAE                     __ptext1:
   916                           	opt callstack 0
   917  001CAE                     _sprintf:
   918                           	opt callstack 23
   919  001CAE  0E5C               	movlw	low (?_sprintf+4)
   920  001CB0  0100               	movlb	0	; () banked
   921  001CB2  6F92               	movwf	sprintf@ap& (0+255),b
   922  001CB4  0E00               	movlw	high (?_sprintf+4)
   923  001CB6  6F93               	movwf	(sprintf@ap+1)& (0+255),b
   924  001CB8  C058  F094         	movff	sprintf@s,sprintf@f
   925  001CBC  C059  F095         	movff	sprintf@s+1,sprintf@f+1
   926  001CC0                     
   927                           ; BSR set to: 0
   928  001CC0  0E00               	movlw	0
   929  001CC2  6F97               	movwf	(sprintf@f+3)& (0+255),b
   930  001CC4  0E00               	movlw	0
   931  001CC6  6F96               	movwf	(sprintf@f+2)& (0+255),b
   932  001CC8                     
   933                           ; BSR set to: 0
   934  001CC8  0E00               	movlw	0
   935  001CCA  6F99               	movwf	(sprintf@f+5)& (0+255),b
   936  001CCC  0E00               	movlw	0
   937  001CCE  6F98               	movwf	(sprintf@f+4)& (0+255),b
   938  001CD0                     
   939                           ; BSR set to: 0
   940  001CD0  0E94               	movlw	low sprintf@f
   941  001CD2  6E50               	movwf	vfprintf@fp^0,c
   942  001CD4  0E00               	movlw	high sprintf@f
   943  001CD6  6E51               	movwf	(vfprintf@fp+1)^0,c
   944  001CD8  C05A  F052         	movff	sprintf@fmt,vfprintf@fmt
   945  001CDC  C05B  F053         	movff	sprintf@fmt+1,vfprintf@fmt+1
   946  001CE0  0E92               	movlw	low sprintf@ap
   947  001CE2  6E54               	movwf	vfprintf@ap^0,c
   948  001CE4  0E00               	movlw	high sprintf@ap
   949  001CE6  6E55               	movwf	(vfprintf@ap+1)^0,c
   950  001CE8  EC26  F00E         	call	_vfprintf	;wreg free
   951  001CEC  0100               	movlb	0	; () banked
   952  001CEE  5196               	movf	(sprintf@f+2)& (0+255),w,b
   953  001CF0  2458               	addwf	sprintf@s^0,w,c
   954  001CF2  6ED9               	movwf	fsr2l,c
   955  001CF4  5197               	movf	(sprintf@f+3)& (0+255),w,b
   956  001CF6  2059               	addwfc	(sprintf@s+1)^0,w,c
   957  001CF8  6EDA               	movwf	fsr2h,c
   958  001CFA  0E00               	movlw	0
   959  001CFC  6EDF               	movwf	indf2,c
   960  001CFE                     
   961                           ; BSR set to: 0
   962  001CFE  0012               	return		;funcret
   963  001D00                     __end_of_sprintf:
   964                           	opt callstack 0
   965                           
   966 ;; *************** function _vfprintf *****************
   967 ;; Defined at:
   968 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
   969 ;; Parameters:    Size  Location     Type
   970 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
   971 ;;		 -> sprintf@f(6), 
   972 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
   973 ;;		 -> STR_1(4), 
   974 ;;  ap              2   83[COMRAM] PTR PTR void 
   975 ;;		 -> sprintf@ap(2), 
   976 ;; Auto vars:     Size  Location     Type
   977 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
   978 ;;		 -> STR_1(4), 
   979 ;; Return value:  Size  Location     Type
   980 ;;                  2   79[COMRAM] int 
   981 ;; Registers used:
   982 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   983 ;; Tracked objects:
   984 ;;		On entry : 0/0
   985 ;;		On exit  : 0/0
   986 ;;		Unchanged: 0/0
   987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   988 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   989 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   991 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   992 ;;Total ram usage:        8 bytes
   993 ;; Hardware stack levels used:    1
   994 ;; Hardware stack levels required when called:    6
   995 ;; This function calls:
   996 ;;		_vfpfcnvrt
   997 ;; This function is called by:
   998 ;;		_sprintf
   999 ;; This function uses a non-reentrant model
  1000 ;;
  1001                           
  1002                           	psect	text2
  1003  001C4C                     __ptext2:
  1004                           	opt callstack 0
  1005  001C4C                     _vfprintf:
  1006                           	opt callstack 23
  1007  001C4C                     
  1008                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  1009  001C4C  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
  1010  001C50  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1011  001C54                     
  1012                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  1013  001C54  0E00               	movlw	0
  1014  001C56  0100               	movlb	0	; () banked
  1015  001C58  6F69               	movwf	(_nout+1)& (0+255),b
  1016  001C5A  0E00               	movlw	0
  1017  001C5C  6F68               	movwf	_nout& (0+255),b
  1018                           
  1019                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1020  001C5E  EF44  F00E         	goto	l1497
  1021  001C62                     l1495:
  1022                           
  1023                           ; BSR set to: 0
  1024                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  1025  001C62  C050  F03C         	movff	vfprintf@fp,vfpfcnvrt@fp
  1026  001C66  C051  F03D         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1027  001C6A  0E56               	movlw	low vfprintf@cfmt
  1028  001C6C  6E3E               	movwf	vfpfcnvrt@fmt^0,c
  1029  001C6E  0E00               	movlw	high vfprintf@cfmt
  1030  001C70  6E3F               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1031  001C72  C054  F040         	movff	vfprintf@ap,vfpfcnvrt@ap
  1032  001C76  C055  F041         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1033  001C7A  ECBB  F008         	call	_vfpfcnvrt	;wreg free
  1034  001C7E  503C               	movf	?_vfpfcnvrt^0,w,c
  1035  001C80  0100               	movlb	0	; () banked
  1036  001C82  2768               	addwf	_nout& (0+255),f,b
  1037  001C84  503D               	movf	(?_vfpfcnvrt+1)^0,w,c
  1038  001C86  2369               	addwfc	(_nout+1)& (0+255),f,b
  1039  001C88                     l1497:
  1040                           
  1041                           ; BSR set to: 0
  1042                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1043  001C88  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
  1044  001C8C  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1045  001C90                     	if	0	;tblptru may be non-zero
  1046  001C90                     	endif
  1047  001C90                     	if	0	;tblptru may be non-zero
  1048  001C90                     	endif
  1049  001C90  0008               	tblrd		*
  1050  001C92  50F5               	movf	tablat,w,c
  1051  001C94  0900               	iorlw	0
  1052  001C96  A4D8               	btfss	status,2,c
  1053  001C98  EF50  F00E         	goto	u801
  1054  001C9C  EF52  F00E         	goto	u800
  1055  001CA0                     u801:
  1056  001CA0  EF31  F00E         	goto	l1495
  1057  001CA4                     u800:
  1058  001CA4                     
  1059                           ; BSR set to: 0
  1060                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  1061  001CA4  C068  F050         	movff	_nout,?_vfprintf
  1062  001CA8  C069  F051         	movff	_nout+1,?_vfprintf+1
  1063  001CAC                     
  1064                           ; BSR set to: 0
  1065  001CAC  0012               	return		;funcret
  1066  001CAE                     __end_of_vfprintf:
  1067                           	opt callstack 0
  1068                           
  1069 ;; *************** function _vfpfcnvrt *****************
  1070 ;; Defined at:
  1071 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1072 ;; Parameters:    Size  Location     Type
  1073 ;;  fp              2   59[COMRAM] PTR struct _IO_FILE
  1074 ;;		 -> sprintf@f(6), 
  1075 ;;  fmt             2   61[COMRAM] PTR PTR unsigned char 
  1076 ;;		 -> vfprintf@cfmt(2), 
  1077 ;;  ap              2   63[COMRAM] PTR PTR void 
  1078 ;;		 -> sprintf@ap(2), 
  1079 ;; Auto vars:     Size  Location     Type
  1080 ;;  llu             8   71[COMRAM] unsigned long long 
  1081 ;;  ll              8    0        long long 
  1082 ;;  f               4    0        long long 
  1083 ;;  vp              3    0        PTR void 
  1084 ;;  ct              3    0        unsigned char [3]
  1085 ;;  cp              3    0        PTR unsigned char 
  1086 ;;  i               2    0        int 
  1087 ;;  done            2    0        int 
  1088 ;;  c               1    0        unsigned char 
  1089 ;; Return value:  Size  Location     Type
  1090 ;;                  2   59[COMRAM] int 
  1091 ;; Registers used:
  1092 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1093 ;; Tracked objects:
  1094 ;;		On entry : 0/0
  1095 ;;		On exit  : 0/0
  1096 ;;		Unchanged: 0/0
  1097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1098 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1099 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1100 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1101 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1102 ;;Total ram usage:       20 bytes
  1103 ;; Hardware stack levels used:    1
  1104 ;; Hardware stack levels required when called:    5
  1105 ;; This function calls:
  1106 ;;		_fputc
  1107 ;;		_strncmp
  1108 ;;		_utoa
  1109 ;; This function is called by:
  1110 ;;		_vfprintf
  1111 ;; This function uses a non-reentrant model
  1112 ;;
  1113                           
  1114                           	psect	text3
  1115  001176                     __ptext3:
  1116                           	opt callstack 0
  1117  001176                     _vfpfcnvrt:
  1118                           	opt callstack 23
  1119  001176                     
  1120                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  1121  001176  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1122  00117A  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1123  00117E  CFDE FFF6          	movff	postinc2,tblptrl
  1124  001182  CFDD FFF7          	movff	postdec2,tblptrh
  1125  001186                     	if	0	;tblptru may be non-zero
  1126  001186                     	endif
  1127  001186                     	if	0	;tblptru may be non-zero
  1128  001186                     	endif
  1129  001186  0008               	tblrd		*
  1130  001188  50F5               	movf	tablat,w,c
  1131  00118A  0A25               	xorlw	37
  1132  00118C  A4D8               	btfss	status,2,c
  1133  00118E  EFCB  F008         	goto	u761
  1134  001192  EFCD  F008         	goto	u760
  1135  001196                     u761:
  1136  001196  EFB1  F009         	goto	l1439
  1137  00119A                     u760:
  1138  00119A                     
  1139                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  1140  00119A  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1141  00119E  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1142  0011A2  2ADE               	incf	postinc2,f,c
  1143  0011A4  0E00               	movlw	0
  1144  0011A6  22DD               	addwfc	postdec2,f,c
  1145  0011A8                     
  1146                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  1147  0011A8  0E00               	movlw	0
  1148  0011AA  0100               	movlb	0	; () banked
  1149  0011AC  6F6B               	movwf	(_width+1)& (0+255),b
  1150  0011AE  0E00               	movlw	0
  1151  0011B0  6F6A               	movwf	_width& (0+255),b
  1152  0011B2  C06A  F06E         	movff	_width,_flags
  1153  0011B6  C06B  F06F         	movff	_width+1,_flags+1
  1154  0011BA                     
  1155                           ; BSR set to: 0
  1156                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  1157  0011BA  696C               	setf	_prec& (0+255),b
  1158  0011BC  696D               	setf	(_prec+1)& (0+255),b
  1159  0011BE                     
  1160                           ; BSR set to: 0
  1161                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
  1162  0011BE  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1163  0011C2  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1164  0011C6  CFDE FFF6          	movff	postinc2,tblptrl
  1165  0011CA  CFDD FFF7          	movff	postdec2,tblptrh
  1166  0011CE                     	if	0	;tblptru may be non-zero
  1167  0011CE                     	endif
  1168  0011CE                     	if	0	;tblptru may be non-zero
  1169  0011CE                     	endif
  1170  0011CE  0008               	tblrd		*
  1171  0011D0  50F5               	movf	tablat,w,c
  1172  0011D2  0A75               	xorlw	117
  1173  0011D4  A4D8               	btfss	status,2,c
  1174  0011D6  EFEF  F008         	goto	u771
  1175  0011DA  EFF1  F008         	goto	u770
  1176  0011DE                     u771:
  1177  0011DE  EF32  F009         	goto	l1415
  1178  0011E2                     u770:
  1179  0011E2                     
  1180                           ; BSR set to: 0
  1181                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
  1182  0011E2  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1183  0011E6  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1184  0011EA  2ADE               	incf	postinc2,f,c
  1185  0011EC  0E00               	movlw	0
  1186  0011EE  22DD               	addwfc	postdec2,f,c
  1187                           
  1188                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  1189  0011F0  C040  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1190  0011F4  C041  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1191  0011F8  CFDF F042          	movff	indf2,??_vfpfcnvrt
  1192  0011FC  0E02               	movlw	2
  1193  0011FE  26DE               	addwf	postinc2,f,c
  1194  001200  CFDF F043          	movff	indf2,??_vfpfcnvrt+1
  1195  001204  0E00               	movlw	0
  1196  001206  22DD               	addwfc	postdec2,f,c
  1197  001208  C042  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1198  00120C  C043  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1199  001210  CFDE F044          	movff	postinc2,??_vfpfcnvrt+2
  1200  001214  CFDD F045          	movff	postdec2,??_vfpfcnvrt+3
  1201  001218  C044  F048         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  1202  00121C  C045  F049         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  1203  001220  6A4A               	clrf	(vfpfcnvrt@llu+2)^0,c
  1204  001222  6A4B               	clrf	(vfpfcnvrt@llu+3)^0,c
  1205  001224  6A4C               	clrf	(vfpfcnvrt@llu+4)^0,c
  1206  001226  6A4D               	clrf	(vfpfcnvrt@llu+5)^0,c
  1207  001228  6A4E               	clrf	(vfpfcnvrt@llu+6)^0,c
  1208  00122A  6A4F               	clrf	(vfpfcnvrt@llu+7)^0,c
  1209  00122C                     l1411:
  1210                           
  1211                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1187:      
      +                                 return utoa(fp, llu);
  1212  00122C  C03C  F01C         	movff	vfpfcnvrt@fp,utoa@fp
  1213  001230  C03D  F01D         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  1214  001234  C048  F01E         	movff	vfpfcnvrt@llu,utoa@d
  1215  001238  C049  F01F         	movff	vfpfcnvrt@llu+1,utoa@d+1
  1216  00123C  C04A  F020         	movff	vfpfcnvrt@llu+2,utoa@d+2
  1217  001240  C04B  F021         	movff	vfpfcnvrt@llu+3,utoa@d+3
  1218  001244  C04C  F022         	movff	vfpfcnvrt@llu+4,utoa@d+4
  1219  001248  C04D  F023         	movff	vfpfcnvrt@llu+5,utoa@d+5
  1220  00124C  C04E  F024         	movff	vfpfcnvrt@llu+6,utoa@d+6
  1221  001250  C04F  F025         	movff	vfpfcnvrt@llu+7,utoa@d+7
  1222  001254  ECCD  F009         	call	_utoa	;wreg free
  1223  001258  C01C  F03C         	movff	?_utoa,?_vfpfcnvrt
  1224  00125C  C01D  F03D         	movff	?_utoa+1,?_vfpfcnvrt+1
  1225  001260  EFCC  F009         	goto	l112
  1226  001264                     l1415:
  1227                           
  1228                           ; BSR set to: 0
  1229                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1192:      
      +                             if (!strncmp(*fmt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
  1230  001264  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1231  001268  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1232  00126C  CFDE F001          	movff	postinc2,strncmp@_l
  1233  001270  CFDD F002          	movff	postdec2,strncmp@_l+1
  1234  001274  0E02               	movlw	low (STR_1+1)
  1235  001276  6E03               	movwf	strncmp@_r^0,c
  1236  001278  0E0F               	movlw	high (STR_1+1)
  1237  00127A  6E04               	movwf	(strncmp@_r+1)^0,c
  1238  00127C  0E00               	movlw	0
  1239  00127E  6E06               	movwf	(strncmp@n+1)^0,c
  1240  001280  0E02               	movlw	2
  1241  001282  6E05               	movwf	strncmp@n^0,c
  1242  001284  EC46  F00B         	call	_strncmp	;wreg free
  1243  001288  5001               	movf	?_strncmp^0,w,c
  1244  00128A  1002               	iorwf	(?_strncmp+1)^0,w,c
  1245  00128C  A4D8               	btfss	status,2,c
  1246  00128E  EF4B  F009         	goto	u781
  1247  001292  EF4D  F009         	goto	u780
  1248  001296                     u781:
  1249  001296  EF7B  F009         	goto	l1423
  1250  00129A                     u780:
  1251  00129A                     
  1252                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1194:      
      +                                 *fmt += ((sizeof("lu")/sizeof("lu"[0]))-1);
  1253  00129A  0E02               	movlw	2
  1254  00129C  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1255  0012A0  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1256  0012A4  26DE               	addwf	postinc2,f,c
  1257  0012A6  0E00               	movlw	0
  1258  0012A8  22DD               	addwfc	postdec2,f,c
  1259                           
  1260                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1195:      
      +                                 llu = (unsigned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (uns
      +                          igned long)0));
  1261  0012AA  C040  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1262  0012AE  C041  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1263  0012B2  CFDF F042          	movff	indf2,??_vfpfcnvrt
  1264  0012B6  0E04               	movlw	4
  1265  0012B8  26DE               	addwf	postinc2,f,c
  1266  0012BA  CFDF F043          	movff	indf2,??_vfpfcnvrt+1
  1267  0012BE  0E00               	movlw	0
  1268  0012C0  22DD               	addwfc	postdec2,f,c
  1269  0012C2  C042  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1270  0012C6  C043  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1271  0012CA  CFDE F044          	movff	postinc2,??_vfpfcnvrt+2
  1272  0012CE  CFDE F045          	movff	postinc2,??_vfpfcnvrt+3
  1273  0012D2  CFDE F046          	movff	postinc2,??_vfpfcnvrt+4
  1274  0012D6  CFDE F047          	movff	postinc2,??_vfpfcnvrt+5
  1275  0012DA  5044               	movf	(??_vfpfcnvrt+2)^0,w,c
  1276  0012DC  6E48               	movwf	vfpfcnvrt@llu^0,c
  1277  0012DE  5045               	movf	(??_vfpfcnvrt+3)^0,w,c
  1278  0012E0  6E49               	movwf	(vfpfcnvrt@llu+1)^0,c
  1279  0012E2  5046               	movf	(??_vfpfcnvrt+4)^0,w,c
  1280  0012E4  6E4A               	movwf	(vfpfcnvrt@llu+2)^0,c
  1281  0012E6  5047               	movf	(??_vfpfcnvrt+5)^0,w,c
  1282  0012E8  6E4B               	movwf	(vfpfcnvrt@llu+3)^0,c
  1283  0012EA  6A4C               	clrf	(vfpfcnvrt@llu+4)^0,c
  1284  0012EC  6A4D               	clrf	(vfpfcnvrt@llu+5)^0,c
  1285  0012EE  6A4E               	clrf	(vfpfcnvrt@llu+6)^0,c
  1286  0012F0  6A4F               	clrf	(vfpfcnvrt@llu+7)^0,c
  1287  0012F2  EF16  F009         	goto	l1411
  1288  0012F6                     l1423:
  1289                           
  1290                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  1291  0012F6  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1292  0012FA  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1293  0012FE  CFDE FFF6          	movff	postinc2,tblptrl
  1294  001302  CFDD FFF7          	movff	postdec2,tblptrh
  1295  001306                     	if	0	;tblptru may be non-zero
  1296  001306                     	endif
  1297  001306                     	if	0	;tblptru may be non-zero
  1298  001306                     	endif
  1299  001306  0008               	tblrd		*
  1300  001308  50F5               	movf	tablat,w,c
  1301  00130A  0A25               	xorlw	37
  1302  00130C  A4D8               	btfss	status,2,c
  1303  00130E  EF8B  F009         	goto	u791
  1304  001312  EF8D  F009         	goto	u790
  1305  001316                     u791:
  1306  001316  EFA4  F009         	goto	l1433
  1307  00131A                     u790:
  1308  00131A                     
  1309                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  1310  00131A  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1311  00131E  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1312  001322  2ADE               	incf	postinc2,f,c
  1313  001324  0E00               	movlw	0
  1314  001326  22DD               	addwfc	postdec2,f,c
  1315  001328                     
  1316                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  1317  001328  0E00               	movlw	0
  1318  00132A  6E02               	movwf	(fputc@c+1)^0,c
  1319  00132C  0E25               	movlw	37
  1320  00132E  6E01               	movwf	fputc@c^0,c
  1321  001330  C03C  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1322  001334  C03D  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1323  001338  EC1D  F00C         	call	_fputc	;wreg free
  1324  00133C                     l1429:
  1325                           
  1326                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  1327  00133C  0E00               	movlw	0
  1328  00133E  6E3D               	movwf	(?_vfpfcnvrt+1)^0,c
  1329  001340  0E01               	movlw	1
  1330  001342  6E3C               	movwf	?_vfpfcnvrt^0,c
  1331  001344  EFCC  F009         	goto	l112
  1332  001348                     l1433:
  1333                           
  1334                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  1335  001348  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1336  00134C  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1337  001350  2ADE               	incf	postinc2,f,c
  1338  001352  0E00               	movlw	0
  1339  001354  22DD               	addwfc	postdec2,f,c
  1340  001356                     
  1341                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  1342  001356  0E00               	movlw	0
  1343  001358  6E3D               	movwf	(?_vfpfcnvrt+1)^0,c
  1344  00135A  0E00               	movlw	0
  1345  00135C  6E3C               	movwf	?_vfpfcnvrt^0,c
  1346  00135E  EFCC  F009         	goto	l112
  1347  001362                     l1439:
  1348                           
  1349                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  1350  001362  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1351  001366  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1352  00136A  CFDE FFF6          	movff	postinc2,tblptrl
  1353  00136E  CFDD FFF7          	movff	postdec2,tblptrh
  1354  001372                     	if	0	;tblptru may be non-zero
  1355  001372                     	endif
  1356  001372                     	if	0	;tblptru may be non-zero
  1357  001372                     	endif
  1358  001372  0008               	tblrd		*
  1359  001374  50F5               	movf	tablat,w,c
  1360  001376  6E01               	movwf	fputc@c^0,c
  1361  001378  6A02               	clrf	(fputc@c+1)^0,c
  1362  00137A  C03C  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1363  00137E  C03D  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1364  001382  EC1D  F00C         	call	_fputc	;wreg free
  1365  001386                     
  1366                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  1367  001386  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1368  00138A  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1369  00138E  2ADE               	incf	postinc2,f,c
  1370  001390  0E00               	movlw	0
  1371  001392  22DD               	addwfc	postdec2,f,c
  1372  001394  EF9E  F009         	goto	l1429
  1373  001398                     l112:
  1374  001398  0012               	return		;funcret
  1375  00139A                     __end_of_vfpfcnvrt:
  1376                           	opt callstack 0
  1377                           
  1378 ;; *************** function _utoa *****************
  1379 ;; Defined at:
  1380 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1381 ;; Parameters:    Size  Location     Type
  1382 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  1383 ;;		 -> sprintf@f(6), 
  1384 ;;  d               8   29[COMRAM] unsigned long long 
  1385 ;; Auto vars:     Size  Location     Type
  1386 ;;  n               8   49[COMRAM] unsigned long long 
  1387 ;;  i               2   57[COMRAM] int 
  1388 ;;  w               2   47[COMRAM] int 
  1389 ;;  p               2   45[COMRAM] int 
  1390 ;; Return value:  Size  Location     Type
  1391 ;;                  2   27[COMRAM] int 
  1392 ;; Registers used:
  1393 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1394 ;; Tracked objects:
  1395 ;;		On entry : 0/0
  1396 ;;		On exit  : 0/0
  1397 ;;		Unchanged: 0/0
  1398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1399 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1400 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1401 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1402 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1403 ;;Total ram usage:       32 bytes
  1404 ;; Hardware stack levels used:    1
  1405 ;; Hardware stack levels required when called:    4
  1406 ;; This function calls:
  1407 ;;		___lodiv
  1408 ;;		___lomod
  1409 ;;		_pad
  1410 ;; This function is called by:
  1411 ;;		_vfpfcnvrt
  1412 ;; This function uses a non-reentrant model
  1413 ;;
  1414                           
  1415                           	psect	text4
  1416  00139A                     __ptext4:
  1417                           	opt callstack 0
  1418  00139A                     _utoa:
  1419                           	opt callstack 23
  1420  00139A                     
  1421                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  1422  00139A  0100               	movlb	0	; () banked
  1423  00139C  BF6D               	btfsc	(_prec+1)& (0+255),7,b
  1424  00139E  EFD3  F009         	goto	u641
  1425  0013A2  EFD5  F009         	goto	u640
  1426  0013A6                     u641:
  1427  0013A6  EFD6  F009         	goto	l1347
  1428  0013AA                     u640:
  1429  0013AA                     
  1430                           ; BSR set to: 0
  1431                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
  1432  0013AA  936E               	bcf	_flags& (0+255),1,b
  1433  0013AC                     l1347:
  1434                           
  1435                           ; BSR set to: 0
  1436                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
  1437  0013AC  BF6D               	btfsc	(_prec+1)& (0+255),7,b
  1438  0013AE  EFE3  F009         	goto	u650
  1439  0013B2  516D               	movf	(_prec+1)& (0+255),w,b
  1440  0013B4  E106               	bnz	u651
  1441  0013B6  056C               	decf	_prec& (0+255),w,b
  1442  0013B8  B0D8               	btfsc	status,0,c
  1443  0013BA  EFE1  F009         	goto	u651
  1444  0013BE  EFE3  F009         	goto	u650
  1445  0013C2                     u651:
  1446  0013C2  EFE9  F009         	goto	l97
  1447  0013C6                     u650:
  1448  0013C6                     
  1449                           ; BSR set to: 0
  1450  0013C6  0E00               	movlw	0
  1451  0013C8  6E2F               	movwf	(utoa@p+1)^0,c
  1452  0013CA  0E01               	movlw	1
  1453  0013CC  6E2E               	movwf	utoa@p^0,c
  1454  0013CE  EFED  F009         	goto	l99
  1455  0013D2                     l97:
  1456                           
  1457                           ; BSR set to: 0
  1458  0013D2  C06C  F02E         	movff	_prec,utoa@p
  1459  0013D6  C06D  F02F         	movff	_prec+1,utoa@p+1
  1460  0013DA                     l99:
  1461                           
  1462                           ; BSR set to: 0
  1463                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
  1464  0013DA  C06A  F030         	movff	_width,utoa@w
  1465  0013DE  C06B  F031         	movff	_width+1,utoa@w+1
  1466                           
  1467                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
  1468  0013E2  C01E  F032         	movff	utoa@d,utoa@n
  1469  0013E6  C01F  F033         	movff	utoa@d+1,utoa@n+1
  1470  0013EA  C020  F034         	movff	utoa@d+2,utoa@n+2
  1471  0013EE  C021  F035         	movff	utoa@d+3,utoa@n+3
  1472  0013F2  C022  F036         	movff	utoa@d+4,utoa@n+4
  1473  0013F6  C023  F037         	movff	utoa@d+5,utoa@n+5
  1474  0013FA  C024  F038         	movff	utoa@d+6,utoa@n+6
  1475  0013FE  C025  F039         	movff	utoa@d+7,utoa@n+7
  1476  001402                     
  1477                           ; BSR set to: 0
  1478                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
  1479  001402  0E00               	movlw	0
  1480  001404  6E3B               	movwf	(utoa@i+1)^0,c
  1481  001406  0E1F               	movlw	31
  1482  001408  6E3A               	movwf	utoa@i^0,c
  1483  00140A                     
  1484                           ; BSR set to: 0
  1485                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
  1486  00140A  0E00               	movlw	0
  1487  00140C  6F8F               	movwf	(_dbuf+31)& (0+255),b
  1488                           
  1489                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1490  00140E  EF7F  F00A         	goto	l1365
  1491  001412                     l1355:
  1492                           
  1493                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
  1494  001412  063A               	decf	utoa@i^0,f,c
  1495  001414  A0D8               	btfss	status,0,c
  1496  001416  063B               	decf	(utoa@i+1)^0,f,c
  1497  001418                     
  1498                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
  1499  001418  0E70               	movlw	low _dbuf
  1500  00141A  243A               	addwf	utoa@i^0,w,c
  1501  00141C  6ED9               	movwf	fsr2l,c
  1502  00141E  0E00               	movlw	high _dbuf
  1503  001420  203B               	addwfc	(utoa@i+1)^0,w,c
  1504  001422  6EDA               	movwf	fsr2h,c
  1505  001424  C032  F001         	movff	utoa@n,___lomod@dividend
  1506  001428  C033  F002         	movff	utoa@n+1,___lomod@dividend+1
  1507  00142C  C034  F003         	movff	utoa@n+2,___lomod@dividend+2
  1508  001430  C035  F004         	movff	utoa@n+3,___lomod@dividend+3
  1509  001434  C036  F005         	movff	utoa@n+4,___lomod@dividend+4
  1510  001438  C037  F006         	movff	utoa@n+5,___lomod@dividend+5
  1511  00143C  C038  F007         	movff	utoa@n+6,___lomod@dividend+6
  1512  001440  C039  F008         	movff	utoa@n+7,___lomod@dividend+7
  1513  001444  0E0A               	movlw	10
  1514  001446  6E09               	movwf	___lomod@divisor^0,c
  1515  001448  0E00               	movlw	0
  1516  00144A  6E0A               	movwf	(___lomod@divisor+1)^0,c
  1517  00144C  0E00               	movlw	0
  1518  00144E  6E0B               	movwf	(___lomod@divisor+2)^0,c
  1519  001450  0E00               	movlw	0
  1520  001452  6E0C               	movwf	(___lomod@divisor+3)^0,c
  1521  001454  0E00               	movlw	0
  1522  001456  6E0D               	movwf	(___lomod@divisor+4)^0,c
  1523  001458  0E00               	movlw	0
  1524  00145A  6E0E               	movwf	(___lomod@divisor+5)^0,c
  1525  00145C  0E00               	movlw	0
  1526  00145E  6E0F               	movwf	(___lomod@divisor+6)^0,c
  1527  001460  0E00               	movlw	0
  1528  001462  6E10               	movwf	(___lomod@divisor+7)^0,c
  1529  001464  ECB5  F00B         	call	___lomod	;wreg free
  1530  001468  C001  F026         	movff	?___lomod,??_utoa
  1531  00146C  C002  F027         	movff	?___lomod+1,??_utoa+1
  1532  001470  C003  F028         	movff	?___lomod+2,??_utoa+2
  1533  001474  C004  F029         	movff	?___lomod+3,??_utoa+3
  1534  001478  C005  F02A         	movff	?___lomod+4,??_utoa+4
  1535  00147C  C006  F02B         	movff	?___lomod+5,??_utoa+5
  1536  001480  C007  F02C         	movff	?___lomod+6,??_utoa+6
  1537  001484  C008  F02D         	movff	?___lomod+7,??_utoa+7
  1538  001488  5026               	movf	??_utoa^0,w,c
  1539  00148A  0F30               	addlw	48
  1540  00148C  6EDF               	movwf	indf2,c
  1541  00148E                     
  1542                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
  1543  00148E  062E               	decf	utoa@p^0,f,c
  1544  001490  A0D8               	btfss	status,0,c
  1545  001492  062F               	decf	(utoa@p+1)^0,f,c
  1546  001494                     
  1547                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
  1548  001494  0630               	decf	utoa@w^0,f,c
  1549  001496  A0D8               	btfss	status,0,c
  1550  001498  0631               	decf	(utoa@w+1)^0,f,c
  1551  00149A                     
  1552                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
  1553  00149A  C032  F001         	movff	utoa@n,___lodiv@dividend
  1554  00149E  C033  F002         	movff	utoa@n+1,___lodiv@dividend+1
  1555  0014A2  C034  F003         	movff	utoa@n+2,___lodiv@dividend+2
  1556  0014A6  C035  F004         	movff	utoa@n+3,___lodiv@dividend+3
  1557  0014AA  C036  F005         	movff	utoa@n+4,___lodiv@dividend+4
  1558  0014AE  C037  F006         	movff	utoa@n+5,___lodiv@dividend+5
  1559  0014B2  C038  F007         	movff	utoa@n+6,___lodiv@dividend+6
  1560  0014B6  C039  F008         	movff	utoa@n+7,___lodiv@dividend+7
  1561  0014BA  0E0A               	movlw	10
  1562  0014BC  6E09               	movwf	___lodiv@divisor^0,c
  1563  0014BE  0E00               	movlw	0
  1564  0014C0  6E0A               	movwf	(___lodiv@divisor+1)^0,c
  1565  0014C2  0E00               	movlw	0
  1566  0014C4  6E0B               	movwf	(___lodiv@divisor+2)^0,c
  1567  0014C6  0E00               	movlw	0
  1568  0014C8  6E0C               	movwf	(___lodiv@divisor+3)^0,c
  1569  0014CA  0E00               	movlw	0
  1570  0014CC  6E0D               	movwf	(___lodiv@divisor+4)^0,c
  1571  0014CE  0E00               	movlw	0
  1572  0014D0  6E0E               	movwf	(___lodiv@divisor+5)^0,c
  1573  0014D2  0E00               	movlw	0
  1574  0014D4  6E0F               	movwf	(___lodiv@divisor+6)^0,c
  1575  0014D6  0E00               	movlw	0
  1576  0014D8  6E10               	movwf	(___lodiv@divisor+7)^0,c
  1577  0014DA  ECCE  F00A         	call	___lodiv	;wreg free
  1578  0014DE  C001  F032         	movff	?___lodiv,utoa@n
  1579  0014E2  C002  F033         	movff	?___lodiv+1,utoa@n+1
  1580  0014E6  C003  F034         	movff	?___lodiv+2,utoa@n+2
  1581  0014EA  C004  F035         	movff	?___lodiv+3,utoa@n+3
  1582  0014EE  C005  F036         	movff	?___lodiv+4,utoa@n+4
  1583  0014F2  C006  F037         	movff	?___lodiv+5,utoa@n+5
  1584  0014F6  C007  F038         	movff	?___lodiv+6,utoa@n+6
  1585  0014FA  C008  F039         	movff	?___lodiv+7,utoa@n+7
  1586  0014FE                     l1365:
  1587                           
  1588                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1589  0014FE  503A               	movf	utoa@i^0,w,c
  1590  001500  103B               	iorwf	(utoa@i+1)^0,w,c
  1591  001502  B4D8               	btfsc	status,2,c
  1592  001504  EF86  F00A         	goto	u661
  1593  001508  EF88  F00A         	goto	u660
  1594  00150C                     u661:
  1595  00150C  EFB9  F00A         	goto	l1375
  1596  001510                     u660:
  1597  001510  5032               	movf	utoa@n^0,w,c
  1598  001512  1033               	iorwf	(utoa@n+1)^0,w,c
  1599  001514  1034               	iorwf	(utoa@n+2)^0,w,c
  1600  001516  1035               	iorwf	(utoa@n+3)^0,w,c
  1601  001518  1036               	iorwf	(utoa@n+4)^0,w,c
  1602  00151A  1037               	iorwf	(utoa@n+5)^0,w,c
  1603  00151C  1038               	iorwf	(utoa@n+6)^0,w,c
  1604  00151E  1039               	iorwf	(utoa@n+7)^0,w,c
  1605  001520  A4D8               	btfss	status,2,c
  1606  001522  EF95  F00A         	goto	u671
  1607  001526  EF97  F00A         	goto	u670
  1608  00152A                     u671:
  1609  00152A  EF09  F00A         	goto	l1355
  1610  00152E                     u670:
  1611  00152E  BE2F               	btfsc	(utoa@p+1)^0,7,c
  1612  001530  EFA4  F00A         	goto	u680
  1613  001534  502F               	movf	(utoa@p+1)^0,w,c
  1614  001536  E106               	bnz	u681
  1615  001538  042E               	decf	utoa@p^0,w,c
  1616  00153A  B0D8               	btfsc	status,0,c
  1617  00153C  EFA2  F00A         	goto	u681
  1618  001540  EFA4  F00A         	goto	u680
  1619  001544                     u681:
  1620  001544  EF09  F00A         	goto	l1355
  1621  001548                     u680:
  1622  001548  BE31               	btfsc	(utoa@w+1)^0,7,c
  1623  00154A  EFAF  F00A         	goto	u691
  1624  00154E  5031               	movf	(utoa@w+1)^0,w,c
  1625  001550  E108               	bnz	u690
  1626  001552  0430               	decf	utoa@w^0,w,c
  1627  001554  A0D8               	btfss	status,0,c
  1628  001556  EFAF  F00A         	goto	u691
  1629  00155A  EFB1  F00A         	goto	u690
  1630  00155E                     u691:
  1631  00155E  EFB9  F00A         	goto	l1375
  1632  001562                     u690:
  1633  001562  0100               	movlb	0	; () banked
  1634  001564  B36E               	btfsc	_flags& (0+255),1,b
  1635  001566  EFB7  F00A         	goto	u701
  1636  00156A  EFB9  F00A         	goto	u700
  1637  00156E                     u701:
  1638  00156E  EF09  F00A         	goto	l1355
  1639  001572                     u700:
  1640  001572                     l1375:
  1641                           
  1642                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
  1643  001572  C01C  F011         	movff	utoa@fp,pad@fp
  1644  001576  C01D  F012         	movff	utoa@fp+1,pad@fp+1
  1645  00157A  0E70               	movlw	low _dbuf
  1646  00157C  243A               	addwf	utoa@i^0,w,c
  1647  00157E  6E13               	movwf	pad@buf^0,c
  1648  001580  0E00               	movlw	high _dbuf
  1649  001582  203B               	addwfc	(utoa@i+1)^0,w,c
  1650  001584  6E14               	movwf	(pad@buf+1)^0,c
  1651  001586  C030  F015         	movff	utoa@w,pad@p
  1652  00158A  C031  F016         	movff	utoa@w+1,pad@p+1
  1653  00158E  EC82  F00C         	call	_pad	;wreg free
  1654  001592  C011  F01C         	movff	?_pad,?_utoa
  1655  001596  C012  F01D         	movff	?_pad+1,?_utoa+1
  1656  00159A  0012               	return		;funcret
  1657  00159C                     __end_of_utoa:
  1658                           	opt callstack 0
  1659                           
  1660 ;; *************** function _pad *****************
  1661 ;; Defined at:
  1662 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1663 ;; Parameters:    Size  Location     Type
  1664 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  1665 ;;		 -> sprintf@f(6), 
  1666 ;;  buf             2   18[COMRAM] PTR unsigned char 
  1667 ;;		 -> dbuf(32), 
  1668 ;;  p               2   20[COMRAM] int 
  1669 ;; Auto vars:     Size  Location     Type
  1670 ;;  w               2   25[COMRAM] int 
  1671 ;;  i               2   23[COMRAM] int 
  1672 ;; Return value:  Size  Location     Type
  1673 ;;                  2   16[COMRAM] int 
  1674 ;; Registers used:
  1675 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1676 ;; Tracked objects:
  1677 ;;		On entry : 0/0
  1678 ;;		On exit  : 0/0
  1679 ;;		Unchanged: 0/0
  1680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1681 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1682 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1683 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1684 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1685 ;;Total ram usage:       11 bytes
  1686 ;; Hardware stack levels used:    1
  1687 ;; Hardware stack levels required when called:    3
  1688 ;; This function calls:
  1689 ;;		_fputc
  1690 ;;		_fputs
  1691 ;;		_strlen
  1692 ;; This function is called by:
  1693 ;;		_utoa
  1694 ;; This function uses a non-reentrant model
  1695 ;;
  1696                           
  1697                           	psect	text5
  1698  001904                     __ptext5:
  1699                           	opt callstack 0
  1700  001904                     _pad:
  1701                           	opt callstack 23
  1702  001904                     
  1703                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  1704  001904  0100               	movlb	0	; () banked
  1705  001906  A16E               	btfss	_flags& (0+255),0,b
  1706  001908  EF88  F00C         	goto	u531
  1707  00190C  EF8A  F00C         	goto	u530
  1708  001910                     u531:
  1709  001910  EF94  F00C         	goto	l1287
  1710  001914                     u530:
  1711  001914                     
  1712                           ; BSR set to: 0
  1713                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  1714  001914  C013  F00A         	movff	pad@buf,fputs@s
  1715  001918  C014  F00B         	movff	pad@buf+1,fputs@s+1
  1716  00191C  C011  F00C         	movff	pad@fp,fputs@fp
  1717  001920  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  1718  001924  ECA5  F00E         	call	_fputs	;wreg free
  1719  001928                     l1287:
  1720                           
  1721                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  1722  001928  BE16               	btfsc	(pad@p+1)^0,7,c
  1723  00192A  EF99  F00C         	goto	u541
  1724  00192E  EF9B  F00C         	goto	u540
  1725  001932                     u541:
  1726  001932  EFA1  F00C         	goto	l1291
  1727  001936                     u540:
  1728  001936  C015  F01A         	movff	pad@p,pad@w
  1729  00193A  C016  F01B         	movff	pad@p+1,pad@w+1
  1730  00193E  EFA5  F00C         	goto	l87
  1731  001942                     l1291:
  1732  001942  0E00               	movlw	0
  1733  001944  6E1B               	movwf	(pad@w+1)^0,c
  1734  001946  0E00               	movlw	0
  1735  001948  6E1A               	movwf	pad@w^0,c
  1736  00194A                     l87:
  1737                           
  1738                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  1739  00194A  0E00               	movlw	0
  1740  00194C  6E19               	movwf	(pad@i+1)^0,c
  1741  00194E  0E00               	movlw	0
  1742  001950  6E18               	movwf	pad@i^0,c
  1743                           
  1744                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  1745  001952  EFB7  F00C         	goto	l1297
  1746  001956                     l1293:
  1747                           
  1748                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  1749  001956  0E00               	movlw	0
  1750  001958  6E02               	movwf	(fputc@c+1)^0,c
  1751  00195A  0E20               	movlw	32
  1752  00195C  6E01               	movwf	fputc@c^0,c
  1753  00195E  C011  F003         	movff	pad@fp,fputc@fp
  1754  001962  C012  F004         	movff	pad@fp+1,fputc@fp+1
  1755  001966  EC1D  F00C         	call	_fputc	;wreg free
  1756  00196A                     
  1757                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  1758  00196A  4A18               	infsnz	pad@i^0,f,c
  1759  00196C  2A19               	incf	(pad@i+1)^0,f,c
  1760  00196E                     l1297:
  1761                           
  1762                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  1763  00196E  501A               	movf	pad@w^0,w,c
  1764  001970  5C18               	subwf	pad@i^0,w,c
  1765  001972  5019               	movf	(pad@i+1)^0,w,c
  1766  001974  0A80               	xorlw	128
  1767  001976  6E17               	movwf	??_pad^0,c
  1768  001978  501B               	movf	(pad@w+1)^0,w,c
  1769  00197A  0A80               	xorlw	128
  1770  00197C  5817               	subwfb	??_pad^0,w,c
  1771  00197E  A0D8               	btfss	status,0,c
  1772  001980  EFC4  F00C         	goto	u551
  1773  001984  EFC6  F00C         	goto	u550
  1774  001988                     u551:
  1775  001988  EFAB  F00C         	goto	l1293
  1776  00198C                     u550:
  1777  00198C                     
  1778                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  1779  00198C  0100               	movlb	0	; () banked
  1780  00198E  B16E               	btfsc	_flags& (0+255),0,b
  1781  001990  EFCC  F00C         	goto	u561
  1782  001994  EFCE  F00C         	goto	u560
  1783  001998                     u561:
  1784  001998  EFD8  F00C         	goto	l1301
  1785  00199C                     u560:
  1786  00199C                     
  1787                           ; BSR set to: 0
  1788                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  1789  00199C  C013  F00A         	movff	pad@buf,fputs@s
  1790  0019A0  C014  F00B         	movff	pad@buf+1,fputs@s+1
  1791  0019A4  C011  F00C         	movff	pad@fp,fputs@fp
  1792  0019A8  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  1793  0019AC  ECA5  F00E         	call	_fputs	;wreg free
  1794  0019B0                     l1301:
  1795                           
  1796                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  1797  0019B0  C013  F001         	movff	pad@buf,strlen@s
  1798  0019B4  C014  F002         	movff	pad@buf+1,strlen@s+1
  1799  0019B8  ECE6  F00E         	call	_strlen	;wreg free
  1800  0019BC  501A               	movf	pad@w^0,w,c
  1801  0019BE  2401               	addwf	?_strlen^0,w,c
  1802  0019C0  6E11               	movwf	?_pad^0,c
  1803  0019C2  501B               	movf	(pad@w+1)^0,w,c
  1804  0019C4  2002               	addwfc	(?_strlen+1)^0,w,c
  1805  0019C6  6E12               	movwf	(?_pad+1)^0,c
  1806  0019C8  0012               	return		;funcret
  1807  0019CA                     __end_of_pad:
  1808                           	opt callstack 0
  1809                           
  1810 ;; *************** function _strlen *****************
  1811 ;; Defined at:
  1812 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  1813 ;; Parameters:    Size  Location     Type
  1814 ;;  s               2    0[COMRAM] PTR const unsigned char 
  1815 ;;		 -> dbuf(32), 
  1816 ;; Auto vars:     Size  Location     Type
  1817 ;;  a               2    2[COMRAM] PTR const unsigned char 
  1818 ;;		 -> dbuf(32), 
  1819 ;; Return value:  Size  Location     Type
  1820 ;;                  2    0[COMRAM] unsigned int 
  1821 ;; Registers used:
  1822 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1823 ;; Tracked objects:
  1824 ;;		On entry : 0/0
  1825 ;;		On exit  : 0/0
  1826 ;;		Unchanged: 0/0
  1827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1828 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1829 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1831 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1832 ;;Total ram usage:        4 bytes
  1833 ;; Hardware stack levels used:    1
  1834 ;; This function calls:
  1835 ;;		Nothing
  1836 ;; This function is called by:
  1837 ;;		_pad
  1838 ;; This function uses a non-reentrant model
  1839 ;;
  1840                           
  1841                           	psect	text6
  1842  001DCC                     __ptext6:
  1843                           	opt callstack 0
  1844  001DCC                     _strlen:
  1845                           	opt callstack 25
  1846  001DCC  C001  F003         	movff	strlen@s,strlen@a
  1847  001DD0  C002  F004         	movff	strlen@s+1,strlen@a+1
  1848  001DD4  EFEE  F00E         	goto	l1277
  1849  001DD8                     l1275:
  1850  001DD8  4A01               	infsnz	strlen@s^0,f,c
  1851  001DDA  2A02               	incf	(strlen@s+1)^0,f,c
  1852  001DDC                     l1277:
  1853  001DDC  C001  FFD9         	movff	strlen@s,fsr2l
  1854  001DE0  C002  FFDA         	movff	strlen@s+1,fsr2h
  1855  001DE4  50DF               	movf	indf2,w,c
  1856  001DE6  A4D8               	btfss	status,2,c
  1857  001DE8  EFF8  F00E         	goto	u521
  1858  001DEC  EFFA  F00E         	goto	u520
  1859  001DF0                     u521:
  1860  001DF0  EFEC  F00E         	goto	l1275
  1861  001DF4                     u520:
  1862  001DF4  5003               	movf	strlen@a^0,w,c
  1863  001DF6  5C01               	subwf	strlen@s^0,w,c
  1864  001DF8  6E01               	movwf	?_strlen^0,c
  1865  001DFA  5004               	movf	(strlen@a+1)^0,w,c
  1866  001DFC  5802               	subwfb	(strlen@s+1)^0,w,c
  1867  001DFE  6E02               	movwf	(?_strlen+1)^0,c
  1868  001E00  0012               	return		;funcret
  1869  001E02                     __end_of_strlen:
  1870                           	opt callstack 0
  1871                           
  1872 ;; *************** function _fputs *****************
  1873 ;; Defined at:
  1874 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  1875 ;; Parameters:    Size  Location     Type
  1876 ;;  s               2    9[COMRAM] PTR const unsigned char 
  1877 ;;		 -> dbuf(32), 
  1878 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  1879 ;;		 -> sprintf@f(6), 
  1880 ;; Auto vars:     Size  Location     Type
  1881 ;;  i               2   14[COMRAM] int 
  1882 ;;  c               1   13[COMRAM] unsigned char 
  1883 ;; Return value:  Size  Location     Type
  1884 ;;                  2    9[COMRAM] int 
  1885 ;; Registers used:
  1886 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1887 ;; Tracked objects:
  1888 ;;		On entry : 0/0
  1889 ;;		On exit  : 0/0
  1890 ;;		Unchanged: 0/0
  1891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1892 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1893 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1895 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1896 ;;Total ram usage:        7 bytes
  1897 ;; Hardware stack levels used:    1
  1898 ;; Hardware stack levels required when called:    2
  1899 ;; This function calls:
  1900 ;;		_fputc
  1901 ;; This function is called by:
  1902 ;;		_pad
  1903 ;; This function uses a non-reentrant model
  1904 ;;
  1905                           
  1906                           	psect	text7
  1907  001D4A                     __ptext7:
  1908                           	opt callstack 0
  1909  001D4A                     _fputs:
  1910                           	opt callstack 23
  1911  001D4A  0E00               	movlw	0
  1912  001D4C  6E10               	movwf	(fputs@i+1)^0,c
  1913  001D4E  0E00               	movlw	0
  1914  001D50  6E0F               	movwf	fputs@i^0,c
  1915  001D52  EFB6  F00E         	goto	l1271
  1916  001D56                     l1267:
  1917  001D56  C00E  F001         	movff	fputs@c,fputc@c
  1918  001D5A  6A02               	clrf	(fputc@c+1)^0,c
  1919  001D5C  C00C  F003         	movff	fputs@fp,fputc@fp
  1920  001D60  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  1921  001D64  EC1D  F00C         	call	_fputc	;wreg free
  1922  001D68  4A0F               	infsnz	fputs@i^0,f,c
  1923  001D6A  2A10               	incf	(fputs@i+1)^0,f,c
  1924  001D6C                     l1271:
  1925  001D6C  500F               	movf	fputs@i^0,w,c
  1926  001D6E  240A               	addwf	fputs@s^0,w,c
  1927  001D70  6ED9               	movwf	fsr2l,c
  1928  001D72  5010               	movf	(fputs@i+1)^0,w,c
  1929  001D74  200B               	addwfc	(fputs@s+1)^0,w,c
  1930  001D76  6EDA               	movwf	fsr2h,c
  1931  001D78  50DF               	movf	indf2,w,c
  1932  001D7A  6E0E               	movwf	fputs@c^0,c
  1933  001D7C  500E               	movf	fputs@c^0,w,c
  1934  001D7E  A4D8               	btfss	status,2,c
  1935  001D80  EFC4  F00E         	goto	u511
  1936  001D84  EFC6  F00E         	goto	u510
  1937  001D88                     u511:
  1938  001D88  EFAB  F00E         	goto	l1267
  1939  001D8C                     u510:
  1940  001D8C  0012               	return		;funcret
  1941  001D8E                     __end_of_fputs:
  1942                           	opt callstack 0
  1943                           
  1944 ;; *************** function _fputc *****************
  1945 ;; Defined at:
  1946 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  1947 ;; Parameters:    Size  Location     Type
  1948 ;;  c               2    0[COMRAM] int 
  1949 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  1950 ;;		 -> sprintf@f(6), 
  1951 ;; Auto vars:     Size  Location     Type
  1952 ;;		None
  1953 ;; Return value:  Size  Location     Type
  1954 ;;                  2    0[COMRAM] int 
  1955 ;; Registers used:
  1956 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1957 ;; Tracked objects:
  1958 ;;		On entry : 0/0
  1959 ;;		On exit  : 0/0
  1960 ;;		Unchanged: 0/0
  1961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1962 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1964 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1965 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1966 ;;Total ram usage:        9 bytes
  1967 ;; Hardware stack levels used:    1
  1968 ;; Hardware stack levels required when called:    1
  1969 ;; This function calls:
  1970 ;;		_putch
  1971 ;; This function is called by:
  1972 ;;		_pad
  1973 ;;		_vfpfcnvrt
  1974 ;;		_fputs
  1975 ;; This function uses a non-reentrant model
  1976 ;;
  1977                           
  1978                           	psect	text8
  1979  00183A                     __ptext8:
  1980                           	opt callstack 0
  1981  00183A                     _fputc:
  1982                           	opt callstack 23
  1983  00183A  5003               	movf	fputc@fp^0,w,c
  1984  00183C  1004               	iorwf	(fputc@fp+1)^0,w,c
  1985  00183E  B4D8               	btfsc	status,2,c
  1986  001840  EF24  F00C         	goto	u471
  1987  001844  EF26  F00C         	goto	u470
  1988  001848                     u471:
  1989  001848  EF2F  F00C         	goto	l1255
  1990  00184C                     u470:
  1991  00184C  5003               	movf	fputc@fp^0,w,c
  1992  00184E  1004               	iorwf	(fputc@fp+1)^0,w,c
  1993  001850  A4D8               	btfss	status,2,c
  1994  001852  EF2D  F00C         	goto	u481
  1995  001856  EF2F  F00C         	goto	u480
  1996  00185A                     u481:
  1997  00185A  EF34  F00C         	goto	l1257
  1998  00185E                     u480:
  1999  00185E                     l1255:
  2000  00185E  5001               	movf	fputc@c^0,w,c
  2001  001860  EC18  F00F         	call	_putch
  2002  001864  EF81  F00C         	goto	l806
  2003  001868                     l1257:
  2004  001868  EE20 F004          	lfsr	2,4
  2005  00186C  5003               	movf	fputc@fp^0,w,c
  2006  00186E  26D9               	addwf	fsr2l,f,c
  2007  001870  5004               	movf	(fputc@fp+1)^0,w,c
  2008  001872  22DA               	addwfc	fsr2h,f,c
  2009  001874  50DE               	movf	postinc2,w,c
  2010  001876  10DE               	iorwf	postinc2,w,c
  2011  001878  B4D8               	btfsc	status,2,c
  2012  00187A  EF41  F00C         	goto	u491
  2013  00187E  EF43  F00C         	goto	u490
  2014  001882                     u491:
  2015  001882  EF5E  F00C         	goto	l1261
  2016  001886                     u490:
  2017  001886  EE20 F004          	lfsr	2,4
  2018  00188A  5003               	movf	fputc@fp^0,w,c
  2019  00188C  26D9               	addwf	fsr2l,f,c
  2020  00188E  5004               	movf	(fputc@fp+1)^0,w,c
  2021  001890  22DA               	addwfc	fsr2h,f,c
  2022  001892  EE10 F002          	lfsr	1,2
  2023  001896  5003               	movf	fputc@fp^0,w,c
  2024  001898  26E1               	addwf	fsr1l,f,c
  2025  00189A  5004               	movf	(fputc@fp+1)^0,w,c
  2026  00189C  22E2               	addwfc	fsr1h,f,c
  2027  00189E  50DE               	movf	postinc2,w,c
  2028  0018A0  5CE6               	subwf	postinc1,w,c
  2029  0018A2  50E6               	movf	postinc1,w,c
  2030  0018A4  0A80               	xorlw	128
  2031  0018A6  6E09               	movwf	(??_fputc+4)^0,c
  2032  0018A8  50DE               	movf	postinc2,w,c
  2033  0018AA  0A80               	xorlw	128
  2034  0018AC  5809               	subwfb	(??_fputc+4)^0,w,c
  2035  0018AE  B0D8               	btfsc	status,0,c
  2036  0018B0  EF5C  F00C         	goto	u501
  2037  0018B4  EF5E  F00C         	goto	u500
  2038  0018B8                     u501:
  2039  0018B8  EF81  F00C         	goto	l806
  2040  0018BC                     u500:
  2041  0018BC                     l1261:
  2042  0018BC  EE20 F002          	lfsr	2,2
  2043  0018C0  5003               	movf	fputc@fp^0,w,c
  2044  0018C2  26D9               	addwf	fsr2l,f,c
  2045  0018C4  5004               	movf	(fputc@fp+1)^0,w,c
  2046  0018C6  22DA               	addwfc	fsr2h,f,c
  2047  0018C8  CFDE F005          	movff	postinc2,??_fputc
  2048  0018CC  CFDD F006          	movff	postdec2,??_fputc+1
  2049  0018D0  C003  FFD9         	movff	fputc@fp,fsr2l
  2050  0018D4  C004  FFDA         	movff	fputc@fp+1,fsr2h
  2051  0018D8  CFDE F007          	movff	postinc2,??_fputc+2
  2052  0018DC  CFDD F008          	movff	postdec2,??_fputc+3
  2053  0018E0  5005               	movf	??_fputc^0,w,c
  2054  0018E2  2407               	addwf	(??_fputc+2)^0,w,c
  2055  0018E4  6ED9               	movwf	fsr2l,c
  2056  0018E6  5006               	movf	(??_fputc+1)^0,w,c
  2057  0018E8  2008               	addwfc	(??_fputc+3)^0,w,c
  2058  0018EA  6EDA               	movwf	fsr2h,c
  2059  0018EC  C001  FFDF         	movff	fputc@c,indf2
  2060  0018F0  EE20 F002          	lfsr	2,2
  2061  0018F4  5003               	movf	fputc@fp^0,w,c
  2062  0018F6  26D9               	addwf	fsr2l,f,c
  2063  0018F8  5004               	movf	(fputc@fp+1)^0,w,c
  2064  0018FA  22DA               	addwfc	fsr2h,f,c
  2065  0018FC  2ADE               	incf	postinc2,f,c
  2066  0018FE  0E00               	movlw	0
  2067  001900  22DD               	addwfc	postdec2,f,c
  2068  001902                     l806:
  2069  001902  0012               	return		;funcret
  2070  001904                     __end_of_fputc:
  2071                           	opt callstack 0
  2072                           
  2073 ;; *************** function _putch *****************
  2074 ;; Defined at:
  2075 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
  2076 ;; Parameters:    Size  Location     Type
  2077 ;;  c               1    wreg     unsigned char 
  2078 ;; Auto vars:     Size  Location     Type
  2079 ;;  c               1    0[COMRAM] unsigned char 
  2080 ;; Return value:  Size  Location     Type
  2081 ;;                  1    wreg      void 
  2082 ;; Registers used:
  2083 ;;		wreg
  2084 ;; Tracked objects:
  2085 ;;		On entry : 0/0
  2086 ;;		On exit  : 0/0
  2087 ;;		Unchanged: 0/0
  2088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2092 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2093 ;;Total ram usage:        0 bytes
  2094 ;; Hardware stack levels used:    1
  2095 ;; This function calls:
  2096 ;;		Nothing
  2097 ;; This function is called by:
  2098 ;;		_fputc
  2099 ;; This function uses a non-reentrant model
  2100 ;;
  2101                           
  2102                           	psect	text9
  2103  001E30                     __ptext9:
  2104                           	opt callstack 0
  2105  001E30                     _putch:
  2106                           	opt callstack 23
  2107  001E30  0012               	return		;funcret
  2108  001E32                     __end_of_putch:
  2109                           	opt callstack 0
  2110                           
  2111 ;; *************** function ___lomod *****************
  2112 ;; Defined at:
  2113 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lomod.c"
  2114 ;; Parameters:    Size  Location     Type
  2115 ;;  dividend        8    0[COMRAM] unsigned long long 
  2116 ;;  divisor         8    8[COMRAM] unsigned long long 
  2117 ;; Auto vars:     Size  Location     Type
  2118 ;;  counter         1   16[COMRAM] unsigned char 
  2119 ;; Return value:  Size  Location     Type
  2120 ;;                  8    0[COMRAM] unsigned long long 
  2121 ;; Registers used:
  2122 ;;		wreg, status,2, status,0
  2123 ;; Tracked objects:
  2124 ;;		On entry : 0/0
  2125 ;;		On exit  : 0/0
  2126 ;;		Unchanged: 0/0
  2127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2128 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2129 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2131 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2132 ;;Total ram usage:       17 bytes
  2133 ;; Hardware stack levels used:    1
  2134 ;; This function calls:
  2135 ;;		Nothing
  2136 ;; This function is called by:
  2137 ;;		_utoa
  2138 ;; This function uses a non-reentrant model
  2139 ;;
  2140                           
  2141                           	psect	text10
  2142  00176A                     __ptext10:
  2143                           	opt callstack 0
  2144  00176A                     ___lomod:
  2145                           	opt callstack 26
  2146  00176A  5009               	movf	___lomod@divisor^0,w,c
  2147  00176C  100A               	iorwf	(___lomod@divisor+1)^0,w,c
  2148  00176E  100B               	iorwf	(___lomod@divisor+2)^0,w,c
  2149  001770  100C               	iorwf	(___lomod@divisor+3)^0,w,c
  2150  001772  100D               	iorwf	(___lomod@divisor+4)^0,w,c
  2151  001774  100E               	iorwf	(___lomod@divisor+5)^0,w,c
  2152  001776  100F               	iorwf	(___lomod@divisor+6)^0,w,c
  2153  001778  1010               	iorwf	(___lomod@divisor+7)^0,w,c
  2154  00177A  B4D8               	btfsc	status,2,c
  2155  00177C  EFC2  F00B         	goto	u611
  2156  001780  EFC4  F00B         	goto	u610
  2157  001784                     u611:
  2158  001784  EF0C  F00C         	goto	l571
  2159  001788                     u610:
  2160  001788  0E01               	movlw	1
  2161  00178A  6E11               	movwf	___lomod@counter^0,c
  2162  00178C  EFD2  F00B         	goto	l1333
  2163  001790                     l1331:
  2164  001790  90D8               	bcf	status,0,c
  2165  001792  3609               	rlcf	___lomod@divisor^0,f,c
  2166  001794  360A               	rlcf	(___lomod@divisor+1)^0,f,c
  2167  001796  360B               	rlcf	(___lomod@divisor+2)^0,f,c
  2168  001798  360C               	rlcf	(___lomod@divisor+3)^0,f,c
  2169  00179A  360D               	rlcf	(___lomod@divisor+4)^0,f,c
  2170  00179C  360E               	rlcf	(___lomod@divisor+5)^0,f,c
  2171  00179E  360F               	rlcf	(___lomod@divisor+6)^0,f,c
  2172  0017A0  3610               	rlcf	(___lomod@divisor+7)^0,f,c
  2173  0017A2  2A11               	incf	___lomod@counter^0,f,c
  2174  0017A4                     l1333:
  2175  0017A4  AE10               	btfss	(___lomod@divisor+7)^0,7,c
  2176  0017A6  EFD7  F00B         	goto	u621
  2177  0017AA  EFD9  F00B         	goto	u620
  2178  0017AE                     u621:
  2179  0017AE  EFC8  F00B         	goto	l1331
  2180  0017B2                     u620:
  2181  0017B2                     l1335:
  2182  0017B2  5009               	movf	___lomod@divisor^0,w,c
  2183  0017B4  5C01               	subwf	___lomod@dividend^0,w,c
  2184  0017B6  500A               	movf	(___lomod@divisor+1)^0,w,c
  2185  0017B8  5802               	subwfb	(___lomod@dividend+1)^0,w,c
  2186  0017BA  500B               	movf	(___lomod@divisor+2)^0,w,c
  2187  0017BC  5803               	subwfb	(___lomod@dividend+2)^0,w,c
  2188  0017BE  500C               	movf	(___lomod@divisor+3)^0,w,c
  2189  0017C0  5804               	subwfb	(___lomod@dividend+3)^0,w,c
  2190  0017C2  500D               	movf	(___lomod@divisor+4)^0,w,c
  2191  0017C4  5805               	subwfb	(___lomod@dividend+4)^0,w,c
  2192  0017C6  500E               	movf	(___lomod@divisor+5)^0,w,c
  2193  0017C8  5806               	subwfb	(___lomod@dividend+5)^0,w,c
  2194  0017CA  500F               	movf	(___lomod@divisor+6)^0,w,c
  2195  0017CC  5807               	subwfb	(___lomod@dividend+6)^0,w,c
  2196  0017CE  5010               	movf	(___lomod@divisor+7)^0,w,c
  2197  0017D0  5808               	subwfb	(___lomod@dividend+7)^0,w,c
  2198  0017D2  A0D8               	btfss	status,0,c
  2199  0017D4  EFEE  F00B         	goto	u631
  2200  0017D8  EFF0  F00B         	goto	u630
  2201  0017DC                     u631:
  2202  0017DC  EF00  F00C         	goto	l1339
  2203  0017E0                     u630:
  2204  0017E0  5009               	movf	___lomod@divisor^0,w,c
  2205  0017E2  5E01               	subwf	___lomod@dividend^0,f,c
  2206  0017E4  500A               	movf	(___lomod@divisor+1)^0,w,c
  2207  0017E6  5A02               	subwfb	(___lomod@dividend+1)^0,f,c
  2208  0017E8  500B               	movf	(___lomod@divisor+2)^0,w,c
  2209  0017EA  5A03               	subwfb	(___lomod@dividend+2)^0,f,c
  2210  0017EC  500C               	movf	(___lomod@divisor+3)^0,w,c
  2211  0017EE  5A04               	subwfb	(___lomod@dividend+3)^0,f,c
  2212  0017F0  500D               	movf	(___lomod@divisor+4)^0,w,c
  2213  0017F2  5A05               	subwfb	(___lomod@dividend+4)^0,f,c
  2214  0017F4  500E               	movf	(___lomod@divisor+5)^0,w,c
  2215  0017F6  5A06               	subwfb	(___lomod@dividend+5)^0,f,c
  2216  0017F8  500F               	movf	(___lomod@divisor+6)^0,w,c
  2217  0017FA  5A07               	subwfb	(___lomod@dividend+6)^0,f,c
  2218  0017FC  5010               	movf	(___lomod@divisor+7)^0,w,c
  2219  0017FE  5A08               	subwfb	(___lomod@dividend+7)^0,f,c
  2220  001800                     l1339:
  2221  001800  90D8               	bcf	status,0,c
  2222  001802  3210               	rrcf	(___lomod@divisor+7)^0,f,c
  2223  001804  320F               	rrcf	(___lomod@divisor+6)^0,f,c
  2224  001806  320E               	rrcf	(___lomod@divisor+5)^0,f,c
  2225  001808  320D               	rrcf	(___lomod@divisor+4)^0,f,c
  2226  00180A  320C               	rrcf	(___lomod@divisor+3)^0,f,c
  2227  00180C  320B               	rrcf	(___lomod@divisor+2)^0,f,c
  2228  00180E  320A               	rrcf	(___lomod@divisor+1)^0,f,c
  2229  001810  3209               	rrcf	___lomod@divisor^0,f,c
  2230  001812  2E11               	decfsz	___lomod@counter^0,f,c
  2231  001814  EFD9  F00B         	goto	l1335
  2232  001818                     l571:
  2233  001818  C001  F001         	movff	___lomod@dividend,?___lomod
  2234  00181C  C002  F002         	movff	___lomod@dividend+1,?___lomod+1
  2235  001820  C003  F003         	movff	___lomod@dividend+2,?___lomod+2
  2236  001824  C004  F004         	movff	___lomod@dividend+3,?___lomod+3
  2237  001828  C005  F005         	movff	___lomod@dividend+4,?___lomod+4
  2238  00182C  C006  F006         	movff	___lomod@dividend+5,?___lomod+5
  2239  001830  C007  F007         	movff	___lomod@dividend+6,?___lomod+6
  2240  001834  C008  F008         	movff	___lomod@dividend+7,?___lomod+7
  2241  001838  0012               	return		;funcret
  2242  00183A                     __end_of___lomod:
  2243                           	opt callstack 0
  2244                           
  2245 ;; *************** function ___lodiv *****************
  2246 ;; Defined at:
  2247 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lodiv.c"
  2248 ;; Parameters:    Size  Location     Type
  2249 ;;  dividend        8    0[COMRAM] unsigned long long 
  2250 ;;  divisor         8    8[COMRAM] unsigned long long 
  2251 ;; Auto vars:     Size  Location     Type
  2252 ;;  quotient        8   16[COMRAM] unsigned long long 
  2253 ;;  counter         1   24[COMRAM] unsigned char 
  2254 ;; Return value:  Size  Location     Type
  2255 ;;                  8    0[COMRAM] unsigned long long 
  2256 ;; Registers used:
  2257 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2258 ;; Tracked objects:
  2259 ;;		On entry : 0/0
  2260 ;;		On exit  : 0/0
  2261 ;;		Unchanged: 0/0
  2262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2263 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2264 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2266 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2267 ;;Total ram usage:       25 bytes
  2268 ;; Hardware stack levels used:    1
  2269 ;; This function calls:
  2270 ;;		Nothing
  2271 ;; This function is called by:
  2272 ;;		_utoa
  2273 ;; This function uses a non-reentrant model
  2274 ;;
  2275                           
  2276                           	psect	text11
  2277  00159C                     __ptext11:
  2278                           	opt callstack 0
  2279  00159C                     ___lodiv:
  2280                           	opt callstack 26
  2281  00159C  EE20  F011         	lfsr	2,___lodiv@quotient
  2282  0015A0  0E07               	movlw	7
  2283  0015A2                     u571:
  2284  0015A2  6ADE               	clrf	postinc2,c
  2285  0015A4  06E8               	decf	wreg,f,c
  2286  0015A6  E2FD               	bc	u571
  2287  0015A8  5009               	movf	___lodiv@divisor^0,w,c
  2288  0015AA  100A               	iorwf	(___lodiv@divisor+1)^0,w,c
  2289  0015AC  100B               	iorwf	(___lodiv@divisor+2)^0,w,c
  2290  0015AE  100C               	iorwf	(___lodiv@divisor+3)^0,w,c
  2291  0015B0  100D               	iorwf	(___lodiv@divisor+4)^0,w,c
  2292  0015B2  100E               	iorwf	(___lodiv@divisor+5)^0,w,c
  2293  0015B4  100F               	iorwf	(___lodiv@divisor+6)^0,w,c
  2294  0015B6  1010               	iorwf	(___lodiv@divisor+7)^0,w,c
  2295  0015B8  B4D8               	btfsc	status,2,c
  2296  0015BA  EFE1  F00A         	goto	u581
  2297  0015BE  EFE3  F00A         	goto	u580
  2298  0015C2                     u581:
  2299  0015C2  EF35  F00B         	goto	l561
  2300  0015C6                     u580:
  2301  0015C6  0E01               	movlw	1
  2302  0015C8  6E19               	movwf	___lodiv@counter^0,c
  2303  0015CA  EFF1  F00A         	goto	l1313
  2304  0015CE                     l1311:
  2305  0015CE  90D8               	bcf	status,0,c
  2306  0015D0  3609               	rlcf	___lodiv@divisor^0,f,c
  2307  0015D2  360A               	rlcf	(___lodiv@divisor+1)^0,f,c
  2308  0015D4  360B               	rlcf	(___lodiv@divisor+2)^0,f,c
  2309  0015D6  360C               	rlcf	(___lodiv@divisor+3)^0,f,c
  2310  0015D8  360D               	rlcf	(___lodiv@divisor+4)^0,f,c
  2311  0015DA  360E               	rlcf	(___lodiv@divisor+5)^0,f,c
  2312  0015DC  360F               	rlcf	(___lodiv@divisor+6)^0,f,c
  2313  0015DE  3610               	rlcf	(___lodiv@divisor+7)^0,f,c
  2314  0015E0  2A19               	incf	___lodiv@counter^0,f,c
  2315  0015E2                     l1313:
  2316  0015E2  AE10               	btfss	(___lodiv@divisor+7)^0,7,c
  2317  0015E4  EFF6  F00A         	goto	u591
  2318  0015E8  EFF8  F00A         	goto	u590
  2319  0015EC                     u591:
  2320  0015EC  EFE7  F00A         	goto	l1311
  2321  0015F0                     u590:
  2322  0015F0                     l1315:
  2323  0015F0  90D8               	bcf	status,0,c
  2324  0015F2  3611               	rlcf	___lodiv@quotient^0,f,c
  2325  0015F4  3612               	rlcf	(___lodiv@quotient+1)^0,f,c
  2326  0015F6  3613               	rlcf	(___lodiv@quotient+2)^0,f,c
  2327  0015F8  3614               	rlcf	(___lodiv@quotient+3)^0,f,c
  2328  0015FA  3615               	rlcf	(___lodiv@quotient+4)^0,f,c
  2329  0015FC  3616               	rlcf	(___lodiv@quotient+5)^0,f,c
  2330  0015FE  3617               	rlcf	(___lodiv@quotient+6)^0,f,c
  2331  001600  3618               	rlcf	(___lodiv@quotient+7)^0,f,c
  2332  001602  5009               	movf	___lodiv@divisor^0,w,c
  2333  001604  5C01               	subwf	___lodiv@dividend^0,w,c
  2334  001606  500A               	movf	(___lodiv@divisor+1)^0,w,c
  2335  001608  5802               	subwfb	(___lodiv@dividend+1)^0,w,c
  2336  00160A  500B               	movf	(___lodiv@divisor+2)^0,w,c
  2337  00160C  5803               	subwfb	(___lodiv@dividend+2)^0,w,c
  2338  00160E  500C               	movf	(___lodiv@divisor+3)^0,w,c
  2339  001610  5804               	subwfb	(___lodiv@dividend+3)^0,w,c
  2340  001612  500D               	movf	(___lodiv@divisor+4)^0,w,c
  2341  001614  5805               	subwfb	(___lodiv@dividend+4)^0,w,c
  2342  001616  500E               	movf	(___lodiv@divisor+5)^0,w,c
  2343  001618  5806               	subwfb	(___lodiv@dividend+5)^0,w,c
  2344  00161A  500F               	movf	(___lodiv@divisor+6)^0,w,c
  2345  00161C  5807               	subwfb	(___lodiv@dividend+6)^0,w,c
  2346  00161E  5010               	movf	(___lodiv@divisor+7)^0,w,c
  2347  001620  5808               	subwfb	(___lodiv@dividend+7)^0,w,c
  2348  001622  A0D8               	btfss	status,0,c
  2349  001624  EF16  F00B         	goto	u601
  2350  001628  EF18  F00B         	goto	u600
  2351  00162C                     u601:
  2352  00162C  EF29  F00B         	goto	l1323
  2353  001630                     u600:
  2354  001630  5009               	movf	___lodiv@divisor^0,w,c
  2355  001632  5E01               	subwf	___lodiv@dividend^0,f,c
  2356  001634  500A               	movf	(___lodiv@divisor+1)^0,w,c
  2357  001636  5A02               	subwfb	(___lodiv@dividend+1)^0,f,c
  2358  001638  500B               	movf	(___lodiv@divisor+2)^0,w,c
  2359  00163A  5A03               	subwfb	(___lodiv@dividend+2)^0,f,c
  2360  00163C  500C               	movf	(___lodiv@divisor+3)^0,w,c
  2361  00163E  5A04               	subwfb	(___lodiv@dividend+3)^0,f,c
  2362  001640  500D               	movf	(___lodiv@divisor+4)^0,w,c
  2363  001642  5A05               	subwfb	(___lodiv@dividend+4)^0,f,c
  2364  001644  500E               	movf	(___lodiv@divisor+5)^0,w,c
  2365  001646  5A06               	subwfb	(___lodiv@dividend+5)^0,f,c
  2366  001648  500F               	movf	(___lodiv@divisor+6)^0,w,c
  2367  00164A  5A07               	subwfb	(___lodiv@dividend+6)^0,f,c
  2368  00164C  5010               	movf	(___lodiv@divisor+7)^0,w,c
  2369  00164E  5A08               	subwfb	(___lodiv@dividend+7)^0,f,c
  2370  001650  8011               	bsf	___lodiv@quotient^0,0,c
  2371  001652                     l1323:
  2372  001652  90D8               	bcf	status,0,c
  2373  001654  3210               	rrcf	(___lodiv@divisor+7)^0,f,c
  2374  001656  320F               	rrcf	(___lodiv@divisor+6)^0,f,c
  2375  001658  320E               	rrcf	(___lodiv@divisor+5)^0,f,c
  2376  00165A  320D               	rrcf	(___lodiv@divisor+4)^0,f,c
  2377  00165C  320C               	rrcf	(___lodiv@divisor+3)^0,f,c
  2378  00165E  320B               	rrcf	(___lodiv@divisor+2)^0,f,c
  2379  001660  320A               	rrcf	(___lodiv@divisor+1)^0,f,c
  2380  001662  3209               	rrcf	___lodiv@divisor^0,f,c
  2381  001664  2E19               	decfsz	___lodiv@counter^0,f,c
  2382  001666  EFF8  F00A         	goto	l1315
  2383  00166A                     l561:
  2384  00166A  C011  F001         	movff	___lodiv@quotient,?___lodiv
  2385  00166E  C012  F002         	movff	___lodiv@quotient+1,?___lodiv+1
  2386  001672  C013  F003         	movff	___lodiv@quotient+2,?___lodiv+2
  2387  001676  C014  F004         	movff	___lodiv@quotient+3,?___lodiv+3
  2388  00167A  C015  F005         	movff	___lodiv@quotient+4,?___lodiv+4
  2389  00167E  C016  F006         	movff	___lodiv@quotient+5,?___lodiv+5
  2390  001682  C017  F007         	movff	___lodiv@quotient+6,?___lodiv+6
  2391  001686  C018  F008         	movff	___lodiv@quotient+7,?___lodiv+7
  2392  00168A  0012               	return		;funcret
  2393  00168C                     __end_of___lodiv:
  2394                           	opt callstack 0
  2395                           
  2396 ;; *************** function _strncmp *****************
  2397 ;; Defined at:
  2398 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strncmp.c"
  2399 ;; Parameters:    Size  Location     Type
  2400 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  2401 ;;		 -> STR_1(4), 
  2402 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  2403 ;;		 -> STR_4(3), 
  2404 ;;  n               2    4[COMRAM] unsigned int 
  2405 ;; Auto vars:     Size  Location     Type
  2406 ;;  r               2    9[COMRAM] PTR const unsigned char 
  2407 ;;		 -> STR_4(3), 
  2408 ;;  l               2    7[COMRAM] PTR const unsigned char 
  2409 ;;		 -> STR_1(4), 
  2410 ;; Return value:  Size  Location     Type
  2411 ;;                  2    0[COMRAM] int 
  2412 ;; Registers used:
  2413 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  2414 ;; Tracked objects:
  2415 ;;		On entry : 0/0
  2416 ;;		On exit  : 0/0
  2417 ;;		Unchanged: 0/0
  2418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2419 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2420 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2421 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2422 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2423 ;;Total ram usage:       11 bytes
  2424 ;; Hardware stack levels used:    1
  2425 ;; This function calls:
  2426 ;;		Nothing
  2427 ;; This function is called by:
  2428 ;;		_vfpfcnvrt
  2429 ;; This function uses a non-reentrant model
  2430 ;;
  2431                           
  2432                           	psect	text12
  2433  00168C                     __ptext12:
  2434                           	opt callstack 0
  2435  00168C                     _strncmp:
  2436                           	opt callstack 27
  2437  00168C  C001  F008         	movff	strncmp@_l,strncmp@l
  2438  001690  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  2439  001694  C003  F00A         	movff	strncmp@_r,strncmp@r
  2440  001698  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  2441  00169C  0605               	decf	strncmp@n^0,f,c
  2442  00169E  A0D8               	btfss	status,0,c
  2443  0016A0  0606               	decf	(strncmp@n+1)^0,f,c
  2444  0016A2  2805               	incf	strncmp@n^0,w,c
  2445  0016A4  E106               	bnz	u711
  2446  0016A6  2806               	incf	(strncmp@n+1)^0,w,c
  2447  0016A8  A4D8               	btfss	status,2,c
  2448  0016AA  EF59  F00B         	goto	u711
  2449  0016AE  EF5B  F00B         	goto	u710
  2450  0016B2                     u711:
  2451  0016B2  EF68  F00B         	goto	l1387
  2452  0016B6                     u710:
  2453  0016B6  0E00               	movlw	0
  2454  0016B8  6E02               	movwf	(?_strncmp+1)^0,c
  2455  0016BA  0E00               	movlw	0
  2456  0016BC  6E01               	movwf	?_strncmp^0,c
  2457  0016BE  EFB4  F00B         	goto	l834
  2458  0016C2                     l1385:
  2459  0016C2  4A08               	infsnz	strncmp@l^0,f,c
  2460  0016C4  2A09               	incf	(strncmp@l+1)^0,f,c
  2461  0016C6  4A0A               	infsnz	strncmp@r^0,f,c
  2462  0016C8  2A0B               	incf	(strncmp@r+1)^0,f,c
  2463  0016CA  0605               	decf	strncmp@n^0,f,c
  2464  0016CC  A0D8               	btfss	status,0,c
  2465  0016CE  0606               	decf	(strncmp@n+1)^0,f,c
  2466  0016D0                     l1387:
  2467  0016D0  C008  FFF6         	movff	strncmp@l,tblptrl
  2468  0016D4  C009  FFF7         	movff	strncmp@l+1,tblptrh
  2469  0016D8                     	if	0	;tblptru may be non-zero
  2470  0016D8                     	endif
  2471  0016D8                     	if	0	;tblptru may be non-zero
  2472  0016D8                     	endif
  2473  0016D8  0008               	tblrd		*
  2474  0016DA  50F5               	movf	tablat,w,c
  2475  0016DC  0900               	iorlw	0
  2476  0016DE  B4D8               	btfsc	status,2,c
  2477  0016E0  EF74  F00B         	goto	u721
  2478  0016E4  EF76  F00B         	goto	u720
  2479  0016E8                     u721:
  2480  0016E8  EFA2  F00B         	goto	l1395
  2481  0016EC                     u720:
  2482  0016EC  C00A  FFF6         	movff	strncmp@r,tblptrl
  2483  0016F0  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2484  0016F4                     	if	0	;tblptru may be non-zero
  2485  0016F4                     	endif
  2486  0016F4                     	if	0	;tblptru may be non-zero
  2487  0016F4                     	endif
  2488  0016F4  0008               	tblrd		*
  2489  0016F6  50F5               	movf	tablat,w,c
  2490  0016F8  0900               	iorlw	0
  2491  0016FA  B4D8               	btfsc	status,2,c
  2492  0016FC  EF82  F00B         	goto	u731
  2493  001700  EF84  F00B         	goto	u730
  2494  001704                     u731:
  2495  001704  EFA2  F00B         	goto	l1395
  2496  001708                     u730:
  2497  001708  5005               	movf	strncmp@n^0,w,c
  2498  00170A  1006               	iorwf	(strncmp@n+1)^0,w,c
  2499  00170C  B4D8               	btfsc	status,2,c
  2500  00170E  EF8B  F00B         	goto	u741
  2501  001712  EF8D  F00B         	goto	u740
  2502  001716                     u741:
  2503  001716  EFA2  F00B         	goto	l1395
  2504  00171A                     u740:
  2505  00171A  C008  FFF6         	movff	strncmp@l,tblptrl
  2506  00171E  C009  FFF7         	movff	strncmp@l+1,tblptrh
  2507  001722                     	if	0	;tblptru may be non-zero
  2508  001722                     	endif
  2509  001722                     	if	0	;tblptru may be non-zero
  2510  001722                     	endif
  2511  001722  0008               	tblrd		*
  2512  001724  CFF5 F007          	movff	tablat,??_strncmp
  2513  001728  C00A  FFF6         	movff	strncmp@r,tblptrl
  2514  00172C  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2515  001730                     	if	0	;tblptru may be non-zero
  2516  001730                     	endif
  2517  001730                     	if	0	;tblptru may be non-zero
  2518  001730                     	endif
  2519  001730  0008               	tblrd		*
  2520  001732  50F5               	movf	tablat,w,c
  2521  001734  1807               	xorwf	??_strncmp^0,w,c
  2522  001736  B4D8               	btfsc	status,2,c
  2523  001738  EFA0  F00B         	goto	u751
  2524  00173C  EFA2  F00B         	goto	u750
  2525  001740                     u751:
  2526  001740  EF61  F00B         	goto	l1385
  2527  001744                     u750:
  2528  001744                     l1395:
  2529  001744  C008  FFF6         	movff	strncmp@l,tblptrl
  2530  001748  C009  FFF7         	movff	strncmp@l+1,tblptrh
  2531  00174C                     	if	0	;tblptru may be non-zero
  2532  00174C                     	endif
  2533  00174C                     	if	0	;tblptru may be non-zero
  2534  00174C                     	endif
  2535  00174C  0008               	tblrd		*
  2536  00174E  CFF5 F007          	movff	tablat,??_strncmp
  2537  001752  C00A  FFF6         	movff	strncmp@r,tblptrl
  2538  001756  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2539  00175A                     	if	0	;tblptru may be non-zero
  2540  00175A                     	endif
  2541  00175A                     	if	0	;tblptru may be non-zero
  2542  00175A                     	endif
  2543  00175A  0008               	tblrd		*
  2544  00175C  50F5               	movf	tablat,w,c
  2545  00175E  5C07               	subwf	??_strncmp^0,w,c
  2546  001760  6E01               	movwf	?_strncmp^0,c
  2547  001762  6A02               	clrf	(?_strncmp+1)^0,c
  2548  001764  A0D8               	btfss	status,0,c
  2549  001766  0602               	decf	(?_strncmp+1)^0,f,c
  2550  001768                     l834:
  2551  001768  0012               	return		;funcret
  2552  00176A                     __end_of_strncmp:
  2553                           	opt callstack 0
  2554                           
  2555 ;; *************** function _lcd_init *****************
  2556 ;; Defined at:
  2557 ;;		line 116 in file "uP Part 2.c"
  2558 ;; Parameters:    Size  Location     Type
  2559 ;;		None
  2560 ;; Auto vars:     Size  Location     Type
  2561 ;;		None
  2562 ;; Return value:  Size  Location     Type
  2563 ;;                  1    wreg      void 
  2564 ;; Registers used:
  2565 ;;		wreg, status,2, status,0, cstack
  2566 ;; Tracked objects:
  2567 ;;		On entry : 0/0
  2568 ;;		On exit  : 0/0
  2569 ;;		Unchanged: 0/0
  2570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2574 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2575 ;;Total ram usage:        0 bytes
  2576 ;; Hardware stack levels used:    1
  2577 ;; Hardware stack levels required when called:    1
  2578 ;; This function calls:
  2579 ;;		_lcd_command
  2580 ;; This function is called by:
  2581 ;;		_main
  2582 ;; This function uses a non-reentrant model
  2583 ;;
  2584                           
  2585                           	psect	text13
  2586  001E02                     __ptext13:
  2587                           	opt callstack 0
  2588  001E02                     _lcd_init:
  2589                           	opt callstack 29
  2590  001E02                     
  2591                           ;uP Part 2.c: 117:  lcd_command(0x33);
  2592  001E02  0E33               	movlw	51
  2593  001E04  ECE5  F00C         	call	_lcd_command
  2594                           
  2595                           ;uP Part 2.c: 118:  lcd_command(0x32);
  2596  001E08  0E32               	movlw	50
  2597  001E0A  ECE5  F00C         	call	_lcd_command
  2598                           
  2599                           ;uP Part 2.c: 119:  lcd_command(0x2C);
  2600  001E0E  0E2C               	movlw	44
  2601  001E10  ECE5  F00C         	call	_lcd_command
  2602                           
  2603                           ;uP Part 2.c: 120:  lcd_command(0x0C);
  2604  001E14  0E0C               	movlw	12
  2605  001E16  ECE5  F00C         	call	_lcd_command
  2606                           
  2607                           ;uP Part 2.c: 121:  lcd_command(0x01);
  2608  001E1A  0E01               	movlw	1
  2609  001E1C  ECE5  F00C         	call	_lcd_command
  2610  001E20  0012               	return		;funcret
  2611  001E22                     __end_of_lcd_init:
  2612                           	opt callstack 0
  2613                           
  2614 ;; *************** function _lcd_command *****************
  2615 ;; Defined at:
  2616 ;;		line 68 in file "uP Part 2.c"
  2617 ;; Parameters:    Size  Location     Type
  2618 ;;  x               1    wreg     unsigned char 
  2619 ;; Auto vars:     Size  Location     Type
  2620 ;;  x               1    2[COMRAM] unsigned char 
  2621 ;;  temp            1    1[COMRAM] unsigned char 
  2622 ;; Return value:  Size  Location     Type
  2623 ;;                  1    wreg      void 
  2624 ;; Registers used:
  2625 ;;		wreg, status,2, status,0, cstack
  2626 ;; Tracked objects:
  2627 ;;		On entry : 0/0
  2628 ;;		On exit  : 0/0
  2629 ;;		Unchanged: 0/0
  2630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2632 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2633 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2634 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2635 ;;Total ram usage:        3 bytes
  2636 ;; Hardware stack levels used:    1
  2637 ;; This function calls:
  2638 ;;		Nothing
  2639 ;; This function is called by:
  2640 ;;		_lcd_init
  2641 ;;		_main
  2642 ;; This function uses a non-reentrant model
  2643 ;;
  2644                           
  2645                           	psect	text14
  2646  0019CA                     __ptext14:
  2647                           	opt callstack 0
  2648  0019CA                     _lcd_command:
  2649                           	opt callstack 29
  2650                           
  2651                           ;incstack = 0
  2652                           ;lcd_command@x stored from wreg
  2653  0019CA  6E03               	movwf	lcd_command@x^0,c
  2654  0019CC                     
  2655                           ;uP Part 2.c: 69:  char temp;;uP Part 2.c: 72:  TRISCbits.TRISC0 = 0;
  2656  0019CC  908A               	bcf	138,0,c	;volatile
  2657                           
  2658                           ;uP Part 2.c: 73:  TRISCbits.TRISC1 = 0;
  2659  0019CE  928A               	bcf	138,1,c	;volatile
  2660                           
  2661                           ;uP Part 2.c: 74:  TRISCbits.TRISC2 = 0;
  2662  0019D0  948A               	bcf	138,2,c	;volatile
  2663                           
  2664                           ;uP Part 2.c: 75:  TRISCbits.TRISC3 = 0;
  2665  0019D2  968A               	bcf	138,3,c	;volatile
  2666                           
  2667                           ;uP Part 2.c: 76:  TRISCbits.TRISC4 = 0;
  2668  0019D4  988A               	bcf	138,4,c	;volatile
  2669                           
  2670                           ;uP Part 2.c: 77:  TRISCbits.TRISC7 = 0;
  2671  0019D6  9E8A               	bcf	138,7,c	;volatile
  2672  0019D8                     
  2673                           ;uP Part 2.c: 79:  temp = x;
  2674  0019D8  C003  F002         	movff	lcd_command@x,lcd_command@temp
  2675  0019DC                     
  2676                           ;uP Part 2.c: 82:     PORTC = 0;
  2677  0019DC  0E00               	movlw	0
  2678  0019DE  6E8F               	movwf	143,c	;volatile
  2679  0019E0                     
  2680                           ;uP Part 2.c: 83:     _delay((unsigned long)((5)*(4000000/4000.0)));
  2681  0019E0  0E07               	movlw	7
  2682  0019E2  6E01               	movwf	??_lcd_command^0,c
  2683  0019E4  0E7D               	movlw	125
  2684  0019E6                     u947:
  2685  0019E6  2EE8               	decfsz	wreg,f,c
  2686  0019E8  D7FE               	bra	u947
  2687  0019EA  2E01               	decfsz	??_lcd_command^0,f,c
  2688  0019EC  D7FC               	bra	u947
  2689  0019EE  F000               	nop	
  2690  0019F0                     
  2691                           ;uP Part 2.c: 85:  x = x >>4;
  2692  0019F0  3803               	swapf	lcd_command@x^0,w,c
  2693  0019F2  0B0F               	andlw	15
  2694  0019F4  6E03               	movwf	lcd_command@x^0,c
  2695  0019F6                     
  2696                           ;uP Part 2.c: 86:  x = x & 0xF;
  2697  0019F6  5003               	movf	lcd_command@x^0,w,c
  2698  0019F8  0B0F               	andlw	15
  2699  0019FA  6E03               	movwf	lcd_command@x^0,c
  2700  0019FC                     
  2701                           ;uP Part 2.c: 87:  x = x | 0x80;
  2702  0019FC  5003               	movf	lcd_command@x^0,w,c
  2703  0019FE  0980               	iorlw	128
  2704  001A00  6E03               	movwf	lcd_command@x^0,c
  2705  001A02                     
  2706                           ;uP Part 2.c: 88:  PORTC = x;
  2707  001A02  C003  FF8F         	movff	lcd_command@x,3983	;volatile
  2708  001A06                     
  2709                           ;uP Part 2.c: 89:  _delay((unsigned long)((5)*(4000000/4000.0)));
  2710  001A06  0E07               	movlw	7
  2711  001A08  6E01               	movwf	??_lcd_command^0,c
  2712  001A0A  0E7D               	movlw	125
  2713  001A0C                     u957:
  2714  001A0C  2EE8               	decfsz	wreg,f,c
  2715  001A0E  D7FE               	bra	u957
  2716  001A10  2E01               	decfsz	??_lcd_command^0,f,c
  2717  001A12  D7FC               	bra	u957
  2718  001A14  F000               	nop	
  2719  001A16                     
  2720                           ;uP Part 2.c: 91:  x = x & 0xF;
  2721  001A16  5003               	movf	lcd_command@x^0,w,c
  2722  001A18  0B0F               	andlw	15
  2723  001A1A  6E03               	movwf	lcd_command@x^0,c
  2724  001A1C                     
  2725                           ;uP Part 2.c: 92:  PORTC = x;
  2726  001A1C  C003  FF8F         	movff	lcd_command@x,3983	;volatile
  2727  001A20                     
  2728                           ;uP Part 2.c: 93:  _delay((unsigned long)((5)*(4000000/4000.0)));
  2729  001A20  0E07               	movlw	7
  2730  001A22  6E01               	movwf	??_lcd_command^0,c
  2731  001A24  0E7D               	movlw	125
  2732  001A26                     u967:
  2733  001A26  2EE8               	decfsz	wreg,f,c
  2734  001A28  D7FE               	bra	u967
  2735  001A2A  2E01               	decfsz	??_lcd_command^0,f,c
  2736  001A2C  D7FC               	bra	u967
  2737  001A2E  F000               	nop	
  2738  001A30                     
  2739                           ;uP Part 2.c: 95:  PORTC = 0;
  2740  001A30  0E00               	movlw	0
  2741  001A32  6E8F               	movwf	143,c	;volatile
  2742  001A34                     
  2743                           ;uP Part 2.c: 96:  _delay((unsigned long)((5)*(4000000/4000.0)));
  2744  001A34  0E07               	movlw	7
  2745  001A36  6E01               	movwf	??_lcd_command^0,c
  2746  001A38  0E7D               	movlw	125
  2747  001A3A                     u977:
  2748  001A3A  2EE8               	decfsz	wreg,f,c
  2749  001A3C  D7FE               	bra	u977
  2750  001A3E  2E01               	decfsz	??_lcd_command^0,f,c
  2751  001A40  D7FC               	bra	u977
  2752  001A42  F000               	nop	
  2753  001A44                     
  2754                           ;uP Part 2.c: 99:  x = temp;
  2755  001A44  C002  F003         	movff	lcd_command@temp,lcd_command@x
  2756  001A48                     
  2757                           ;uP Part 2.c: 100:  x = x & 0xF;
  2758  001A48  5003               	movf	lcd_command@x^0,w,c
  2759  001A4A  0B0F               	andlw	15
  2760  001A4C  6E03               	movwf	lcd_command@x^0,c
  2761  001A4E                     
  2762                           ;uP Part 2.c: 101:  x = x | 0x80;
  2763  001A4E  5003               	movf	lcd_command@x^0,w,c
  2764  001A50  0980               	iorlw	128
  2765  001A52  6E03               	movwf	lcd_command@x^0,c
  2766  001A54                     
  2767                           ;uP Part 2.c: 102:  PORTC = x;
  2768  001A54  C003  FF8F         	movff	lcd_command@x,3983	;volatile
  2769  001A58                     
  2770                           ;uP Part 2.c: 103:  _delay((unsigned long)((5)*(4000000/4000.0)));
  2771  001A58  0E07               	movlw	7
  2772  001A5A  6E01               	movwf	??_lcd_command^0,c
  2773  001A5C  0E7D               	movlw	125
  2774  001A5E                     u987:
  2775  001A5E  2EE8               	decfsz	wreg,f,c
  2776  001A60  D7FE               	bra	u987
  2777  001A62  2E01               	decfsz	??_lcd_command^0,f,c
  2778  001A64  D7FC               	bra	u987
  2779  001A66  F000               	nop	
  2780  001A68                     
  2781                           ;uP Part 2.c: 105:  x = x & 0xF;
  2782  001A68  5003               	movf	lcd_command@x^0,w,c
  2783  001A6A  0B0F               	andlw	15
  2784  001A6C  6E03               	movwf	lcd_command@x^0,c
  2785  001A6E                     
  2786                           ;uP Part 2.c: 106:  PORTC = x;
  2787  001A6E  C003  FF8F         	movff	lcd_command@x,3983	;volatile
  2788  001A72                     
  2789                           ;uP Part 2.c: 107:  _delay((unsigned long)((5)*(4000000/4000.0)));
  2790  001A72  0E07               	movlw	7
  2791  001A74  6E01               	movwf	??_lcd_command^0,c
  2792  001A76  0E7D               	movlw	125
  2793  001A78                     u997:
  2794  001A78  2EE8               	decfsz	wreg,f,c
  2795  001A7A  D7FE               	bra	u997
  2796  001A7C  2E01               	decfsz	??_lcd_command^0,f,c
  2797  001A7E  D7FC               	bra	u997
  2798  001A80  F000               	nop	
  2799  001A82  0012               	return		;funcret
  2800  001A84                     __end_of_lcd_command:
  2801                           	opt callstack 0
  2802                           
  2803 ;; *************** function _lcd_char *****************
  2804 ;; Defined at:
  2805 ;;		line 130 in file "uP Part 2.c"
  2806 ;; Parameters:    Size  Location     Type
  2807 ;;  x               1    wreg     unsigned char 
  2808 ;; Auto vars:     Size  Location     Type
  2809 ;;  x               1    2[COMRAM] unsigned char 
  2810 ;;  temp            1    1[COMRAM] unsigned char 
  2811 ;; Return value:  Size  Location     Type
  2812 ;;                  1    wreg      void 
  2813 ;; Registers used:
  2814 ;;		wreg, status,2, status,0, cstack
  2815 ;; Tracked objects:
  2816 ;;		On entry : 0/0
  2817 ;;		On exit  : 0/0
  2818 ;;		Unchanged: 0/0
  2819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2821 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2822 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2823 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2824 ;;Total ram usage:        3 bytes
  2825 ;; Hardware stack levels used:    1
  2826 ;; This function calls:
  2827 ;;		Nothing
  2828 ;; This function is called by:
  2829 ;;		_main
  2830 ;; This function uses a non-reentrant model
  2831 ;;
  2832                           
  2833                           	psect	text15
  2834  001A84                     __ptext15:
  2835                           	opt callstack 0
  2836  001A84                     _lcd_char:
  2837                           	opt callstack 30
  2838                           
  2839                           ;incstack = 0
  2840                           ;lcd_char@x stored from wreg
  2841  001A84  6E03               	movwf	lcd_char@x^0,c
  2842  001A86                     
  2843                           ;uP Part 2.c: 131:  char temp;;uP Part 2.c: 134:  TRISCbits.TRISC0 = 0;
  2844  001A86  908A               	bcf	138,0,c	;volatile
  2845                           
  2846                           ;uP Part 2.c: 135:  TRISCbits.TRISC1 = 0;
  2847  001A88  928A               	bcf	138,1,c	;volatile
  2848                           
  2849                           ;uP Part 2.c: 136:  TRISCbits.TRISC2 = 0;
  2850  001A8A  948A               	bcf	138,2,c	;volatile
  2851                           
  2852                           ;uP Part 2.c: 137:  TRISCbits.TRISC3 = 0;
  2853  001A8C  968A               	bcf	138,3,c	;volatile
  2854                           
  2855                           ;uP Part 2.c: 138:  TRISCbits.TRISC4 = 0;
  2856  001A8E  988A               	bcf	138,4,c	;volatile
  2857                           
  2858                           ;uP Part 2.c: 139:  TRISCbits.TRISC7 = 0;
  2859  001A90  9E8A               	bcf	138,7,c	;volatile
  2860  001A92                     
  2861                           ;uP Part 2.c: 141:  temp = x;
  2862  001A92  C003  F002         	movff	lcd_char@x,lcd_char@temp
  2863  001A96                     
  2864                           ;uP Part 2.c: 144:  PORTC = 0x10;
  2865  001A96  0E10               	movlw	16
  2866  001A98  6E8F               	movwf	143,c	;volatile
  2867  001A9A                     
  2868                           ;uP Part 2.c: 145:  _delay((unsigned long)((5)*(4000000/4000.0)));
  2869  001A9A  0E07               	movlw	7
  2870  001A9C  6E01               	movwf	??_lcd_char^0,c
  2871  001A9E  0E7D               	movlw	125
  2872  001AA0                     u1007:
  2873  001AA0  2EE8               	decfsz	wreg,f,c
  2874  001AA2  D7FE               	bra	u1007
  2875  001AA4  2E01               	decfsz	??_lcd_char^0,f,c
  2876  001AA6  D7FC               	bra	u1007
  2877  001AA8  F000               	nop	
  2878  001AAA                     
  2879                           ;uP Part 2.c: 147:  x = x >>4;
  2880  001AAA  3803               	swapf	lcd_char@x^0,w,c
  2881  001AAC  0B0F               	andlw	15
  2882  001AAE  6E03               	movwf	lcd_char@x^0,c
  2883  001AB0                     
  2884                           ;uP Part 2.c: 148:  x = x & 0xF;
  2885  001AB0  5003               	movf	lcd_char@x^0,w,c
  2886  001AB2  0B0F               	andlw	15
  2887  001AB4  6E03               	movwf	lcd_char@x^0,c
  2888  001AB6                     
  2889                           ;uP Part 2.c: 149:  x = x | 0x90;
  2890  001AB6  5003               	movf	lcd_char@x^0,w,c
  2891  001AB8  0990               	iorlw	144
  2892  001ABA  6E03               	movwf	lcd_char@x^0,c
  2893  001ABC                     
  2894                           ;uP Part 2.c: 150:  PORTC = x;
  2895  001ABC  C003  FF8F         	movff	lcd_char@x,3983	;volatile
  2896  001AC0                     
  2897                           ;uP Part 2.c: 151:  _delay((unsigned long)((5)*(4000000/4000.0)));
  2898  001AC0  0E07               	movlw	7
  2899  001AC2  6E01               	movwf	??_lcd_char^0,c
  2900  001AC4  0E7D               	movlw	125
  2901  001AC6                     u1017:
  2902  001AC6  2EE8               	decfsz	wreg,f,c
  2903  001AC8  D7FE               	bra	u1017
  2904  001ACA  2E01               	decfsz	??_lcd_char^0,f,c
  2905  001ACC  D7FC               	bra	u1017
  2906  001ACE  F000               	nop	
  2907  001AD0                     
  2908                           ;uP Part 2.c: 153:  x = x & 0x1F;
  2909  001AD0  5003               	movf	lcd_char@x^0,w,c
  2910  001AD2  0B1F               	andlw	31
  2911  001AD4  6E03               	movwf	lcd_char@x^0,c
  2912  001AD6                     
  2913                           ;uP Part 2.c: 154:  PORTC = x;
  2914  001AD6  C003  FF8F         	movff	lcd_char@x,3983	;volatile
  2915  001ADA                     
  2916                           ;uP Part 2.c: 155:  _delay((unsigned long)((5)*(4000000/4000.0)));
  2917  001ADA  0E07               	movlw	7
  2918  001ADC  6E01               	movwf	??_lcd_char^0,c
  2919  001ADE  0E7D               	movlw	125
  2920  001AE0                     u1027:
  2921  001AE0  2EE8               	decfsz	wreg,f,c
  2922  001AE2  D7FE               	bra	u1027
  2923  001AE4  2E01               	decfsz	??_lcd_char^0,f,c
  2924  001AE6  D7FC               	bra	u1027
  2925  001AE8  F000               	nop	
  2926  001AEA                     
  2927                           ;uP Part 2.c: 157:  PORTC = 0x10;
  2928  001AEA  0E10               	movlw	16
  2929  001AEC  6E8F               	movwf	143,c	;volatile
  2930  001AEE                     
  2931                           ;uP Part 2.c: 158:  _delay((unsigned long)((5)*(4000000/4000.0)));
  2932  001AEE  0E07               	movlw	7
  2933  001AF0  6E01               	movwf	??_lcd_char^0,c
  2934  001AF2  0E7D               	movlw	125
  2935  001AF4                     u1037:
  2936  001AF4  2EE8               	decfsz	wreg,f,c
  2937  001AF6  D7FE               	bra	u1037
  2938  001AF8  2E01               	decfsz	??_lcd_char^0,f,c
  2939  001AFA  D7FC               	bra	u1037
  2940  001AFC  F000               	nop	
  2941  001AFE                     
  2942                           ;uP Part 2.c: 161:  x = temp;
  2943  001AFE  C002  F003         	movff	lcd_char@temp,lcd_char@x
  2944  001B02                     
  2945                           ;uP Part 2.c: 162:  x = x & 0xF;
  2946  001B02  5003               	movf	lcd_char@x^0,w,c
  2947  001B04  0B0F               	andlw	15
  2948  001B06  6E03               	movwf	lcd_char@x^0,c
  2949  001B08                     
  2950                           ;uP Part 2.c: 163:  x = x | 0x90;
  2951  001B08  5003               	movf	lcd_char@x^0,w,c
  2952  001B0A  0990               	iorlw	144
  2953  001B0C  6E03               	movwf	lcd_char@x^0,c
  2954  001B0E                     
  2955                           ;uP Part 2.c: 164:  PORTC = x;
  2956  001B0E  C003  FF8F         	movff	lcd_char@x,3983	;volatile
  2957  001B12                     
  2958                           ;uP Part 2.c: 165:  _delay((unsigned long)((5)*(4000000/4000.0)));
  2959  001B12  0E07               	movlw	7
  2960  001B14  6E01               	movwf	??_lcd_char^0,c
  2961  001B16  0E7D               	movlw	125
  2962  001B18                     u1047:
  2963  001B18  2EE8               	decfsz	wreg,f,c
  2964  001B1A  D7FE               	bra	u1047
  2965  001B1C  2E01               	decfsz	??_lcd_char^0,f,c
  2966  001B1E  D7FC               	bra	u1047
  2967  001B20  F000               	nop	
  2968  001B22                     
  2969                           ;uP Part 2.c: 167:  x = x & 0x1F;
  2970  001B22  5003               	movf	lcd_char@x^0,w,c
  2971  001B24  0B1F               	andlw	31
  2972  001B26  6E03               	movwf	lcd_char@x^0,c
  2973  001B28                     
  2974                           ;uP Part 2.c: 168:  PORTC = x;
  2975  001B28  C003  FF8F         	movff	lcd_char@x,3983	;volatile
  2976  001B2C                     
  2977                           ;uP Part 2.c: 169:  _delay((unsigned long)((5)*(4000000/4000.0)));
  2978  001B2C  0E07               	movlw	7
  2979  001B2E  6E01               	movwf	??_lcd_char^0,c
  2980  001B30  0E7D               	movlw	125
  2981  001B32                     u1057:
  2982  001B32  2EE8               	decfsz	wreg,f,c
  2983  001B34  D7FE               	bra	u1057
  2984  001B36  2E01               	decfsz	??_lcd_char^0,f,c
  2985  001B38  D7FC               	bra	u1057
  2986  001B3A  F000               	nop	
  2987  001B3C  0012               	return		;funcret
  2988  001B3E                     __end_of_lcd_char:
  2989                           	opt callstack 0
  2990                           
  2991 ;; *************** function _adc_init *****************
  2992 ;; Defined at:
  2993 ;;		line 180 in file "uP Part 2.c"
  2994 ;; Parameters:    Size  Location     Type
  2995 ;;		None
  2996 ;; Auto vars:     Size  Location     Type
  2997 ;;		None
  2998 ;; Return value:  Size  Location     Type
  2999 ;;                  1    wreg      void 
  3000 ;; Registers used:
  3001 ;;		wreg, status,2
  3002 ;; Tracked objects:
  3003 ;;		On entry : 0/0
  3004 ;;		On exit  : 0/0
  3005 ;;		Unchanged: 0/0
  3006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3010 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3011 ;;Total ram usage:        0 bytes
  3012 ;; Hardware stack levels used:    1
  3013 ;; This function calls:
  3014 ;;		Nothing
  3015 ;; This function is called by:
  3016 ;;		_main
  3017 ;; This function uses a non-reentrant model
  3018 ;;
  3019                           
  3020                           	psect	text16
  3021  001E22                     __ptext16:
  3022                           	opt callstack 0
  3023  001E22                     _adc_init:
  3024                           	opt callstack 30
  3025  001E22                     
  3026                           ;uP Part 2.c: 181:     TRISAbits.TRISA0 = 1;
  3027  001E22  8088               	bsf	136,0,c	;volatile
  3028  001E24                     
  3029                           ;uP Part 2.c: 182:     ADCON0 = 0x0;
  3030  001E24  0E00               	movlw	0
  3031  001E26  6E60               	movwf	96,c	;volatile
  3032  001E28  0012               	return		;funcret
  3033  001E2A                     __end_of_adc_init:
  3034                           	opt callstack 0
  3035                           
  3036 ;; *************** function _adcNum *****************
  3037 ;; Defined at:
  3038 ;;		line 188 in file "uP Part 2.c"
  3039 ;; Parameters:    Size  Location     Type
  3040 ;;		None
  3041 ;; Auto vars:     Size  Location     Type
  3042 ;;		None
  3043 ;; Return value:  Size  Location     Type
  3044 ;;                  4    0[COMRAM] unsigned long 
  3045 ;; Registers used:
  3046 ;;		wreg, status,2, status,0
  3047 ;; Tracked objects:
  3048 ;;		On entry : 0/0
  3049 ;;		On exit  : 0/0
  3050 ;;		Unchanged: 0/0
  3051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3052 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3054 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3055 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3056 ;;Total ram usage:        7 bytes
  3057 ;; Hardware stack levels used:    1
  3058 ;; This function calls:
  3059 ;;		Nothing
  3060 ;; This function is called by:
  3061 ;;		_main
  3062 ;; This function uses a non-reentrant model
  3063 ;;
  3064                           
  3065                           	psect	text17
  3066  001D00                     __ptext17:
  3067                           	opt callstack 0
  3068  001D00                     _adcNum:
  3069                           	opt callstack 30
  3070  001D00                     
  3071                           ;uP Part 2.c: 189:     ADCON0bits.ADON = 1;
  3072  001D00  8E60               	bsf	96,7,c	;volatile
  3073                           
  3074                           ;uP Part 2.c: 190:     ADCON0bits.GO = 1;
  3075  001D02  8060               	bsf	96,0,c	;volatile
  3076  001D04                     
  3077                           ;uP Part 2.c: 191:     _delay((unsigned long)((5)*(4000000/4000.0)));
  3078  001D04  0E07               	movlw	7
  3079  001D06  6E05               	movwf	??_adcNum^0,c
  3080  001D08  0E7D               	movlw	125
  3081  001D0A                     u1067:
  3082  001D0A  2EE8               	decfsz	wreg,f,c
  3083  001D0C  D7FE               	bra	u1067
  3084  001D0E  2E05               	decfsz	??_adcNum^0,f,c
  3085  001D10  D7FC               	bra	u1067
  3086  001D12  F000               	nop	
  3087  001D14                     l39:
  3088  001D14  B060               	btfsc	96,0,c	;volatile
  3089  001D16  EF8F  F00E         	goto	u811
  3090  001D1A  EF91  F00E         	goto	u810
  3091  001D1E                     u811:
  3092  001D1E  EF8A  F00E         	goto	l39
  3093  001D22                     u810:
  3094  001D22                     
  3095                           ;uP Part 2.c: 195:     ADCON0bits.ADON = 0;
  3096  001D22  9E60               	bcf	96,7,c	;volatile
  3097  001D24                     
  3098                           ;uP Part 2.c: 198:     return (ADRES >> 6);
  3099  001D24  CF63 F005          	movff	3939,??_adcNum	;volatile
  3100  001D28  CF64 F006          	movff	3940,??_adcNum+1	;volatile
  3101  001D2C  0E06               	movlw	6
  3102  001D2E  6E07               	movwf	(??_adcNum+2)^0,c
  3103  001D30                     u825:
  3104  001D30  90D8               	bcf	status,0,c
  3105  001D32  3206               	rrcf	(??_adcNum+1)^0,f,c
  3106  001D34  3205               	rrcf	??_adcNum^0,f,c
  3107  001D36  2E07               	decfsz	(??_adcNum+2)^0,f,c
  3108  001D38  EF98  F00E         	goto	u825
  3109  001D3C  C005  F001         	movff	??_adcNum,?_adcNum
  3110  001D40  C006  F002         	movff	??_adcNum+1,?_adcNum+1
  3111  001D44  6A03               	clrf	(?_adcNum+2)^0,c
  3112  001D46  6A04               	clrf	(?_adcNum+3)^0,c
  3113  001D48  0012               	return		;funcret
  3114  001D4A                     __end_of_adcNum:
  3115                           	opt callstack 0
  3116                           
  3117 ;; *************** function ___lmul *****************
  3118 ;; Defined at:
  3119 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul32.c"
  3120 ;; Parameters:    Size  Location     Type
  3121 ;;  multiplier      4    0[COMRAM] unsigned long 
  3122 ;;  multiplicand    4    4[COMRAM] unsigned long 
  3123 ;; Auto vars:     Size  Location     Type
  3124 ;;  product         4    8[COMRAM] unsigned long 
  3125 ;; Return value:  Size  Location     Type
  3126 ;;                  4    0[COMRAM] unsigned long 
  3127 ;; Registers used:
  3128 ;;		wreg, status,2, status,0
  3129 ;; Tracked objects:
  3130 ;;		On entry : 0/0
  3131 ;;		On exit  : 0/0
  3132 ;;		Unchanged: 0/0
  3133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3134 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3135 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3137 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3138 ;;Total ram usage:       12 bytes
  3139 ;; Hardware stack levels used:    1
  3140 ;; This function calls:
  3141 ;;		Nothing
  3142 ;; This function is called by:
  3143 ;;		_main
  3144 ;; This function uses a non-reentrant model
  3145 ;;
  3146                           
  3147                           	psect	text18
  3148  001BE2                     __ptext18:
  3149                           	opt callstack 0
  3150  001BE2                     ___lmul:
  3151                           	opt callstack 30
  3152  001BE2  0E00               	movlw	0
  3153  001BE4  6E09               	movwf	___lmul@product^0,c
  3154  001BE6  0E00               	movlw	0
  3155  001BE8  6E0A               	movwf	(___lmul@product+1)^0,c
  3156  001BEA  0E00               	movlw	0
  3157  001BEC  6E0B               	movwf	(___lmul@product+2)^0,c
  3158  001BEE  0E00               	movlw	0
  3159  001BF0  6E0C               	movwf	(___lmul@product+3)^0,c
  3160  001BF2                     l1571:
  3161  001BF2  A001               	btfss	___lmul@multiplier^0,0,c
  3162  001BF4  EFFE  F00D         	goto	u831
  3163  001BF8  EF00  F00E         	goto	u830
  3164  001BFC                     u831:
  3165  001BFC  EF08  F00E         	goto	l1575
  3166  001C00                     u830:
  3167  001C00  5005               	movf	___lmul@multiplicand^0,w,c
  3168  001C02  2609               	addwf	___lmul@product^0,f,c
  3169  001C04  5006               	movf	(___lmul@multiplicand+1)^0,w,c
  3170  001C06  220A               	addwfc	(___lmul@product+1)^0,f,c
  3171  001C08  5007               	movf	(___lmul@multiplicand+2)^0,w,c
  3172  001C0A  220B               	addwfc	(___lmul@product+2)^0,f,c
  3173  001C0C  5008               	movf	(___lmul@multiplicand+3)^0,w,c
  3174  001C0E  220C               	addwfc	(___lmul@product+3)^0,f,c
  3175  001C10                     l1575:
  3176  001C10  90D8               	bcf	status,0,c
  3177  001C12  3605               	rlcf	___lmul@multiplicand^0,f,c
  3178  001C14  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
  3179  001C16  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
  3180  001C18  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
  3181  001C1A  90D8               	bcf	status,0,c
  3182  001C1C  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
  3183  001C1E  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
  3184  001C20  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
  3185  001C22  3201               	rrcf	___lmul@multiplier^0,f,c
  3186  001C24  5001               	movf	___lmul@multiplier^0,w,c
  3187  001C26  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
  3188  001C28  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
  3189  001C2A  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
  3190  001C2C  A4D8               	btfss	status,2,c
  3191  001C2E  EF1B  F00E         	goto	u841
  3192  001C32  EF1D  F00E         	goto	u840
  3193  001C36                     u841:
  3194  001C36  EFF9  F00D         	goto	l1571
  3195  001C3A                     u840:
  3196  001C3A  C009  F001         	movff	___lmul@product,?___lmul
  3197  001C3E  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  3198  001C42  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  3199  001C46  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  3200  001C4A  0012               	return		;funcret
  3201  001C4C                     __end_of___lmul:
  3202                           	opt callstack 0
  3203                           
  3204 ;; *************** function ___lldiv *****************
  3205 ;; Defined at:
  3206 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\__lldiv.c"
  3207 ;; Parameters:    Size  Location     Type
  3208 ;;  dividend        4   12[COMRAM] unsigned long 
  3209 ;;  divisor         4   16[COMRAM] unsigned long 
  3210 ;; Auto vars:     Size  Location     Type
  3211 ;;  quotient        4   20[COMRAM] unsigned long 
  3212 ;;  counter         1   24[COMRAM] unsigned char 
  3213 ;; Return value:  Size  Location     Type
  3214 ;;                  4   12[COMRAM] unsigned long 
  3215 ;; Registers used:
  3216 ;;		wreg, status,2, status,0
  3217 ;; Tracked objects:
  3218 ;;		On entry : 0/0
  3219 ;;		On exit  : 0/0
  3220 ;;		Unchanged: 0/0
  3221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3222 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3223 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3225 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3226 ;;Total ram usage:       13 bytes
  3227 ;; Hardware stack levels used:    1
  3228 ;; This function calls:
  3229 ;;		Nothing
  3230 ;; This function is called by:
  3231 ;;		_main
  3232 ;; This function uses a non-reentrant model
  3233 ;;
  3234                           
  3235                           	psect	text19
  3236  001B3E                     __ptext19:
  3237                           	opt callstack 0
  3238  001B3E                     ___lldiv:
  3239                           	opt callstack 30
  3240  001B3E  0E00               	movlw	0
  3241  001B40  6E15               	movwf	___lldiv@quotient^0,c
  3242  001B42  0E00               	movlw	0
  3243  001B44  6E16               	movwf	(___lldiv@quotient+1)^0,c
  3244  001B46  0E00               	movlw	0
  3245  001B48  6E17               	movwf	(___lldiv@quotient+2)^0,c
  3246  001B4A  0E00               	movlw	0
  3247  001B4C  6E18               	movwf	(___lldiv@quotient+3)^0,c
  3248  001B4E  5011               	movf	___lldiv@divisor^0,w,c
  3249  001B50  1012               	iorwf	(___lldiv@divisor+1)^0,w,c
  3250  001B52  1013               	iorwf	(___lldiv@divisor+2)^0,w,c
  3251  001B54  1014               	iorwf	(___lldiv@divisor+3)^0,w,c
  3252  001B56  B4D8               	btfsc	status,2,c
  3253  001B58  EFB0  F00D         	goto	u851
  3254  001B5C  EFB2  F00D         	goto	u850
  3255  001B60                     u851:
  3256  001B60  EFE8  F00D         	goto	l150
  3257  001B64                     u850:
  3258  001B64  0E01               	movlw	1
  3259  001B66  6E19               	movwf	___lldiv@counter^0,c
  3260  001B68  EFBC  F00D         	goto	l1587
  3261  001B6C                     l1585:
  3262  001B6C  90D8               	bcf	status,0,c
  3263  001B6E  3611               	rlcf	___lldiv@divisor^0,f,c
  3264  001B70  3612               	rlcf	(___lldiv@divisor+1)^0,f,c
  3265  001B72  3613               	rlcf	(___lldiv@divisor+2)^0,f,c
  3266  001B74  3614               	rlcf	(___lldiv@divisor+3)^0,f,c
  3267  001B76  2A19               	incf	___lldiv@counter^0,f,c
  3268  001B78                     l1587:
  3269  001B78  AE14               	btfss	(___lldiv@divisor+3)^0,7,c
  3270  001B7A  EFC1  F00D         	goto	u861
  3271  001B7E  EFC3  F00D         	goto	u860
  3272  001B82                     u861:
  3273  001B82  EFB6  F00D         	goto	l1585
  3274  001B86                     u860:
  3275  001B86                     l1589:
  3276  001B86  90D8               	bcf	status,0,c
  3277  001B88  3615               	rlcf	___lldiv@quotient^0,f,c
  3278  001B8A  3616               	rlcf	(___lldiv@quotient+1)^0,f,c
  3279  001B8C  3617               	rlcf	(___lldiv@quotient+2)^0,f,c
  3280  001B8E  3618               	rlcf	(___lldiv@quotient+3)^0,f,c
  3281  001B90  5011               	movf	___lldiv@divisor^0,w,c
  3282  001B92  5C0D               	subwf	___lldiv@dividend^0,w,c
  3283  001B94  5012               	movf	(___lldiv@divisor+1)^0,w,c
  3284  001B96  580E               	subwfb	(___lldiv@dividend+1)^0,w,c
  3285  001B98  5013               	movf	(___lldiv@divisor+2)^0,w,c
  3286  001B9A  580F               	subwfb	(___lldiv@dividend+2)^0,w,c
  3287  001B9C  5014               	movf	(___lldiv@divisor+3)^0,w,c
  3288  001B9E  5810               	subwfb	(___lldiv@dividend+3)^0,w,c
  3289  001BA0  A0D8               	btfss	status,0,c
  3290  001BA2  EFD5  F00D         	goto	u871
  3291  001BA6  EFD7  F00D         	goto	u870
  3292  001BAA                     u871:
  3293  001BAA  EFE0  F00D         	goto	l1597
  3294  001BAE                     u870:
  3295  001BAE  5011               	movf	___lldiv@divisor^0,w,c
  3296  001BB0  5E0D               	subwf	___lldiv@dividend^0,f,c
  3297  001BB2  5012               	movf	(___lldiv@divisor+1)^0,w,c
  3298  001BB4  5A0E               	subwfb	(___lldiv@dividend+1)^0,f,c
  3299  001BB6  5013               	movf	(___lldiv@divisor+2)^0,w,c
  3300  001BB8  5A0F               	subwfb	(___lldiv@dividend+2)^0,f,c
  3301  001BBA  5014               	movf	(___lldiv@divisor+3)^0,w,c
  3302  001BBC  5A10               	subwfb	(___lldiv@dividend+3)^0,f,c
  3303  001BBE  8015               	bsf	___lldiv@quotient^0,0,c
  3304  001BC0                     l1597:
  3305  001BC0  90D8               	bcf	status,0,c
  3306  001BC2  3214               	rrcf	(___lldiv@divisor+3)^0,f,c
  3307  001BC4  3213               	rrcf	(___lldiv@divisor+2)^0,f,c
  3308  001BC6  3212               	rrcf	(___lldiv@divisor+1)^0,f,c
  3309  001BC8  3211               	rrcf	___lldiv@divisor^0,f,c
  3310  001BCA  2E19               	decfsz	___lldiv@counter^0,f,c
  3311  001BCC  EFC3  F00D         	goto	l1589
  3312  001BD0                     l150:
  3313  001BD0  C015  F00D         	movff	___lldiv@quotient,?___lldiv
  3314  001BD4  C016  F00E         	movff	___lldiv@quotient+1,?___lldiv+1
  3315  001BD8  C017  F00F         	movff	___lldiv@quotient+2,?___lldiv+2
  3316  001BDC  C018  F010         	movff	___lldiv@quotient+3,?___lldiv+3
  3317  001BE0  0012               	return		;funcret
  3318  001BE2                     __end_of___lldiv:
  3319                           	opt callstack 0
  3320                           
  3321                           	psect	rparam
  3322  0000                     tosu	equ	0xFFF
  3323                           tosh	equ	0xFFE
  3324                           tosl	equ	0xFFD
  3325                           stkptr	equ	0xFFC
  3326                           pclatu	equ	0xFFB
  3327                           pclath	equ	0xFFA
  3328                           pcl	equ	0xFF9
  3329                           tblptru	equ	0xFF8
  3330                           tblptrh	equ	0xFF7
  3331                           tblptrl	equ	0xFF6
  3332                           tablat	equ	0xFF5
  3333                           prodh	equ	0xFF4
  3334                           prodl	equ	0xFF3
  3335                           indf0	equ	0xFEF
  3336                           postinc0	equ	0xFEE
  3337                           postdec0	equ	0xFED
  3338                           preinc0	equ	0xFEC
  3339                           plusw0	equ	0xFEB
  3340                           fsr0h	equ	0xFEA
  3341                           fsr0l	equ	0xFE9
  3342                           wreg	equ	0xFE8
  3343                           indf1	equ	0xFE7
  3344                           postinc1	equ	0xFE6
  3345                           postdec1	equ	0xFE5
  3346                           preinc1	equ	0xFE4
  3347                           plusw1	equ	0xFE3
  3348                           fsr1h	equ	0xFE2
  3349                           fsr1l	equ	0xFE1
  3350                           bsr	equ	0xFE0
  3351                           indf2	equ	0xFDF
  3352                           postinc2	equ	0xFDE
  3353                           postdec2	equ	0xFDD
  3354                           preinc2	equ	0xFDC
  3355                           plusw2	equ	0xFDB
  3356                           fsr2h	equ	0xFDA
  3357                           fsr2l	equ	0xFD9
  3358                           status	equ	0xFD8


Data Sizes:
    Strings     4
    Constant    0
    Data        6
    BSS         48
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     28      82
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_4(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_4(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_1(CODE[4]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_1(CODE[4]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_1(CODE[4]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 7
		 -> main@array(BANK0[7]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 7
		 -> main@array(BANK0[7]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S700_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 7
		 -> main@array(BANK0[7]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 7
		 -> main@array(BANK0[7]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_1(CODE[4]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 4
		 -> STR_1(CODE[4]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_utoa
    _utoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _lcd_init->_lcd_command
    ___lldiv->___lmul

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                18    18      0    8866
                                             10 BANK0     18    18      0
                            ___lldiv
                             ___lmul
                             _adcNum
                           _adc_init
                           _lcd_char
                        _lcd_command
                           _lcd_init
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    10      8    6555
                                             87 COMRAM     8     0      8
                                              0 BANK0     10    10      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    6202
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           46    40      6    5846
                                             59 COMRAM    20    14      6
                              _fputc
                            _strncmp
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                32    22     10    3911
                                             27 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             17     1     16     311
                                              0 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             25     9     16     314
                                              0 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     295
                        _lcd_command
 ---------------------------------------------------------------------------------
 (2) _lcd_command                                          3     3      0     295
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _lcd_char                                             3     3      0     295
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adcNum                                               7     3      4       0
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8     658
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             13     5      8     466
                                             12 COMRAM    13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lldiv
     ___lmul (ARG)
   ___lmul
   _adcNum
   _adc_init
   _lcd_char
   _lcd_command
   _lcd_init
     _lcd_command
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _fputc
           _putch
         _strncmp
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E87      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     1C      52       5       51.3%
BITBANK14           88      0       0      33        0.0%
BANK14              88      0       0      34        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      B1       6        0.0%
DATA                 0      0      B1       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Feb 12 15:13:33 2020

                      _R 0060             lcd_char@temp 0002                       l30 1E20  
                     l41 1D22                       l33 1B3C                       l42 1D48  
                     l27 1A82                       l36 1E28                       l39 1D14  
                     l90 198C                       l92 19C8                       l87 194A  
                     l97 13D2                       l99 13DA                       _r1 00AC  
            __CFG_LVP$ON 000000                      l112 1398                      l120 1CAC  
                    l107 159A                      l150 1BD0                      l134 1C3A  
                    l135 1C4A                      l119 1CA4                      l157 1BE0  
                    l561 166A                      l571 1818                      l821 1CFE  
                    l806 1902                      l814 1D8C                      l830 1E00  
                    l568 168A                      l824 1E30                      l834 1768  
                    l578 1838                      u500 18BC                      u501 18B8  
                    u510 1D8C                      u511 1D88                      u600 1630  
                    u520 1DF4                      u601 162C                      u521 1DF0  
                    u610 1788                      u530 1914                      u611 1784  
                    u531 1910                      u620 17B2                      u540 1936  
                    u700 1572                      u621 17AE                      u541 1932  
                    u701 156E                      u710 16B6                      u630 17E0  
                    u470 184C                      u550 198C                      u711 16B2  
                    u631 17DC                      u471 1848                      u551 1988  
                    u720 16EC                      u480 185E                      u560 199C  
                    u640 13AA                      u800 1CA4                      u721 16E8  
                    u481 185A                      u561 1998                      u641 13A6  
                    u801 1CA0                      u810 1D22                      u730 1708  
                    u490 1886                      u650 13C6                      u811 1D1E  
                    u731 1704                      u571 15A2                      u491 1882  
                    u651 13C2                      u740 171A                      u580 15C6  
                    u660 1510                      u900 1080                      u741 1716  
                    u581 15C2                      u661 150C                      u901 107C  
                    u830 1C00                      u750 1744                      u590 15F0  
                    u670 152E                      u910 1108                      u831 1BFC  
                    u751 1740                      u591 15EC                      u671 152A  
                    u911 1104                      u840 1C3A                      u680 1548  
                    u760 119A                      u920 1130                      u841 1C36  
                    u825 1D30                      u681 1544                      u761 1196  
                    u921 112C                      u850 1B64                      u690 1562  
                    u770 11E2                      u851 1B60                      u691 155E  
                    u771 11DE                      u860 1B86                      u780 129A  
                    u861 1B82                      u781 1296                      u870 1BAE  
                    u790 131A                      u871 1BAA                      u791 1316  
                    u880 1020                      u937 115A                      u881 101C  
                    u890 1062                      u947 19E6                      u891 105E  
                    u957 1A0C                      u967 1A26                      u977 1A3A  
                    u987 1A5E                      u997 1A78                      _pad 1904  
                    wreg 000FE8             lcd_command@x 0003                     l1301 19B0  
                   l1311 15CE                     l1321 1650                     l1313 15E2  
                   l1305 159C                     l1401 119A                     l1323 1652  
                   l1315 15F0                     l1307 15A8                     l1331 1790  
                   l1251 183A                     l1411 122C                     l1403 11A8  
                   l1501 1A86                     l1325 1664                     l1317 1602  
                   l1309 15C6                     l1341 1812                     l1333 17A4  
                   l1261 18BC                     l1253 184C                     l1405 11BA  
                   l1511 1AB0                     l1503 1A92                     l1319 1630  
                   l1335 17B2                     l1327 176A                     l1255 185E  
                   l1271 1D6C                     l1351 1402                     l1343 139A  
                   l1423 12F6                     l1415 1264                     l1407 11BE  
                   l1521 1AD6                     l1513 1AB6                     l1505 1A96  
                   l1337 17E0                     l1329 1788                     l1257 1868  
                   l1265 1D4A                     l1273 1DCC                     l1361 1494  
                   l1353 140A                     l1345 13AA                     l1441 1386  
                   l1425 131A                     l1433 1348                     l1417 129A  
                   l1409 11E2                     l1601 0F06                     l1531 1B02  
                   l1523 1ADA                     l1515 1ABC                     l1507 1A9A  
                   l1451 19DC                     l1339 1800                     l1259 1886  
                   l1267 1D56                     l1275 1DD8                     l1291 1942  
                   l1283 1904                     l1371 1548                     l1363 149A  
                   l1355 1412                     l1347 13AC                     l1435 1356  
                   l1427 1328                     l1611 0FE6                     l1603 0F0A  
                   l1541 1B28                     l1533 1B08                     l1525 1AEA  
                   l1517 1AC0                     l1509 1AAA                     l1461 1A02  
                   l1453 19E0                     l1381 16B6                     l1269 1D68  
                   l1277 1DDC                     l1293 1956                     l1285 1914  
                   l1373 1562                     l1357 1418                     l1365 14FE  
                   l1349 13C6                     l1429 133C                     l1621 1004  
                   l1605 0F0E                     l1551 1D04                     l1543 1B2C  
                   l1535 1B0E                     l1527 1AEE                     l1519 1AD0  
                   l1471 1A30                     l1463 1A06                     l1455 19F0  
                   l1447 19CC                     l1391 1708                     l1279 1DF4  
                   l1295 196A                     l1287 1928                     l1367 1510  
                   l1375 1572                     l1359 148E                     l1439 1362  
                   l1631 10CC                     l1623 1020                     l1607 0F2C  
                   l1553 1D24                     l1545 1E22                     l1537 1B12  
                   l1529 1AFE                     l1481 1A54                     l1473 1A34  
                   l1465 1A16                     l1457 19F6                     l1449 19D8  
                   l1393 171A                     l1385 16C2                     l1297 196E  
                   l1289 1936                     l1369 152E                     l1561 1CC8  
                   l1641 10F8                     l1633 10DE                     l1625 1044  
                   l1617 0FF0                     l1609 0F84                     l1571 1BF2  
                   l1547 1E24                     l1539 1B22                     l1483 1A58  
                   l1475 1A44                     l1467 1A1C                     l1459 19FC  
                   l1395 1744                     l1387 16D0                     l1379 168C  
                   l1299 199C                     l1491 1C4C                     l1563 1CD0  
                   l1643 1108                     l1651 114E                     l1627 1062  
                   l1619 1000                     l1581 1B4E                     l1573 1C00  
                   l1549 1D00                     l1485 1A68                     l1477 1A48  
                   l1469 1A20                     l1389 16EC                     l1493 1C54  
                   l1565 1CEC                     l1557 1CAE                     l1653 1168  
                   l1645 110E                     l1629 1080                     l1591 1B90  
                   l1583 1B64                     l1575 1C10                     l1487 1A6E  
                   l1479 1A4E                     l1399 1176                     l1495 1C62  
                   l1559 1CC0                     l1647 1114                     l1639 10E8  
                   l1593 1BAE                     l1585 1B6C                     l1577 1C1A  
                   l1569 1BE2                     l1489 1A72                     l1497 1C88  
                   l1649 1130                     l1595 1BBE                     l1587 1B78  
                   l1579 1B3E                     l1499 1E02                     l1597 1BC0  
                   l1589 1B86                     l1599 1BCA                     ?_pad 0011  
                   STR_1 0F01                     STR_4 0F02                     u1007 1AA0  
                   u1017 1AC6                     u1027 1AE0                     u1037 1AF4  
                   u1047 1B18                     u1057 1B32                     u1067 1D0A  
                   _dbuf 0070                     _main 0F06                     _prec 006C  
                   _nout 0068                     pad@i 0018                     pad@p 0015  
                   fsr1h 000FE2                     fsr2h 000FDA                     indf2 000FDF  
                   fsr1l 000FE1                     pad@w 001A                     fsr2l 000FD9  
                   _utoa 139A                     _volt 00B0                     start 0000  
           ___param_bank 000000                    ??_pad 0017                    ?_main 0001  
                  _ADRES 000F63            __CFG_WDTE$OFF 000000          __end_of___lldiv 1BE2  
                  ?_utoa 001C          __end_of___lodiv 168C          __end_of___lomod 183A  
           vfpfcnvrt@fmt 003E             vfpfcnvrt@llu 0048                    _PORTC 000F8F  
    ___lmul@multiplicand 0005                    _flags 006E                    _fputc 183A  
                  _fputs 1D4A                    _value 0064                    pad@fp 0011  
                  _width 006A                    _putch 1E30                    main@i 00A8  
                  tablat 000FF5                    nvmcon 000F81                    utoa@d 001E  
                  utoa@i 003A                    utoa@n 0032                    utoa@p 002E  
                  utoa@w 0030                    status 000FD8          __end_of_sprintf 1D00  
        __end_of_strncmp 176A         ___lodiv@dividend 0001          __initialization 1D8E  
           __end_of_main 1176             __end_of_utoa 159C                   ??_main 009A  
                 ??_utoa 0026            __activetblptr 000001         ___lodiv@quotient 0011  
                 _ADCON0 000F60                   ?_fputc 0001                   ?_fputs 000A  
                 ?_putch 0001         __end_of_adc_init 1E2A         __end_of_lcd_char 1B3E  
           vfprintf@cfmt 0056         __end_of_lcd_init 1E22     __size_of_lcd_command 00BA  
                 _adcNum 1D00                   ___lmul 1BE2                ??___lldiv 0015  
              ??___lodiv 0011                ??___lomod 0011                   clear_0 1DB8  
                 pad@buf 0013                   _strlen 1DCC                   fputc@c 0001  
                 fputs@c 000E                   fputs@i 000F                   fputs@s 000A  
           __mediumconst 0000                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8                   putch@c 0001         __end_of_vfprintf 1CAE  
                 utoa@fp 001C                ??_sprintf 0060                ??_strncmp 0007  
             __accesstop 0060  __end_of__initialization 1DBE            ___rparam_used 000001  
         __pcstackCOMRAM 0001             __pidataBANK0 1E2A            __end_of_fputc 1904  
          __end_of_fputs 1D8E            __end_of_putch 1E32                  ??_fputc 0005  
                ??_fputs 000E                  ??_putch 0001               __pbssBANK0 0060  
        lcd_command@temp 0002                  ?_adcNum 0001                  ?___lmul 0001  
         ___lmul@product 0009                ?_adc_init 0001                  ?_strlen 0001  
     __size_of_vfpfcnvrt 0224                ?_lcd_char 0001                ?_lcd_init 0001  
       ___lomod@dividend 0001                  __Hparam 0000                  __Lparam 0000  
        __size_of_adcNum 004A          __size_of___lmul 006A                  ___lldiv 1B3E  
                ___lodiv 159C                  ___lomod 176A                ?_vfprintf 0050  
           __psmallconst 0F00                  __pcinit 1D8E                  __ramtop 0F00  
             ??_adc_init 0001                  __ptext0 0F06                  __ptext1 1CAE  
                __ptext2 1C4C                  __ptext3 1176                  __ptext4 139A  
                __ptext5 1904                  __ptext6 1DCC                  __ptext7 1D4A  
                __ptext8 183A                  __ptext9 1E30          __size_of_strlen 0036  
           __size_of_pad 00C6               ??_lcd_char 0001                  _sprintf 1CAE  
             ??_lcd_init 0004                  _strncmp 168C     end_of_initialization 1DBE  
                fputc@fp 0003                  fputs@fp 000C          ___lldiv@divisor 0011  
        ___lldiv@counter 0019        __end_of_vfpfcnvrt 139A                  postdec1 000FE5  
                postdec2 000FDD                  postinc0 000FEE                  postinc1 000FE6  
                postinc2 000FDE               ??_vfprintf 0056                  strlen@a 0003  
                strlen@s 0001                _TRISAbits 000F88                _TRISCbits 000F8A  
          ??_lcd_command 0001           __end_of_adcNum 1D4A           __end_of___lmul 1C4C  
            vfpfcnvrt@ap 0040              vfpfcnvrt@fp 003C           __end_of_strlen 1E02  
    start_initialization 1D8E          ___lodiv@divisor 0009          ___lodiv@counter 0019  
            __end_of_pad 19CA              vfprintf@fmt 0052                 ??_adcNum 0005  
               ??___lmul 0009      __end_of_lcd_command 1A84              __pdataBANK0 00AC  
               ??_strlen 0003        __size_of_adc_init 0008            __pcstackBANK0 0090  
      __size_of_lcd_char 00BA        __size_of_lcd_init 0020                 ?___lldiv 000D  
               ?___lodiv 0001                 ?___lomod 0001        __size_of_vfprintf 0062  
        ___lomod@divisor 0009              __smallconst 0F00          ___lomod@counter 0011  
               ?_sprintf 0058           __size_of_fputc 00CA           __size_of_fputs 0044  
               ?_strncmp 0001           __size_of_putch 0002              _lcd_command 19CA  
              _vfpfcnvrt 1176                lcd_char@x 0003               _ADCON0bits 000F60  
              main@i_187 00AA                main@array 009C        ___lmul@multiplier 0001  
              copy_data0 1DA6                 __Hrparam 0000               vfprintf@ap 0054  
               __Lrparam 0000               vfprintf@fp 0050             __Lsmallconst 0F00  
       __size_of___lldiv 00A4         __size_of___lodiv 00F0         __size_of___lomod 00D0  
             ?_vfpfcnvrt 003C                 _adc_init 1E22               sprintf@fmt 005A  
               __ptext10 176A                 __ptext11 159C                 __ptext12 168C  
               __ptext13 1E02                 __ptext14 19CA                 __ptext15 1A84  
               __ptext16 1E22                 __ptext17 1D00                 __ptext18 1BE2  
               __ptext19 1B3E                 _lcd_char 1A84                 _lcd_init 1E02  
       __size_of_sprintf 0052         __size_of_strncmp 00DE            __size_of_main 0270  
          __size_of_utoa 0202                 _vfprintf 1C4C                 main@Vout 00A3  
               main@temp 00A7                sprintf@ap 0092         ___lldiv@dividend 000D  
              strncmp@_l 0001                strncmp@_r 0003              ??_vfpfcnvrt 0042  
               sprintf@f 0094                 sprintf@s 0058         ___lldiv@quotient 0015  
               strncmp@l 0008                 strncmp@n 0005                 strncmp@r 000A  
           ?_lcd_command 0001  
