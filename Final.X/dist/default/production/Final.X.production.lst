

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Apr 24 15:22:28 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F47K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    54                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    55                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    56                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    57  0000                     
    58                           ; Version 2.10
    59                           ; Generated 31/07/2019 GMT
    60                           ; 
    61                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    62                           ; All rights reserved.
    63                           ; 
    64                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    65                           ; 
    66                           ; Redistribution and use in source and binary forms, with or without modification, are
    67                           ; permitted provided that the following conditions are met:
    68                           ; 
    69                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    70                           ;        conditions and the following disclaimer.
    71                           ; 
    72                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    73                           ;        of conditions and the following disclaimer in the documentation and/or other
    74                           ;        materials provided with the distribution.
    75                           ; 
    76                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    77                           ;        software without specific prior written permission.
    78                           ; 
    79                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    80                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    81                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    82                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    83                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    84                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    85                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    86                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    87                           ; 
    88                           ; 
    89                           ; Code-generator required, PIC18F47K40 Definitions
    90                           ; 
    91                           ; SFR Addresses
    92  0000                     
    93                           	psect	idataBANK1
    94  002796                     __pidataBANK1:
    95                           	opt callstack 0
    96                           
    97                           ;initializer for _sawtooth
    98  002796  05                 	db	5
    99  002797  0A                 	db	10
   100  002798  0F                 	db	15
   101  002799  14                 	db	20
   102  00279A  1A                 	db	26
   103  00279B  1F                 	db	31
   104  00279C  24                 	db	36
   105  00279D  29                 	db	41
   106  00279E  2E                 	db	46
   107  00279F  33                 	db	51
   108  0027A0  38                 	db	56
   109  0027A1  3D                 	db	61
   110  0027A2  42                 	db	66
   111  0027A3  47                 	db	71
   112  0027A4  4D                 	db	77
   113  0027A5  52                 	db	82
   114  0027A6  57                 	db	87
   115  0027A7  5C                 	db	92
   116  0027A8  61                 	db	97
   117  0027A9  66                 	db	102
   118  0027AA  6B                 	db	107
   119  0027AB  70                 	db	112
   120  0027AC  75                 	db	117
   121  0027AD  7A                 	db	122
   122  0027AE  80                 	db	128
   123  0027AF  85                 	db	133
   124  0027B0  8A                 	db	138
   125  0027B1  8F                 	db	143
   126  0027B2  94                 	db	148
   127  0027B3  99                 	db	153
   128  0027B4  9E                 	db	158
   129  0027B5  A3                 	db	163
   130  0027B6  A8                 	db	168
   131  0027B7  AD                 	db	173
   132  0027B8  B3                 	db	179
   133  0027B9  B8                 	db	184
   134  0027BA  BD                 	db	189
   135  0027BB  C2                 	db	194
   136  0027BC  C7                 	db	199
   137  0027BD  CC                 	db	204
   138  0027BE  D1                 	db	209
   139  0027BF  D6                 	db	214
   140  0027C0  DB                 	db	219
   141  0027C1  E0                 	db	224
   142  0027C2  E6                 	db	230
   143  0027C3  EB                 	db	235
   144  0027C4  F0                 	db	240
   145  0027C5  F5                 	db	245
   146  0027C6  FA                 	db	250
   147  0027C7  FF                 	db	255
   148                           
   149                           ;initializer for _triangle
   150  0027C8  0A                 	db	10
   151  0027C9  14                 	db	20
   152  0027CA  1F                 	db	31
   153  0027CB  29                 	db	41
   154  0027CC  33                 	db	51
   155  0027CD  3D                 	db	61
   156  0027CE  47                 	db	71
   157  0027CF  52                 	db	82
   158  0027D0  5C                 	db	92
   159  0027D1  66                 	db	102
   160  0027D2  70                 	db	112
   161  0027D3  7A                 	db	122
   162  0027D4  85                 	db	133
   163  0027D5  8F                 	db	143
   164  0027D6  99                 	db	153
   165  0027D7  A3                 	db	163
   166  0027D8  AD                 	db	173
   167  0027D9  B8                 	db	184
   168  0027DA  C2                 	db	194
   169  0027DB  CC                 	db	204
   170  0027DC  D6                 	db	214
   171  0027DD  E0                 	db	224
   172  0027DE  EB                 	db	235
   173  0027DF  F5                 	db	245
   174  0027E0  FF                 	db	255
   175  0027E1  F5                 	db	245
   176  0027E2  EB                 	db	235
   177  0027E3  E0                 	db	224
   178  0027E4  D6                 	db	214
   179  0027E5  CC                 	db	204
   180  0027E6  C2                 	db	194
   181  0027E7  B8                 	db	184
   182  0027E8  AD                 	db	173
   183  0027E9  A3                 	db	163
   184  0027EA  99                 	db	153
   185  0027EB  8F                 	db	143
   186  0027EC  85                 	db	133
   187  0027ED  7A                 	db	122
   188  0027EE  70                 	db	112
   189  0027EF  66                 	db	102
   190  0027F0  5C                 	db	92
   191  0027F1  52                 	db	82
   192  0027F2  47                 	db	71
   193  0027F3  3D                 	db	61
   194  0027F4  33                 	db	51
   195  0027F5  29                 	db	41
   196  0027F6  1F                 	db	31
   197  0027F7  14                 	db	20
   198  0027F8  0A                 	db	10
   199  0027F9  00                 	db	0
   200                           
   201                           ;initializer for _sin
   202  0027FA  80                 	db	128
   203  0027FB  8F                 	db	143
   204  0027FC  9F                 	db	159
   205  0027FD  AE                 	db	174
   206  0027FE  BD                 	db	189
   207  0027FF  CA                 	db	202
   208  002800  D7                 	db	215
   209  002801  E2                 	db	226
   210  002802  EB                 	db	235
   211  002803  F3                 	db	243
   212  002804  F9                 	db	249
   213  002805  FD                 	db	253
   214  002806  FF                 	db	255
   215  002807  FF                 	db	255
   216  002808  FD                 	db	253
   217  002809  F9                 	db	249
   218  00280A  F3                 	db	243
   219  00280B  EB                 	db	235
   220  00280C  E2                 	db	226
   221  00280D  D7                 	db	215
   222  00280E  CA                 	db	202
   223  00280F  BD                 	db	189
   224  002810  AE                 	db	174
   225  002811  9F                 	db	159
   226  002812  8F                 	db	143
   227  002813  80                 	db	128
   228  002814  70                 	db	112
   229  002815  60                 	db	96
   230  002816  51                 	db	81
   231  002817  42                 	db	66
   232  002818  35                 	db	53
   233  002819  28                 	db	40
   234  00281A  1D                 	db	29
   235  00281B  14                 	db	20
   236  00281C  0C                 	db	12
   237  00281D  06                 	db	6
   238  00281E  02                 	db	2
   239  00281F  00                 	db	0
   240  002820  00                 	db	0
   241  002821  02                 	db	2
   242  002822  06                 	db	6
   243  002823  0C                 	db	12
   244  002824  14                 	db	20
   245  002825  1D                 	db	29
   246  002826  28                 	db	40
   247  002827  35                 	db	53
   248  002828  42                 	db	66
   249  002829  51                 	db	81
   250  00282A  60                 	db	96
   251  00282B  70                 	db	112
   252  0000                     _PIR6bits	set	3792
   253  0000                     _CCP1PPS	set	3759
   254  0000                     _SSP2BUF	set	3730
   255  0000                     _RB3PPS	set	3826
   256  0000                     _RB1PPS	set	3824
   257  0000                     _SSP2CON1bits	set	3734
   258  0000                     _SSP2STATbits	set	3733
   259  0000                     _RC3PPS	set	3834
   260  0000                     _RC4PPS	set	3835
   261  0000                     _SSP1DATPPS	set	3768
   262  0000                     _SSP1CLKPPS	set	3767
   263  0000                     _CCP1IE	set	30272
   264  0000                     _CCP1IF	set	30336
   265  0000                     _TMR1IF	set	30320
   266  0000                     _ADPCH	set	3935
   267  0000                     _ANSELC	set	3873
   268  0000                     _ANSELA	set	3857
   269  0000                     _CCPR1	set	4010
   270  0000                     _TMR1	set	4045
   271  0000                     _ADRES	set	3939
   272  0000                     _CCP1CONbits	set	4012
   273  0000                     _TMR1CLKbits	set	4050
   274  0000                     _T1CONbits	set	4047
   275  0000                     _LATBbits	set	3972
   276  0000                     _TRISBbits	set	3977
   277  0000                     _PORTD	set	3984
   278  0000                     _TRISDbits	set	3979
   279  0000                     _SSP1STATbits	set	3989
   280  0000                     _SSP1BUF	set	3986
   281  0000                     _SSP1CON2bits	set	3991
   282  0000                     _SSP1CON1bits	set	3990
   283  0000                     _SSP1ADD	set	3987
   284  0000                     _ADCON0bits	set	3936
   285  0000                     _ADCON0	set	3936
   286  0000                     _LATAbits	set	3971
   287  0000                     _LATCbits	set	3973
   288  0000                     _PORTCbits	set	3983
   289  0000                     _TRISCbits	set	3978
   290  0000                     _PORTAbits	set	3981
   291  0000                     _TRISAbits	set	3976
   292  0000                     _GIE	set	32663
   293  0000                     _PEIE	set	32662
   294  0000                     _TMR1ON	set	32376
   295  0000                     _T1CKPS1	set	32381
   296  0000                     _T1CKPS0	set	32380
   297                           
   298                           	psect	smallconst
   299  000F00                     __psmallconst:
   300                           	opt callstack 0
   301  000F00  00                 	db	0
   302  000F01                     STR_1:
   303  000F01  25                 	db	37
   304  000F02  75                 	db	117	;'u'
   305  000F03  00                 	db	0
   306  0000                     
   307                           ; #config settings
   308  000F04  00                 	db	0	; dummy byte at the end
   309  0000                     
   310                           	psect	cinit
   311  002C9A                     __pcinit:
   312                           	opt callstack 0
   313  002C9A                     start_initialization:
   314                           	opt callstack 0
   315  002C9A                     __initialization:
   316                           	opt callstack 0
   317                           
   318                           ; NVMREG Errata
   319  002C9A                     	if	3969
   320  002C9A  8E81               	bsf	129,7,c
   321  002C9C  9C81               	bcf	129,6,c
   322  002C9E                     	endif
   323                           
   324                           ; Initialize objects allocated to BANK1 (150 bytes)
   325                           ; load TBLPTR registers with __pidataBANK1
   326  002C9E  0E96               	movlw	low __pidataBANK1
   327  002CA0  6EF6               	movwf	tblptrl,c
   328  002CA2  0E27               	movlw	high __pidataBANK1
   329  002CA4  6EF7               	movwf	tblptrh,c
   330  002CA6  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   331  002CA8  6EF8               	movwf	tblptru,c
   332  002CAA  EE01  F000         	lfsr	0,__pdataBANK1
   333  002CAE  EE10 F096          	lfsr	1,150
   334  002CB2                     copy_data0:
   335  002CB2  0009               	tblrd		*+
   336  002CB4  CFF5 FFEE          	movff	tablat,postinc0
   337  002CB8  50E5               	movf	postdec1,w,c
   338  002CBA  50E1               	movf	fsr1l,w,c
   339  002CBC  E1FA               	bnz	copy_data0
   340                           
   341                           ; Clear objects allocated to BANK0 (56 bytes)
   342  002CBE  EE00  F0AB         	lfsr	0,__pbssBANK0
   343  002CC2  0E38               	movlw	56
   344  002CC4                     clear_0:
   345  002CC4  6AEE               	clrf	postinc0,c
   346  002CC6  06E8               	decf	wreg,f,c
   347  002CC8  E1FD               	bnz	clear_0
   348                           
   349                           ; Clear objects allocated to COMRAM (2 bytes)
   350  002CCA  6A5C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   351  002CCC  6A5B               	clrf	__pbssCOMRAM& (0+255),c
   352  002CCE                     end_of_initialization:
   353                           	opt callstack 0
   354  002CCE                     __end_of__initialization:
   355                           	opt callstack 0
   356  002CCE  905D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   357  002CD0  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   358  002CD2  0100               	movlb	0
   359  002CD4  EF83  F007         	goto	_main	;jump to C main() function
   360                           
   361                           	psect	bssCOMRAM
   362  00005B                     __pbssCOMRAM:
   363                           	opt callstack 0
   364  00005B                     _flags:
   365                           	opt callstack 0
   366  00005B                     	ds	2
   367                           
   368                           	psect	bssBANK0
   369  0000AB                     __pbssBANK0:
   370                           	opt callstack 0
   371  0000AB                     _f3:
   372                           	opt callstack 0
   373  0000AB                     	ds	4
   374  0000AF                     _f2:
   375                           	opt callstack 0
   376  0000AF                     	ds	4
   377  0000B3                     _f:
   378                           	opt callstack 0
   379  0000B3                     	ds	4
   380  0000B7                     _value0:
   381                           	opt callstack 0
   382  0000B7                     	ds	4
   383  0000BB                     _nout:
   384                           	opt callstack 0
   385  0000BB                     	ds	2
   386  0000BD                     _width:
   387                           	opt callstack 0
   388  0000BD                     	ds	2
   389  0000BF                     _prec:
   390                           	opt callstack 0
   391  0000BF                     	ds	2
   392  0000C1                     _r:
   393                           	opt callstack 0
   394  0000C1                     	ds	2
   395  0000C3                     _dbuf:
   396                           	opt callstack 0
   397  0000C3                     	ds	32
   398                           
   399                           	psect	dataBANK1
   400  000100                     __pdataBANK1:
   401                           	opt callstack 0
   402  000100                     _sawtooth:
   403                           	opt callstack 0
   404  000100                     	ds	50
   405  000132                     _triangle:
   406                           	opt callstack 0
   407  000132                     	ds	50
   408  000164                     _sin:
   409                           	opt callstack 0
   410  000164                     	ds	50
   411                           
   412                           	psect	cstackBANK0
   413  000060                     __pcstackBANK0:
   414                           	opt callstack 0
   415  000060                     ?_sprintf:
   416                           	opt callstack 0
   417  000060                     sprintf@s:
   418                           	opt callstack 0
   419                           
   420                           ; 2 bytes @ 0x0
   421  000060                     	ds	2
   422  000062                     sprintf@fmt:
   423                           	opt callstack 0
   424                           
   425                           ; 2 bytes @ 0x2
   426  000062                     	ds	6
   427  000068                     sprintf@ap:
   428                           	opt callstack 0
   429                           
   430                           ; 2 bytes @ 0x8
   431  000068                     	ds	2
   432  00006A                     sprintf@f:
   433                           	opt callstack 0
   434                           
   435                           ; 6 bytes @ 0xA
   436  00006A                     	ds	6
   437  000070                     main@num:
   438                           	opt callstack 0
   439                           
   440                           ; 4 bytes @ 0x10
   441  000070                     	ds	4
   442  000074                     main@num_412:
   443                           	opt callstack 0
   444                           
   445                           ; 4 bytes @ 0x14
   446  000074                     	ds	4
   447  000078                     main@num_420:
   448                           	opt callstack 0
   449                           
   450                           ; 4 bytes @ 0x18
   451  000078                     	ds	4
   452  00007C                     main@u24:
   453                           	opt callstack 0
   454                           
   455                           ; 2 bytes @ 0x1C
   456  00007C                     	ds	2
   457  00007E                     main@u24_410:
   458                           	opt callstack 0
   459                           
   460                           ; 2 bytes @ 0x1E
   461  00007E                     	ds	2
   462  000080                     main@alarmON:
   463                           	opt callstack 0
   464                           
   465                           ; 2 bytes @ 0x20
   466  000080                     	ds	2
   467  000082                     main@u60:
   468                           	opt callstack 0
   469                           
   470                           ; 2 bytes @ 0x22
   471  000082                     	ds	2
   472  000084                     main@u60_411:
   473                           	opt callstack 0
   474                           
   475                           ; 2 bytes @ 0x24
   476  000084                     	ds	2
   477  000086                     main@channel:
   478                           	opt callstack 0
   479                           
   480                           ; 2 bytes @ 0x26
   481  000086                     	ds	2
   482  000088                     main@y:
   483                           	opt callstack 0
   484                           
   485                           ; 2 bytes @ 0x28
   486  000088                     	ds	2
   487  00008A                     main@y_432:
   488                           	opt callstack 0
   489                           
   490                           ; 2 bytes @ 0x2A
   491  00008A                     	ds	2
   492  00008C                     main@y_435:
   493                           	opt callstack 0
   494                           
   495                           ; 2 bytes @ 0x2C
   496  00008C                     	ds	2
   497  00008E                     main@check:
   498                           	opt callstack 0
   499                           
   500                           ; 2 bytes @ 0x2E
   501  00008E                     	ds	2
   502  000090                     main@i:
   503                           	opt callstack 0
   504                           
   505                           ; 2 bytes @ 0x30
   506  000090                     	ds	2
   507  000092                     main@i_414:
   508                           	opt callstack 0
   509                           
   510                           ; 2 bytes @ 0x32
   511  000092                     	ds	2
   512  000094                     main@x:
   513                           	opt callstack 0
   514                           
   515                           ; 2 bytes @ 0x34
   516  000094                     	ds	2
   517  000096                     main@x_433:
   518                           	opt callstack 0
   519                           
   520                           ; 2 bytes @ 0x36
   521  000096                     	ds	2
   522  000098                     main@x_436:
   523                           	opt callstack 0
   524                           
   525                           ; 2 bytes @ 0x38
   526  000098                     	ds	2
   527  00009A                     main@setNum:
   528                           	opt callstack 0
   529                           
   530                           ; 2 bytes @ 0x3A
   531  00009A                     	ds	2
   532  00009C                     main@AsetNum:
   533                           	opt callstack 0
   534                           
   535                           ; 2 bytes @ 0x3C
   536  00009C                     	ds	2
   537  00009E                     main@alarm:
   538                           	opt callstack 0
   539                           
   540                           ; 2 bytes @ 0x3E
   541  00009E                     	ds	2
   542  0000A0                     main@array_413:
   543                           	opt callstack 0
   544                           
   545                           ; 2 bytes @ 0x40
   546  0000A0                     	ds	2
   547  0000A2                     main@outv:
   548                           	opt callstack 0
   549                           
   550                           ; 1 bytes @ 0x42
   551  0000A2                     	ds	1
   552  0000A3                     main@outv_434:
   553                           	opt callstack 0
   554                           
   555                           ; 1 bytes @ 0x43
   556  0000A3                     	ds	1
   557  0000A4                     main@outv_437:
   558                           	opt callstack 0
   559                           
   560                           ; 1 bytes @ 0x44
   561  0000A4                     	ds	1
   562  0000A5                     main@array:
   563                           	opt callstack 0
   564                           
   565                           ; 2 bytes @ 0x45
   566  0000A5                     	ds	2
   567  0000A7                     main@temp2:
   568                           	opt callstack 0
   569                           
   570                           ; 1 bytes @ 0x47
   571  0000A7                     	ds	1
   572  0000A8                     main@temp2_417:
   573                           	opt callstack 0
   574                           
   575                           ; 1 bytes @ 0x48
   576  0000A8                     	ds	1
   577  0000A9                     main@temp1_416:
   578                           	opt callstack 0
   579                           
   580                           ; 1 bytes @ 0x49
   581  0000A9                     	ds	1
   582  0000AA                     main@temp1:
   583                           	opt callstack 0
   584                           
   585                           ; 1 bytes @ 0x4A
   586  0000AA                     	ds	1
   587                           
   588                           	psect	cstackCOMRAM
   589  000001                     __pcstackCOMRAM:
   590                           	opt callstack 0
   591  000001                     ??_ISR:
   592  000001                     
   593                           ; 1 bytes @ 0x0
   594  000001                     	ds	1
   595  000002                     ??_lcd_char:
   596  000002                     ??_lcd_command:
   597  000002                     ??_spi_write:
   598  000002                     ?_getr:
   599                           	opt callstack 0
   600  000002                     ?_strlen:
   601                           	opt callstack 0
   602  000002                     ?___awdiv:
   603                           	opt callstack 0
   604  000002                     ?___awmod:
   605                           	opt callstack 0
   606  000002                     ?_adcNum0:
   607                           	opt callstack 0
   608  000002                     ?___lldiv:
   609                           	opt callstack 0
   610  000002                     ?___lodiv:
   611                           	opt callstack 0
   612  000002                     ?___lomod:
   613                           	opt callstack 0
   614  000002                     i2c_read@registers:
   615                           	opt callstack 0
   616  000002                     i2c_write@registers:
   617                           	opt callstack 0
   618  000002                     ___awdiv@dividend:
   619                           	opt callstack 0
   620  000002                     ___awmod@dividend:
   621                           	opt callstack 0
   622  000002                     fputc@c:
   623                           	opt callstack 0
   624  000002                     strlen@s:
   625                           	opt callstack 0
   626  000002                     ___lldiv@dividend:
   627                           	opt callstack 0
   628  000002                     ___lodiv@dividend:
   629                           	opt callstack 0
   630  000002                     ___lomod@dividend:
   631                           	opt callstack 0
   632                           
   633                           ; 8 bytes @ 0x1
   634  000002                     	ds	1
   635  000003                     i2c_write@data:
   636                           	opt callstack 0
   637  000003                     lcd_command@temp:
   638                           	opt callstack 0
   639  000003                     lcd_char@temp:
   640                           	opt callstack 0
   641  000003                     i2c_read@num:
   642                           	opt callstack 0
   643                           
   644                           ; 4 bytes @ 0x2
   645  000003                     	ds	1
   646  000004                     i2c_write@address:
   647                           	opt callstack 0
   648  000004                     lcd_command@x:
   649                           	opt callstack 0
   650  000004                     lcd_char@x:
   651                           	opt callstack 0
   652  000004                     spi_write@data:
   653                           	opt callstack 0
   654  000004                     ___awdiv@divisor:
   655                           	opt callstack 0
   656  000004                     ___awmod@divisor:
   657                           	opt callstack 0
   658  000004                     fputc@fp:
   659                           	opt callstack 0
   660  000004                     strlen@a:
   661                           	opt callstack 0
   662                           
   663                           ; 2 bytes @ 0x3
   664  000004                     	ds	1
   665  000005                     spi_write@bound:
   666                           	opt callstack 0
   667                           
   668                           ; 1 bytes @ 0x4
   669  000005                     	ds	1
   670  000006                     ??_adcNum0:
   671  000006                     ??_fputc:
   672  000006                     ___awdiv@counter:
   673                           	opt callstack 0
   674  000006                     ___awmod@counter:
   675                           	opt callstack 0
   676  000006                     spi_write@full:
   677                           	opt callstack 0
   678  000006                     ___lldiv@divisor:
   679                           	opt callstack 0
   680                           
   681                           ; 4 bytes @ 0x5
   682  000006                     	ds	1
   683  000007                     i2c_read@read:
   684                           	opt callstack 0
   685  000007                     ___awdiv@sign:
   686                           	opt callstack 0
   687  000007                     ___awmod@sign:
   688                           	opt callstack 0
   689                           
   690                           ; 1 bytes @ 0x6
   691  000007                     	ds	1
   692  000008                     i2c_read@address:
   693                           	opt callstack 0
   694  000008                     ___awdiv@quotient:
   695                           	opt callstack 0
   696                           
   697                           ; 2 bytes @ 0x7
   698  000008                     	ds	1
   699  000009                     ??_get_hours:
   700  000009                     ??_get_minutes:
   701  000009                     ??_get_seconds:
   702  000009                     ??_get_Ahours:
   703  000009                     ??_get_Aminutes:
   704  000009                     ??_get_Aseconds:
   705  000009                     rtc_init@i:
   706                           	opt callstack 0
   707                           
   708                           ; 2 bytes @ 0x8
   709  000009                     	ds	1
   710  00000A                     ??_set_hours:
   711  00000A                     ??_set_minutes:
   712  00000A                     ??_set_seconds:
   713  00000A                     ??_set_Ahours:
   714  00000A                     ??_set_Aminutes:
   715  00000A                     ??_set_Aseconds:
   716  00000A                     get_seconds@sec:
   717                           	opt callstack 0
   718  00000A                     get_minutes@min:
   719                           	opt callstack 0
   720  00000A                     get_hours@hour:
   721                           	opt callstack 0
   722  00000A                     get_Aseconds@Asec:
   723                           	opt callstack 0
   724  00000A                     get_Aminutes@Amin:
   725                           	opt callstack 0
   726  00000A                     get_Ahours@Ahour:
   727                           	opt callstack 0
   728  00000A                     ___lldiv@quotient:
   729                           	opt callstack 0
   730  00000A                     ___lodiv@divisor:
   731                           	opt callstack 0
   732  00000A                     ___lomod@divisor:
   733                           	opt callstack 0
   734                           
   735                           ; 8 bytes @ 0x9
   736  00000A                     	ds	1
   737  00000B                     rtc_init@sec:
   738                           	opt callstack 0
   739  00000B                     fputs@s:
   740                           	opt callstack 0
   741                           
   742                           ; 2 bytes @ 0xA
   743  00000B                     	ds	1
   744  00000C                     rtc_init@hour:
   745                           	opt callstack 0
   746  00000C                     set_seconds@curr_sec:
   747                           	opt callstack 0
   748  00000C                     set_minutes@min:
   749                           	opt callstack 0
   750  00000C                     set_hours@curr_hour:
   751                           	opt callstack 0
   752  00000C                     set_Aseconds@Asec:
   753                           	opt callstack 0
   754  00000C                     set_Aminutes@Amin:
   755                           	opt callstack 0
   756  00000C                     set_Ahours@Acurr_hour:
   757                           	opt callstack 0
   758                           
   759                           ; 1 bytes @ 0xB
   760  00000C                     	ds	1
   761  00000D                     set_seconds@sec:
   762                           	opt callstack 0
   763  00000D                     set_hours@hour:
   764                           	opt callstack 0
   765  00000D                     set_Ahours@Ahour:
   766                           	opt callstack 0
   767  00000D                     fputs@fp:
   768                           	opt callstack 0
   769                           
   770                           ; 2 bytes @ 0xC
   771  00000D                     	ds	1
   772  00000E                     ___lldiv@counter:
   773                           	opt callstack 0
   774                           
   775                           ; 1 bytes @ 0xD
   776  00000E                     	ds	1
   777  00000F                     fputs@c:
   778                           	opt callstack 0
   779                           
   780                           ; 1 bytes @ 0xE
   781  00000F                     	ds	1
   782  000010                     fputs@i:
   783                           	opt callstack 0
   784                           
   785                           ; 2 bytes @ 0xF
   786  000010                     	ds	2
   787  000012                     ?_pad:
   788                           	opt callstack 0
   789  000012                     ___lomod@counter:
   790                           	opt callstack 0
   791  000012                     pad@fp:
   792                           	opt callstack 0
   793  000012                     ___lodiv@quotient:
   794                           	opt callstack 0
   795                           
   796                           ; 8 bytes @ 0x11
   797  000012                     	ds	2
   798  000014                     pad@buf:
   799                           	opt callstack 0
   800                           
   801                           ; 2 bytes @ 0x13
   802  000014                     	ds	2
   803  000016                     pad@p:
   804                           	opt callstack 0
   805                           
   806                           ; 2 bytes @ 0x15
   807  000016                     	ds	2
   808  000018                     ??_pad:
   809                           
   810                           ; 1 bytes @ 0x17
   811  000018                     	ds	1
   812  000019                     pad@i:
   813                           	opt callstack 0
   814                           
   815                           ; 2 bytes @ 0x18
   816  000019                     	ds	1
   817  00001A                     ___lodiv@counter:
   818                           	opt callstack 0
   819                           
   820                           ; 1 bytes @ 0x19
   821  00001A                     	ds	1
   822  00001B                     pad@w:
   823                           	opt callstack 0
   824                           
   825                           ; 2 bytes @ 0x1A
   826  00001B                     	ds	2
   827  00001D                     ?_utoa:
   828                           	opt callstack 0
   829  00001D                     utoa@fp:
   830                           	opt callstack 0
   831                           
   832                           ; 2 bytes @ 0x1C
   833  00001D                     	ds	2
   834  00001F                     utoa@d:
   835                           	opt callstack 0
   836                           
   837                           ; 8 bytes @ 0x1E
   838  00001F                     	ds	8
   839  000027                     ??_utoa:
   840                           
   841                           ; 1 bytes @ 0x26
   842  000027                     	ds	8
   843  00002F                     utoa@p:
   844                           	opt callstack 0
   845                           
   846                           ; 2 bytes @ 0x2E
   847  00002F                     	ds	2
   848  000031                     utoa@w:
   849                           	opt callstack 0
   850                           
   851                           ; 2 bytes @ 0x30
   852  000031                     	ds	2
   853  000033                     utoa@n:
   854                           	opt callstack 0
   855                           
   856                           ; 8 bytes @ 0x32
   857  000033                     	ds	8
   858  00003B                     utoa@i:
   859                           	opt callstack 0
   860                           
   861                           ; 2 bytes @ 0x3A
   862  00003B                     	ds	2
   863  00003D                     ?_vfpfcnvrt:
   864                           	opt callstack 0
   865  00003D                     vfpfcnvrt@fp:
   866                           	opt callstack 0
   867                           
   868                           ; 2 bytes @ 0x3C
   869  00003D                     	ds	2
   870  00003F                     vfpfcnvrt@fmt:
   871                           	opt callstack 0
   872                           
   873                           ; 2 bytes @ 0x3E
   874  00003F                     	ds	2
   875  000041                     vfpfcnvrt@ap:
   876                           	opt callstack 0
   877                           
   878                           ; 2 bytes @ 0x40
   879  000041                     	ds	2
   880  000043                     ??_vfpfcnvrt:
   881                           
   882                           ; 1 bytes @ 0x42
   883  000043                     	ds	4
   884  000047                     vfpfcnvrt@llu:
   885                           	opt callstack 0
   886                           
   887                           ; 8 bytes @ 0x46
   888  000047                     	ds	8
   889  00004F                     ?_vfprintf:
   890                           	opt callstack 0
   891  00004F                     vfprintf@fp:
   892                           	opt callstack 0
   893                           
   894                           ; 2 bytes @ 0x4E
   895  00004F                     	ds	2
   896  000051                     vfprintf@fmt:
   897                           	opt callstack 0
   898                           
   899                           ; 2 bytes @ 0x50
   900  000051                     	ds	2
   901  000053                     vfprintf@ap:
   902                           	opt callstack 0
   903                           
   904                           ; 2 bytes @ 0x52
   905  000053                     	ds	2
   906  000055                     vfprintf@cfmt:
   907                           	opt callstack 0
   908                           
   909                           ; 2 bytes @ 0x54
   910  000055                     	ds	2
   911  000057                     ??_main:
   912                           
   913                           ; 1 bytes @ 0x56
   914  000057                     	ds	4
   915                           
   916 ;;
   917 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   918 ;;
   919 ;; *************** function _main *****************
   920 ;; Defined at:
   921 ;;		line 40 in file "final_main.c"
   922 ;; Parameters:    Size  Location     Type
   923 ;;		None
   924 ;; Auto vars:     Size  Location     Type
   925 ;;  outv            1   68[BANK0 ] volatile unsigned char 
   926 ;;  outv            1   67[BANK0 ] volatile unsigned char 
   927 ;;  outv            1   66[BANK0 ] volatile unsigned char 
   928 ;;  x               2   56[BANK0 ] int 
   929 ;;  x               2   54[BANK0 ] int 
   930 ;;  x               2   52[BANK0 ] int 
   931 ;;  y               2   44[BANK0 ] int 
   932 ;;  y               2   42[BANK0 ] int 
   933 ;;  y               2   40[BANK0 ] int 
   934 ;;  i               2   50[BANK0 ] int 
   935 ;;  num             4   20[BANK0 ] unsigned long 
   936 ;;  i               2   48[BANK0 ] int 
   937 ;;  num             4   16[BANK0 ] unsigned long 
   938 ;;  num             4   24[BANK0 ] unsigned long 
   939 ;;  array           2   64[BANK0 ] unsigned char [2]
   940 ;;  u60             2   36[BANK0 ] int 
   941 ;;  u24             2   30[BANK0 ] int 
   942 ;;  temp1           1   73[BANK0 ] unsigned char 
   943 ;;  temp2           1   72[BANK0 ] unsigned char 
   944 ;;  array           2   69[BANK0 ] unsigned char [2]
   945 ;;  u60             2   34[BANK0 ] int 
   946 ;;  u24             2   28[BANK0 ] int 
   947 ;;  temp1           1   74[BANK0 ] unsigned char 
   948 ;;  temp2           1   71[BANK0 ] unsigned char 
   949 ;;  alarm           2   62[BANK0 ] int 
   950 ;;  AsetNum         2   60[BANK0 ] int 
   951 ;;  setNum          2   58[BANK0 ] int 
   952 ;;  check           2   46[BANK0 ] int 
   953 ;;  channel         2   38[BANK0 ] int 
   954 ;;  alarmON         2   32[BANK0 ] int 
   955 ;; Return value:  Size  Location     Type
   956 ;;                  1    wreg      void 
   957 ;; Registers used:
   958 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   959 ;; Tracked objects:
   960 ;;		On entry : 0/0
   961 ;;		On exit  : 0/0
   962 ;;		Unchanged: 0/0
   963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   965 ;;      Locals:         0      59       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   966 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   967 ;;      Totals:         4      59       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   968 ;;Total ram usage:       63 bytes
   969 ;; Hardware stack levels required when called:    9
   970 ;; This function calls:
   971 ;;		___lldiv
   972 ;;		_adcNum0
   973 ;;		_adc_init
   974 ;;		_ccp_init
   975 ;;		_get_Ahours
   976 ;;		_get_Aminutes
   977 ;;		_get_Aseconds
   978 ;;		_get_hours
   979 ;;		_get_minutes
   980 ;;		_get_seconds
   981 ;;		_getr
   982 ;;		_i2c_init
   983 ;;		_i2c_read
   984 ;;		_i2c_write
   985 ;;		_lcd_char
   986 ;;		_lcd_command
   987 ;;		_lcd_init
   988 ;;		_rtc_init
   989 ;;		_set_Ahours
   990 ;;		_set_Aminutes
   991 ;;		_set_Aseconds
   992 ;;		_set_hours
   993 ;;		_set_minutes
   994 ;;		_set_seconds
   995 ;;		_spi_init
   996 ;;		_spi_write
   997 ;;		_sprintf
   998 ;; This function is called by:
   999 ;;		Startup code after reset
  1000 ;; This function uses a non-reentrant model
  1001 ;;
  1002                           
  1003                           	psect	text0
  1004  000F06                     __ptext0:
  1005                           	opt callstack 0
  1006  000F06                     _main:
  1007                           	opt callstack 22
  1008  000F06                     
  1009                           ;final_main.c: 41:         if(PORTAbits.RA2==1){
  1010  000F06  0E00               	movlw	0
  1011  000F08  0100               	movlb	0	; () banked
  1012  000F0A  6F9B               	movwf	(main@setNum+1)& (0+255),b
  1013  000F0C  0E00               	movlw	0
  1014  000F0E  6F9A               	movwf	main@setNum& (0+255),b
  1015                           
  1016                           ;final_main.c: 42: 
  1017  000F10  0E00               	movlw	0
  1018  000F12  6F9D               	movwf	(main@AsetNum+1)& (0+255),b
  1019  000F14  0E00               	movlw	0
  1020  000F16  6F9C               	movwf	main@AsetNum& (0+255),b
  1021                           
  1022                           ;final_main.c: 43:             if(value0 == 0){
  1023  000F18  0E00               	movlw	0
  1024  000F1A  6F9F               	movwf	(main@alarm+1)& (0+255),b
  1025  000F1C  0E00               	movlw	0
  1026  000F1E  6F9E               	movwf	main@alarm& (0+255),b
  1027                           
  1028                           ;final_main.c: 44:                 value0 = adcNum0();
  1029  000F20  0E00               	movlw	0
  1030  000F22  6F8F               	movwf	(main@check+1)& (0+255),b
  1031  000F24  0E00               	movlw	0
  1032  000F26  6F8E               	movwf	main@check& (0+255),b
  1033                           
  1034                           ;final_main.c: 46:             else{
  1035  000F28  0E00               	movlw	0
  1036  000F2A  6F87               	movwf	(main@channel+1)& (0+255),b
  1037  000F2C  0E00               	movlw	0
  1038  000F2E  6F86               	movwf	main@channel& (0+255),b
  1039  000F30                     
  1040                           ; BSR set to: 0
  1041                           ;final_main.c: 48:             }
  1042  000F30  EC44  F017         	call	_adc_init	;wreg free
  1043  000F34                     
  1044                           ;final_main.c: 49: 
  1045  000F34  EC0F  F017         	call	_lcd_init	;wreg free
  1046  000F38                     
  1047                           ;final_main.c: 51:             int u24 = value0/42;
  1048  000F38  ECA6  F016         	call	_i2c_init	;wreg free
  1049  000F3C                     
  1050                           ;final_main.c: 52:             int u60 = value0/17;
  1051  000F3C  EC16  F014         	call	_rtc_init	;wreg free
  1052  000F40                     
  1053                           ;final_main.c: 53: 
  1054  000F40  ECFF  F016         	call	_spi_init	;wreg free
  1055  000F44                     
  1056                           ;final_main.c: 54: 
  1057  000F44  EC6C  F016         	call	_ccp_init	;wreg free
  1058  000F48                     
  1059                           ;final_main.c: 56:                 setNum++;
  1060  000F48  8488               	bsf	136,2,c	;volatile
  1061  000F4A                     
  1062                           ;final_main.c: 57:                 if (setNum==4){
  1063  000F4A  8688               	bsf	136,3,c	;volatile
  1064  000F4C                     
  1065                           ;final_main.c: 58:                     setNum = 0;
  1066  000F4C  8888               	bsf	136,4,c	;volatile
  1067  000F4E                     
  1068                           ;final_main.c: 59:                 }
  1069  000F4E  8A88               	bsf	136,5,c	;volatile
  1070                           
  1071                           ;final_main.c: 60: 
  1072  000F50  0E00               	movlw	0
  1073  000F52  010F               	movlb	15	; () banked
  1074  000F54  6F11               	movwf	17,b	;volatile
  1075  000F56                     
  1076                           ; BSR set to: 15
  1077                           ;final_main.c: 61:                 unsigned long num = 10000L;
  1078  000F56  9288               	bcf	136,1,c	;volatile
  1079  000F58                     
  1080                           ; BSR set to: 15
  1081                           ;final_main.c: 62:                 while (--num > 0) {
  1082  000F58  928D               	bcf	141,1,c	;volatile
  1083  000F5A                     
  1084                           ; BSR set to: 15
  1085                           ;final_main.c: 64:                 }
  1086  000F5A  908A               	bcf	138,0,c	;volatile
  1087  000F5C                     
  1088                           ; BSR set to: 15
  1089                           ;final_main.c: 65:                 if (setNum != 0){
  1090  000F5C  908F               	bcf	143,0,c	;volatile
  1091  000F5E                     
  1092                           ; BSR set to: 15
  1093                           ;final_main.c: 66:                     LATCbits.LATC0 =0;
  1094  000F5E  928A               	bcf	138,1,c	;volatile
  1095  000F60                     
  1096                           ; BSR set to: 15
  1097                           ;final_main.c: 67:                 }
  1098  000F60  928F               	bcf	143,1,c	;volatile
  1099  000F62                     
  1100                           ; BSR set to: 15
  1101                           ;final_main.c: 68:             }
  1102  000F62  848A               	bsf	138,2,c	;volatile
  1103  000F64                     
  1104                           ; BSR set to: 15
  1105                           ;final_main.c: 69: 
  1106  000F64  948F               	bcf	143,2,c	;volatile
  1107  000F66                     
  1108                           ; BSR set to: 15
  1109                           ;final_main.c: 70:             switch((char)setNum){
  1110  000F66  9A8A               	bcf	138,5,c	;volatile
  1111  000F68                     
  1112                           ; BSR set to: 15
  1113                           ;final_main.c: 71:                case 1:
  1114  000F68  9A8F               	bcf	143,5,c	;volatile
  1115  000F6A                     l3710:
  1116                           
  1117                           ;final_main.c: 75:                   set_minutes(u60);
  1118  000F6A  A48D               	btfss	141,2,c	;volatile
  1119  000F6C  EFBA  F007         	goto	u3011
  1120  000F70  EFBC  F007         	goto	u3010
  1121  000F74                     u3011:
  1122  000F74  EF02  F00A         	goto	l3844
  1123  000F78                     u3010:
  1124  000F78                     
  1125                           ;final_main.c: 77:                case 3:
  1126  000F78  0100               	movlb	0	; () banked
  1127  000F7A  51B7               	movf	_value0& (0+255),w,b
  1128  000F7C  11B8               	iorwf	(_value0+1)& (0+255),w,b
  1129  000F7E  11B9               	iorwf	(_value0+2)& (0+255),w,b
  1130  000F80  11BA               	iorwf	(_value0+3)& (0+255),w,b
  1131  000F82  A4D8               	btfss	status,2,c
  1132  000F84  EFC6  F007         	goto	u3021
  1133  000F88  EFC8  F007         	goto	u3020
  1134  000F8C                     u3021:
  1135  000F8C  EFD4  F007         	goto	l3716
  1136  000F90                     u3020:
  1137  000F90                     
  1138                           ; BSR set to: 0
  1139                           ;final_main.c: 78:                    set_seconds(u60);
  1140  000F90  EC2B  F016         	call	_adcNum0	;wreg free
  1141  000F94  C002  F0B7         	movff	?_adcNum0,_value0
  1142  000F98  C003  F0B8         	movff	?_adcNum0+1,_value0+1
  1143  000F9C  C004  F0B9         	movff	?_adcNum0+2,_value0+2
  1144  000FA0  C005  F0BA         	movff	?_adcNum0+3,_value0+3
  1145                           
  1146                           ;final_main.c: 79:                    break;
  1147  000FA4  EFF4  F007         	goto	l84
  1148  000FA8                     l3716:
  1149                           
  1150                           ; BSR set to: 0
  1151                           ;final_main.c: 81:                     break;
  1152  000FA8  EC2B  F016         	call	_adcNum0	;wreg free
  1153  000FAC  0100               	movlb	0	; () banked
  1154  000FAE  51B7               	movf	_value0& (0+255),w,b
  1155  000FB0  2402               	addwf	?_adcNum0^0,w,c
  1156  000FB2  6E57               	movwf	??_main^0,c
  1157  000FB4  51B8               	movf	(_value0+1)& (0+255),w,b
  1158  000FB6  2003               	addwfc	(?_adcNum0+1)^0,w,c
  1159  000FB8  6E58               	movwf	(??_main+1)^0,c
  1160  000FBA  51B9               	movf	(_value0+2)& (0+255),w,b
  1161  000FBC  2004               	addwfc	(?_adcNum0+2)^0,w,c
  1162  000FBE  6E59               	movwf	(??_main+2)^0,c
  1163  000FC0  51BA               	movf	(_value0+3)& (0+255),w,b
  1164  000FC2  2005               	addwfc	(?_adcNum0+3)^0,w,c
  1165  000FC4  6E5A               	movwf	(??_main+3)^0,c
  1166  000FC6  90D8               	bcf	status,0,c
  1167  000FC8  325A               	rrcf	(??_main+3)^0,f,c
  1168  000FCA  3259               	rrcf	(??_main+2)^0,f,c
  1169  000FCC  3258               	rrcf	(??_main+1)^0,f,c
  1170  000FCE  3257               	rrcf	??_main^0,f,c
  1171  000FD0  0E01               	movlw	1
  1172  000FD2  2457               	addwf	??_main^0,w,c
  1173  000FD4  6FB7               	movwf	_value0& (0+255),b
  1174  000FD6  0E00               	movlw	0
  1175  000FD8  2058               	addwfc	(??_main+1)^0,w,c
  1176  000FDA  6FB8               	movwf	(_value0+1)& (0+255),b
  1177  000FDC  0E00               	movlw	0
  1178  000FDE  2059               	addwfc	(??_main+2)^0,w,c
  1179  000FE0  6FB9               	movwf	(_value0+2)& (0+255),b
  1180  000FE2  0E00               	movlw	0
  1181  000FE4  205A               	addwfc	(??_main+3)^0,w,c
  1182  000FE6  6FBA               	movwf	(_value0+3)& (0+255),b
  1183  000FE8                     l84:
  1184                           
  1185                           ;final_main.c: 85:             for(int i=0; i<2; i++){
  1186  000FE8  C0B7  F002         	movff	_value0,___lldiv@dividend
  1187  000FEC  C0B8  F003         	movff	_value0+1,___lldiv@dividend+1
  1188  000FF0  C0B9  F004         	movff	_value0+2,___lldiv@dividend+2
  1189  000FF4  C0BA  F005         	movff	_value0+3,___lldiv@dividend+3
  1190  000FF8  0E2A               	movlw	42
  1191  000FFA  6E06               	movwf	___lldiv@divisor^0,c
  1192  000FFC  0E00               	movlw	0
  1193  000FFE  6E07               	movwf	(___lldiv@divisor+1)^0,c
  1194  001000  0E00               	movlw	0
  1195  001002  6E08               	movwf	(___lldiv@divisor+2)^0,c
  1196  001004  0E00               	movlw	0
  1197  001006  6E09               	movwf	(___lldiv@divisor+3)^0,c
  1198  001008  EC79  F013         	call	___lldiv	;wreg free
  1199  00100C  C002  F07C         	movff	?___lldiv,main@u24
  1200  001010  C003  F07D         	movff	?___lldiv+1,main@u24+1
  1201                           
  1202                           ;final_main.c: 86:                 array[i]=0;
  1203  001014  C0B7  F002         	movff	_value0,___lldiv@dividend
  1204  001018  C0B8  F003         	movff	_value0+1,___lldiv@dividend+1
  1205  00101C  C0B9  F004         	movff	_value0+2,___lldiv@dividend+2
  1206  001020  C0BA  F005         	movff	_value0+3,___lldiv@dividend+3
  1207  001024  0E11               	movlw	17
  1208  001026  6E06               	movwf	___lldiv@divisor^0,c
  1209  001028  0E00               	movlw	0
  1210  00102A  6E07               	movwf	(___lldiv@divisor+1)^0,c
  1211  00102C  0E00               	movlw	0
  1212  00102E  6E08               	movwf	(___lldiv@divisor+2)^0,c
  1213  001030  0E00               	movlw	0
  1214  001032  6E09               	movwf	(___lldiv@divisor+3)^0,c
  1215  001034  EC79  F013         	call	___lldiv	;wreg free
  1216  001038  C002  F082         	movff	?___lldiv,main@u60
  1217  00103C  C003  F083         	movff	?___lldiv+1,main@u60+1
  1218  001040                     
  1219                           ;final_main.c: 89:             lcd_char('T');
  1220  001040  B68D               	btfsc	141,3,c	;volatile
  1221  001042  EF25  F008         	goto	u3031
  1222  001046  EF27  F008         	goto	u3030
  1223  00104A                     u3031:
  1224  00104A  EF6E  F008         	goto	l3740
  1225  00104E                     u3030:
  1226  00104E                     
  1227                           ;final_main.c: 90:             lcd_char(':');
  1228  00104E  0100               	movlb	0	; () banked
  1229  001050  4B9A               	infsnz	main@setNum& (0+255),f,b
  1230  001052  2B9B               	incf	(main@setNum+1)& (0+255),f,b
  1231  001054                     
  1232                           ; BSR set to: 0
  1233                           ;final_main.c: 91:             lcd_char(' ');
  1234  001054  0E04               	movlw	4
  1235  001056  199A               	xorwf	main@setNum& (0+255),w,b
  1236  001058  119B               	iorwf	(main@setNum+1)& (0+255),w,b
  1237  00105A  A4D8               	btfss	status,2,c
  1238  00105C  EF32  F008         	goto	u3041
  1239  001060  EF34  F008         	goto	u3040
  1240  001064                     u3041:
  1241  001064  EF38  F008         	goto	l86
  1242  001068                     u3040:
  1243  001068                     
  1244                           ; BSR set to: 0
  1245                           ;final_main.c: 92: 
  1246  001068  0E00               	movlw	0
  1247  00106A  6F9B               	movwf	(main@setNum+1)& (0+255),b
  1248  00106C  0E00               	movlw	0
  1249  00106E  6F9A               	movwf	main@setNum& (0+255),b
  1250  001070                     l86:
  1251                           
  1252                           ; BSR set to: 0
  1253                           ;final_main.c: 95:             char temp1 = array[0];
  1254  001070  0E10               	movlw	16
  1255  001072  6F70               	movwf	main@num& (0+255),b
  1256  001074  0E27               	movlw	39
  1257  001076  6F71               	movwf	(main@num+1)& (0+255),b
  1258  001078  0E00               	movlw	0
  1259  00107A  6F72               	movwf	(main@num+2)& (0+255),b
  1260  00107C  0E00               	movlw	0
  1261  00107E  6F73               	movwf	(main@num+3)& (0+255),b
  1262                           
  1263                           ;final_main.c: 96:             char temp2 = array[1];
  1264  001080  EF43  F008         	goto	l3726
  1265  001084                     l88:
  1266                           
  1267                           ; BSR set to: 0
  1268                           ;final_main.c: 97:             if((temp1 != 0) && (temp2 != 0)){
  1269  001084  8085               	bsf	133,0,c	;volatile
  1270  001086                     l3726:
  1271                           
  1272                           ; BSR set to: 0
  1273                           ;final_main.c: 96:             char temp2 = array[1];
  1274  001086  0770               	decf	main@num& (0+255),f,b
  1275  001088  0E00               	movlw	0
  1276  00108A  5B71               	subwfb	(main@num+1)& (0+255),f,b
  1277  00108C  5B72               	subwfb	(main@num+2)& (0+255),f,b
  1278  00108E  5B73               	subwfb	(main@num+3)& (0+255),f,b
  1279  001090  5170               	movf	main@num& (0+255),w,b
  1280  001092  1171               	iorwf	(main@num+1)& (0+255),w,b
  1281  001094  1172               	iorwf	(main@num+2)& (0+255),w,b
  1282  001096  1173               	iorwf	(main@num+3)& (0+255),w,b
  1283  001098  A4D8               	btfss	status,2,c
  1284  00109A  EF51  F008         	goto	u3051
  1285  00109E  EF53  F008         	goto	u3050
  1286  0010A2                     u3051:
  1287  0010A2  EF42  F008         	goto	l88
  1288  0010A6                     u3050:
  1289  0010A6                     
  1290                           ; BSR set to: 0
  1291                           ;final_main.c: 99:                 lcd_char(temp2);
  1292  0010A6  519A               	movf	main@setNum& (0+255),w,b
  1293  0010A8  119B               	iorwf	(main@setNum+1)& (0+255),w,b
  1294  0010AA  B4D8               	btfsc	status,2,c
  1295  0010AC  EF5A  F008         	goto	u3061
  1296  0010B0  EF5C  F008         	goto	u3060
  1297  0010B4                     u3061:
  1298  0010B4  EF6E  F008         	goto	l3740
  1299  0010B8                     u3060:
  1300  0010B8                     
  1301                           ; BSR set to: 0
  1302                           ;final_main.c: 100:             }
  1303  0010B8  9085               	bcf	133,0,c	;volatile
  1304  0010BA  EF6E  F008         	goto	l3740
  1305  0010BE                     l3732:
  1306                           
  1307                           ; BSR set to: 0
  1308                           ;final_main.c: 106:                 lcd_char('0');
  1309  0010BE  517C               	movf	main@u24& (0+255),w,b
  1310  0010C0  EC8B  F014         	call	_set_hours
  1311                           
  1312                           ;final_main.c: 107:                 lcd_char('0');
  1313  0010C4  EF88  F008         	goto	l3742
  1314  0010C8                     l3734:
  1315                           
  1316                           ; BSR set to: 0
  1317                           ;final_main.c: 109:             lcd_char(':');
  1318  0010C8  5182               	movf	main@u60& (0+255),w,b
  1319  0010CA  EC5C  F015         	call	_set_minutes
  1320                           
  1321                           ;final_main.c: 110: 
  1322  0010CE  EF88  F008         	goto	l3742
  1323  0010D2                     l3736:
  1324                           
  1325                           ; BSR set to: 0
  1326                           ;final_main.c: 112:             temp1 = array[0];
  1327  0010D2  5182               	movf	main@u60& (0+255),w,b
  1328  0010D4  EC56  F014         	call	_set_seconds
  1329                           
  1330                           ;final_main.c: 113:             temp2 = array[1];
  1331  0010D8  EF88  F008         	goto	l3742
  1332  0010DC                     l3740:
  1333  0010DC  0100               	movlb	0	; () banked
  1334  0010DE  519A               	movf	main@setNum& (0+255),w,b
  1335  0010E0  6E57               	movwf	??_main^0,c
  1336  0010E2  6A58               	clrf	(??_main+1)^0,c
  1337                           
  1338                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1339                           ; Switch size 1, requested type "simple"
  1340                           ; Number of cases is 1, Range of values is 0 to 0
  1341                           ; switch strategies available:
  1342                           ; Name         Instructions Cycles
  1343                           ; simple_byte            4     3 (average)
  1344                           ;	Chosen strategy is simple_byte
  1345  0010E4  5058               	movf	(??_main+1)^0,w,c
  1346  0010E6  0A00               	xorlw	0	; case 0
  1347  0010E8  B4D8               	btfsc	status,2,c
  1348  0010EA  EF79  F008         	goto	l4186
  1349  0010EE  EF88  F008         	goto	l3742
  1350  0010F2                     l4186:
  1351                           
  1352                           ; BSR set to: 0
  1353                           ; Switch size 1, requested type "simple"
  1354                           ; Number of cases is 3, Range of values is 1 to 3
  1355                           ; switch strategies available:
  1356                           ; Name         Instructions Cycles
  1357                           ; simple_byte           10     6 (average)
  1358                           ;	Chosen strategy is simple_byte
  1359  0010F2  5057               	movf	??_main^0,w,c
  1360  0010F4  0A01               	xorlw	1	; case 1
  1361  0010F6  B4D8               	btfsc	status,2,c
  1362  0010F8  EF5F  F008         	goto	l3732
  1363  0010FC  0A03               	xorlw	3	; case 2
  1364  0010FE  B4D8               	btfsc	status,2,c
  1365  001100  EF64  F008         	goto	l3734
  1366  001104  0A01               	xorlw	1	; case 3
  1367  001106  B4D8               	btfsc	status,2,c
  1368  001108  EF69  F008         	goto	l3736
  1369  00110C  EF88  F008         	goto	l3742
  1370  001110                     l3742:
  1371                           
  1372                           ;final_main.c: 117:             };final_main.c: 119:                 lcd_char('0');
  1373  001110  0E00               	movlw	0
  1374  001112  0100               	movlb	0	; () banked
  1375  001114  6F91               	movwf	(main@i+1)& (0+255),b
  1376  001116  0E00               	movlw	0
  1377  001118  6F90               	movwf	main@i& (0+255),b
  1378  00111A                     l3744:
  1379                           
  1380                           ; BSR set to: 0
  1381  00111A  BF91               	btfsc	(main@i+1)& (0+255),7,b
  1382  00111C  EF99  F008         	goto	u3071
  1383  001120  5191               	movf	(main@i+1)& (0+255),w,b
  1384  001122  E109               	bnz	u3070
  1385  001124  0E02               	movlw	2
  1386  001126  5D90               	subwf	main@i& (0+255),w,b
  1387  001128  A0D8               	btfss	status,0,c
  1388  00112A  EF99  F008         	goto	u3071
  1389  00112E  EF9B  F008         	goto	u3070
  1390  001132                     u3071:
  1391  001132  EF9D  F008         	goto	l3748
  1392  001136                     u3070:
  1393  001136  EFA9  F008         	goto	l3754
  1394  00113A                     l3748:
  1395                           
  1396                           ; BSR set to: 0
  1397                           ;final_main.c: 120:                 lcd_char(temp1);
  1398  00113A  0EA5               	movlw	low main@array
  1399  00113C  2590               	addwf	main@i& (0+255),w,b
  1400  00113E  6ED9               	movwf	fsr2l,c
  1401  001140  0E00               	movlw	high main@array
  1402  001142  2191               	addwfc	(main@i+1)& (0+255),w,b
  1403  001144  6EDA               	movwf	fsr2h,c
  1404  001146  0E00               	movlw	0
  1405  001148  6EDF               	movwf	indf2,c
  1406  00114A                     
  1407                           ; BSR set to: 0
  1408                           ;final_main.c: 121:             }
  1409  00114A  4B90               	infsnz	main@i& (0+255),f,b
  1410  00114C  2B91               	incf	(main@i+1)& (0+255),f,b
  1411  00114E  EF8D  F008         	goto	l3744
  1412  001152                     l3754:
  1413                           
  1414                           ; BSR set to: 0
  1415                           ;final_main.c: 123:                 lcd_char('0');
  1416  001152  0E54               	movlw	84
  1417  001154  ECC4  F012         	call	_lcd_char
  1418                           
  1419                           ;final_main.c: 124:                 lcd_char('0');
  1420  001158  0E3A               	movlw	58
  1421  00115A  ECC4  F012         	call	_lcd_char
  1422                           
  1423                           ;final_main.c: 125:             }
  1424  00115E  0E20               	movlw	32
  1425  001160  ECC4  F012         	call	_lcd_char
  1426  001164                     
  1427                           ;final_main.c: 128:             sprintf(array, "%u", get_seconds());
  1428  001164  0EA5               	movlw	low main@array
  1429  001166  0100               	movlb	0	; () banked
  1430  001168  6F60               	movwf	sprintf@s& (0+255),b
  1431  00116A  0E00               	movlw	high main@array
  1432  00116C  6F61               	movwf	(sprintf@s+1)& (0+255),b
  1433  00116E  0E01               	movlw	low STR_1
  1434  001170  6F62               	movwf	sprintf@fmt& (0+255),b
  1435  001172  0E0F               	movlw	high STR_1
  1436  001174  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  1437  001176  ECCC  F016         	call	_get_hours	;wreg free
  1438  00117A  6E57               	movwf	??_main^0,c
  1439  00117C  5057               	movf	??_main^0,w,c
  1440  00117E  0100               	movlb	0	; () banked
  1441  001180  6F64               	movwf	(?_sprintf+4)& (0+255),b
  1442  001182  6B65               	clrf	(?_sprintf+5)& (0+255),b
  1443  001184  ECE0  F015         	call	_sprintf	;wreg free
  1444  001188                     
  1445                           ;final_main.c: 129:             temp1 = array[0];
  1446  001188  C0A5  F0AA         	movff	main@array,main@temp1
  1447  00118C                     
  1448                           ;final_main.c: 130:             temp2 = array[1];
  1449  00118C  C0A6  F0A7         	movff	main@array+1,main@temp2
  1450  001190                     
  1451                           ;final_main.c: 131:             if((temp1 != 0) && (temp2 != 0)){
  1452  001190  0100               	movlb	0	; () banked
  1453  001192  51AA               	movf	main@temp1& (0+255),w,b
  1454  001194  B4D8               	btfsc	status,2,c
  1455  001196  EFCF  F008         	goto	u3081
  1456  00119A  EFD1  F008         	goto	u3080
  1457  00119E                     u3081:
  1458  00119E  EFE2  F008         	goto	l3768
  1459  0011A2                     u3080:
  1460  0011A2                     
  1461                           ; BSR set to: 0
  1462  0011A2  51A7               	movf	main@temp2& (0+255),w,b
  1463  0011A4  B4D8               	btfsc	status,2,c
  1464  0011A6  EFD7  F008         	goto	u3091
  1465  0011AA  EFD9  F008         	goto	u3090
  1466  0011AE                     u3091:
  1467  0011AE  EFE2  F008         	goto	l3768
  1468  0011B2                     u3090:
  1469  0011B2                     
  1470                           ; BSR set to: 0
  1471                           ;final_main.c: 132:                 lcd_char(temp1);
  1472  0011B2  51AA               	movf	main@temp1& (0+255),w,b
  1473  0011B4  ECC4  F012         	call	_lcd_char
  1474                           
  1475                           ;final_main.c: 133:                 lcd_char(temp2);
  1476  0011B8  0100               	movlb	0	; () banked
  1477  0011BA  51A7               	movf	main@temp2& (0+255),w,b
  1478  0011BC  ECC4  F012         	call	_lcd_char
  1479                           
  1480                           ;final_main.c: 134:             }
  1481  0011C0  EF01  F009         	goto	l100
  1482  0011C4                     l3768:
  1483                           
  1484                           ; BSR set to: 0
  1485  0011C4  51AA               	movf	main@temp1& (0+255),w,b
  1486  0011C6  B4D8               	btfsc	status,2,c
  1487  0011C8  EFE8  F008         	goto	u3101
  1488  0011CC  EFEA  F008         	goto	u3100
  1489  0011D0                     u3101:
  1490  0011D0  EFFB  F008         	goto	l3774
  1491  0011D4                     u3100:
  1492  0011D4                     
  1493                           ; BSR set to: 0
  1494  0011D4  51A7               	movf	main@temp2& (0+255),w,b
  1495  0011D6  A4D8               	btfss	status,2,c
  1496  0011D8  EFF0  F008         	goto	u3111
  1497  0011DC  EFF2  F008         	goto	u3110
  1498  0011E0                     u3111:
  1499  0011E0  EFFB  F008         	goto	l3774
  1500  0011E4                     u3110:
  1501  0011E4                     
  1502                           ; BSR set to: 0
  1503                           ;final_main.c: 136:                 lcd_char('0');
  1504  0011E4  0E30               	movlw	48
  1505  0011E6  ECC4  F012         	call	_lcd_char
  1506                           
  1507                           ;final_main.c: 137:                 lcd_char(temp1);
  1508  0011EA  0100               	movlb	0	; () banked
  1509  0011EC  51AA               	movf	main@temp1& (0+255),w,b
  1510  0011EE  ECC4  F012         	call	_lcd_char
  1511                           
  1512                           ;final_main.c: 138:             }
  1513  0011F2  EF01  F009         	goto	l100
  1514  0011F6                     l3774:
  1515                           
  1516                           ; BSR set to: 0
  1517                           ;final_main.c: 140:                 lcd_char('0');
  1518  0011F6  0E30               	movlw	48
  1519  0011F8  ECC4  F012         	call	_lcd_char
  1520                           
  1521                           ;final_main.c: 141:                 lcd_char('0');
  1522  0011FC  0E30               	movlw	48
  1523  0011FE  ECC4  F012         	call	_lcd_char
  1524  001202                     l100:
  1525                           
  1526                           ;final_main.c: 143: 
  1527  001202  0E3A               	movlw	58
  1528  001204  ECC4  F012         	call	_lcd_char
  1529  001208                     
  1530                           ;final_main.c: 145:             lcd_char(' ');
  1531  001208  0EA5               	movlw	low main@array
  1532  00120A  0100               	movlb	0	; () banked
  1533  00120C  6F60               	movwf	sprintf@s& (0+255),b
  1534  00120E  0E00               	movlw	high main@array
  1535  001210  6F61               	movwf	(sprintf@s+1)& (0+255),b
  1536  001212  0E01               	movlw	low STR_1
  1537  001214  6F62               	movwf	sprintf@fmt& (0+255),b
  1538  001216  0E0F               	movlw	high STR_1
  1539  001218  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  1540  00121A  EC1F  F017         	call	_get_minutes	;wreg free
  1541  00121E  6E57               	movwf	??_main^0,c
  1542  001220  5057               	movf	??_main^0,w,c
  1543  001222  0100               	movlb	0	; () banked
  1544  001224  6F64               	movwf	(?_sprintf+4)& (0+255),b
  1545  001226  6B65               	clrf	(?_sprintf+5)& (0+255),b
  1546  001228  ECE0  F015         	call	_sprintf	;wreg free
  1547  00122C                     
  1548                           ;final_main.c: 146:             lcd_char(' ');
  1549  00122C  C0A5  F0AA         	movff	main@array,main@temp1
  1550  001230                     
  1551                           ;final_main.c: 147:             lcd_char(' ');
  1552  001230  C0A6  F0A7         	movff	main@array+1,main@temp2
  1553  001234                     
  1554                           ;final_main.c: 148:             if(alarm == 1){
  1555  001234  0100               	movlb	0	; () banked
  1556  001236  51AA               	movf	main@temp1& (0+255),w,b
  1557  001238  B4D8               	btfsc	status,2,c
  1558  00123A  EF21  F009         	goto	u3121
  1559  00123E  EF23  F009         	goto	u3120
  1560  001242                     u3121:
  1561  001242  EF34  F009         	goto	l3788
  1562  001246                     u3120:
  1563  001246                     
  1564                           ; BSR set to: 0
  1565  001246  51A7               	movf	main@temp2& (0+255),w,b
  1566  001248  B4D8               	btfsc	status,2,c
  1567  00124A  EF29  F009         	goto	u3131
  1568  00124E  EF2B  F009         	goto	u3130
  1569  001252                     u3131:
  1570  001252  EF34  F009         	goto	l3788
  1571  001256                     u3130:
  1572  001256                     
  1573                           ; BSR set to: 0
  1574                           ;final_main.c: 149:                 lcd_char('A');
  1575  001256  51AA               	movf	main@temp1& (0+255),w,b
  1576  001258  ECC4  F012         	call	_lcd_char
  1577                           
  1578                           ;final_main.c: 150:                 lcd_char('S');
  1579  00125C  0100               	movlb	0	; () banked
  1580  00125E  51A7               	movf	main@temp2& (0+255),w,b
  1581  001260  ECC4  F012         	call	_lcd_char
  1582                           
  1583                           ;final_main.c: 151:             }
  1584  001264  EF53  F009         	goto	l104
  1585  001268                     l3788:
  1586                           
  1587                           ; BSR set to: 0
  1588  001268  51AA               	movf	main@temp1& (0+255),w,b
  1589  00126A  B4D8               	btfsc	status,2,c
  1590  00126C  EF3A  F009         	goto	u3141
  1591  001270  EF3C  F009         	goto	u3140
  1592  001274                     u3141:
  1593  001274  EF4D  F009         	goto	l3794
  1594  001278                     u3140:
  1595  001278                     
  1596                           ; BSR set to: 0
  1597  001278  51A7               	movf	main@temp2& (0+255),w,b
  1598  00127A  A4D8               	btfss	status,2,c
  1599  00127C  EF42  F009         	goto	u3151
  1600  001280  EF44  F009         	goto	u3150
  1601  001284                     u3151:
  1602  001284  EF4D  F009         	goto	l3794
  1603  001288                     u3150:
  1604  001288                     
  1605                           ; BSR set to: 0
  1606                           ;final_main.c: 153:                 lcd_char('*');
  1607  001288  0E30               	movlw	48
  1608  00128A  ECC4  F012         	call	_lcd_char
  1609                           
  1610                           ;final_main.c: 154:                 lcd_char('*');
  1611  00128E  0100               	movlb	0	; () banked
  1612  001290  51AA               	movf	main@temp1& (0+255),w,b
  1613  001292  ECC4  F012         	call	_lcd_char
  1614                           
  1615                           ;final_main.c: 155:             }
  1616  001296  EF53  F009         	goto	l104
  1617  00129A                     l3794:
  1618                           
  1619                           ; BSR set to: 0
  1620                           ;final_main.c: 157: 
  1621  00129A  0E30               	movlw	48
  1622  00129C  ECC4  F012         	call	_lcd_char
  1623                           
  1624                           ;final_main.c: 158:            channel=getr();
  1625  0012A0  0E30               	movlw	48
  1626  0012A2  ECC4  F012         	call	_lcd_char
  1627  0012A6                     l104:
  1628                           
  1629                           ;final_main.c: 160: 
  1630  0012A6  0E3A               	movlw	58
  1631  0012A8  ECC4  F012         	call	_lcd_char
  1632  0012AC                     
  1633                           ;final_main.c: 162:             temp1 = array[0];
  1634  0012AC  0EA5               	movlw	low main@array
  1635  0012AE  0100               	movlb	0	; () banked
  1636  0012B0  6F60               	movwf	sprintf@s& (0+255),b
  1637  0012B2  0E00               	movlw	high main@array
  1638  0012B4  6F61               	movwf	(sprintf@s+1)& (0+255),b
  1639  0012B6  0E01               	movlw	low STR_1
  1640  0012B8  6F62               	movwf	sprintf@fmt& (0+255),b
  1641  0012BA  0E0F               	movlw	high STR_1
  1642  0012BC  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  1643  0012BE  ECBB  F016         	call	_get_seconds	;wreg free
  1644  0012C2  6E57               	movwf	??_main^0,c
  1645  0012C4  5057               	movf	??_main^0,w,c
  1646  0012C6  0100               	movlb	0	; () banked
  1647  0012C8  6F64               	movwf	(?_sprintf+4)& (0+255),b
  1648  0012CA  6B65               	clrf	(?_sprintf+5)& (0+255),b
  1649  0012CC  ECE0  F015         	call	_sprintf	;wreg free
  1650  0012D0                     
  1651                           ;final_main.c: 163: 
  1652  0012D0  C0A5  F0AA         	movff	main@array,main@temp1
  1653  0012D4                     
  1654                           ;final_main.c: 164:             lcd_command(0xC0);
  1655  0012D4  C0A6  F0A7         	movff	main@array+1,main@temp2
  1656  0012D8                     
  1657                           ;final_main.c: 165: 
  1658  0012D8  0100               	movlb	0	; () banked
  1659  0012DA  51AA               	movf	main@temp1& (0+255),w,b
  1660  0012DC  B4D8               	btfsc	status,2,c
  1661  0012DE  EF73  F009         	goto	u3161
  1662  0012E2  EF75  F009         	goto	u3160
  1663  0012E6                     u3161:
  1664  0012E6  EF86  F009         	goto	l3808
  1665  0012EA                     u3160:
  1666  0012EA                     
  1667                           ; BSR set to: 0
  1668  0012EA  51A7               	movf	main@temp2& (0+255),w,b
  1669  0012EC  B4D8               	btfsc	status,2,c
  1670  0012EE  EF7B  F009         	goto	u3171
  1671  0012F2  EF7D  F009         	goto	u3170
  1672  0012F6                     u3171:
  1673  0012F6  EF86  F009         	goto	l3808
  1674  0012FA                     u3170:
  1675  0012FA                     
  1676                           ; BSR set to: 0
  1677                           ;final_main.c: 166:             lcd_char('C');
  1678  0012FA  51AA               	movf	main@temp1& (0+255),w,b
  1679  0012FC  ECC4  F012         	call	_lcd_char
  1680                           
  1681                           ;final_main.c: 167:             lcd_char('H');
  1682  001300  0100               	movlb	0	; () banked
  1683  001302  51A7               	movf	main@temp2& (0+255),w,b
  1684  001304  ECC4  F012         	call	_lcd_char
  1685                           
  1686                           ;final_main.c: 168:             lcd_char(':');
  1687  001308  EFA5  F009         	goto	l108
  1688  00130C                     l3808:
  1689                           
  1690                           ; BSR set to: 0
  1691  00130C  51AA               	movf	main@temp1& (0+255),w,b
  1692  00130E  B4D8               	btfsc	status,2,c
  1693  001310  EF8C  F009         	goto	u3181
  1694  001314  EF8E  F009         	goto	u3180
  1695  001318                     u3181:
  1696  001318  EF9F  F009         	goto	l3814
  1697  00131C                     u3180:
  1698  00131C                     
  1699                           ; BSR set to: 0
  1700  00131C  51A7               	movf	main@temp2& (0+255),w,b
  1701  00131E  A4D8               	btfss	status,2,c
  1702  001320  EF94  F009         	goto	u3191
  1703  001324  EF96  F009         	goto	u3190
  1704  001328                     u3191:
  1705  001328  EF9F  F009         	goto	l3814
  1706  00132C                     u3190:
  1707  00132C                     
  1708                           ; BSR set to: 0
  1709                           ;final_main.c: 170:             if((temp1 != 0)){
  1710  00132C  0E30               	movlw	48
  1711  00132E  ECC4  F012         	call	_lcd_char
  1712                           
  1713                           ;final_main.c: 171:                 lcd_char(temp1);
  1714  001332  0100               	movlb	0	; () banked
  1715  001334  51AA               	movf	main@temp1& (0+255),w,b
  1716  001336  ECC4  F012         	call	_lcd_char
  1717                           
  1718                           ;final_main.c: 172:             }
  1719  00133A  EFA5  F009         	goto	l108
  1720  00133E                     l3814:
  1721                           
  1722                           ; BSR set to: 0
  1723                           ;final_main.c: 174:                 lcd_char('0');
  1724  00133E  0E30               	movlw	48
  1725  001340  ECC4  F012         	call	_lcd_char
  1726                           
  1727                           ;final_main.c: 175:             }
  1728  001344  0E30               	movlw	48
  1729  001346  ECC4  F012         	call	_lcd_char
  1730  00134A                     l108:
  1731                           
  1732                           ;final_main.c: 179:         else{
  1733  00134A  0E20               	movlw	32
  1734  00134C  ECC4  F012         	call	_lcd_char
  1735                           
  1736                           ;final_main.c: 180:             if(check==0){
  1737  001350  0E20               	movlw	32
  1738  001352  ECC4  F012         	call	_lcd_char
  1739                           
  1740                           ;final_main.c: 181:                 lcd_command(0x01);
  1741  001356  0E20               	movlw	32
  1742  001358  ECC4  F012         	call	_lcd_char
  1743  00135C                     
  1744                           ;final_main.c: 182:                 check++;
  1745  00135C  0100               	movlb	0	; () banked
  1746  00135E  059E               	decf	main@alarm& (0+255),w,b
  1747  001360  119F               	iorwf	(main@alarm+1)& (0+255),w,b
  1748  001362  A4D8               	btfss	status,2,c
  1749  001364  EFB6  F009         	goto	u3201
  1750  001368  EFB8  F009         	goto	u3200
  1751  00136C                     u3201:
  1752  00136C  EFC0  F009         	goto	l3820
  1753  001370                     u3200:
  1754  001370                     
  1755                           ; BSR set to: 0
  1756                           ;final_main.c: 183:             }
  1757  001370  0E41               	movlw	65
  1758  001372  ECC4  F012         	call	_lcd_char
  1759                           
  1760                           ;final_main.c: 184:             else if(check==1){
  1761  001376  0E53               	movlw	83
  1762  001378  ECC4  F012         	call	_lcd_char
  1763                           
  1764                           ;final_main.c: 185:                 lcd_command(0x02);
  1765  00137C  EFC6  F009         	goto	l3822
  1766  001380                     l3820:
  1767                           
  1768                           ; BSR set to: 0
  1769                           ;final_main.c: 187:             }
  1770  001380  0E2A               	movlw	42
  1771  001382  ECC4  F012         	call	_lcd_char
  1772                           
  1773                           ;final_main.c: 188: 
  1774  001386  0E2A               	movlw	42
  1775  001388  ECC4  F012         	call	_lcd_char
  1776  00138C                     l3822:
  1777                           
  1778                           ;final_main.c: 192:             }
  1779  00138C  EC3F  F017         	call	_getr	;wreg free
  1780  001390  C002  F086         	movff	?_getr,main@channel
  1781  001394  C003  F087         	movff	?_getr+1,main@channel+1
  1782  001398                     
  1783                           ;final_main.c: 195:             }
  1784  001398  0EA5               	movlw	low main@array
  1785  00139A  0100               	movlb	0	; () banked
  1786  00139C  6F60               	movwf	sprintf@s& (0+255),b
  1787  00139E  0E00               	movlw	high main@array
  1788  0013A0  6F61               	movwf	(sprintf@s+1)& (0+255),b
  1789  0013A2  0E01               	movlw	low STR_1
  1790  0013A4  6F62               	movwf	sprintf@fmt& (0+255),b
  1791  0013A6  0E0F               	movlw	high STR_1
  1792  0013A8  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  1793  0013AA  C086  F064         	movff	main@channel,?_sprintf+4
  1794  0013AE  C087  F065         	movff	main@channel+1,?_sprintf+5
  1795  0013B2  ECE0  F015         	call	_sprintf	;wreg free
  1796  0013B6                     
  1797                           ;final_main.c: 196: 
  1798  0013B6  C0A5  F0AA         	movff	main@array,main@temp1
  1799  0013BA                     
  1800                           ;final_main.c: 198:             int u24 = value0/42;
  1801  0013BA  0EC0               	movlw	192
  1802  0013BC  EC67  F012         	call	_lcd_command
  1803  0013C0                     
  1804                           ;final_main.c: 200: 
  1805  0013C0  0E43               	movlw	67
  1806  0013C2  ECC4  F012         	call	_lcd_char
  1807  0013C6                     
  1808                           ;final_main.c: 201: 
  1809  0013C6  0E48               	movlw	72
  1810  0013C8  ECC4  F012         	call	_lcd_char
  1811  0013CC                     
  1812                           ;final_main.c: 202:             if(PORTAbits.RA3!=1){
  1813  0013CC  0E3A               	movlw	58
  1814  0013CE  ECC4  F012         	call	_lcd_char
  1815  0013D2                     
  1816                           ;final_main.c: 203:                 AsetNum++;
  1817  0013D2  0E20               	movlw	32
  1818  0013D4  ECC4  F012         	call	_lcd_char
  1819  0013D8                     
  1820                           ;final_main.c: 204:                 if (AsetNum==4){
  1821  0013D8  0100               	movlb	0	; () banked
  1822  0013DA  51AA               	movf	main@temp1& (0+255),w,b
  1823  0013DC  B4D8               	btfsc	status,2,c
  1824  0013DE  EFF3  F009         	goto	u3211
  1825  0013E2  EFF5  F009         	goto	u3210
  1826  0013E6                     u3211:
  1827  0013E6  EFFA  F009         	goto	l3842
  1828  0013EA                     u3210:
  1829  0013EA                     
  1830                           ; BSR set to: 0
  1831                           ;final_main.c: 205:                     AsetNum = 0;
  1832  0013EA  51AA               	movf	main@temp1& (0+255),w,b
  1833  0013EC  ECC4  F012         	call	_lcd_char
  1834                           
  1835                           ;final_main.c: 206:                 }
  1836  0013F0  EFFD  F009         	goto	l114
  1837  0013F4                     l3842:
  1838                           
  1839                           ; BSR set to: 0
  1840                           ;final_main.c: 208:                 unsigned long num = 10000L;
  1841  0013F4  0E30               	movlw	48
  1842  0013F6  ECC4  F012         	call	_lcd_char
  1843  0013FA                     l114:
  1844                           
  1845                           ;final_main.c: 211:                 }
  1846  0013FA  0E02               	movlw	2
  1847  0013FC  EC67  F012         	call	_lcd_command
  1848                           
  1849                           ;final_main.c: 212:                 if (AsetNum != 0){
  1850  001400  EF0C  F00C         	goto	l115
  1851  001404                     l3844:
  1852                           
  1853                           ;final_main.c: 214:                 }
  1854  001404  0100               	movlb	0	; () banked
  1855  001406  518E               	movf	main@check& (0+255),w,b
  1856  001408  118F               	iorwf	(main@check+1)& (0+255),w,b
  1857  00140A  A4D8               	btfss	status,2,c
  1858  00140C  EF0A  F00A         	goto	u3221
  1859  001410  EF0C  F00A         	goto	u3220
  1860  001414                     u3221:
  1861  001414  EF14  F00A         	goto	l3850
  1862  001418                     u3220:
  1863  001418                     
  1864                           ; BSR set to: 0
  1865                           ;final_main.c: 215:             }
  1866  001418  0E01               	movlw	1
  1867  00141A  EC67  F012         	call	_lcd_command
  1868  00141E                     
  1869                           ;final_main.c: 216: 
  1870  00141E  0100               	movlb	0	; () banked
  1871  001420  4B8E               	infsnz	main@check& (0+255),f,b
  1872  001422  2B8F               	incf	(main@check+1)& (0+255),f,b
  1873                           
  1874                           ;final_main.c: 217:             switch((char)AsetNum){
  1875  001424  EF24  F00A         	goto	l3856
  1876  001428                     l3850:
  1877                           
  1878                           ; BSR set to: 0
  1879  001428  058E               	decf	main@check& (0+255),w,b
  1880  00142A  118F               	iorwf	(main@check+1)& (0+255),w,b
  1881  00142C  A4D8               	btfss	status,2,c
  1882  00142E  EF1B  F00A         	goto	u3231
  1883  001432  EF1D  F00A         	goto	u3230
  1884  001436                     u3231:
  1885  001436  EF24  F00A         	goto	l3856
  1886  00143A                     u3230:
  1887  00143A                     
  1888                           ; BSR set to: 0
  1889                           ;final_main.c: 219:                    set_Ahours(u24);
  1890  00143A  0E02               	movlw	2
  1891  00143C  EC67  F012         	call	_lcd_command
  1892  001440                     
  1893                           ;final_main.c: 220:                    break;
  1894  001440  0100               	movlb	0	; () banked
  1895  001442  078E               	decf	main@check& (0+255),f,b
  1896  001444  A0D8               	btfss	status,0,c
  1897  001446  078F               	decf	(main@check+1)& (0+255),f,b
  1898  001448                     l3856:
  1899                           
  1900                           ; BSR set to: 0
  1901                           ;final_main.c: 224:                case 3:
  1902  001448  51B7               	movf	_value0& (0+255),w,b
  1903  00144A  11B8               	iorwf	(_value0+1)& (0+255),w,b
  1904  00144C  11B9               	iorwf	(_value0+2)& (0+255),w,b
  1905  00144E  11BA               	iorwf	(_value0+3)& (0+255),w,b
  1906  001450  A4D8               	btfss	status,2,c
  1907  001452  EF2D  F00A         	goto	u3241
  1908  001456  EF2F  F00A         	goto	u3240
  1909  00145A                     u3241:
  1910  00145A  EF3B  F00A         	goto	l3860
  1911  00145E                     u3240:
  1912  00145E                     
  1913                           ; BSR set to: 0
  1914                           ;final_main.c: 225:                    set_Aseconds(u60);
  1915  00145E  EC2B  F016         	call	_adcNum0	;wreg free
  1916  001462  C002  F0B7         	movff	?_adcNum0,_value0
  1917  001466  C003  F0B8         	movff	?_adcNum0+1,_value0+1
  1918  00146A  C004  F0B9         	movff	?_adcNum0+2,_value0+2
  1919  00146E  C005  F0BA         	movff	?_adcNum0+3,_value0+3
  1920                           
  1921                           ;final_main.c: 226:                    break;
  1922  001472  EF5B  F00A         	goto	l120
  1923  001476                     l3860:
  1924                           
  1925                           ; BSR set to: 0
  1926                           ;final_main.c: 228:                     break;
  1927  001476  EC2B  F016         	call	_adcNum0	;wreg free
  1928  00147A  0100               	movlb	0	; () banked
  1929  00147C  51B7               	movf	_value0& (0+255),w,b
  1930  00147E  2402               	addwf	?_adcNum0^0,w,c
  1931  001480  6E57               	movwf	??_main^0,c
  1932  001482  51B8               	movf	(_value0+1)& (0+255),w,b
  1933  001484  2003               	addwfc	(?_adcNum0+1)^0,w,c
  1934  001486  6E58               	movwf	(??_main+1)^0,c
  1935  001488  51B9               	movf	(_value0+2)& (0+255),w,b
  1936  00148A  2004               	addwfc	(?_adcNum0+2)^0,w,c
  1937  00148C  6E59               	movwf	(??_main+2)^0,c
  1938  00148E  51BA               	movf	(_value0+3)& (0+255),w,b
  1939  001490  2005               	addwfc	(?_adcNum0+3)^0,w,c
  1940  001492  6E5A               	movwf	(??_main+3)^0,c
  1941  001494  90D8               	bcf	status,0,c
  1942  001496  325A               	rrcf	(??_main+3)^0,f,c
  1943  001498  3259               	rrcf	(??_main+2)^0,f,c
  1944  00149A  3258               	rrcf	(??_main+1)^0,f,c
  1945  00149C  3257               	rrcf	??_main^0,f,c
  1946  00149E  0E01               	movlw	1
  1947  0014A0  2457               	addwf	??_main^0,w,c
  1948  0014A2  6FB7               	movwf	_value0& (0+255),b
  1949  0014A4  0E00               	movlw	0
  1950  0014A6  2058               	addwfc	(??_main+1)^0,w,c
  1951  0014A8  6FB8               	movwf	(_value0+1)& (0+255),b
  1952  0014AA  0E00               	movlw	0
  1953  0014AC  2059               	addwfc	(??_main+2)^0,w,c
  1954  0014AE  6FB9               	movwf	(_value0+2)& (0+255),b
  1955  0014B0  0E00               	movlw	0
  1956  0014B2  205A               	addwfc	(??_main+3)^0,w,c
  1957  0014B4  6FBA               	movwf	(_value0+3)& (0+255),b
  1958  0014B6                     l120:
  1959                           
  1960                           ;final_main.c: 232:             for(int i=0; i<2; i++){
  1961  0014B6  C0B7  F002         	movff	_value0,___lldiv@dividend
  1962  0014BA  C0B8  F003         	movff	_value0+1,___lldiv@dividend+1
  1963  0014BE  C0B9  F004         	movff	_value0+2,___lldiv@dividend+2
  1964  0014C2  C0BA  F005         	movff	_value0+3,___lldiv@dividend+3
  1965  0014C6  0E2A               	movlw	42
  1966  0014C8  6E06               	movwf	___lldiv@divisor^0,c
  1967  0014CA  0E00               	movlw	0
  1968  0014CC  6E07               	movwf	(___lldiv@divisor+1)^0,c
  1969  0014CE  0E00               	movlw	0
  1970  0014D0  6E08               	movwf	(___lldiv@divisor+2)^0,c
  1971  0014D2  0E00               	movlw	0
  1972  0014D4  6E09               	movwf	(___lldiv@divisor+3)^0,c
  1973  0014D6  EC79  F013         	call	___lldiv	;wreg free
  1974  0014DA  C002  F07E         	movff	?___lldiv,main@u24_410
  1975  0014DE  C003  F07F         	movff	?___lldiv+1,main@u24_410+1
  1976                           
  1977                           ;final_main.c: 233:                 array[i]=0;
  1978  0014E2  C0B7  F002         	movff	_value0,___lldiv@dividend
  1979  0014E6  C0B8  F003         	movff	_value0+1,___lldiv@dividend+1
  1980  0014EA  C0B9  F004         	movff	_value0+2,___lldiv@dividend+2
  1981  0014EE  C0BA  F005         	movff	_value0+3,___lldiv@dividend+3
  1982  0014F2  0E11               	movlw	17
  1983  0014F4  6E06               	movwf	___lldiv@divisor^0,c
  1984  0014F6  0E00               	movlw	0
  1985  0014F8  6E07               	movwf	(___lldiv@divisor+1)^0,c
  1986  0014FA  0E00               	movlw	0
  1987  0014FC  6E08               	movwf	(___lldiv@divisor+2)^0,c
  1988  0014FE  0E00               	movlw	0
  1989  001500  6E09               	movwf	(___lldiv@divisor+3)^0,c
  1990  001502  EC79  F013         	call	___lldiv	;wreg free
  1991  001506  C002  F084         	movff	?___lldiv,main@u60_411
  1992  00150A  C003  F085         	movff	?___lldiv+1,main@u60_411+1
  1993  00150E                     
  1994                           ;final_main.c: 236:             lcd_char('A');
  1995  00150E  B68D               	btfsc	141,3,c	;volatile
  1996  001510  EF8C  F00A         	goto	u3251
  1997  001514  EF8E  F00A         	goto	u3250
  1998  001518                     u3251:
  1999  001518  EFD5  F00A         	goto	l3884
  2000  00151C                     u3250:
  2001  00151C                     
  2002                           ;final_main.c: 237:             lcd_char(':');
  2003  00151C  0100               	movlb	0	; () banked
  2004  00151E  4B9C               	infsnz	main@AsetNum& (0+255),f,b
  2005  001520  2B9D               	incf	(main@AsetNum+1)& (0+255),f,b
  2006  001522                     
  2007                           ; BSR set to: 0
  2008                           ;final_main.c: 238:             lcd_char(' ');
  2009  001522  0E04               	movlw	4
  2010  001524  199C               	xorwf	main@AsetNum& (0+255),w,b
  2011  001526  119D               	iorwf	(main@AsetNum+1)& (0+255),w,b
  2012  001528  A4D8               	btfss	status,2,c
  2013  00152A  EF99  F00A         	goto	u3261
  2014  00152E  EF9B  F00A         	goto	u3260
  2015  001532                     u3261:
  2016  001532  EF9F  F00A         	goto	l122
  2017  001536                     u3260:
  2018  001536                     
  2019                           ; BSR set to: 0
  2020                           ;final_main.c: 239: 
  2021  001536  0E00               	movlw	0
  2022  001538  6F9D               	movwf	(main@AsetNum+1)& (0+255),b
  2023  00153A  0E00               	movlw	0
  2024  00153C  6F9C               	movwf	main@AsetNum& (0+255),b
  2025  00153E                     l122:
  2026                           
  2027                           ; BSR set to: 0
  2028                           ;final_main.c: 242:             char temp1 = array[0];
  2029  00153E  0E10               	movlw	16
  2030  001540  6F74               	movwf	main@num_412& (0+255),b
  2031  001542  0E27               	movlw	39
  2032  001544  6F75               	movwf	(main@num_412+1)& (0+255),b
  2033  001546  0E00               	movlw	0
  2034  001548  6F76               	movwf	(main@num_412+2)& (0+255),b
  2035  00154A  0E00               	movlw	0
  2036  00154C  6F77               	movwf	(main@num_412+3)& (0+255),b
  2037                           
  2038                           ;final_main.c: 243:             char temp2 = array[1];
  2039  00154E  EFAA  F00A         	goto	l3870
  2040  001552                     l124:
  2041                           
  2042                           ; BSR set to: 0
  2043                           ;final_main.c: 244:             if((temp1 != 0) && (temp2 != 0)){
  2044  001552  8285               	bsf	133,1,c	;volatile
  2045  001554                     l3870:
  2046                           
  2047                           ; BSR set to: 0
  2048                           ;final_main.c: 243:             char temp2 = array[1];
  2049  001554  0774               	decf	main@num_412& (0+255),f,b
  2050  001556  0E00               	movlw	0
  2051  001558  5B75               	subwfb	(main@num_412+1)& (0+255),f,b
  2052  00155A  5B76               	subwfb	(main@num_412+2)& (0+255),f,b
  2053  00155C  5B77               	subwfb	(main@num_412+3)& (0+255),f,b
  2054  00155E  5174               	movf	main@num_412& (0+255),w,b
  2055  001560  1175               	iorwf	(main@num_412+1)& (0+255),w,b
  2056  001562  1176               	iorwf	(main@num_412+2)& (0+255),w,b
  2057  001564  1177               	iorwf	(main@num_412+3)& (0+255),w,b
  2058  001566  A4D8               	btfss	status,2,c
  2059  001568  EFB8  F00A         	goto	u3271
  2060  00156C  EFBA  F00A         	goto	u3270
  2061  001570                     u3271:
  2062  001570  EFA9  F00A         	goto	l124
  2063  001574                     u3270:
  2064  001574                     
  2065                           ; BSR set to: 0
  2066                           ;final_main.c: 246:                 lcd_char(temp2);
  2067  001574  519C               	movf	main@AsetNum& (0+255),w,b
  2068  001576  119D               	iorwf	(main@AsetNum+1)& (0+255),w,b
  2069  001578  B4D8               	btfsc	status,2,c
  2070  00157A  EFC1  F00A         	goto	u3281
  2071  00157E  EFC3  F00A         	goto	u3280
  2072  001582                     u3281:
  2073  001582  EFD5  F00A         	goto	l3884
  2074  001586                     u3280:
  2075  001586                     
  2076                           ; BSR set to: 0
  2077                           ;final_main.c: 247:             }
  2078  001586  9285               	bcf	133,1,c	;volatile
  2079  001588  EFD5  F00A         	goto	l3884
  2080  00158C                     l3876:
  2081                           
  2082                           ; BSR set to: 0
  2083                           ;final_main.c: 253:                 lcd_char('0');
  2084  00158C  517E               	movf	main@u24_410& (0+255),w,b
  2085  00158E  ECC0  F014         	call	_set_Ahours
  2086                           
  2087                           ;final_main.c: 254:                 lcd_char('0');
  2088  001592  EFEF  F00A         	goto	l3886
  2089  001596                     l3878:
  2090                           
  2091                           ; BSR set to: 0
  2092                           ;final_main.c: 256:             lcd_char(':');
  2093  001596  5184               	movf	main@u60_411& (0+255),w,b
  2094  001598  ECB4  F015         	call	_set_Aminutes
  2095                           
  2096                           ;final_main.c: 257: 
  2097  00159C  EFEF  F00A         	goto	l3886
  2098  0015A0                     l3880:
  2099                           
  2100                           ; BSR set to: 0
  2101                           ;final_main.c: 259:             temp1 = array[0];
  2102  0015A0  5184               	movf	main@u60_411& (0+255),w,b
  2103  0015A2  EC88  F015         	call	_set_Aseconds
  2104                           
  2105                           ;final_main.c: 260:             temp2 = array[1];
  2106  0015A6  EFEF  F00A         	goto	l3886
  2107  0015AA                     l3884:
  2108  0015AA  0100               	movlb	0	; () banked
  2109  0015AC  519C               	movf	main@AsetNum& (0+255),w,b
  2110  0015AE  6E57               	movwf	??_main^0,c
  2111  0015B0  6A58               	clrf	(??_main+1)^0,c
  2112                           
  2113                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2114                           ; Switch size 1, requested type "simple"
  2115                           ; Number of cases is 1, Range of values is 0 to 0
  2116                           ; switch strategies available:
  2117                           ; Name         Instructions Cycles
  2118                           ; simple_byte            4     3 (average)
  2119                           ;	Chosen strategy is simple_byte
  2120  0015B2  5058               	movf	(??_main+1)^0,w,c
  2121  0015B4  0A00               	xorlw	0	; case 0
  2122  0015B6  B4D8               	btfsc	status,2,c
  2123  0015B8  EFE0  F00A         	goto	l4188
  2124  0015BC  EFEF  F00A         	goto	l3886
  2125  0015C0                     l4188:
  2126                           
  2127                           ; BSR set to: 0
  2128                           ; Switch size 1, requested type "simple"
  2129                           ; Number of cases is 3, Range of values is 1 to 3
  2130                           ; switch strategies available:
  2131                           ; Name         Instructions Cycles
  2132                           ; simple_byte           10     6 (average)
  2133                           ;	Chosen strategy is simple_byte
  2134  0015C0  5057               	movf	??_main^0,w,c
  2135  0015C2  0A01               	xorlw	1	; case 1
  2136  0015C4  B4D8               	btfsc	status,2,c
  2137  0015C6  EFC6  F00A         	goto	l3876
  2138  0015CA  0A03               	xorlw	3	; case 2
  2139  0015CC  B4D8               	btfsc	status,2,c
  2140  0015CE  EFCB  F00A         	goto	l3878
  2141  0015D2  0A01               	xorlw	1	; case 3
  2142  0015D4  B4D8               	btfsc	status,2,c
  2143  0015D6  EFD0  F00A         	goto	l3880
  2144  0015DA  EFEF  F00A         	goto	l3886
  2145  0015DE                     l3886:
  2146                           
  2147                           ;final_main.c: 264:             };final_main.c: 266:                 lcd_char('0');
  2148  0015DE  0E00               	movlw	0
  2149  0015E0  0100               	movlb	0	; () banked
  2150  0015E2  6F93               	movwf	(main@i_414+1)& (0+255),b
  2151  0015E4  0E00               	movlw	0
  2152  0015E6  6F92               	movwf	main@i_414& (0+255),b
  2153  0015E8                     l3888:
  2154                           
  2155                           ; BSR set to: 0
  2156  0015E8  BF93               	btfsc	(main@i_414+1)& (0+255),7,b
  2157  0015EA  EF00  F00B         	goto	u3291
  2158  0015EE  5193               	movf	(main@i_414+1)& (0+255),w,b
  2159  0015F0  E109               	bnz	u3290
  2160  0015F2  0E02               	movlw	2
  2161  0015F4  5D92               	subwf	main@i_414& (0+255),w,b
  2162  0015F6  A0D8               	btfss	status,0,c
  2163  0015F8  EF00  F00B         	goto	u3291
  2164  0015FC  EF02  F00B         	goto	u3290
  2165  001600                     u3291:
  2166  001600  EF04  F00B         	goto	l3892
  2167  001604                     u3290:
  2168  001604  EF10  F00B         	goto	l3898
  2169  001608                     l3892:
  2170                           
  2171                           ; BSR set to: 0
  2172                           ;final_main.c: 267:                 lcd_char(temp1);
  2173  001608  0EA0               	movlw	low main@array_413
  2174  00160A  2592               	addwf	main@i_414& (0+255),w,b
  2175  00160C  6ED9               	movwf	fsr2l,c
  2176  00160E  0E00               	movlw	high main@array_413
  2177  001610  2193               	addwfc	(main@i_414+1)& (0+255),w,b
  2178  001612  6EDA               	movwf	fsr2h,c
  2179  001614  0E00               	movlw	0
  2180  001616  6EDF               	movwf	indf2,c
  2181  001618                     
  2182                           ; BSR set to: 0
  2183                           ;final_main.c: 268:             }
  2184  001618  4B92               	infsnz	main@i_414& (0+255),f,b
  2185  00161A  2B93               	incf	(main@i_414+1)& (0+255),f,b
  2186  00161C  EFF4  F00A         	goto	l3888
  2187  001620                     l3898:
  2188                           
  2189                           ; BSR set to: 0
  2190                           ;final_main.c: 270:                 lcd_char('0');
  2191  001620  0E41               	movlw	65
  2192  001622  ECC4  F012         	call	_lcd_char
  2193                           
  2194                           ;final_main.c: 271:                 lcd_char('0');
  2195  001626  0E3A               	movlw	58
  2196  001628  ECC4  F012         	call	_lcd_char
  2197                           
  2198                           ;final_main.c: 272:             }
  2199  00162C  0E20               	movlw	32
  2200  00162E  ECC4  F012         	call	_lcd_char
  2201  001632                     
  2202                           ;final_main.c: 275:             sprintf(array, "%u", get_Aseconds());
  2203  001632  0EA0               	movlw	low main@array_413
  2204  001634  0100               	movlb	0	; () banked
  2205  001636  6F60               	movwf	sprintf@s& (0+255),b
  2206  001638  0E00               	movlw	high main@array_413
  2207  00163A  6F61               	movwf	(sprintf@s+1)& (0+255),b
  2208  00163C  0E01               	movlw	low STR_1
  2209  00163E  6F62               	movwf	sprintf@fmt& (0+255),b
  2210  001640  0E0F               	movlw	high STR_1
  2211  001642  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  2212  001644  ECEE  F016         	call	_get_Ahours	;wreg free
  2213  001648  6E57               	movwf	??_main^0,c
  2214  00164A  5057               	movf	??_main^0,w,c
  2215  00164C  0100               	movlb	0	; () banked
  2216  00164E  6F64               	movwf	(?_sprintf+4)& (0+255),b
  2217  001650  6B65               	clrf	(?_sprintf+5)& (0+255),b
  2218  001652  ECE0  F015         	call	_sprintf	;wreg free
  2219  001656                     
  2220                           ;final_main.c: 276:             temp1 = array[0];
  2221  001656  C0A0  F0A9         	movff	main@array_413,main@temp1_416
  2222  00165A                     
  2223                           ;final_main.c: 277:             temp2 = array[1];
  2224  00165A  C0A1  F0A8         	movff	main@array_413+1,main@temp2_417
  2225  00165E                     
  2226                           ;final_main.c: 278:             if((temp1 != 0) && (temp2 != 0)){
  2227  00165E  0100               	movlb	0	; () banked
  2228  001660  51A9               	movf	main@temp1_416& (0+255),w,b
  2229  001662  B4D8               	btfsc	status,2,c
  2230  001664  EF36  F00B         	goto	u3301
  2231  001668  EF38  F00B         	goto	u3300
  2232  00166C                     u3301:
  2233  00166C  EF49  F00B         	goto	l3912
  2234  001670                     u3300:
  2235  001670                     
  2236                           ; BSR set to: 0
  2237  001670  51A8               	movf	main@temp2_417& (0+255),w,b
  2238  001672  B4D8               	btfsc	status,2,c
  2239  001674  EF3E  F00B         	goto	u3311
  2240  001678  EF40  F00B         	goto	u3310
  2241  00167C                     u3311:
  2242  00167C  EF49  F00B         	goto	l3912
  2243  001680                     u3310:
  2244  001680                     
  2245                           ; BSR set to: 0
  2246                           ;final_main.c: 279:                 lcd_char(temp1);
  2247  001680  51A9               	movf	main@temp1_416& (0+255),w,b
  2248  001682  ECC4  F012         	call	_lcd_char
  2249                           
  2250                           ;final_main.c: 280:                 lcd_char(temp2);
  2251  001686  0100               	movlb	0	; () banked
  2252  001688  51A8               	movf	main@temp2_417& (0+255),w,b
  2253  00168A  ECC4  F012         	call	_lcd_char
  2254                           
  2255                           ;final_main.c: 281:             }
  2256  00168E  EF68  F00B         	goto	l136
  2257  001692                     l3912:
  2258                           
  2259                           ; BSR set to: 0
  2260  001692  51A9               	movf	main@temp1_416& (0+255),w,b
  2261  001694  B4D8               	btfsc	status,2,c
  2262  001696  EF4F  F00B         	goto	u3321
  2263  00169A  EF51  F00B         	goto	u3320
  2264  00169E                     u3321:
  2265  00169E  EF62  F00B         	goto	l3918
  2266  0016A2                     u3320:
  2267  0016A2                     
  2268                           ; BSR set to: 0
  2269  0016A2  51A8               	movf	main@temp2_417& (0+255),w,b
  2270  0016A4  A4D8               	btfss	status,2,c
  2271  0016A6  EF57  F00B         	goto	u3331
  2272  0016AA  EF59  F00B         	goto	u3330
  2273  0016AE                     u3331:
  2274  0016AE  EF62  F00B         	goto	l3918
  2275  0016B2                     u3330:
  2276  0016B2                     
  2277                           ; BSR set to: 0
  2278                           ;final_main.c: 283:                 lcd_char('0');
  2279  0016B2  0E30               	movlw	48
  2280  0016B4  ECC4  F012         	call	_lcd_char
  2281                           
  2282                           ;final_main.c: 284:                 lcd_char(temp1);
  2283  0016B8  0100               	movlb	0	; () banked
  2284  0016BA  51A9               	movf	main@temp1_416& (0+255),w,b
  2285  0016BC  ECC4  F012         	call	_lcd_char
  2286                           
  2287                           ;final_main.c: 285:             }
  2288  0016C0  EF68  F00B         	goto	l136
  2289  0016C4                     l3918:
  2290                           
  2291                           ; BSR set to: 0
  2292                           ;final_main.c: 287:                 lcd_char('0');
  2293  0016C4  0E30               	movlw	48
  2294  0016C6  ECC4  F012         	call	_lcd_char
  2295                           
  2296                           ;final_main.c: 288:                 lcd_char('0');
  2297  0016CA  0E30               	movlw	48
  2298  0016CC  ECC4  F012         	call	_lcd_char
  2299  0016D0                     l136:
  2300                           
  2301                           ;final_main.c: 290:         }
  2302  0016D0  0E3A               	movlw	58
  2303  0016D2  ECC4  F012         	call	_lcd_char
  2304  0016D6                     
  2305                           ;final_main.c: 292:         if ((i2c_read(104, 0x0F)&0x01) == 1){
  2306  0016D6  0EA0               	movlw	low main@array_413
  2307  0016D8  0100               	movlb	0	; () banked
  2308  0016DA  6F60               	movwf	sprintf@s& (0+255),b
  2309  0016DC  0E00               	movlw	high main@array_413
  2310  0016DE  6F61               	movwf	(sprintf@s+1)& (0+255),b
  2311  0016E0  0E01               	movlw	low STR_1
  2312  0016E2  6F62               	movwf	sprintf@fmt& (0+255),b
  2313  0016E4  0E0F               	movlw	high STR_1
  2314  0016E6  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  2315  0016E8  EC2F  F017         	call	_get_Aminutes	;wreg free
  2316  0016EC  6E57               	movwf	??_main^0,c
  2317  0016EE  5057               	movf	??_main^0,w,c
  2318  0016F0  0100               	movlb	0	; () banked
  2319  0016F2  6F64               	movwf	(?_sprintf+4)& (0+255),b
  2320  0016F4  6B65               	clrf	(?_sprintf+5)& (0+255),b
  2321  0016F6  ECE0  F015         	call	_sprintf	;wreg free
  2322  0016FA                     
  2323                           ;final_main.c: 293:             alarmON = 1;
  2324  0016FA  C0A0  F0A9         	movff	main@array_413,main@temp1_416
  2325  0016FE                     
  2326                           ;final_main.c: 294:         }
  2327  0016FE  C0A1  F0A8         	movff	main@array_413+1,main@temp2_417
  2328  001702                     
  2329                           ;final_main.c: 295:         else{
  2330  001702  0100               	movlb	0	; () banked
  2331  001704  51A9               	movf	main@temp1_416& (0+255),w,b
  2332  001706  B4D8               	btfsc	status,2,c
  2333  001708  EF88  F00B         	goto	u3341
  2334  00170C  EF8A  F00B         	goto	u3340
  2335  001710                     u3341:
  2336  001710  EF9B  F00B         	goto	l3932
  2337  001714                     u3340:
  2338  001714                     
  2339                           ; BSR set to: 0
  2340  001714  51A8               	movf	main@temp2_417& (0+255),w,b
  2341  001716  B4D8               	btfsc	status,2,c
  2342  001718  EF90  F00B         	goto	u3351
  2343  00171C  EF92  F00B         	goto	u3350
  2344  001720                     u3351:
  2345  001720  EF9B  F00B         	goto	l3932
  2346  001724                     u3350:
  2347  001724                     
  2348                           ; BSR set to: 0
  2349                           ;final_main.c: 296:             alarmON = 0;
  2350  001724  51A9               	movf	main@temp1_416& (0+255),w,b
  2351  001726  ECC4  F012         	call	_lcd_char
  2352                           
  2353                           ;final_main.c: 297:         }
  2354  00172A  0100               	movlb	0	; () banked
  2355  00172C  51A8               	movf	main@temp2_417& (0+255),w,b
  2356  00172E  ECC4  F012         	call	_lcd_char
  2357                           
  2358                           ;final_main.c: 298: 
  2359  001732  EFBA  F00B         	goto	l140
  2360  001736                     l3932:
  2361                           
  2362                           ; BSR set to: 0
  2363  001736  51A9               	movf	main@temp1_416& (0+255),w,b
  2364  001738  B4D8               	btfsc	status,2,c
  2365  00173A  EFA1  F00B         	goto	u3361
  2366  00173E  EFA3  F00B         	goto	u3360
  2367  001742                     u3361:
  2368  001742  EFB4  F00B         	goto	l3938
  2369  001746                     u3360:
  2370  001746                     
  2371                           ; BSR set to: 0
  2372  001746  51A8               	movf	main@temp2_417& (0+255),w,b
  2373  001748  A4D8               	btfss	status,2,c
  2374  00174A  EFA9  F00B         	goto	u3371
  2375  00174E  EFAB  F00B         	goto	u3370
  2376  001752                     u3371:
  2377  001752  EFB4  F00B         	goto	l3938
  2378  001756                     u3370:
  2379  001756                     
  2380                           ; BSR set to: 0
  2381                           ;final_main.c: 300:         if (PORTAbits.RA4!=1){
  2382  001756  0E30               	movlw	48
  2383  001758  ECC4  F012         	call	_lcd_char
  2384                           
  2385                           ;final_main.c: 301:             if(alarm ==0){
  2386  00175C  0100               	movlb	0	; () banked
  2387  00175E  51A9               	movf	main@temp1_416& (0+255),w,b
  2388  001760  ECC4  F012         	call	_lcd_char
  2389                           
  2390                           ;final_main.c: 302:                 i2c_write(104, 0x0E, 0x05);
  2391  001764  EFBA  F00B         	goto	l140
  2392  001768                     l3938:
  2393                           
  2394                           ; BSR set to: 0
  2395                           ;final_main.c: 304:                 alarm = 1;
  2396  001768  0E30               	movlw	48
  2397  00176A  ECC4  F012         	call	_lcd_char
  2398                           
  2399                           ;final_main.c: 305:             }
  2400  00176E  0E30               	movlw	48
  2401  001770  ECC4  F012         	call	_lcd_char
  2402  001774                     l140:
  2403                           
  2404                           ;final_main.c: 307:                 i2c_write(104, 0x0E, 0x04);
  2405  001774  0E3A               	movlw	58
  2406  001776  ECC4  F012         	call	_lcd_char
  2407  00177A                     
  2408                           ;final_main.c: 309:             }
  2409  00177A  0EA0               	movlw	low main@array_413
  2410  00177C  0100               	movlb	0	; () banked
  2411  00177E  6F60               	movwf	sprintf@s& (0+255),b
  2412  001780  0E00               	movlw	high main@array_413
  2413  001782  6F61               	movwf	(sprintf@s+1)& (0+255),b
  2414  001784  0E01               	movlw	low STR_1
  2415  001786  6F62               	movwf	sprintf@fmt& (0+255),b
  2416  001788  0E0F               	movlw	high STR_1
  2417  00178A  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  2418  00178C  ECDD  F016         	call	_get_Aseconds	;wreg free
  2419  001790  6E57               	movwf	??_main^0,c
  2420  001792  5057               	movf	??_main^0,w,c
  2421  001794  0100               	movlb	0	; () banked
  2422  001796  6F64               	movwf	(?_sprintf+4)& (0+255),b
  2423  001798  6B65               	clrf	(?_sprintf+5)& (0+255),b
  2424  00179A  ECE0  F015         	call	_sprintf	;wreg free
  2425  00179E                     
  2426                           ;final_main.c: 310: 
  2427  00179E  C0A0  F0A9         	movff	main@array_413,main@temp1_416
  2428  0017A2                     
  2429                           ;final_main.c: 311:             unsigned long num = 10000L;
  2430  0017A2  C0A1  F0A8         	movff	main@array_413+1,main@temp2_417
  2431  0017A6                     
  2432                           ;final_main.c: 312:             while (--num > 0) {
  2433  0017A6  0100               	movlb	0	; () banked
  2434  0017A8  51A9               	movf	main@temp1_416& (0+255),w,b
  2435  0017AA  B4D8               	btfsc	status,2,c
  2436  0017AC  EFDA  F00B         	goto	u3381
  2437  0017B0  EFDC  F00B         	goto	u3380
  2438  0017B4                     u3381:
  2439  0017B4  EFED  F00B         	goto	l3952
  2440  0017B8                     u3380:
  2441  0017B8                     
  2442                           ; BSR set to: 0
  2443  0017B8  51A8               	movf	main@temp2_417& (0+255),w,b
  2444  0017BA  B4D8               	btfsc	status,2,c
  2445  0017BC  EFE2  F00B         	goto	u3391
  2446  0017C0  EFE4  F00B         	goto	u3390
  2447  0017C4                     u3391:
  2448  0017C4  EFED  F00B         	goto	l3952
  2449  0017C8                     u3390:
  2450  0017C8                     
  2451                           ; BSR set to: 0
  2452                           ;final_main.c: 313:                     LATAbits.LATA1 =1;
  2453  0017C8  51A9               	movf	main@temp1_416& (0+255),w,b
  2454  0017CA  ECC4  F012         	call	_lcd_char
  2455                           
  2456                           ;final_main.c: 314:             }
  2457  0017CE  0100               	movlb	0	; () banked
  2458  0017D0  51A8               	movf	main@temp2_417& (0+255),w,b
  2459  0017D2  ECC4  F012         	call	_lcd_char
  2460                           
  2461                           ;final_main.c: 315:             LATAbits.LATA1 =0;
  2462  0017D6  EF0C  F00C         	goto	l115
  2463  0017DA                     l3952:
  2464                           
  2465                           ; BSR set to: 0
  2466  0017DA  51A9               	movf	main@temp1_416& (0+255),w,b
  2467  0017DC  B4D8               	btfsc	status,2,c
  2468  0017DE  EFF3  F00B         	goto	u3401
  2469  0017E2  EFF5  F00B         	goto	u3400
  2470  0017E6                     u3401:
  2471  0017E6  EF06  F00C         	goto	l3958
  2472  0017EA                     u3400:
  2473  0017EA                     
  2474                           ; BSR set to: 0
  2475  0017EA  51A8               	movf	main@temp2_417& (0+255),w,b
  2476  0017EC  A4D8               	btfss	status,2,c
  2477  0017EE  EFFB  F00B         	goto	u3411
  2478  0017F2  EFFD  F00B         	goto	u3410
  2479  0017F6                     u3411:
  2480  0017F6  EF06  F00C         	goto	l3958
  2481  0017FA                     u3410:
  2482  0017FA                     
  2483                           ; BSR set to: 0
  2484                           ;final_main.c: 317: 
  2485  0017FA  0E30               	movlw	48
  2486  0017FC  ECC4  F012         	call	_lcd_char
  2487                           
  2488                           ;final_main.c: 318:         if(alarmON == 1 && alarm == 1){
  2489  001800  0100               	movlb	0	; () banked
  2490  001802  51A9               	movf	main@temp1_416& (0+255),w,b
  2491  001804  ECC4  F012         	call	_lcd_char
  2492                           
  2493                           ;final_main.c: 319:            while(PORTAbits.RA4==1){
  2494  001808  EF0C  F00C         	goto	l115
  2495  00180C                     l3958:
  2496                           
  2497                           ; BSR set to: 0
  2498                           ;final_main.c: 321:                 LATCbits.LATC5=1;
  2499  00180C  0E30               	movlw	48
  2500  00180E  ECC4  F012         	call	_lcd_char
  2501                           
  2502                           ;final_main.c: 322:                 _delay((unsigned long)((0.25)*(4000000/4000.0)));
  2503  001812  0E30               	movlw	48
  2504  001814  ECC4  F012         	call	_lcd_char
  2505  001818                     l115:
  2506                           
  2507                           ;final_main.c: 326:            i2c_write(104, 0x0F,0x00);
  2508  001818  0E0F               	movlw	15
  2509  00181A  6E02               	movwf	i2c_read@registers^0,c
  2510  00181C  0E68               	movlw	104
  2511  00181E  EC59  F00F         	call	_i2c_read
  2512  001822  6E57               	movwf	??_main^0,c
  2513  001824  A057               	btfss	??_main^0,0,c
  2514  001826  EF17  F00C         	goto	u3421
  2515  00182A  EF19  F00C         	goto	u3420
  2516  00182E                     u3421:
  2517  00182E  EF20  F00C         	goto	l3962
  2518  001832                     u3420:
  2519  001832                     
  2520                           ;final_main.c: 327:         }
  2521  001832  0E00               	movlw	0
  2522  001834  0100               	movlb	0	; () banked
  2523  001836  6F81               	movwf	(main@alarmON+1)& (0+255),b
  2524  001838  0E01               	movlw	1
  2525  00183A  6F80               	movwf	main@alarmON& (0+255),b
  2526                           
  2527                           ;final_main.c: 328: 
  2528  00183C  EF25  F00C         	goto	l3964
  2529  001840                     l3962:
  2530                           
  2531                           ;final_main.c: 330:         switch(channel){
  2532  001840  0E00               	movlw	0
  2533  001842  0100               	movlb	0	; () banked
  2534  001844  6F81               	movwf	(main@alarmON+1)& (0+255),b
  2535  001846  0E00               	movlw	0
  2536  001848  6F80               	movwf	main@alarmON& (0+255),b
  2537  00184A                     l3964:
  2538                           
  2539                           ; BSR set to: 0
  2540                           ;final_main.c: 334:                          unsigned char volatile outv = (int)(sin[x])
      +                          ;
  2541  00184A  B88D               	btfsc	141,4,c	;volatile
  2542  00184C  EF2A  F00C         	goto	u3431
  2543  001850  EF2C  F00C         	goto	u3430
  2544  001854                     u3431:
  2545  001854  EF7B  F00C         	goto	l3982
  2546  001858                     u3430:
  2547  001858                     
  2548                           ; BSR set to: 0
  2549                           ;final_main.c: 335:                          spi_write(outv);
  2550  001858  519E               	movf	main@alarm& (0+255),w,b
  2551  00185A  119F               	iorwf	(main@alarm+1)& (0+255),w,b
  2552  00185C  A4D8               	btfss	status,2,c
  2553  00185E  EF33  F00C         	goto	u3441
  2554  001862  EF35  F00C         	goto	u3440
  2555  001866                     u3441:
  2556  001866  EF4A  F00C         	goto	l3972
  2557  00186A                     u3440:
  2558  00186A                     
  2559                           ; BSR set to: 0
  2560                           ;final_main.c: 336:                          _delay((unsigned long)((1)*(4000000/4000.0)
      +                          ));
  2561  00186A  0E0E               	movlw	14
  2562  00186C  6E02               	movwf	i2c_write@registers^0,c
  2563  00186E  0E05               	movlw	5
  2564  001870  6E03               	movwf	i2c_write@data^0,c
  2565  001872  0E68               	movlw	104
  2566  001874  ECA4  F011         	call	_i2c_write
  2567                           
  2568                           ;final_main.c: 337:                     }
  2569  001878  0E0A               	movlw	10
  2570  00187A  6E02               	movwf	i2c_write@registers^0,c
  2571  00187C  0E80               	movlw	128
  2572  00187E  6E03               	movwf	i2c_write@data^0,c
  2573  001880  0E68               	movlw	104
  2574  001882  ECA4  F011         	call	_i2c_write
  2575  001886                     
  2576                           ;final_main.c: 338:                }
  2577  001886  0E00               	movlw	0
  2578  001888  0100               	movlb	0	; () banked
  2579  00188A  6F9F               	movwf	(main@alarm+1)& (0+255),b
  2580  00188C  0E01               	movlw	1
  2581  00188E  6F9E               	movwf	main@alarm& (0+255),b
  2582                           
  2583                           ;final_main.c: 339:                break;
  2584  001890  EF5F  F00C         	goto	l3978
  2585  001894                     l3972:
  2586                           
  2587                           ; BSR set to: 0
  2588  001894  059E               	decf	main@alarm& (0+255),w,b
  2589  001896  119F               	iorwf	(main@alarm+1)& (0+255),w,b
  2590  001898  A4D8               	btfss	status,2,c
  2591  00189A  EF51  F00C         	goto	u3451
  2592  00189E  EF53  F00C         	goto	u3450
  2593  0018A2                     u3451:
  2594  0018A2  EF5F  F00C         	goto	l3978
  2595  0018A6                     u3450:
  2596  0018A6                     
  2597                           ; BSR set to: 0
  2598                           ;final_main.c: 341:                for(int y=0; y<2; y++){
  2599  0018A6  0E0E               	movlw	14
  2600  0018A8  6E02               	movwf	i2c_write@registers^0,c
  2601  0018AA  0E04               	movlw	4
  2602  0018AC  6E03               	movwf	i2c_write@data^0,c
  2603  0018AE  0E68               	movlw	104
  2604  0018B0  ECA4  F011         	call	_i2c_write
  2605  0018B4                     
  2606                           ;final_main.c: 342:                     for (int x = 0; x < 50; x++){
  2607  0018B4  0E00               	movlw	0
  2608  0018B6  0100               	movlb	0	; () banked
  2609  0018B8  6F9F               	movwf	(main@alarm+1)& (0+255),b
  2610  0018BA  0E00               	movlw	0
  2611  0018BC  6F9E               	movwf	main@alarm& (0+255),b
  2612  0018BE                     l3978:
  2613                           
  2614                           ; BSR set to: 0
  2615                           ;final_main.c: 345:                          _delay((unsigned long)((1)*(4000000/4000.0)
      +                          ));
  2616  0018BE  0E10               	movlw	16
  2617  0018C0  6F78               	movwf	main@num_420& (0+255),b
  2618  0018C2  0E27               	movlw	39
  2619  0018C4  6F79               	movwf	(main@num_420+1)& (0+255),b
  2620  0018C6  0E00               	movlw	0
  2621  0018C8  6F7A               	movwf	(main@num_420+2)& (0+255),b
  2622  0018CA  0E00               	movlw	0
  2623  0018CC  6F7B               	movwf	(main@num_420+3)& (0+255),b
  2624                           
  2625                           ;final_main.c: 346:                     }
  2626  0018CE  EF6A  F00C         	goto	l3980
  2627  0018D2                     l154:
  2628                           
  2629                           ; BSR set to: 0
  2630                           ;final_main.c: 347:                }
  2631  0018D2  8283               	bsf	131,1,c	;volatile
  2632  0018D4                     l3980:
  2633                           
  2634                           ; BSR set to: 0
  2635                           ;final_main.c: 346:                     }
  2636  0018D4  0778               	decf	main@num_420& (0+255),f,b
  2637  0018D6  0E00               	movlw	0
  2638  0018D8  5B79               	subwfb	(main@num_420+1)& (0+255),f,b
  2639  0018DA  5B7A               	subwfb	(main@num_420+2)& (0+255),f,b
  2640  0018DC  5B7B               	subwfb	(main@num_420+3)& (0+255),f,b
  2641  0018DE  5178               	movf	main@num_420& (0+255),w,b
  2642  0018E0  1179               	iorwf	(main@num_420+1)& (0+255),w,b
  2643  0018E2  117A               	iorwf	(main@num_420+2)& (0+255),w,b
  2644  0018E4  117B               	iorwf	(main@num_420+3)& (0+255),w,b
  2645  0018E6  A4D8               	btfss	status,2,c
  2646  0018E8  EF78  F00C         	goto	u3461
  2647  0018EC  EF7A  F00C         	goto	u3460
  2648  0018F0                     u3461:
  2649  0018F0  EF69  F00C         	goto	l154
  2650  0018F4                     u3460:
  2651  0018F4                     
  2652                           ; BSR set to: 0
  2653                           ;final_main.c: 349:            case 2:
  2654  0018F4  9283               	bcf	131,1,c	;volatile
  2655  0018F6                     l3982:
  2656                           
  2657                           ; BSR set to: 0
  2658                           ;final_main.c: 352:                      unsigned char volatile outv = (int)(sawtooth[x]
      +                          );
  2659  0018F6  0580               	decf	main@alarmON& (0+255),w,b
  2660  0018F8  1181               	iorwf	(main@alarmON+1)& (0+255),w,b
  2661  0018FA  A4D8               	btfss	status,2,c
  2662  0018FC  EF82  F00C         	goto	u3471
  2663  001900  EF84  F00C         	goto	u3470
  2664  001904                     u3471:
  2665  001904  EF6C  F00D         	goto	l4076
  2666  001908                     u3470:
  2667  001908                     
  2668                           ; BSR set to: 0
  2669  001908  059E               	decf	main@alarm& (0+255),w,b
  2670  00190A  119F               	iorwf	(main@alarm+1)& (0+255),w,b
  2671  00190C  A4D8               	btfss	status,2,c
  2672  00190E  EF8B  F00C         	goto	u3481
  2673  001912  EF8D  F00C         	goto	u3480
  2674  001916                     u3481:
  2675  001916  EF6C  F00D         	goto	l4076
  2676  00191A                     u3480:
  2677  00191A  EF99  F00C         	goto	l3992
  2678  00191E                     l158:
  2679                           
  2680                           ;final_main.c: 355:                 }
  2681  00191E  8A85               	bsf	133,5,c	;volatile
  2682  001920                     
  2683                           ;final_main.c: 356:                }
  2684  001920  0E53               	movlw	83
  2685  001922                     u3567:
  2686  001922  2EE8               	decfsz	wreg,f,c
  2687  001924  D7FE               	bra	u3567
  2688  001926  F000               	nop	
  2689  001928                     
  2690                           ;final_main.c: 357:                break;
  2691  001928  9A85               	bcf	133,5,c	;volatile
  2692                           
  2693                           ;final_main.c: 358:            default:
  2694  00192A  0E53               	movlw	83
  2695  00192C                     u3577:
  2696  00192C  2EE8               	decfsz	wreg,f,c
  2697  00192E  D7FE               	bra	u3577
  2698  001930  F000               	nop	
  2699  001932                     l3992:
  2700                           
  2701                           ;final_main.c: 353:                      spi_write(outv);
  2702  001932  B88D               	btfsc	141,4,c	;volatile
  2703  001934  EF9E  F00C         	goto	u3491
  2704  001938  EFA0  F00C         	goto	u3490
  2705  00193C                     u3491:
  2706  00193C  EF8F  F00C         	goto	l158
  2707  001940                     u3490:
  2708  001940                     
  2709                           ;final_main.c: 360:         }
  2710  001940  0E0F               	movlw	15
  2711  001942  6E02               	movwf	i2c_write@registers^0,c
  2712  001944  0E00               	movlw	0
  2713  001946  6E03               	movwf	i2c_write@data^0,c
  2714  001948  0E68               	movlw	104
  2715  00194A  ECA4  F011         	call	_i2c_write
  2716  00194E  EF6C  F00D         	goto	l4076
  2717  001952                     l3996:
  2718  001952  0E00               	movlw	0
  2719  001954  0100               	movlb	0	; () banked
  2720  001956  6F89               	movwf	(main@y+1)& (0+255),b
  2721  001958  0E00               	movlw	0
  2722  00195A  6F88               	movwf	main@y& (0+255),b
  2723  00195C                     l3998:
  2724                           
  2725                           ; BSR set to: 0
  2726  00195C  BF89               	btfsc	(main@y+1)& (0+255),7,b
  2727  00195E  EFBA  F00C         	goto	u3501
  2728  001962  5189               	movf	(main@y+1)& (0+255),w,b
  2729  001964  E109               	bnz	u3500
  2730  001966  0E02               	movlw	2
  2731  001968  5D88               	subwf	main@y& (0+255),w,b
  2732  00196A  A0D8               	btfss	status,0,c
  2733  00196C  EFBA  F00C         	goto	u3501
  2734  001970  EFBC  F00C         	goto	u3500
  2735  001974                     u3501:
  2736  001974  EFBE  F00C         	goto	l4002
  2737  001978                     u3500:
  2738  001978  EFB5  F007         	goto	l3710
  2739  00197C                     l4002:
  2740                           
  2741                           ; BSR set to: 0
  2742  00197C  0E00               	movlw	0
  2743  00197E  6F95               	movwf	(main@x+1)& (0+255),b
  2744  001980  0E00               	movlw	0
  2745  001982  6F94               	movwf	main@x& (0+255),b
  2746  001984                     l4004:
  2747                           
  2748                           ; BSR set to: 0
  2749  001984  BF95               	btfsc	(main@x+1)& (0+255),7,b
  2750  001986  EFCE  F00C         	goto	u3511
  2751  00198A  5195               	movf	(main@x+1)& (0+255),w,b
  2752  00198C  E109               	bnz	u3510
  2753  00198E  0E32               	movlw	50
  2754  001990  5D94               	subwf	main@x& (0+255),w,b
  2755  001992  A0D8               	btfss	status,0,c
  2756  001994  EFCE  F00C         	goto	u3511
  2757  001998  EFD0  F00C         	goto	u3510
  2758  00199C                     u3511:
  2759  00199C  EFD2  F00C         	goto	l4008
  2760  0019A0                     u3510:
  2761  0019A0  EFE6  F00C         	goto	l4018
  2762  0019A4                     l4008:
  2763                           
  2764                           ; BSR set to: 0
  2765  0019A4  0E64               	movlw	low _sin
  2766  0019A6  2594               	addwf	main@x& (0+255),w,b
  2767  0019A8  6ED9               	movwf	fsr2l,c
  2768  0019AA  0E01               	movlw	high _sin
  2769  0019AC  2195               	addwfc	(main@x+1)& (0+255),w,b
  2770  0019AE  6EDA               	movwf	fsr2h,c
  2771  0019B0  50DF               	movf	indf2,w,c
  2772  0019B2  6FA2               	movwf	main@outv& (0+255),b	;volatile
  2773  0019B4                     
  2774                           ; BSR set to: 0
  2775  0019B4  51A2               	movf	main@outv& (0+255),w,b	;volatile
  2776  0019B6  ECF5  F014         	call	_spi_write
  2777  0019BA  0EC8               	movlw	200
  2778  0019BC                     u3587:
  2779  0019BC  D000               	nop2	
  2780  0019BE  2EE8               	decfsz	wreg,f,c
  2781  0019C0  D7FD               	bra	u3587
  2782  0019C2  0100               	movlb	0	; () banked
  2783  0019C4  4B94               	infsnz	main@x& (0+255),f,b
  2784  0019C6  2B95               	incf	(main@x+1)& (0+255),f,b
  2785  0019C8  EFC2  F00C         	goto	l4004
  2786  0019CC                     l4018:
  2787                           
  2788                           ; BSR set to: 0
  2789  0019CC  4B88               	infsnz	main@y& (0+255),f,b
  2790  0019CE  2B89               	incf	(main@y+1)& (0+255),f,b
  2791  0019D0  EFAE  F00C         	goto	l3998
  2792  0019D4                     l4022:
  2793  0019D4  0E00               	movlw	0
  2794  0019D6  0100               	movlb	0	; () banked
  2795  0019D8  6F8B               	movwf	(main@y_432+1)& (0+255),b
  2796  0019DA  0E00               	movlw	0
  2797  0019DC  6F8A               	movwf	main@y_432& (0+255),b
  2798  0019DE                     l4024:
  2799                           
  2800                           ; BSR set to: 0
  2801  0019DE  BF8B               	btfsc	(main@y_432+1)& (0+255),7,b
  2802  0019E0  EFFB  F00C         	goto	u3521
  2803  0019E4  518B               	movf	(main@y_432+1)& (0+255),w,b
  2804  0019E6  E109               	bnz	u3520
  2805  0019E8  0E02               	movlw	2
  2806  0019EA  5D8A               	subwf	main@y_432& (0+255),w,b
  2807  0019EC  A0D8               	btfss	status,0,c
  2808  0019EE  EFFB  F00C         	goto	u3521
  2809  0019F2  EFFD  F00C         	goto	u3520
  2810  0019F6                     u3521:
  2811  0019F6  EFFF  F00C         	goto	l4028
  2812  0019FA                     u3520:
  2813  0019FA  EFB5  F007         	goto	l3710
  2814  0019FE                     l4028:
  2815                           
  2816                           ; BSR set to: 0
  2817  0019FE  0E00               	movlw	0
  2818  001A00  6F97               	movwf	(main@x_433+1)& (0+255),b
  2819  001A02  0E00               	movlw	0
  2820  001A04  6F96               	movwf	main@x_433& (0+255),b
  2821  001A06                     l4030:
  2822                           
  2823                           ; BSR set to: 0
  2824  001A06  BF97               	btfsc	(main@x_433+1)& (0+255),7,b
  2825  001A08  EF0F  F00D         	goto	u3531
  2826  001A0C  5197               	movf	(main@x_433+1)& (0+255),w,b
  2827  001A0E  E109               	bnz	u3530
  2828  001A10  0E32               	movlw	50
  2829  001A12  5D96               	subwf	main@x_433& (0+255),w,b
  2830  001A14  A0D8               	btfss	status,0,c
  2831  001A16  EF0F  F00D         	goto	u3531
  2832  001A1A  EF11  F00D         	goto	u3530
  2833  001A1E                     u3531:
  2834  001A1E  EF13  F00D         	goto	l4034
  2835  001A22                     u3530:
  2836  001A22  EF27  F00D         	goto	l4044
  2837  001A26                     l4034:
  2838                           
  2839                           ; BSR set to: 0
  2840  001A26  0E32               	movlw	low _triangle
  2841  001A28  2596               	addwf	main@x_433& (0+255),w,b
  2842  001A2A  6ED9               	movwf	fsr2l,c
  2843  001A2C  0E01               	movlw	high _triangle
  2844  001A2E  2197               	addwfc	(main@x_433+1)& (0+255),w,b
  2845  001A30  6EDA               	movwf	fsr2h,c
  2846  001A32  50DF               	movf	indf2,w,c
  2847  001A34  6FA3               	movwf	main@outv_434& (0+255),b	;volatile
  2848  001A36                     
  2849                           ; BSR set to: 0
  2850  001A36  51A3               	movf	main@outv_434& (0+255),w,b	;volatile
  2851  001A38  ECF5  F014         	call	_spi_write
  2852  001A3C  0EC8               	movlw	200
  2853  001A3E                     u3597:
  2854  001A3E  D000               	nop2	
  2855  001A40  2EE8               	decfsz	wreg,f,c
  2856  001A42  D7FD               	bra	u3597
  2857  001A44  0100               	movlb	0	; () banked
  2858  001A46  4B96               	infsnz	main@x_433& (0+255),f,b
  2859  001A48  2B97               	incf	(main@x_433+1)& (0+255),f,b
  2860  001A4A  EF03  F00D         	goto	l4030
  2861  001A4E                     l4044:
  2862                           
  2863                           ; BSR set to: 0
  2864  001A4E  4B8A               	infsnz	main@y_432& (0+255),f,b
  2865  001A50  2B8B               	incf	(main@y_432+1)& (0+255),f,b
  2866  001A52  EFEF  F00C         	goto	l4024
  2867  001A56                     l4048:
  2868  001A56  0E00               	movlw	0
  2869  001A58  0100               	movlb	0	; () banked
  2870  001A5A  6F8D               	movwf	(main@y_435+1)& (0+255),b
  2871  001A5C  0E00               	movlw	0
  2872  001A5E  6F8C               	movwf	main@y_435& (0+255),b
  2873  001A60                     l4050:
  2874                           
  2875                           ; BSR set to: 0
  2876  001A60  BF8D               	btfsc	(main@y_435+1)& (0+255),7,b
  2877  001A62  EF3C  F00D         	goto	u3541
  2878  001A66  518D               	movf	(main@y_435+1)& (0+255),w,b
  2879  001A68  E109               	bnz	u3540
  2880  001A6A  0E02               	movlw	2
  2881  001A6C  5D8C               	subwf	main@y_435& (0+255),w,b
  2882  001A6E  A0D8               	btfss	status,0,c
  2883  001A70  EF3C  F00D         	goto	u3541
  2884  001A74  EF3E  F00D         	goto	u3540
  2885  001A78                     u3541:
  2886  001A78  EF40  F00D         	goto	l4054
  2887  001A7C                     u3540:
  2888  001A7C  EFB5  F007         	goto	l3710
  2889  001A80                     l4054:
  2890                           
  2891                           ; BSR set to: 0
  2892  001A80  0E00               	movlw	0
  2893  001A82  6F99               	movwf	(main@x_436+1)& (0+255),b
  2894  001A84  0E00               	movlw	0
  2895  001A86  6F98               	movwf	main@x_436& (0+255),b
  2896  001A88                     l4056:
  2897                           
  2898                           ; BSR set to: 0
  2899  001A88  BF99               	btfsc	(main@x_436+1)& (0+255),7,b
  2900  001A8A  EF50  F00D         	goto	u3551
  2901  001A8E  5199               	movf	(main@x_436+1)& (0+255),w,b
  2902  001A90  E109               	bnz	u3550
  2903  001A92  0E32               	movlw	50
  2904  001A94  5D98               	subwf	main@x_436& (0+255),w,b
  2905  001A96  A0D8               	btfss	status,0,c
  2906  001A98  EF50  F00D         	goto	u3551
  2907  001A9C  EF52  F00D         	goto	u3550
  2908  001AA0                     u3551:
  2909  001AA0  EF54  F00D         	goto	l4060
  2910  001AA4                     u3550:
  2911  001AA4  EF68  F00D         	goto	l4070
  2912  001AA8                     l4060:
  2913                           
  2914                           ; BSR set to: 0
  2915  001AA8  0E00               	movlw	low _sawtooth
  2916  001AAA  2598               	addwf	main@x_436& (0+255),w,b
  2917  001AAC  6ED9               	movwf	fsr2l,c
  2918  001AAE  0E01               	movlw	high _sawtooth
  2919  001AB0  2199               	addwfc	(main@x_436+1)& (0+255),w,b
  2920  001AB2  6EDA               	movwf	fsr2h,c
  2921  001AB4  50DF               	movf	indf2,w,c
  2922  001AB6  6FA4               	movwf	main@outv_437& (0+255),b	;volatile
  2923  001AB8                     
  2924                           ; BSR set to: 0
  2925  001AB8  51A4               	movf	main@outv_437& (0+255),w,b	;volatile
  2926  001ABA  ECF5  F014         	call	_spi_write
  2927  001ABE  0EC8               	movlw	200
  2928  001AC0                     u3607:
  2929  001AC0  D000               	nop2	
  2930  001AC2  2EE8               	decfsz	wreg,f,c
  2931  001AC4  D7FD               	bra	u3607
  2932  001AC6  0100               	movlb	0	; () banked
  2933  001AC8  4B98               	infsnz	main@x_436& (0+255),f,b
  2934  001ACA  2B99               	incf	(main@x_436+1)& (0+255),f,b
  2935  001ACC  EF44  F00D         	goto	l4056
  2936  001AD0                     l4070:
  2937                           
  2938                           ; BSR set to: 0
  2939  001AD0  4B8C               	infsnz	main@y_435& (0+255),f,b
  2940  001AD2  2B8D               	incf	(main@y_435+1)& (0+255),f,b
  2941  001AD4  EF30  F00D         	goto	l4050
  2942  001AD8                     l4076:
  2943  001AD8  C086  F057         	movff	main@channel,??_main
  2944  001ADC  C087  F058         	movff	main@channel+1,??_main+1
  2945                           
  2946                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2947                           ; Switch size 1, requested type "simple"
  2948                           ; Number of cases is 1, Range of values is 0 to 0
  2949                           ; switch strategies available:
  2950                           ; Name         Instructions Cycles
  2951                           ; simple_byte            4     3 (average)
  2952                           ;	Chosen strategy is simple_byte
  2953  001AE0  5058               	movf	(??_main+1)^0,w,c
  2954  001AE2  0A00               	xorlw	0	; case 0
  2955  001AE4  B4D8               	btfsc	status,2,c
  2956  001AE6  EF77  F00D         	goto	l4190
  2957  001AEA  EFB5  F007         	goto	l3710
  2958  001AEE                     l4190:
  2959                           
  2960                           ; Switch size 1, requested type "simple"
  2961                           ; Number of cases is 3, Range of values is 0 to 2
  2962                           ; switch strategies available:
  2963                           ; Name         Instructions Cycles
  2964                           ; simple_byte           10     6 (average)
  2965                           ;	Chosen strategy is simple_byte
  2966  001AEE  5057               	movf	??_main^0,w,c
  2967  001AF0  0A00               	xorlw	0	; case 0
  2968  001AF2  B4D8               	btfsc	status,2,c
  2969  001AF4  EFA9  F00C         	goto	l3996
  2970  001AF8  0A01               	xorlw	1	; case 1
  2971  001AFA  B4D8               	btfsc	status,2,c
  2972  001AFC  EFEA  F00C         	goto	l4022
  2973  001B00  0A03               	xorlw	3	; case 2
  2974  001B02  B4D8               	btfsc	status,2,c
  2975  001B04  EF2B  F00D         	goto	l4048
  2976  001B08  EFB5  F007         	goto	l3710
  2977  001B0C  EF6B  F000         	goto	start
  2978  001B10                     __end_of_main:
  2979                           	opt callstack 0
  2980                           
  2981 ;; *************** function _sprintf *****************
  2982 ;; Defined at:
  2983 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
  2984 ;; Parameters:    Size  Location     Type
  2985 ;;  s               2    0[BANK0 ] PTR unsigned char 
  2986 ;;		 -> main@array_413(2), main@array(2), 
  2987 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  2988 ;;		 -> STR_7(3), STR_6(3), STR_5(3), STR_4(3), 
  2989 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2990 ;; Auto vars:     Size  Location     Type
  2991 ;;  f               6   10[BANK0 ] struct _IO_FILE
  2992 ;;  ap              2    8[BANK0 ] PTR void [1]
  2993 ;;		 -> ?_sprintf(2), 
  2994 ;;  ret             2    0        int 
  2995 ;; Return value:  Size  Location     Type
  2996 ;;                  2    0[BANK0 ] int 
  2997 ;; Registers used:
  2998 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2999 ;; Tracked objects:
  3000 ;;		On entry : 0/0
  3001 ;;		On exit  : 0/0
  3002 ;;		Unchanged: 0/0
  3003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3004 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3005 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3007 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3008 ;;Total ram usage:       16 bytes
  3009 ;; Hardware stack levels used:    1
  3010 ;; Hardware stack levels required when called:    8
  3011 ;; This function calls:
  3012 ;;		_vfprintf
  3013 ;; This function is called by:
  3014 ;;		_main
  3015 ;; This function uses a non-reentrant model
  3016 ;;
  3017                           
  3018                           	psect	text1
  3019  002BC0                     __ptext1:
  3020                           	opt callstack 0
  3021  002BC0                     _sprintf:
  3022                           	opt callstack 22
  3023  002BC0  0E64               	movlw	low (?_sprintf+4)
  3024  002BC2  0100               	movlb	0	; () banked
  3025  002BC4  6F68               	movwf	sprintf@ap& (0+255),b
  3026  002BC6  0E00               	movlw	high (?_sprintf+4)
  3027  002BC8  6F69               	movwf	(sprintf@ap+1)& (0+255),b
  3028  002BCA  C060  F06A         	movff	sprintf@s,sprintf@f
  3029  002BCE  C061  F06B         	movff	sprintf@s+1,sprintf@f+1
  3030  002BD2                     
  3031                           ; BSR set to: 0
  3032  002BD2  0E00               	movlw	0
  3033  002BD4  6F6D               	movwf	(sprintf@f+3)& (0+255),b
  3034  002BD6  0E00               	movlw	0
  3035  002BD8  6F6C               	movwf	(sprintf@f+2)& (0+255),b
  3036  002BDA                     
  3037                           ; BSR set to: 0
  3038  002BDA  0E00               	movlw	0
  3039  002BDC  6F6F               	movwf	(sprintf@f+5)& (0+255),b
  3040  002BDE  0E00               	movlw	0
  3041  002BE0  6F6E               	movwf	(sprintf@f+4)& (0+255),b
  3042  002BE2                     
  3043                           ; BSR set to: 0
  3044  002BE2  0E6A               	movlw	low sprintf@f
  3045  002BE4  6E4F               	movwf	vfprintf@fp^0,c
  3046  002BE6  0E00               	movlw	high sprintf@f
  3047  002BE8  6E50               	movwf	(vfprintf@fp+1)^0,c
  3048  002BEA  C062  F051         	movff	sprintf@fmt,vfprintf@fmt
  3049  002BEE  C063  F052         	movff	sprintf@fmt+1,vfprintf@fmt+1
  3050  002BF2  0E68               	movlw	low sprintf@ap
  3051  002BF4  6E53               	movwf	vfprintf@ap^0,c
  3052  002BF6  0E00               	movlw	high sprintf@ap
  3053  002BF8  6E54               	movwf	(vfprintf@ap+1)^0,c
  3054  002BFA  EC29  F015         	call	_vfprintf	;wreg free
  3055  002BFE  0100               	movlb	0	; () banked
  3056  002C00  516C               	movf	(sprintf@f+2)& (0+255),w,b
  3057  002C02  2560               	addwf	sprintf@s& (0+255),w,b
  3058  002C04  6ED9               	movwf	fsr2l,c
  3059  002C06  516D               	movf	(sprintf@f+3)& (0+255),w,b
  3060  002C08  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
  3061  002C0A  6EDA               	movwf	fsr2h,c
  3062  002C0C  0E00               	movlw	0
  3063  002C0E  6EDF               	movwf	indf2,c
  3064  002C10                     
  3065                           ; BSR set to: 0
  3066  002C10  0012               	return		;funcret
  3067  002C12                     __end_of_sprintf:
  3068                           	opt callstack 0
  3069                           
  3070 ;; *************** function _vfprintf *****************
  3071 ;; Defined at:
  3072 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3073 ;; Parameters:    Size  Location     Type
  3074 ;;  fp              2   78[COMRAM] PTR struct _IO_FILE
  3075 ;;		 -> sprintf@f(6), 
  3076 ;;  fmt             2   80[COMRAM] PTR const unsigned char 
  3077 ;;		 -> STR_7(3), STR_6(3), STR_5(3), STR_4(3), 
  3078 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  3079 ;;  ap              2   82[COMRAM] PTR PTR void 
  3080 ;;		 -> sprintf@ap(2), 
  3081 ;; Auto vars:     Size  Location     Type
  3082 ;;  cfmt            2   84[COMRAM] PTR unsigned char 
  3083 ;;		 -> STR_7(3), STR_6(3), STR_5(3), STR_4(3), 
  3084 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  3085 ;; Return value:  Size  Location     Type
  3086 ;;                  2   78[COMRAM] int 
  3087 ;; Registers used:
  3088 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3089 ;; Tracked objects:
  3090 ;;		On entry : 0/0
  3091 ;;		On exit  : 0/0
  3092 ;;		Unchanged: 0/0
  3093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3094 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3095 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3097 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3098 ;;Total ram usage:        8 bytes
  3099 ;; Hardware stack levels used:    1
  3100 ;; Hardware stack levels required when called:    7
  3101 ;; This function calls:
  3102 ;;		_vfpfcnvrt
  3103 ;; This function is called by:
  3104 ;;		_sprintf
  3105 ;; This function uses a non-reentrant model
  3106 ;;
  3107                           
  3108                           	psect	text2
  3109  002A52                     __ptext2:
  3110                           	opt callstack 0
  3111  002A52                     _vfprintf:
  3112                           	opt callstack 22
  3113  002A52                     
  3114                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  3115  002A52  C051  F055         	movff	vfprintf@fmt,vfprintf@cfmt
  3116  002A56  C052  F056         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3117  002A5A                     
  3118                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  3119  002A5A  0E00               	movlw	0
  3120  002A5C  0100               	movlb	0	; () banked
  3121  002A5E  6FBC               	movwf	(_nout+1)& (0+255),b
  3122  002A60  0E00               	movlw	0
  3123  002A62  6FBB               	movwf	_nout& (0+255),b
  3124                           
  3125                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  3126  002A64  EF47  F015         	goto	l2722
  3127  002A68                     l2720:
  3128                           
  3129                           ; BSR set to: 0
  3130                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  3131  002A68  C04F  F03D         	movff	vfprintf@fp,vfpfcnvrt@fp
  3132  002A6C  C050  F03E         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3133  002A70  0E55               	movlw	low vfprintf@cfmt
  3134  002A72  6E3F               	movwf	vfpfcnvrt@fmt^0,c
  3135  002A74  0E00               	movlw	high vfprintf@cfmt
  3136  002A76  6E40               	movwf	(vfpfcnvrt@fmt+1)^0,c
  3137  002A78  C053  F041         	movff	vfprintf@ap,vfpfcnvrt@ap
  3138  002A7C  C054  F042         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3139  002A80  EC88  F00E         	call	_vfpfcnvrt	;wreg free
  3140  002A84  503D               	movf	?_vfpfcnvrt^0,w,c
  3141  002A86  0100               	movlb	0	; () banked
  3142  002A88  27BB               	addwf	_nout& (0+255),f,b
  3143  002A8A  503E               	movf	(?_vfpfcnvrt+1)^0,w,c
  3144  002A8C  23BC               	addwfc	(_nout+1)& (0+255),f,b
  3145  002A8E                     l2722:
  3146                           
  3147                           ; BSR set to: 0
  3148                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  3149  002A8E  C055  FFF6         	movff	vfprintf@cfmt,tblptrl
  3150  002A92  C056  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3151  002A96                     	if	0	;tblptru may be non-zero
  3152  002A96                     	endif
  3153  002A96                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3154  002A96  0E00               	movlw	low (__mediumconst shr (0+16))
  3155  002A98  6EF8               	movwf	tblptru,c
  3156  002A9A                     	endif
  3157  002A9A  0008               	tblrd		*
  3158  002A9C  50F5               	movf	tablat,w,c
  3159  002A9E  0900               	iorlw	0
  3160  002AA0  A4D8               	btfss	status,2,c
  3161  002AA2  EF55  F015         	goto	u2051
  3162  002AA6  EF57  F015         	goto	u2050
  3163  002AAA                     u2051:
  3164  002AAA  EF34  F015         	goto	l2720
  3165  002AAE                     u2050:
  3166  002AAE                     
  3167                           ; BSR set to: 0
  3168                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  3169  002AAE  C0BB  F04F         	movff	_nout,?_vfprintf
  3170  002AB2  C0BC  F050         	movff	_nout+1,?_vfprintf+1
  3171  002AB6                     
  3172                           ; BSR set to: 0
  3173  002AB6  0012               	return		;funcret
  3174  002AB8                     __end_of_vfprintf:
  3175                           	opt callstack 0
  3176                           
  3177 ;; *************** function _vfpfcnvrt *****************
  3178 ;; Defined at:
  3179 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3180 ;; Parameters:    Size  Location     Type
  3181 ;;  fp              2   60[COMRAM] PTR struct _IO_FILE
  3182 ;;		 -> sprintf@f(6), 
  3183 ;;  fmt             2   62[COMRAM] PTR PTR unsigned char 
  3184 ;;		 -> vfprintf@cfmt(2), 
  3185 ;;  ap              2   64[COMRAM] PTR PTR void 
  3186 ;;		 -> sprintf@ap(2), 
  3187 ;; Auto vars:     Size  Location     Type
  3188 ;;  llu             8   70[COMRAM] unsigned long long 
  3189 ;;  ll              8    0        long long 
  3190 ;;  f               4    0        long long 
  3191 ;;  vp              3    0        PTR void 
  3192 ;;  ct              3    0        unsigned char [3]
  3193 ;;  cp              3    0        PTR unsigned char 
  3194 ;;  i               2    0        int 
  3195 ;;  done            2    0        int 
  3196 ;;  c               1    0        unsigned char 
  3197 ;; Return value:  Size  Location     Type
  3198 ;;                  2   60[COMRAM] int 
  3199 ;; Registers used:
  3200 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3201 ;; Tracked objects:
  3202 ;;		On entry : 0/0
  3203 ;;		On exit  : 0/0
  3204 ;;		Unchanged: 0/0
  3205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3206 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3207 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3208 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3209 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3210 ;;Total ram usage:       18 bytes
  3211 ;; Hardware stack levels used:    1
  3212 ;; Hardware stack levels required when called:    6
  3213 ;; This function calls:
  3214 ;;		_fputc
  3215 ;;		_utoa
  3216 ;; This function is called by:
  3217 ;;		_vfprintf
  3218 ;; This function uses a non-reentrant model
  3219 ;;
  3220                           
  3221                           	psect	text3
  3222  001D10                     __ptext3:
  3223                           	opt callstack 0
  3224  001D10                     _vfpfcnvrt:
  3225                           	opt callstack 22
  3226  001D10                     
  3227                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  3228  001D10  C03F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3229  001D14  C040  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3230  001D18  CFDE FFF6          	movff	postinc2,tblptrl
  3231  001D1C  CFDD FFF7          	movff	postdec2,tblptrh
  3232  001D20                     	if	0	;tblptru may be non-zero
  3233  001D20                     	endif
  3234  001D20                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3235  001D20  0E00               	movlw	low (__mediumconst shr (0+16))
  3236  001D22  6EF8               	movwf	tblptru,c
  3237  001D24                     	endif
  3238  001D24  0008               	tblrd		*
  3239  001D26  50F5               	movf	tablat,w,c
  3240  001D28  0A25               	xorlw	37
  3241  001D2A  A4D8               	btfss	status,2,c
  3242  001D2C  EF9A  F00E         	goto	u1751
  3243  001D30  EF9C  F00E         	goto	u1750
  3244  001D34                     u1751:
  3245  001D34  EF3B  F00F         	goto	l2616
  3246  001D38                     u1750:
  3247  001D38                     
  3248                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  3249  001D38  C03F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3250  001D3C  C040  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3251  001D40  2ADE               	incf	postinc2,f,c
  3252  001D42  0E00               	movlw	0
  3253  001D44  22DD               	addwfc	postdec2,f,c
  3254  001D46                     
  3255                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  3256  001D46  0E00               	movlw	0
  3257  001D48  0100               	movlb	0	; () banked
  3258  001D4A  6FBE               	movwf	(_width+1)& (0+255),b
  3259  001D4C  0E00               	movlw	0
  3260  001D4E  6FBD               	movwf	_width& (0+255),b
  3261  001D50  C0BD  F05B         	movff	_width,_flags
  3262  001D54  C0BE  F05C         	movff	_width+1,_flags+1
  3263  001D58                     
  3264                           ; BSR set to: 0
  3265                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  3266  001D58  69BF               	setf	_prec& (0+255),b
  3267  001D5A  69C0               	setf	(_prec+1)& (0+255),b
  3268  001D5C                     
  3269                           ; BSR set to: 0
  3270                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
  3271  001D5C  C03F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3272  001D60  C040  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3273  001D64  CFDE FFF6          	movff	postinc2,tblptrl
  3274  001D68  CFDD FFF7          	movff	postdec2,tblptrh
  3275  001D6C                     	if	0	;tblptru may be non-zero
  3276  001D6C                     	endif
  3277  001D6C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3278  001D6C  0E00               	movlw	low (__mediumconst shr (0+16))
  3279  001D6E  6EF8               	movwf	tblptru,c
  3280  001D70                     	endif
  3281  001D70  0008               	tblrd		*
  3282  001D72  50F5               	movf	tablat,w,c
  3283  001D74  0A75               	xorlw	117
  3284  001D76  A4D8               	btfss	status,2,c
  3285  001D78  EFC0  F00E         	goto	u1761
  3286  001D7C  EFC2  F00E         	goto	u1760
  3287  001D80                     u1761:
  3288  001D80  EF03  F00F         	goto	l2600
  3289  001D84                     u1760:
  3290  001D84                     
  3291                           ; BSR set to: 0
  3292                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
  3293  001D84  C03F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3294  001D88  C040  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3295  001D8C  2ADE               	incf	postinc2,f,c
  3296  001D8E  0E00               	movlw	0
  3297  001D90  22DD               	addwfc	postdec2,f,c
  3298                           
  3299                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  3300  001D92  C041  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3301  001D96  C042  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3302  001D9A  CFDF F043          	movff	indf2,??_vfpfcnvrt
  3303  001D9E  0E02               	movlw	2
  3304  001DA0  26DE               	addwf	postinc2,f,c
  3305  001DA2  CFDF F044          	movff	indf2,??_vfpfcnvrt+1
  3306  001DA6  0E00               	movlw	0
  3307  001DA8  22DD               	addwfc	postdec2,f,c
  3308  001DAA  C043  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3309  001DAE  C044  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3310  001DB2  CFDE F045          	movff	postinc2,??_vfpfcnvrt+2
  3311  001DB6  CFDD F046          	movff	postdec2,??_vfpfcnvrt+3
  3312  001DBA  C045  F047         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3313  001DBE  C046  F048         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3314  001DC2  6A49               	clrf	(vfpfcnvrt@llu+2)^0,c
  3315  001DC4  6A4A               	clrf	(vfpfcnvrt@llu+3)^0,c
  3316  001DC6  6A4B               	clrf	(vfpfcnvrt@llu+4)^0,c
  3317  001DC8  6A4C               	clrf	(vfpfcnvrt@llu+5)^0,c
  3318  001DCA  6A4D               	clrf	(vfpfcnvrt@llu+6)^0,c
  3319  001DCC  6A4E               	clrf	(vfpfcnvrt@llu+7)^0,c
  3320  001DCE                     
  3321                           ; BSR set to: 0
  3322                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1187:      
      +                                 return utoa(fp, llu);
  3323  001DCE  C03D  F01D         	movff	vfpfcnvrt@fp,utoa@fp
  3324  001DD2  C03E  F01E         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  3325  001DD6  C047  F01F         	movff	vfpfcnvrt@llu,utoa@d
  3326  001DDA  C048  F020         	movff	vfpfcnvrt@llu+1,utoa@d+1
  3327  001DDE  C049  F021         	movff	vfpfcnvrt@llu+2,utoa@d+2
  3328  001DE2  C04A  F022         	movff	vfpfcnvrt@llu+3,utoa@d+3
  3329  001DE6  C04B  F023         	movff	vfpfcnvrt@llu+4,utoa@d+4
  3330  001DEA  C04C  F024         	movff	vfpfcnvrt@llu+5,utoa@d+5
  3331  001DEE  C04D  F025         	movff	vfpfcnvrt@llu+6,utoa@d+6
  3332  001DF2  C04E  F026         	movff	vfpfcnvrt@llu+7,utoa@d+7
  3333  001DF6  EC88  F00D         	call	_utoa	;wreg free
  3334  001DFA  C01D  F03D         	movff	?_utoa,?_vfpfcnvrt
  3335  001DFE  C01E  F03E         	movff	?_utoa+1,?_vfpfcnvrt+1
  3336  001E02  EF58  F00F         	goto	l537
  3337  001E06                     l2600:
  3338                           
  3339                           ; BSR set to: 0
  3340                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  3341  001E06  C03F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3342  001E0A  C040  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3343  001E0E  CFDE FFF6          	movff	postinc2,tblptrl
  3344  001E12  CFDD FFF7          	movff	postdec2,tblptrh
  3345  001E16                     	if	0	;tblptru may be non-zero
  3346  001E16                     	endif
  3347  001E16                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3348  001E16  0E00               	movlw	low (__mediumconst shr (0+16))
  3349  001E18  6EF8               	movwf	tblptru,c
  3350  001E1A                     	endif
  3351  001E1A  0008               	tblrd		*
  3352  001E1C  50F5               	movf	tablat,w,c
  3353  001E1E  0A25               	xorlw	37
  3354  001E20  A4D8               	btfss	status,2,c
  3355  001E22  EF15  F00F         	goto	u1771
  3356  001E26  EF17  F00F         	goto	u1770
  3357  001E2A                     u1771:
  3358  001E2A  EF2E  F00F         	goto	l2610
  3359  001E2E                     u1770:
  3360  001E2E                     
  3361                           ; BSR set to: 0
  3362                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  3363  001E2E  C03F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3364  001E32  C040  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3365  001E36  2ADE               	incf	postinc2,f,c
  3366  001E38  0E00               	movlw	0
  3367  001E3A  22DD               	addwfc	postdec2,f,c
  3368  001E3C                     
  3369                           ; BSR set to: 0
  3370                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  3371  001E3C  0E00               	movlw	0
  3372  001E3E  6E03               	movwf	(fputc@c+1)^0,c
  3373  001E40  0E25               	movlw	37
  3374  001E42  6E02               	movwf	fputc@c^0,c
  3375  001E44  C03D  F004         	movff	vfpfcnvrt@fp,fputc@fp
  3376  001E48  C03E  F005         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3377  001E4C  ECDD  F010         	call	_fputc	;wreg free
  3378  001E50                     l2606:
  3379                           
  3380                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  3381  001E50  0E00               	movlw	0
  3382  001E52  6E3E               	movwf	(?_vfpfcnvrt+1)^0,c
  3383  001E54  0E01               	movlw	1
  3384  001E56  6E3D               	movwf	?_vfpfcnvrt^0,c
  3385  001E58  EF58  F00F         	goto	l537
  3386  001E5C                     l2610:
  3387                           
  3388                           ; BSR set to: 0
  3389                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  3390  001E5C  C03F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3391  001E60  C040  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3392  001E64  2ADE               	incf	postinc2,f,c
  3393  001E66  0E00               	movlw	0
  3394  001E68  22DD               	addwfc	postdec2,f,c
  3395  001E6A                     
  3396                           ; BSR set to: 0
  3397                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  3398  001E6A  0E00               	movlw	0
  3399  001E6C  6E3E               	movwf	(?_vfpfcnvrt+1)^0,c
  3400  001E6E  0E00               	movlw	0
  3401  001E70  6E3D               	movwf	?_vfpfcnvrt^0,c
  3402  001E72  EF58  F00F         	goto	l537
  3403  001E76                     l2616:
  3404                           
  3405                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  3406  001E76  C03F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3407  001E7A  C040  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3408  001E7E  CFDE FFF6          	movff	postinc2,tblptrl
  3409  001E82  CFDD FFF7          	movff	postdec2,tblptrh
  3410  001E86                     	if	0	;tblptru may be non-zero
  3411  001E86                     	endif
  3412  001E86                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3413  001E86  0E00               	movlw	low (__mediumconst shr (0+16))
  3414  001E88  6EF8               	movwf	tblptru,c
  3415  001E8A                     	endif
  3416  001E8A  0008               	tblrd		*
  3417  001E8C  50F5               	movf	tablat,w,c
  3418  001E8E  6E02               	movwf	fputc@c^0,c
  3419  001E90  6A03               	clrf	(fputc@c+1)^0,c
  3420  001E92  C03D  F004         	movff	vfpfcnvrt@fp,fputc@fp
  3421  001E96  C03E  F005         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3422  001E9A  ECDD  F010         	call	_fputc	;wreg free
  3423  001E9E                     
  3424                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  3425  001E9E  C03F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3426  001EA2  C040  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3427  001EA6  2ADE               	incf	postinc2,f,c
  3428  001EA8  0E00               	movlw	0
  3429  001EAA  22DD               	addwfc	postdec2,f,c
  3430  001EAC  EF28  F00F         	goto	l2606
  3431  001EB0                     l537:
  3432  001EB0  0012               	return		;funcret
  3433  001EB2                     __end_of_vfpfcnvrt:
  3434                           	opt callstack 0
  3435                           
  3436 ;; *************** function _utoa *****************
  3437 ;; Defined at:
  3438 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3439 ;; Parameters:    Size  Location     Type
  3440 ;;  fp              2   28[COMRAM] PTR struct _IO_FILE
  3441 ;;		 -> sprintf@f(6), 
  3442 ;;  d               8   30[COMRAM] unsigned long long 
  3443 ;; Auto vars:     Size  Location     Type
  3444 ;;  n               8   50[COMRAM] unsigned long long 
  3445 ;;  i               2   58[COMRAM] int 
  3446 ;;  w               2   48[COMRAM] int 
  3447 ;;  p               2   46[COMRAM] int 
  3448 ;; Return value:  Size  Location     Type
  3449 ;;                  2   28[COMRAM] int 
  3450 ;; Registers used:
  3451 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3452 ;; Tracked objects:
  3453 ;;		On entry : 0/0
  3454 ;;		On exit  : 0/0
  3455 ;;		Unchanged: 0/0
  3456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3457 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3458 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3459 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3460 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3461 ;;Total ram usage:       32 bytes
  3462 ;; Hardware stack levels used:    1
  3463 ;; Hardware stack levels required when called:    5
  3464 ;; This function calls:
  3465 ;;		___lodiv
  3466 ;;		___lomod
  3467 ;;		_pad
  3468 ;; This function is called by:
  3469 ;;		_vfpfcnvrt
  3470 ;; This function uses a non-reentrant model
  3471 ;;
  3472                           
  3473                           	psect	text4
  3474  001B10                     __ptext4:
  3475                           	opt callstack 0
  3476  001B10                     _utoa:
  3477                           	opt callstack 22
  3478  001B10                     
  3479                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  3480  001B10  0100               	movlb	0	; () banked
  3481  001B12  BFC0               	btfsc	(_prec+1)& (0+255),7,b
  3482  001B14  EF8E  F00D         	goto	u1681
  3483  001B18  EF90  F00D         	goto	u1680
  3484  001B1C                     u1681:
  3485  001B1C  EF91  F00D         	goto	l2552
  3486  001B20                     u1680:
  3487  001B20                     
  3488                           ; BSR set to: 0
  3489                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
  3490  001B20  925B               	bcf	_flags^0,1,c
  3491  001B22                     l2552:
  3492                           
  3493                           ; BSR set to: 0
  3494                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
  3495  001B22  BFC0               	btfsc	(_prec+1)& (0+255),7,b
  3496  001B24  EF9E  F00D         	goto	u1690
  3497  001B28  51C0               	movf	(_prec+1)& (0+255),w,b
  3498  001B2A  E106               	bnz	u1691
  3499  001B2C  05BF               	decf	_prec& (0+255),w,b
  3500  001B2E  B0D8               	btfsc	status,0,c
  3501  001B30  EF9C  F00D         	goto	u1691
  3502  001B34  EF9E  F00D         	goto	u1690
  3503  001B38                     u1691:
  3504  001B38  EFA4  F00D         	goto	l522
  3505  001B3C                     u1690:
  3506  001B3C                     
  3507                           ; BSR set to: 0
  3508  001B3C  0E00               	movlw	0
  3509  001B3E  6E30               	movwf	(utoa@p+1)^0,c
  3510  001B40  0E01               	movlw	1
  3511  001B42  6E2F               	movwf	utoa@p^0,c
  3512  001B44  EFA8  F00D         	goto	l524
  3513  001B48                     l522:
  3514                           
  3515                           ; BSR set to: 0
  3516  001B48  C0BF  F02F         	movff	_prec,utoa@p
  3517  001B4C  C0C0  F030         	movff	_prec+1,utoa@p+1
  3518  001B50                     l524:
  3519                           
  3520                           ; BSR set to: 0
  3521                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
  3522  001B50  C0BD  F031         	movff	_width,utoa@w
  3523  001B54  C0BE  F032         	movff	_width+1,utoa@w+1
  3524                           
  3525                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
  3526  001B58  C01F  F033         	movff	utoa@d,utoa@n
  3527  001B5C  C020  F034         	movff	utoa@d+1,utoa@n+1
  3528  001B60  C021  F035         	movff	utoa@d+2,utoa@n+2
  3529  001B64  C022  F036         	movff	utoa@d+3,utoa@n+3
  3530  001B68  C023  F037         	movff	utoa@d+4,utoa@n+4
  3531  001B6C  C024  F038         	movff	utoa@d+5,utoa@n+5
  3532  001B70  C025  F039         	movff	utoa@d+6,utoa@n+6
  3533  001B74  C026  F03A         	movff	utoa@d+7,utoa@n+7
  3534  001B78                     
  3535                           ; BSR set to: 0
  3536                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
  3537  001B78  0E00               	movlw	0
  3538  001B7A  6E3C               	movwf	(utoa@i+1)^0,c
  3539  001B7C  0E1F               	movlw	31
  3540  001B7E  6E3B               	movwf	utoa@i^0,c
  3541  001B80                     
  3542                           ; BSR set to: 0
  3543                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
  3544  001B80  0E00               	movlw	0
  3545  001B82  6FE2               	movwf	(_dbuf+31)& (0+255),b
  3546                           
  3547                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3548  001B84  EF3A  F00E         	goto	l2570
  3549  001B88                     l2560:
  3550                           
  3551                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
  3552  001B88  063B               	decf	utoa@i^0,f,c
  3553  001B8A  A0D8               	btfss	status,0,c
  3554  001B8C  063C               	decf	(utoa@i+1)^0,f,c
  3555  001B8E                     
  3556                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
  3557  001B8E  0EC3               	movlw	low _dbuf
  3558  001B90  243B               	addwf	utoa@i^0,w,c
  3559  001B92  6ED9               	movwf	fsr2l,c
  3560  001B94  0E00               	movlw	high _dbuf
  3561  001B96  203C               	addwfc	(utoa@i+1)^0,w,c
  3562  001B98  6EDA               	movwf	fsr2h,c
  3563  001B9A  C033  F002         	movff	utoa@n,___lomod@dividend
  3564  001B9E  C034  F003         	movff	utoa@n+1,___lomod@dividend+1
  3565  001BA2  C035  F004         	movff	utoa@n+2,___lomod@dividend+2
  3566  001BA6  C036  F005         	movff	utoa@n+3,___lomod@dividend+3
  3567  001BAA  C037  F006         	movff	utoa@n+4,___lomod@dividend+4
  3568  001BAE  C038  F007         	movff	utoa@n+5,___lomod@dividend+5
  3569  001BB2  C039  F008         	movff	utoa@n+6,___lomod@dividend+6
  3570  001BB6  C03A  F009         	movff	utoa@n+7,___lomod@dividend+7
  3571  001BBA  0E0A               	movlw	10
  3572  001BBC  6E0A               	movwf	___lomod@divisor^0,c
  3573  001BBE  0E00               	movlw	0
  3574  001BC0  6E0B               	movwf	(___lomod@divisor+1)^0,c
  3575  001BC2  0E00               	movlw	0
  3576  001BC4  6E0C               	movwf	(___lomod@divisor+2)^0,c
  3577  001BC6  0E00               	movlw	0
  3578  001BC8  6E0D               	movwf	(___lomod@divisor+3)^0,c
  3579  001BCA  0E00               	movlw	0
  3580  001BCC  6E0E               	movwf	(___lomod@divisor+4)^0,c
  3581  001BCE  0E00               	movlw	0
  3582  001BD0  6E0F               	movwf	(___lomod@divisor+5)^0,c
  3583  001BD2  0E00               	movlw	0
  3584  001BD4  6E10               	movwf	(___lomod@divisor+6)^0,c
  3585  001BD6  0E00               	movlw	0
  3586  001BD8  6E11               	movwf	(___lomod@divisor+7)^0,c
  3587  001BDA  EC75  F010         	call	___lomod	;wreg free
  3588  001BDE  C002  F027         	movff	?___lomod,??_utoa
  3589  001BE2  C003  F028         	movff	?___lomod+1,??_utoa+1
  3590  001BE6  C004  F029         	movff	?___lomod+2,??_utoa+2
  3591  001BEA  C005  F02A         	movff	?___lomod+3,??_utoa+3
  3592  001BEE  C006  F02B         	movff	?___lomod+4,??_utoa+4
  3593  001BF2  C007  F02C         	movff	?___lomod+5,??_utoa+5
  3594  001BF6  C008  F02D         	movff	?___lomod+6,??_utoa+6
  3595  001BFA  C009  F02E         	movff	?___lomod+7,??_utoa+7
  3596  001BFE  5027               	movf	??_utoa^0,w,c
  3597  001C00  0F30               	addlw	48
  3598  001C02  6EDF               	movwf	indf2,c
  3599  001C04                     
  3600                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
  3601  001C04  062F               	decf	utoa@p^0,f,c
  3602  001C06  A0D8               	btfss	status,0,c
  3603  001C08  0630               	decf	(utoa@p+1)^0,f,c
  3604  001C0A                     
  3605                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
  3606  001C0A  0631               	decf	utoa@w^0,f,c
  3607  001C0C  A0D8               	btfss	status,0,c
  3608  001C0E  0632               	decf	(utoa@w+1)^0,f,c
  3609  001C10                     
  3610                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
  3611  001C10  C033  F002         	movff	utoa@n,___lodiv@dividend
  3612  001C14  C034  F003         	movff	utoa@n+1,___lodiv@dividend+1
  3613  001C18  C035  F004         	movff	utoa@n+2,___lodiv@dividend+2
  3614  001C1C  C036  F005         	movff	utoa@n+3,___lodiv@dividend+3
  3615  001C20  C037  F006         	movff	utoa@n+4,___lodiv@dividend+4
  3616  001C24  C038  F007         	movff	utoa@n+5,___lodiv@dividend+5
  3617  001C28  C039  F008         	movff	utoa@n+6,___lodiv@dividend+6
  3618  001C2C  C03A  F009         	movff	utoa@n+7,___lodiv@dividend+7
  3619  001C30  0E0A               	movlw	10
  3620  001C32  6E0A               	movwf	___lodiv@divisor^0,c
  3621  001C34  0E00               	movlw	0
  3622  001C36  6E0B               	movwf	(___lodiv@divisor+1)^0,c
  3623  001C38  0E00               	movlw	0
  3624  001C3A  6E0C               	movwf	(___lodiv@divisor+2)^0,c
  3625  001C3C  0E00               	movlw	0
  3626  001C3E  6E0D               	movwf	(___lodiv@divisor+3)^0,c
  3627  001C40  0E00               	movlw	0
  3628  001C42  6E0E               	movwf	(___lodiv@divisor+4)^0,c
  3629  001C44  0E00               	movlw	0
  3630  001C46  6E0F               	movwf	(___lodiv@divisor+5)^0,c
  3631  001C48  0E00               	movlw	0
  3632  001C4A  6E10               	movwf	(___lodiv@divisor+6)^0,c
  3633  001C4C  0E00               	movlw	0
  3634  001C4E  6E11               	movwf	(___lodiv@divisor+7)^0,c
  3635  001C50  ECFD  F00F         	call	___lodiv	;wreg free
  3636  001C54  C002  F033         	movff	?___lodiv,utoa@n
  3637  001C58  C003  F034         	movff	?___lodiv+1,utoa@n+1
  3638  001C5C  C004  F035         	movff	?___lodiv+2,utoa@n+2
  3639  001C60  C005  F036         	movff	?___lodiv+3,utoa@n+3
  3640  001C64  C006  F037         	movff	?___lodiv+4,utoa@n+4
  3641  001C68  C007  F038         	movff	?___lodiv+5,utoa@n+5
  3642  001C6C  C008  F039         	movff	?___lodiv+6,utoa@n+6
  3643  001C70  C009  F03A         	movff	?___lodiv+7,utoa@n+7
  3644  001C74                     l2570:
  3645                           
  3646                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3647  001C74  503B               	movf	utoa@i^0,w,c
  3648  001C76  103C               	iorwf	(utoa@i+1)^0,w,c
  3649  001C78  B4D8               	btfsc	status,2,c
  3650  001C7A  EF41  F00E         	goto	u1701
  3651  001C7E  EF43  F00E         	goto	u1700
  3652  001C82                     u1701:
  3653  001C82  EF73  F00E         	goto	l2580
  3654  001C86                     u1700:
  3655  001C86  5033               	movf	utoa@n^0,w,c
  3656  001C88  1034               	iorwf	(utoa@n+1)^0,w,c
  3657  001C8A  1035               	iorwf	(utoa@n+2)^0,w,c
  3658  001C8C  1036               	iorwf	(utoa@n+3)^0,w,c
  3659  001C8E  1037               	iorwf	(utoa@n+4)^0,w,c
  3660  001C90  1038               	iorwf	(utoa@n+5)^0,w,c
  3661  001C92  1039               	iorwf	(utoa@n+6)^0,w,c
  3662  001C94  103A               	iorwf	(utoa@n+7)^0,w,c
  3663  001C96  A4D8               	btfss	status,2,c
  3664  001C98  EF50  F00E         	goto	u1711
  3665  001C9C  EF52  F00E         	goto	u1710
  3666  001CA0                     u1711:
  3667  001CA0  EFC4  F00D         	goto	l2560
  3668  001CA4                     u1710:
  3669  001CA4  BE30               	btfsc	(utoa@p+1)^0,7,c
  3670  001CA6  EF5F  F00E         	goto	u1720
  3671  001CAA  5030               	movf	(utoa@p+1)^0,w,c
  3672  001CAC  E106               	bnz	u1721
  3673  001CAE  042F               	decf	utoa@p^0,w,c
  3674  001CB0  B0D8               	btfsc	status,0,c
  3675  001CB2  EF5D  F00E         	goto	u1721
  3676  001CB6  EF5F  F00E         	goto	u1720
  3677  001CBA                     u1721:
  3678  001CBA  EFC4  F00D         	goto	l2560
  3679  001CBE                     u1720:
  3680  001CBE  BE32               	btfsc	(utoa@w+1)^0,7,c
  3681  001CC0  EF6A  F00E         	goto	u1731
  3682  001CC4  5032               	movf	(utoa@w+1)^0,w,c
  3683  001CC6  E108               	bnz	u1730
  3684  001CC8  0431               	decf	utoa@w^0,w,c
  3685  001CCA  A0D8               	btfss	status,0,c
  3686  001CCC  EF6A  F00E         	goto	u1731
  3687  001CD0  EF6C  F00E         	goto	u1730
  3688  001CD4                     u1731:
  3689  001CD4  EF73  F00E         	goto	l2580
  3690  001CD8                     u1730:
  3691  001CD8  B25B               	btfsc	_flags^0,1,c
  3692  001CDA  EF71  F00E         	goto	u1741
  3693  001CDE  EF73  F00E         	goto	u1740
  3694  001CE2                     u1741:
  3695  001CE2  EFC4  F00D         	goto	l2560
  3696  001CE6                     u1740:
  3697  001CE6                     l2580:
  3698                           
  3699                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
  3700  001CE6  C01D  F012         	movff	utoa@fp,pad@fp
  3701  001CEA  C01E  F013         	movff	utoa@fp+1,pad@fp+1
  3702  001CEE  0EC3               	movlw	low _dbuf
  3703  001CF0  243B               	addwf	utoa@i^0,w,c
  3704  001CF2  6E14               	movwf	pad@buf^0,c
  3705  001CF4  0E00               	movlw	high _dbuf
  3706  001CF6  203C               	addwfc	(utoa@i+1)^0,w,c
  3707  001CF8  6E15               	movwf	(pad@buf+1)^0,c
  3708  001CFA  C031  F016         	movff	utoa@w,pad@p
  3709  001CFE  C032  F017         	movff	utoa@w+1,pad@p+1
  3710  001D02  EC06  F012         	call	_pad	;wreg free
  3711  001D06  C012  F01D         	movff	?_pad,?_utoa
  3712  001D0A  C013  F01E         	movff	?_pad+1,?_utoa+1
  3713  001D0E  0012               	return		;funcret
  3714  001D10                     __end_of_utoa:
  3715                           	opt callstack 0
  3716                           
  3717 ;; *************** function _pad *****************
  3718 ;; Defined at:
  3719 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3720 ;; Parameters:    Size  Location     Type
  3721 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  3722 ;;		 -> sprintf@f(6), 
  3723 ;;  buf             2   19[COMRAM] PTR unsigned char 
  3724 ;;		 -> dbuf(32), 
  3725 ;;  p               2   21[COMRAM] int 
  3726 ;; Auto vars:     Size  Location     Type
  3727 ;;  w               2   26[COMRAM] int 
  3728 ;;  i               2   24[COMRAM] int 
  3729 ;; Return value:  Size  Location     Type
  3730 ;;                  2   17[COMRAM] int 
  3731 ;; Registers used:
  3732 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3733 ;; Tracked objects:
  3734 ;;		On entry : 0/0
  3735 ;;		On exit  : 0/0
  3736 ;;		Unchanged: 0/0
  3737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3738 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3739 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3740 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3741 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3742 ;;Total ram usage:       11 bytes
  3743 ;; Hardware stack levels used:    1
  3744 ;; Hardware stack levels required when called:    4
  3745 ;; This function calls:
  3746 ;;		_fputc
  3747 ;;		_fputs
  3748 ;;		_strlen
  3749 ;; This function is called by:
  3750 ;;		_utoa
  3751 ;; This function uses a non-reentrant model
  3752 ;;
  3753                           
  3754                           	psect	text5
  3755  00240C                     __ptext5:
  3756                           	opt callstack 0
  3757  00240C                     _pad:
  3758                           	opt callstack 22
  3759  00240C                     
  3760                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  3761  00240C  A05B               	btfss	_flags^0,0,c
  3762  00240E  EF0B  F012         	goto	u1571
  3763  002412  EF0D  F012         	goto	u1570
  3764  002416                     u1571:
  3765  002416  EF17  F012         	goto	l2492
  3766  00241A                     u1570:
  3767  00241A                     
  3768                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  3769  00241A  C014  F00B         	movff	pad@buf,fputs@s
  3770  00241E  C015  F00C         	movff	pad@buf+1,fputs@s+1
  3771  002422  C012  F00D         	movff	pad@fp,fputs@fp
  3772  002426  C013  F00E         	movff	pad@fp+1,fputs@fp+1
  3773  00242A  EC09  F016         	call	_fputs	;wreg free
  3774  00242E                     l2492:
  3775                           
  3776                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  3777  00242E  BE17               	btfsc	(pad@p+1)^0,7,c
  3778  002430  EF1C  F012         	goto	u1581
  3779  002434  EF1E  F012         	goto	u1580
  3780  002438                     u1581:
  3781  002438  EF24  F012         	goto	l2496
  3782  00243C                     u1580:
  3783  00243C  C016  F01B         	movff	pad@p,pad@w
  3784  002440  C017  F01C         	movff	pad@p+1,pad@w+1
  3785  002444  EF28  F012         	goto	l512
  3786  002448                     l2496:
  3787  002448  0E00               	movlw	0
  3788  00244A  6E1C               	movwf	(pad@w+1)^0,c
  3789  00244C  0E00               	movlw	0
  3790  00244E  6E1B               	movwf	pad@w^0,c
  3791  002450                     l512:
  3792                           
  3793                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  3794  002450  0E00               	movlw	0
  3795  002452  6E1A               	movwf	(pad@i+1)^0,c
  3796  002454  0E00               	movlw	0
  3797  002456  6E19               	movwf	pad@i^0,c
  3798                           
  3799                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  3800  002458  EF3A  F012         	goto	l2502
  3801  00245C                     l2498:
  3802                           
  3803                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  3804  00245C  0E00               	movlw	0
  3805  00245E  6E03               	movwf	(fputc@c+1)^0,c
  3806  002460  0E20               	movlw	32
  3807  002462  6E02               	movwf	fputc@c^0,c
  3808  002464  C012  F004         	movff	pad@fp,fputc@fp
  3809  002468  C013  F005         	movff	pad@fp+1,fputc@fp+1
  3810  00246C  ECDD  F010         	call	_fputc	;wreg free
  3811  002470                     
  3812                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  3813  002470  4A19               	infsnz	pad@i^0,f,c
  3814  002472  2A1A               	incf	(pad@i+1)^0,f,c
  3815  002474                     l2502:
  3816                           
  3817                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  3818  002474  501B               	movf	pad@w^0,w,c
  3819  002476  5C19               	subwf	pad@i^0,w,c
  3820  002478  501A               	movf	(pad@i+1)^0,w,c
  3821  00247A  0A80               	xorlw	128
  3822  00247C  6E18               	movwf	??_pad^0,c
  3823  00247E  501C               	movf	(pad@w+1)^0,w,c
  3824  002480  0A80               	xorlw	128
  3825  002482  5818               	subwfb	??_pad^0,w,c
  3826  002484  A0D8               	btfss	status,0,c
  3827  002486  EF47  F012         	goto	u1591
  3828  00248A  EF49  F012         	goto	u1590
  3829  00248E                     u1591:
  3830  00248E  EF2E  F012         	goto	l2498
  3831  002492                     u1590:
  3832  002492                     
  3833                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  3834  002492  B05B               	btfsc	_flags^0,0,c
  3835  002494  EF4E  F012         	goto	u1601
  3836  002498  EF50  F012         	goto	u1600
  3837  00249C                     u1601:
  3838  00249C  EF5A  F012         	goto	l2506
  3839  0024A0                     u1600:
  3840  0024A0                     
  3841                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  3842  0024A0  C014  F00B         	movff	pad@buf,fputs@s
  3843  0024A4  C015  F00C         	movff	pad@buf+1,fputs@s+1
  3844  0024A8  C012  F00D         	movff	pad@fp,fputs@fp
  3845  0024AC  C013  F00E         	movff	pad@fp+1,fputs@fp+1
  3846  0024B0  EC09  F016         	call	_fputs	;wreg free
  3847  0024B4                     l2506:
  3848                           
  3849                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  3850  0024B4  C014  F002         	movff	pad@buf,strlen@s
  3851  0024B8  C015  F003         	movff	pad@buf+1,strlen@s+1
  3852  0024BC  EC8B  F016         	call	_strlen	;wreg free
  3853  0024C0  501B               	movf	pad@w^0,w,c
  3854  0024C2  2402               	addwf	?_strlen^0,w,c
  3855  0024C4  6E12               	movwf	?_pad^0,c
  3856  0024C6  501C               	movf	(pad@w+1)^0,w,c
  3857  0024C8  2003               	addwfc	(?_strlen+1)^0,w,c
  3858  0024CA  6E13               	movwf	(?_pad+1)^0,c
  3859  0024CC  0012               	return		;funcret
  3860  0024CE                     __end_of_pad:
  3861                           	opt callstack 0
  3862                           
  3863 ;; *************** function _strlen *****************
  3864 ;; Defined at:
  3865 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  3866 ;; Parameters:    Size  Location     Type
  3867 ;;  s               2    1[COMRAM] PTR const unsigned char 
  3868 ;;		 -> dbuf(32), 
  3869 ;; Auto vars:     Size  Location     Type
  3870 ;;  a               2    3[COMRAM] PTR const unsigned char 
  3871 ;;		 -> dbuf(32), 
  3872 ;; Return value:  Size  Location     Type
  3873 ;;                  2    1[COMRAM] unsigned int 
  3874 ;; Registers used:
  3875 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3876 ;; Tracked objects:
  3877 ;;		On entry : 0/0
  3878 ;;		On exit  : 0/0
  3879 ;;		Unchanged: 0/0
  3880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3881 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3882 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3884 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3885 ;;Total ram usage:        4 bytes
  3886 ;; Hardware stack levels used:    1
  3887 ;; Hardware stack levels required when called:    1
  3888 ;; This function calls:
  3889 ;;		Nothing
  3890 ;; This function is called by:
  3891 ;;		_pad
  3892 ;; This function uses a non-reentrant model
  3893 ;;
  3894                           
  3895                           	psect	text6
  3896  002D16                     __ptext6:
  3897                           	opt callstack 0
  3898  002D16                     _strlen:
  3899                           	opt callstack 24
  3900  002D16  C002  F004         	movff	strlen@s,strlen@a
  3901  002D1A  C003  F005         	movff	strlen@s+1,strlen@a+1
  3902  002D1E  EF93  F016         	goto	l2482
  3903  002D22                     l2480:
  3904  002D22  4A02               	infsnz	strlen@s^0,f,c
  3905  002D24  2A03               	incf	(strlen@s+1)^0,f,c
  3906  002D26                     l2482:
  3907  002D26  C002  FFD9         	movff	strlen@s,fsr2l
  3908  002D2A  C003  FFDA         	movff	strlen@s+1,fsr2h
  3909  002D2E  50DF               	movf	indf2,w,c
  3910  002D30  A4D8               	btfss	status,2,c
  3911  002D32  EF9D  F016         	goto	u1561
  3912  002D36  EF9F  F016         	goto	u1560
  3913  002D3A                     u1561:
  3914  002D3A  EF91  F016         	goto	l2480
  3915  002D3E                     u1560:
  3916  002D3E  5004               	movf	strlen@a^0,w,c
  3917  002D40  5C02               	subwf	strlen@s^0,w,c
  3918  002D42  6E02               	movwf	?_strlen^0,c
  3919  002D44  5005               	movf	(strlen@a+1)^0,w,c
  3920  002D46  5803               	subwfb	(strlen@s+1)^0,w,c
  3921  002D48  6E03               	movwf	(?_strlen+1)^0,c
  3922  002D4A  0012               	return		;funcret
  3923  002D4C                     __end_of_strlen:
  3924                           	opt callstack 0
  3925                           
  3926 ;; *************** function _fputs *****************
  3927 ;; Defined at:
  3928 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  3929 ;; Parameters:    Size  Location     Type
  3930 ;;  s               2   10[COMRAM] PTR const unsigned char 
  3931 ;;		 -> dbuf(32), 
  3932 ;;  fp              2   12[COMRAM] PTR struct _IO_FILE
  3933 ;;		 -> sprintf@f(6), 
  3934 ;; Auto vars:     Size  Location     Type
  3935 ;;  i               2   15[COMRAM] int 
  3936 ;;  c               1   14[COMRAM] unsigned char 
  3937 ;; Return value:  Size  Location     Type
  3938 ;;                  2   10[COMRAM] int 
  3939 ;; Registers used:
  3940 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3941 ;; Tracked objects:
  3942 ;;		On entry : 0/0
  3943 ;;		On exit  : 0/0
  3944 ;;		Unchanged: 0/0
  3945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3946 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3947 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3949 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3950 ;;Total ram usage:        7 bytes
  3951 ;; Hardware stack levels used:    1
  3952 ;; Hardware stack levels required when called:    3
  3953 ;; This function calls:
  3954 ;;		_fputc
  3955 ;; This function is called by:
  3956 ;;		_pad
  3957 ;; This function uses a non-reentrant model
  3958 ;;
  3959                           
  3960                           	psect	text7
  3961  002C12                     __ptext7:
  3962                           	opt callstack 0
  3963  002C12                     _fputs:
  3964                           	opt callstack 22
  3965  002C12  0E00               	movlw	0
  3966  002C14  6E11               	movwf	(fputs@i+1)^0,c
  3967  002C16  0E00               	movlw	0
  3968  002C18  6E10               	movwf	fputs@i^0,c
  3969  002C1A  EF1A  F016         	goto	l2476
  3970  002C1E                     l2472:
  3971  002C1E  C00F  F002         	movff	fputs@c,fputc@c
  3972  002C22  6A03               	clrf	(fputc@c+1)^0,c
  3973  002C24  C00D  F004         	movff	fputs@fp,fputc@fp
  3974  002C28  C00E  F005         	movff	fputs@fp+1,fputc@fp+1
  3975  002C2C  ECDD  F010         	call	_fputc	;wreg free
  3976  002C30  4A10               	infsnz	fputs@i^0,f,c
  3977  002C32  2A11               	incf	(fputs@i+1)^0,f,c
  3978  002C34                     l2476:
  3979  002C34  5010               	movf	fputs@i^0,w,c
  3980  002C36  240B               	addwf	fputs@s^0,w,c
  3981  002C38  6ED9               	movwf	fsr2l,c
  3982  002C3A  5011               	movf	(fputs@i+1)^0,w,c
  3983  002C3C  200C               	addwfc	(fputs@s+1)^0,w,c
  3984  002C3E  6EDA               	movwf	fsr2h,c
  3985  002C40  50DF               	movf	indf2,w,c
  3986  002C42  6E0F               	movwf	fputs@c^0,c
  3987  002C44  500F               	movf	fputs@c^0,w,c
  3988  002C46  A4D8               	btfss	status,2,c
  3989  002C48  EF28  F016         	goto	u1551
  3990  002C4C  EF2A  F016         	goto	u1550
  3991  002C50                     u1551:
  3992  002C50  EF0F  F016         	goto	l2472
  3993  002C54                     u1550:
  3994  002C54  0012               	return		;funcret
  3995  002C56                     __end_of_fputs:
  3996                           	opt callstack 0
  3997                           
  3998 ;; *************** function _fputc *****************
  3999 ;; Defined at:
  4000 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  4001 ;; Parameters:    Size  Location     Type
  4002 ;;  c               2    1[COMRAM] int 
  4003 ;;  fp              2    3[COMRAM] PTR struct _IO_FILE
  4004 ;;		 -> sprintf@f(6), 
  4005 ;; Auto vars:     Size  Location     Type
  4006 ;;		None
  4007 ;; Return value:  Size  Location     Type
  4008 ;;                  2    1[COMRAM] int 
  4009 ;; Registers used:
  4010 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4011 ;; Tracked objects:
  4012 ;;		On entry : 0/0
  4013 ;;		On exit  : 0/0
  4014 ;;		Unchanged: 0/0
  4015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4016 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4018 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4019 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4020 ;;Total ram usage:        9 bytes
  4021 ;; Hardware stack levels used:    1
  4022 ;; Hardware stack levels required when called:    2
  4023 ;; This function calls:
  4024 ;;		_putch
  4025 ;; This function is called by:
  4026 ;;		_pad
  4027 ;;		_vfpfcnvrt
  4028 ;;		_fputs
  4029 ;; This function uses a non-reentrant model
  4030 ;;
  4031                           
  4032                           	psect	text8
  4033  0021BA                     __ptext8:
  4034                           	opt callstack 0
  4035  0021BA                     _fputc:
  4036                           	opt callstack 22
  4037  0021BA  5004               	movf	fputc@fp^0,w,c
  4038  0021BC  1005               	iorwf	(fputc@fp+1)^0,w,c
  4039  0021BE  B4D8               	btfsc	status,2,c
  4040  0021C0  EFE4  F010         	goto	u1511
  4041  0021C4  EFE6  F010         	goto	u1510
  4042  0021C8                     u1511:
  4043  0021C8  EFEF  F010         	goto	l2460
  4044  0021CC                     u1510:
  4045  0021CC  5004               	movf	fputc@fp^0,w,c
  4046  0021CE  1005               	iorwf	(fputc@fp+1)^0,w,c
  4047  0021D0  A4D8               	btfss	status,2,c
  4048  0021D2  EFED  F010         	goto	u1521
  4049  0021D6  EFEF  F010         	goto	u1520
  4050  0021DA                     u1521:
  4051  0021DA  EFF4  F010         	goto	l2462
  4052  0021DE                     u1520:
  4053  0021DE                     l2460:
  4054  0021DE  5002               	movf	fputc@c^0,w,c
  4055  0021E0  EC49  F017         	call	_putch
  4056  0021E4  EF41  F011         	goto	l1230
  4057  0021E8                     l2462:
  4058  0021E8  EE20 F004          	lfsr	2,4
  4059  0021EC  5004               	movf	fputc@fp^0,w,c
  4060  0021EE  26D9               	addwf	fsr2l,f,c
  4061  0021F0  5005               	movf	(fputc@fp+1)^0,w,c
  4062  0021F2  22DA               	addwfc	fsr2h,f,c
  4063  0021F4  50DE               	movf	postinc2,w,c
  4064  0021F6  10DE               	iorwf	postinc2,w,c
  4065  0021F8  B4D8               	btfsc	status,2,c
  4066  0021FA  EF01  F011         	goto	u1531
  4067  0021FE  EF03  F011         	goto	u1530
  4068  002202                     u1531:
  4069  002202  EF1E  F011         	goto	l2466
  4070  002206                     u1530:
  4071  002206  EE20 F004          	lfsr	2,4
  4072  00220A  5004               	movf	fputc@fp^0,w,c
  4073  00220C  26D9               	addwf	fsr2l,f,c
  4074  00220E  5005               	movf	(fputc@fp+1)^0,w,c
  4075  002210  22DA               	addwfc	fsr2h,f,c
  4076  002212  EE10 F002          	lfsr	1,2
  4077  002216  5004               	movf	fputc@fp^0,w,c
  4078  002218  26E1               	addwf	fsr1l,f,c
  4079  00221A  5005               	movf	(fputc@fp+1)^0,w,c
  4080  00221C  22E2               	addwfc	fsr1h,f,c
  4081  00221E  50DE               	movf	postinc2,w,c
  4082  002220  5CE6               	subwf	postinc1,w,c
  4083  002222  50E6               	movf	postinc1,w,c
  4084  002224  0A80               	xorlw	128
  4085  002226  6E0A               	movwf	(??_fputc+4)^0,c
  4086  002228  50DE               	movf	postinc2,w,c
  4087  00222A  0A80               	xorlw	128
  4088  00222C  580A               	subwfb	(??_fputc+4)^0,w,c
  4089  00222E  B0D8               	btfsc	status,0,c
  4090  002230  EF1C  F011         	goto	u1541
  4091  002234  EF1E  F011         	goto	u1540
  4092  002238                     u1541:
  4093  002238  EF41  F011         	goto	l1230
  4094  00223C                     u1540:
  4095  00223C                     l2466:
  4096  00223C  EE20 F002          	lfsr	2,2
  4097  002240  5004               	movf	fputc@fp^0,w,c
  4098  002242  26D9               	addwf	fsr2l,f,c
  4099  002244  5005               	movf	(fputc@fp+1)^0,w,c
  4100  002246  22DA               	addwfc	fsr2h,f,c
  4101  002248  CFDE F006          	movff	postinc2,??_fputc
  4102  00224C  CFDD F007          	movff	postdec2,??_fputc+1
  4103  002250  C004  FFD9         	movff	fputc@fp,fsr2l
  4104  002254  C005  FFDA         	movff	fputc@fp+1,fsr2h
  4105  002258  CFDE F008          	movff	postinc2,??_fputc+2
  4106  00225C  CFDD F009          	movff	postdec2,??_fputc+3
  4107  002260  5006               	movf	??_fputc^0,w,c
  4108  002262  2408               	addwf	(??_fputc+2)^0,w,c
  4109  002264  6ED9               	movwf	fsr2l,c
  4110  002266  5007               	movf	(??_fputc+1)^0,w,c
  4111  002268  2009               	addwfc	(??_fputc+3)^0,w,c
  4112  00226A  6EDA               	movwf	fsr2h,c
  4113  00226C  C002  FFDF         	movff	fputc@c,indf2
  4114  002270  EE20 F002          	lfsr	2,2
  4115  002274  5004               	movf	fputc@fp^0,w,c
  4116  002276  26D9               	addwf	fsr2l,f,c
  4117  002278  5005               	movf	(fputc@fp+1)^0,w,c
  4118  00227A  22DA               	addwfc	fsr2h,f,c
  4119  00227C  2ADE               	incf	postinc2,f,c
  4120  00227E  0E00               	movlw	0
  4121  002280  22DD               	addwfc	postdec2,f,c
  4122  002282                     l1230:
  4123  002282  0012               	return		;funcret
  4124  002284                     __end_of_fputc:
  4125                           	opt callstack 0
  4126                           
  4127 ;; *************** function _putch *****************
  4128 ;; Defined at:
  4129 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
  4130 ;; Parameters:    Size  Location     Type
  4131 ;;  c               1    wreg     unsigned char 
  4132 ;; Auto vars:     Size  Location     Type
  4133 ;;  c               1    0[COMRAM] unsigned char 
  4134 ;; Return value:  Size  Location     Type
  4135 ;;                  1    wreg      void 
  4136 ;; Registers used:
  4137 ;;		wreg
  4138 ;; Tracked objects:
  4139 ;;		On entry : 0/0
  4140 ;;		On exit  : 0/0
  4141 ;;		Unchanged: 0/0
  4142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4147 ;;Total ram usage:        0 bytes
  4148 ;; Hardware stack levels used:    1
  4149 ;; Hardware stack levels required when called:    1
  4150 ;; This function calls:
  4151 ;;		Nothing
  4152 ;; This function is called by:
  4153 ;;		_fputc
  4154 ;; This function uses a non-reentrant model
  4155 ;;
  4156                           
  4157                           	psect	text9
  4158  002E92                     __ptext9:
  4159                           	opt callstack 0
  4160  002E92                     _putch:
  4161                           	opt callstack 22
  4162  002E92  0012               	return		;funcret
  4163  002E94                     __end_of_putch:
  4164                           	opt callstack 0
  4165                           
  4166 ;; *************** function ___lomod *****************
  4167 ;; Defined at:
  4168 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lomod.c"
  4169 ;; Parameters:    Size  Location     Type
  4170 ;;  dividend        8    1[COMRAM] unsigned long long 
  4171 ;;  divisor         8    9[COMRAM] unsigned long long 
  4172 ;; Auto vars:     Size  Location     Type
  4173 ;;  counter         1   17[COMRAM] unsigned char 
  4174 ;; Return value:  Size  Location     Type
  4175 ;;                  8    1[COMRAM] unsigned long long 
  4176 ;; Registers used:
  4177 ;;		wreg, status,2, status,0
  4178 ;; Tracked objects:
  4179 ;;		On entry : 0/0
  4180 ;;		On exit  : 0/0
  4181 ;;		Unchanged: 0/0
  4182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4183 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4184 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4186 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4187 ;;Total ram usage:       17 bytes
  4188 ;; Hardware stack levels used:    1
  4189 ;; Hardware stack levels required when called:    1
  4190 ;; This function calls:
  4191 ;;		Nothing
  4192 ;; This function is called by:
  4193 ;;		_utoa
  4194 ;; This function uses a non-reentrant model
  4195 ;;
  4196                           
  4197                           	psect	text10
  4198  0020EA                     __ptext10:
  4199                           	opt callstack 0
  4200  0020EA                     ___lomod:
  4201                           	opt callstack 25
  4202  0020EA  500A               	movf	___lomod@divisor^0,w,c
  4203  0020EC  100B               	iorwf	(___lomod@divisor+1)^0,w,c
  4204  0020EE  100C               	iorwf	(___lomod@divisor+2)^0,w,c
  4205  0020F0  100D               	iorwf	(___lomod@divisor+3)^0,w,c
  4206  0020F2  100E               	iorwf	(___lomod@divisor+4)^0,w,c
  4207  0020F4  100F               	iorwf	(___lomod@divisor+5)^0,w,c
  4208  0020F6  1010               	iorwf	(___lomod@divisor+6)^0,w,c
  4209  0020F8  1011               	iorwf	(___lomod@divisor+7)^0,w,c
  4210  0020FA  B4D8               	btfsc	status,2,c
  4211  0020FC  EF82  F010         	goto	u1651
  4212  002100  EF84  F010         	goto	u1650
  4213  002104                     u1651:
  4214  002104  EFCC  F010         	goto	l995
  4215  002108                     u1650:
  4216  002108  0E01               	movlw	1
  4217  00210A  6E12               	movwf	___lomod@counter^0,c
  4218  00210C  EF92  F010         	goto	l2538
  4219  002110                     l2536:
  4220  002110  90D8               	bcf	status,0,c
  4221  002112  360A               	rlcf	___lomod@divisor^0,f,c
  4222  002114  360B               	rlcf	(___lomod@divisor+1)^0,f,c
  4223  002116  360C               	rlcf	(___lomod@divisor+2)^0,f,c
  4224  002118  360D               	rlcf	(___lomod@divisor+3)^0,f,c
  4225  00211A  360E               	rlcf	(___lomod@divisor+4)^0,f,c
  4226  00211C  360F               	rlcf	(___lomod@divisor+5)^0,f,c
  4227  00211E  3610               	rlcf	(___lomod@divisor+6)^0,f,c
  4228  002120  3611               	rlcf	(___lomod@divisor+7)^0,f,c
  4229  002122  2A12               	incf	___lomod@counter^0,f,c
  4230  002124                     l2538:
  4231  002124  AE11               	btfss	(___lomod@divisor+7)^0,7,c
  4232  002126  EF97  F010         	goto	u1661
  4233  00212A  EF99  F010         	goto	u1660
  4234  00212E                     u1661:
  4235  00212E  EF88  F010         	goto	l2536
  4236  002132                     u1660:
  4237  002132                     l2540:
  4238  002132  500A               	movf	___lomod@divisor^0,w,c
  4239  002134  5C02               	subwf	___lomod@dividend^0,w,c
  4240  002136  500B               	movf	(___lomod@divisor+1)^0,w,c
  4241  002138  5803               	subwfb	(___lomod@dividend+1)^0,w,c
  4242  00213A  500C               	movf	(___lomod@divisor+2)^0,w,c
  4243  00213C  5804               	subwfb	(___lomod@dividend+2)^0,w,c
  4244  00213E  500D               	movf	(___lomod@divisor+3)^0,w,c
  4245  002140  5805               	subwfb	(___lomod@dividend+3)^0,w,c
  4246  002142  500E               	movf	(___lomod@divisor+4)^0,w,c
  4247  002144  5806               	subwfb	(___lomod@dividend+4)^0,w,c
  4248  002146  500F               	movf	(___lomod@divisor+5)^0,w,c
  4249  002148  5807               	subwfb	(___lomod@dividend+5)^0,w,c
  4250  00214A  5010               	movf	(___lomod@divisor+6)^0,w,c
  4251  00214C  5808               	subwfb	(___lomod@dividend+6)^0,w,c
  4252  00214E  5011               	movf	(___lomod@divisor+7)^0,w,c
  4253  002150  5809               	subwfb	(___lomod@dividend+7)^0,w,c
  4254  002152  A0D8               	btfss	status,0,c
  4255  002154  EFAE  F010         	goto	u1671
  4256  002158  EFB0  F010         	goto	u1670
  4257  00215C                     u1671:
  4258  00215C  EFC0  F010         	goto	l2544
  4259  002160                     u1670:
  4260  002160  500A               	movf	___lomod@divisor^0,w,c
  4261  002162  5E02               	subwf	___lomod@dividend^0,f,c
  4262  002164  500B               	movf	(___lomod@divisor+1)^0,w,c
  4263  002166  5A03               	subwfb	(___lomod@dividend+1)^0,f,c
  4264  002168  500C               	movf	(___lomod@divisor+2)^0,w,c
  4265  00216A  5A04               	subwfb	(___lomod@dividend+2)^0,f,c
  4266  00216C  500D               	movf	(___lomod@divisor+3)^0,w,c
  4267  00216E  5A05               	subwfb	(___lomod@dividend+3)^0,f,c
  4268  002170  500E               	movf	(___lomod@divisor+4)^0,w,c
  4269  002172  5A06               	subwfb	(___lomod@dividend+4)^0,f,c
  4270  002174  500F               	movf	(___lomod@divisor+5)^0,w,c
  4271  002176  5A07               	subwfb	(___lomod@dividend+5)^0,f,c
  4272  002178  5010               	movf	(___lomod@divisor+6)^0,w,c
  4273  00217A  5A08               	subwfb	(___lomod@dividend+6)^0,f,c
  4274  00217C  5011               	movf	(___lomod@divisor+7)^0,w,c
  4275  00217E  5A09               	subwfb	(___lomod@dividend+7)^0,f,c
  4276  002180                     l2544:
  4277  002180  90D8               	bcf	status,0,c
  4278  002182  3211               	rrcf	(___lomod@divisor+7)^0,f,c
  4279  002184  3210               	rrcf	(___lomod@divisor+6)^0,f,c
  4280  002186  320F               	rrcf	(___lomod@divisor+5)^0,f,c
  4281  002188  320E               	rrcf	(___lomod@divisor+4)^0,f,c
  4282  00218A  320D               	rrcf	(___lomod@divisor+3)^0,f,c
  4283  00218C  320C               	rrcf	(___lomod@divisor+2)^0,f,c
  4284  00218E  320B               	rrcf	(___lomod@divisor+1)^0,f,c
  4285  002190  320A               	rrcf	___lomod@divisor^0,f,c
  4286  002192  2E12               	decfsz	___lomod@counter^0,f,c
  4287  002194  EF99  F010         	goto	l2540
  4288  002198                     l995:
  4289  002198  C002  F002         	movff	___lomod@dividend,?___lomod
  4290  00219C  C003  F003         	movff	___lomod@dividend+1,?___lomod+1
  4291  0021A0  C004  F004         	movff	___lomod@dividend+2,?___lomod+2
  4292  0021A4  C005  F005         	movff	___lomod@dividend+3,?___lomod+3
  4293  0021A8  C006  F006         	movff	___lomod@dividend+4,?___lomod+4
  4294  0021AC  C007  F007         	movff	___lomod@dividend+5,?___lomod+5
  4295  0021B0  C008  F008         	movff	___lomod@dividend+6,?___lomod+6
  4296  0021B4  C009  F009         	movff	___lomod@dividend+7,?___lomod+7
  4297  0021B8  0012               	return		;funcret
  4298  0021BA                     __end_of___lomod:
  4299                           	opt callstack 0
  4300                           
  4301 ;; *************** function ___lodiv *****************
  4302 ;; Defined at:
  4303 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lodiv.c"
  4304 ;; Parameters:    Size  Location     Type
  4305 ;;  dividend        8    1[COMRAM] unsigned long long 
  4306 ;;  divisor         8    9[COMRAM] unsigned long long 
  4307 ;; Auto vars:     Size  Location     Type
  4308 ;;  quotient        8   17[COMRAM] unsigned long long 
  4309 ;;  counter         1   25[COMRAM] unsigned char 
  4310 ;; Return value:  Size  Location     Type
  4311 ;;                  8    1[COMRAM] unsigned long long 
  4312 ;; Registers used:
  4313 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4314 ;; Tracked objects:
  4315 ;;		On entry : 0/0
  4316 ;;		On exit  : 0/0
  4317 ;;		Unchanged: 0/0
  4318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4319 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4320 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4322 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4323 ;;Total ram usage:       25 bytes
  4324 ;; Hardware stack levels used:    1
  4325 ;; Hardware stack levels required when called:    1
  4326 ;; This function calls:
  4327 ;;		Nothing
  4328 ;; This function is called by:
  4329 ;;		_utoa
  4330 ;; This function uses a non-reentrant model
  4331 ;;
  4332                           
  4333                           	psect	text11
  4334  001FFA                     __ptext11:
  4335                           	opt callstack 0
  4336  001FFA                     ___lodiv:
  4337                           	opt callstack 25
  4338  001FFA  EE20  F012         	lfsr	2,___lodiv@quotient
  4339  001FFE  0E07               	movlw	7
  4340  002000                     u1611:
  4341  002000  6ADE               	clrf	postinc2,c
  4342  002002  06E8               	decf	wreg,f,c
  4343  002004  E2FD               	bc	u1611
  4344  002006  500A               	movf	___lodiv@divisor^0,w,c
  4345  002008  100B               	iorwf	(___lodiv@divisor+1)^0,w,c
  4346  00200A  100C               	iorwf	(___lodiv@divisor+2)^0,w,c
  4347  00200C  100D               	iorwf	(___lodiv@divisor+3)^0,w,c
  4348  00200E  100E               	iorwf	(___lodiv@divisor+4)^0,w,c
  4349  002010  100F               	iorwf	(___lodiv@divisor+5)^0,w,c
  4350  002012  1010               	iorwf	(___lodiv@divisor+6)^0,w,c
  4351  002014  1011               	iorwf	(___lodiv@divisor+7)^0,w,c
  4352  002016  B4D8               	btfsc	status,2,c
  4353  002018  EF10  F010         	goto	u1621
  4354  00201C  EF12  F010         	goto	u1620
  4355  002020                     u1621:
  4356  002020  EF64  F010         	goto	l985
  4357  002024                     u1620:
  4358  002024  0E01               	movlw	1
  4359  002026  6E1A               	movwf	___lodiv@counter^0,c
  4360  002028  EF20  F010         	goto	l2518
  4361  00202C                     l2516:
  4362  00202C  90D8               	bcf	status,0,c
  4363  00202E  360A               	rlcf	___lodiv@divisor^0,f,c
  4364  002030  360B               	rlcf	(___lodiv@divisor+1)^0,f,c
  4365  002032  360C               	rlcf	(___lodiv@divisor+2)^0,f,c
  4366  002034  360D               	rlcf	(___lodiv@divisor+3)^0,f,c
  4367  002036  360E               	rlcf	(___lodiv@divisor+4)^0,f,c
  4368  002038  360F               	rlcf	(___lodiv@divisor+5)^0,f,c
  4369  00203A  3610               	rlcf	(___lodiv@divisor+6)^0,f,c
  4370  00203C  3611               	rlcf	(___lodiv@divisor+7)^0,f,c
  4371  00203E  2A1A               	incf	___lodiv@counter^0,f,c
  4372  002040                     l2518:
  4373  002040  AE11               	btfss	(___lodiv@divisor+7)^0,7,c
  4374  002042  EF25  F010         	goto	u1631
  4375  002046  EF27  F010         	goto	u1630
  4376  00204A                     u1631:
  4377  00204A  EF16  F010         	goto	l2516
  4378  00204E                     u1630:
  4379  00204E                     l2520:
  4380  00204E  90D8               	bcf	status,0,c
  4381  002050  3612               	rlcf	___lodiv@quotient^0,f,c
  4382  002052  3613               	rlcf	(___lodiv@quotient+1)^0,f,c
  4383  002054  3614               	rlcf	(___lodiv@quotient+2)^0,f,c
  4384  002056  3615               	rlcf	(___lodiv@quotient+3)^0,f,c
  4385  002058  3616               	rlcf	(___lodiv@quotient+4)^0,f,c
  4386  00205A  3617               	rlcf	(___lodiv@quotient+5)^0,f,c
  4387  00205C  3618               	rlcf	(___lodiv@quotient+6)^0,f,c
  4388  00205E  3619               	rlcf	(___lodiv@quotient+7)^0,f,c
  4389  002060  500A               	movf	___lodiv@divisor^0,w,c
  4390  002062  5C02               	subwf	___lodiv@dividend^0,w,c
  4391  002064  500B               	movf	(___lodiv@divisor+1)^0,w,c
  4392  002066  5803               	subwfb	(___lodiv@dividend+1)^0,w,c
  4393  002068  500C               	movf	(___lodiv@divisor+2)^0,w,c
  4394  00206A  5804               	subwfb	(___lodiv@dividend+2)^0,w,c
  4395  00206C  500D               	movf	(___lodiv@divisor+3)^0,w,c
  4396  00206E  5805               	subwfb	(___lodiv@dividend+3)^0,w,c
  4397  002070  500E               	movf	(___lodiv@divisor+4)^0,w,c
  4398  002072  5806               	subwfb	(___lodiv@dividend+4)^0,w,c
  4399  002074  500F               	movf	(___lodiv@divisor+5)^0,w,c
  4400  002076  5807               	subwfb	(___lodiv@dividend+5)^0,w,c
  4401  002078  5010               	movf	(___lodiv@divisor+6)^0,w,c
  4402  00207A  5808               	subwfb	(___lodiv@dividend+6)^0,w,c
  4403  00207C  5011               	movf	(___lodiv@divisor+7)^0,w,c
  4404  00207E  5809               	subwfb	(___lodiv@dividend+7)^0,w,c
  4405  002080  A0D8               	btfss	status,0,c
  4406  002082  EF45  F010         	goto	u1641
  4407  002086  EF47  F010         	goto	u1640
  4408  00208A                     u1641:
  4409  00208A  EF58  F010         	goto	l2528
  4410  00208E                     u1640:
  4411  00208E  500A               	movf	___lodiv@divisor^0,w,c
  4412  002090  5E02               	subwf	___lodiv@dividend^0,f,c
  4413  002092  500B               	movf	(___lodiv@divisor+1)^0,w,c
  4414  002094  5A03               	subwfb	(___lodiv@dividend+1)^0,f,c
  4415  002096  500C               	movf	(___lodiv@divisor+2)^0,w,c
  4416  002098  5A04               	subwfb	(___lodiv@dividend+2)^0,f,c
  4417  00209A  500D               	movf	(___lodiv@divisor+3)^0,w,c
  4418  00209C  5A05               	subwfb	(___lodiv@dividend+3)^0,f,c
  4419  00209E  500E               	movf	(___lodiv@divisor+4)^0,w,c
  4420  0020A0  5A06               	subwfb	(___lodiv@dividend+4)^0,f,c
  4421  0020A2  500F               	movf	(___lodiv@divisor+5)^0,w,c
  4422  0020A4  5A07               	subwfb	(___lodiv@dividend+5)^0,f,c
  4423  0020A6  5010               	movf	(___lodiv@divisor+6)^0,w,c
  4424  0020A8  5A08               	subwfb	(___lodiv@dividend+6)^0,f,c
  4425  0020AA  5011               	movf	(___lodiv@divisor+7)^0,w,c
  4426  0020AC  5A09               	subwfb	(___lodiv@dividend+7)^0,f,c
  4427  0020AE  8012               	bsf	___lodiv@quotient^0,0,c
  4428  0020B0                     l2528:
  4429  0020B0  90D8               	bcf	status,0,c
  4430  0020B2  3211               	rrcf	(___lodiv@divisor+7)^0,f,c
  4431  0020B4  3210               	rrcf	(___lodiv@divisor+6)^0,f,c
  4432  0020B6  320F               	rrcf	(___lodiv@divisor+5)^0,f,c
  4433  0020B8  320E               	rrcf	(___lodiv@divisor+4)^0,f,c
  4434  0020BA  320D               	rrcf	(___lodiv@divisor+3)^0,f,c
  4435  0020BC  320C               	rrcf	(___lodiv@divisor+2)^0,f,c
  4436  0020BE  320B               	rrcf	(___lodiv@divisor+1)^0,f,c
  4437  0020C0  320A               	rrcf	___lodiv@divisor^0,f,c
  4438  0020C2  2E1A               	decfsz	___lodiv@counter^0,f,c
  4439  0020C4  EF27  F010         	goto	l2520
  4440  0020C8                     l985:
  4441  0020C8  C012  F002         	movff	___lodiv@quotient,?___lodiv
  4442  0020CC  C013  F003         	movff	___lodiv@quotient+1,?___lodiv+1
  4443  0020D0  C014  F004         	movff	___lodiv@quotient+2,?___lodiv+2
  4444  0020D4  C015  F005         	movff	___lodiv@quotient+3,?___lodiv+3
  4445  0020D8  C016  F006         	movff	___lodiv@quotient+4,?___lodiv+4
  4446  0020DC  C017  F007         	movff	___lodiv@quotient+5,?___lodiv+5
  4447  0020E0  C018  F008         	movff	___lodiv@quotient+6,?___lodiv+6
  4448  0020E4  C019  F009         	movff	___lodiv@quotient+7,?___lodiv+7
  4449  0020E8  0012               	return		;funcret
  4450  0020EA                     __end_of___lodiv:
  4451                           	opt callstack 0
  4452                           
  4453 ;; *************** function _spi_write *****************
  4454 ;; Defined at:
  4455 ;;		line 33 in file "dac.c"
  4456 ;; Parameters:    Size  Location     Type
  4457 ;;  data            1    wreg     unsigned char 
  4458 ;; Auto vars:     Size  Location     Type
  4459 ;;  data            1    3[COMRAM] unsigned char 
  4460 ;;  full            2    5[COMRAM] unsigned short 
  4461 ;;  bound           1    4[COMRAM] unsigned char 
  4462 ;; Return value:  Size  Location     Type
  4463 ;;                  1    wreg      void 
  4464 ;; Registers used:
  4465 ;;		wreg, status,2, status,0
  4466 ;; Tracked objects:
  4467 ;;		On entry : 0/0
  4468 ;;		On exit  : 0/0
  4469 ;;		Unchanged: 0/0
  4470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4472 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4473 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4474 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4475 ;;Total ram usage:        6 bytes
  4476 ;; Hardware stack levels used:    1
  4477 ;; Hardware stack levels required when called:    1
  4478 ;; This function calls:
  4479 ;;		Nothing
  4480 ;; This function is called by:
  4481 ;;		_main
  4482 ;; This function uses a non-reentrant model
  4483 ;;
  4484                           
  4485                           	psect	text12
  4486  0029EA                     __ptext12:
  4487                           	opt callstack 0
  4488  0029EA                     _spi_write:
  4489                           	opt callstack 29
  4490                           
  4491                           ;incstack = 0
  4492                           ;spi_write@data stored from wreg
  4493  0029EA  6E04               	movwf	spi_write@data^0,c
  4494  0029EC                     
  4495                           ;dac.c: 34:     LATBbits.LATB0 = 0;
  4496  0029EC  9084               	bcf	132,0,c	;volatile
  4497  0029EE                     
  4498                           ;dac.c: 36:     uint16_t full = 0xF000;
  4499  0029EE  0EF0               	movlw	240
  4500  0029F0  6E07               	movwf	(spi_write@full+1)^0,c
  4501  0029F2  0E00               	movlw	0
  4502  0029F4  6E06               	movwf	spi_write@full^0,c
  4503  0029F6                     
  4504                           ;dac.c: 37:     full = full | (data << 4);
  4505  0029F6  5004               	movf	spi_write@data^0,w,c
  4506  0029F8  6E02               	movwf	??_spi_write^0,c
  4507  0029FA  6A03               	clrf	(??_spi_write+1)^0,c
  4508  0029FC  3A02               	swapf	??_spi_write^0,f,c
  4509  0029FE  3A03               	swapf	(??_spi_write+1)^0,f,c
  4510  002A00  0EF0               	movlw	240
  4511  002A02  1603               	andwf	(??_spi_write+1)^0,f,c
  4512  002A04  5002               	movf	??_spi_write^0,w,c
  4513  002A06  0B0F               	andlw	15
  4514  002A08  1203               	iorwf	(??_spi_write+1)^0,f,c
  4515  002A0A  0EF0               	movlw	240
  4516  002A0C  1602               	andwf	??_spi_write^0,f,c
  4517  002A0E  5006               	movf	spi_write@full^0,w,c
  4518  002A10  1002               	iorwf	??_spi_write^0,w,c
  4519  002A12  6E06               	movwf	spi_write@full^0,c
  4520  002A14  5007               	movf	(spi_write@full+1)^0,w,c
  4521  002A16  1003               	iorwf	(??_spi_write+1)^0,w,c
  4522  002A18  6E07               	movwf	(spi_write@full+1)^0,c
  4523  002A1A                     
  4524                           ;dac.c: 39:     uint8_t bound = (full >> 8);
  4525  002A1A  5007               	movf	(spi_write@full+1)^0,w,c
  4526  002A1C  6E05               	movwf	spi_write@bound^0,c
  4527  002A1E                     
  4528                           ;dac.c: 41:     SSP2BUF;
  4529  002A1E  010E               	movlb	14	; () banked
  4530  002A20  5192               	movf	146,w,b	;volatile
  4531  002A22                     
  4532                           ; BSR set to: 14
  4533                           ;dac.c: 42:     SSP2BUF = bound;
  4534  002A22  C005  FE92         	movff	spi_write@bound,3730	;volatile
  4535  002A26                     l421:
  4536                           
  4537                           ; BSR set to: 14
  4538  002A26  A195               	btfss	149,0,b	;volatile
  4539  002A28  EF18  F015         	goto	u2291
  4540  002A2C  EF1A  F015         	goto	u2290
  4541  002A30                     u2291:
  4542  002A30  EF13  F015         	goto	l421
  4543  002A34                     u2290:
  4544  002A34                     
  4545                           ; BSR set to: 14
  4546                           ;dac.c: 45:     SSP2STATbits.BF = 0;
  4547  002A34  9195               	bcf	149,0,b	;volatile
  4548                           
  4549                           ;dac.c: 47:     bound = full;
  4550  002A36  C006  F005         	movff	spi_write@full,spi_write@bound
  4551  002A3A                     
  4552                           ; BSR set to: 14
  4553                           ;dac.c: 48:     SSP2BUF;
  4554  002A3A  5192               	movf	146,w,b	;volatile
  4555  002A3C                     
  4556                           ; BSR set to: 14
  4557                           ;dac.c: 49:     SSP2BUF = bound;
  4558  002A3C  C005  FE92         	movff	spi_write@bound,3730	;volatile
  4559  002A40                     l424:
  4560                           
  4561                           ; BSR set to: 14
  4562  002A40  A195               	btfss	149,0,b	;volatile
  4563  002A42  EF25  F015         	goto	u2301
  4564  002A46  EF27  F015         	goto	u2300
  4565  002A4A                     u2301:
  4566  002A4A  EF20  F015         	goto	l424
  4567  002A4E                     u2300:
  4568  002A4E                     
  4569                           ; BSR set to: 14
  4570                           ;dac.c: 52:     LATBbits.LATB0 = 1;
  4571  002A4E  8084               	bsf	132,0,c	;volatile
  4572  002A50                     
  4573                           ; BSR set to: 14
  4574  002A50  0012               	return		;funcret
  4575  002A52                     __end_of_spi_write:
  4576                           	opt callstack 0
  4577                           
  4578 ;; *************** function _spi_init *****************
  4579 ;; Defined at:
  4580 ;;		line 11 in file "dac.c"
  4581 ;; Parameters:    Size  Location     Type
  4582 ;;		None
  4583 ;; Auto vars:     Size  Location     Type
  4584 ;;		None
  4585 ;; Return value:  Size  Location     Type
  4586 ;;                  1    wreg      void 
  4587 ;; Registers used:
  4588 ;;		wreg, status,2
  4589 ;; Tracked objects:
  4590 ;;		On entry : 0/0
  4591 ;;		On exit  : 0/0
  4592 ;;		Unchanged: 0/0
  4593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4597 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4598 ;;Total ram usage:        0 bytes
  4599 ;; Hardware stack levels used:    1
  4600 ;; Hardware stack levels required when called:    1
  4601 ;; This function calls:
  4602 ;;		Nothing
  4603 ;; This function is called by:
  4604 ;;		_main
  4605 ;; This function uses a non-reentrant model
  4606 ;;
  4607                           
  4608                           	psect	text13
  4609  002DFE                     __ptext13:
  4610                           	opt callstack 0
  4611  002DFE                     _spi_init:
  4612                           	opt callstack 29
  4613  002DFE                     
  4614                           ;dac.c: 13:     SSP2STATbits.SMP = 1;
  4615  002DFE  010E               	movlb	14	; () banked
  4616  002E00  8F95               	bsf	149,7,b	;volatile
  4617                           
  4618                           ;dac.c: 15:     SSP2STATbits.CKE = 1;
  4619  002E02  8D95               	bsf	149,6,b	;volatile
  4620                           
  4621                           ;dac.c: 17:     SSP2CON1bits.SSPEN = 1;
  4622  002E04  8B96               	bsf	150,5,b	;volatile
  4623  002E06                     
  4624                           ; BSR set to: 14
  4625                           ;dac.c: 19:     SSP2CON1bits.SSPM = 2;
  4626  002E06  5196               	movf	150,w,b	;volatile
  4627  002E08  0BF0               	andlw	-16
  4628  002E0A  0902               	iorlw	2
  4629  002E0C  6F96               	movwf	150,b	;volatile
  4630  002E0E                     
  4631                           ; BSR set to: 14
  4632                           ;dac.c: 21:     TRISBbits.TRISB0 = 0;
  4633  002E0E  9089               	bcf	137,0,c	;volatile
  4634  002E10                     
  4635                           ; BSR set to: 14
  4636                           ;dac.c: 22:     TRISBbits.TRISB3 = 0;
  4637  002E10  9689               	bcf	137,3,c	;volatile
  4638  002E12                     
  4639                           ; BSR set to: 14
  4640                           ;dac.c: 23:     TRISBbits.TRISB1 = 0;
  4641  002E12  9289               	bcf	137,1,c	;volatile
  4642                           
  4643                           ;dac.c: 26:     RB1PPS = 0x12;
  4644  002E14  0E12               	movlw	18
  4645  002E16  6FF0               	movwf	240,b	;volatile
  4646                           
  4647                           ;dac.c: 27:     RB3PPS = 0x11;
  4648  002E18  0E11               	movlw	17
  4649  002E1A  6FF2               	movwf	242,b	;volatile
  4650  002E1C                     
  4651                           ; BSR set to: 14
  4652  002E1C  0012               	return		;funcret
  4653  002E1E                     __end_of_spi_init:
  4654                           	opt callstack 0
  4655                           
  4656 ;; *************** function _set_seconds *****************
  4657 ;; Defined at:
  4658 ;;		line 47 in file "timer.c"
  4659 ;; Parameters:    Size  Location     Type
  4660 ;;  sec             1    wreg     unsigned char 
  4661 ;; Auto vars:     Size  Location     Type
  4662 ;;  sec             1   12[COMRAM] unsigned char 
  4663 ;;  curr_sec        1   11[COMRAM] unsigned char 
  4664 ;; Return value:  Size  Location     Type
  4665 ;;                  1    wreg      void 
  4666 ;; Registers used:
  4667 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4668 ;; Tracked objects:
  4669 ;;		On entry : 0/0
  4670 ;;		On exit  : 0/0
  4671 ;;		Unchanged: 0/0
  4672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4674 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4675 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4676 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4677 ;;Total ram usage:        4 bytes
  4678 ;; Hardware stack levels used:    1
  4679 ;; Hardware stack levels required when called:    2
  4680 ;; This function calls:
  4681 ;;		___awdiv
  4682 ;;		___awmod
  4683 ;;		_i2c_read
  4684 ;;		_i2c_write
  4685 ;; This function is called by:
  4686 ;;		_main
  4687 ;; This function uses a non-reentrant model
  4688 ;;
  4689                           
  4690                           	psect	text14
  4691  0028AC                     __ptext14:
  4692                           	opt callstack 0
  4693  0028AC                     _set_seconds:
  4694                           	opt callstack 28
  4695                           
  4696                           ; BSR set to: 14
  4697                           ;incstack = 0
  4698                           ;set_seconds@sec stored from wreg
  4699  0028AC  6E0D               	movwf	set_seconds@sec^0,c
  4700  0028AE                     
  4701                           ;timer.c: 49:  if (sec<60) {
  4702  0028AE  0E3C               	movlw	60
  4703  0028B0  600D               	cpfslt	set_seconds@sec^0,c
  4704  0028B2  EF5D  F014         	goto	u2251
  4705  0028B6  EF5F  F014         	goto	u2250
  4706  0028BA                     u2251:
  4707  0028BA  EF8A  F014         	goto	l332
  4708  0028BE                     u2250:
  4709  0028BE                     
  4710                           ;timer.c: 51:   sec=((sec/10)<<4)+(sec%10);
  4711  0028BE  C00D  F002         	movff	set_seconds@sec,___awmod@dividend
  4712  0028C2  6A03               	clrf	(___awmod@dividend+1)^0,c
  4713  0028C4  0E00               	movlw	0
  4714  0028C6  6E05               	movwf	(___awmod@divisor+1)^0,c
  4715  0028C8  0E0A               	movlw	10
  4716  0028CA  6E04               	movwf	___awmod@divisor^0,c
  4717  0028CC  EC21  F013         	call	___awmod	;wreg free
  4718  0028D0  C002  F00A         	movff	?___awmod,??_set_seconds
  4719  0028D4  C003  F00B         	movff	?___awmod+1,??_set_seconds+1
  4720  0028D8  C00D  F002         	movff	set_seconds@sec,___awdiv@dividend
  4721  0028DC  6A03               	clrf	(___awdiv@dividend+1)^0,c
  4722  0028DE  0E00               	movlw	0
  4723  0028E0  6E05               	movwf	(___awdiv@divisor+1)^0,c
  4724  0028E2  0E0A               	movlw	10
  4725  0028E4  6E04               	movwf	___awdiv@divisor^0,c
  4726  0028E6  EC42  F011         	call	___awdiv	;wreg free
  4727  0028EA  5002               	movf	?___awdiv^0,w,c
  4728  0028EC  0D10               	mullw	16
  4729  0028EE  50F3               	movf	243,w,c
  4730  0028F0  240A               	addwf	??_set_seconds^0,w,c
  4731  0028F2  6E0D               	movwf	set_seconds@sec^0,c
  4732  0028F4                     
  4733                           ;timer.c: 54:   unsigned char curr_sec = i2c_read(104, 0x00);
  4734  0028F4  0E00               	movlw	0
  4735  0028F6  6E02               	movwf	i2c_read@registers^0,c
  4736  0028F8  0E68               	movlw	104
  4737  0028FA  EC59  F00F         	call	_i2c_read
  4738  0028FE  6E0C               	movwf	set_seconds@curr_sec^0,c
  4739  002900                     
  4740                           ;timer.c: 57:   curr_sec &= 0x80;
  4741  002900  0E80               	movlw	128
  4742  002902  160C               	andwf	set_seconds@curr_sec^0,f,c
  4743  002904                     
  4744                           ;timer.c: 60:   i2c_write(104, 0x00, curr_sec | sec);
  4745  002904  0E00               	movlw	0
  4746  002906  6E02               	movwf	i2c_write@registers^0,c
  4747  002908  500C               	movf	set_seconds@curr_sec^0,w,c
  4748  00290A  100D               	iorwf	set_seconds@sec^0,w,c
  4749  00290C  6E03               	movwf	i2c_write@data^0,c
  4750  00290E  0E68               	movlw	104
  4751  002910  ECA4  F011         	call	_i2c_write
  4752  002914                     l332:
  4753  002914  0012               	return		;funcret
  4754  002916                     __end_of_set_seconds:
  4755                           	opt callstack 0
  4756                           
  4757 ;; *************** function _set_minutes *****************
  4758 ;; Defined at:
  4759 ;;		line 77 in file "timer.c"
  4760 ;; Parameters:    Size  Location     Type
  4761 ;;  min             1    wreg     unsigned char 
  4762 ;; Auto vars:     Size  Location     Type
  4763 ;;  min             1   11[COMRAM] unsigned char 
  4764 ;; Return value:  Size  Location     Type
  4765 ;;                  1    wreg      void 
  4766 ;; Registers used:
  4767 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4768 ;; Tracked objects:
  4769 ;;		On entry : 0/0
  4770 ;;		On exit  : 0/0
  4771 ;;		Unchanged: 0/0
  4772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4774 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4775 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4776 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4777 ;;Total ram usage:        3 bytes
  4778 ;; Hardware stack levels used:    1
  4779 ;; Hardware stack levels required when called:    2
  4780 ;; This function calls:
  4781 ;;		___awdiv
  4782 ;;		___awmod
  4783 ;;		_i2c_write
  4784 ;; This function is called by:
  4785 ;;		_main
  4786 ;; This function uses a non-reentrant model
  4787 ;;
  4788                           
  4789                           	psect	text15
  4790  002AB8                     __ptext15:
  4791                           	opt callstack 0
  4792  002AB8                     _set_minutes:
  4793                           	opt callstack 28
  4794                           
  4795                           ;incstack = 0
  4796                           ;set_minutes@min stored from wreg
  4797  002AB8  6E0C               	movwf	set_minutes@min^0,c
  4798  002ABA                     
  4799                           ;timer.c: 79:  if (min<60) {
  4800  002ABA  0E3C               	movlw	60
  4801  002ABC  600C               	cpfslt	set_minutes@min^0,c
  4802  002ABE  EF63  F015         	goto	u2241
  4803  002AC2  EF65  F015         	goto	u2240
  4804  002AC6                     u2241:
  4805  002AC6  EF87  F015         	goto	l339
  4806  002ACA                     u2240:
  4807  002ACA                     
  4808                           ;timer.c: 81:      min = ((min/10)<<4)+(min%10);
  4809  002ACA  C00C  F002         	movff	set_minutes@min,___awmod@dividend
  4810  002ACE  6A03               	clrf	(___awmod@dividend+1)^0,c
  4811  002AD0  0E00               	movlw	0
  4812  002AD2  6E05               	movwf	(___awmod@divisor+1)^0,c
  4813  002AD4  0E0A               	movlw	10
  4814  002AD6  6E04               	movwf	___awmod@divisor^0,c
  4815  002AD8  EC21  F013         	call	___awmod	;wreg free
  4816  002ADC  C002  F00A         	movff	?___awmod,??_set_minutes
  4817  002AE0  C003  F00B         	movff	?___awmod+1,??_set_minutes+1
  4818  002AE4  C00C  F002         	movff	set_minutes@min,___awdiv@dividend
  4819  002AE8  6A03               	clrf	(___awdiv@dividend+1)^0,c
  4820  002AEA  0E00               	movlw	0
  4821  002AEC  6E05               	movwf	(___awdiv@divisor+1)^0,c
  4822  002AEE  0E0A               	movlw	10
  4823  002AF0  6E04               	movwf	___awdiv@divisor^0,c
  4824  002AF2  EC42  F011         	call	___awdiv	;wreg free
  4825  002AF6  5002               	movf	?___awdiv^0,w,c
  4826  002AF8  0D10               	mullw	16
  4827  002AFA  50F3               	movf	243,w,c
  4828  002AFC  240A               	addwf	??_set_minutes^0,w,c
  4829  002AFE  6E0C               	movwf	set_minutes@min^0,c
  4830  002B00                     
  4831                           ;timer.c: 84:   i2c_write(104, 0x01, min);
  4832  002B00  0E01               	movlw	1
  4833  002B02  6E02               	movwf	i2c_write@registers^0,c
  4834  002B04  C00C  F003         	movff	set_minutes@min,i2c_write@data
  4835  002B08  0E68               	movlw	104
  4836  002B0A  ECA4  F011         	call	_i2c_write
  4837  002B0E                     l339:
  4838  002B0E  0012               	return		;funcret
  4839  002B10                     __end_of_set_minutes:
  4840                           	opt callstack 0
  4841                           
  4842 ;; *************** function _set_hours *****************
  4843 ;; Defined at:
  4844 ;;		line 101 in file "timer.c"
  4845 ;; Parameters:    Size  Location     Type
  4846 ;;  hour            1    wreg     unsigned char 
  4847 ;; Auto vars:     Size  Location     Type
  4848 ;;  hour            1   12[COMRAM] unsigned char 
  4849 ;;  curr_hour       1   11[COMRAM] unsigned char 
  4850 ;; Return value:  Size  Location     Type
  4851 ;;                  1    wreg      void 
  4852 ;; Registers used:
  4853 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4854 ;; Tracked objects:
  4855 ;;		On entry : 0/0
  4856 ;;		On exit  : 0/0
  4857 ;;		Unchanged: 0/0
  4858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4860 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4861 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4862 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4863 ;;Total ram usage:        4 bytes
  4864 ;; Hardware stack levels used:    1
  4865 ;; Hardware stack levels required when called:    2
  4866 ;; This function calls:
  4867 ;;		___awdiv
  4868 ;;		___awmod
  4869 ;;		_i2c_read
  4870 ;;		_i2c_write
  4871 ;; This function is called by:
  4872 ;;		_main
  4873 ;; This function uses a non-reentrant model
  4874 ;;
  4875                           
  4876                           	psect	text16
  4877  002916                     __ptext16:
  4878                           	opt callstack 0
  4879  002916                     _set_hours:
  4880                           	opt callstack 28
  4881                           
  4882                           ;incstack = 0
  4883                           ;set_hours@hour stored from wreg
  4884  002916  6E0D               	movwf	set_hours@hour^0,c
  4885  002918                     
  4886                           ;timer.c: 103:  if (hour<24) {
  4887  002918  0E18               	movlw	24
  4888  00291A  600D               	cpfslt	set_hours@hour^0,c
  4889  00291C  EF92  F014         	goto	u2231
  4890  002920  EF94  F014         	goto	u2230
  4891  002924                     u2231:
  4892  002924  EFBF  F014         	goto	l346
  4893  002928                     u2230:
  4894  002928                     
  4895                           ;timer.c: 105:      hour=((hour/10)<<4)+(hour%10);
  4896  002928  C00D  F002         	movff	set_hours@hour,___awmod@dividend
  4897  00292C  6A03               	clrf	(___awmod@dividend+1)^0,c
  4898  00292E  0E00               	movlw	0
  4899  002930  6E05               	movwf	(___awmod@divisor+1)^0,c
  4900  002932  0E0A               	movlw	10
  4901  002934  6E04               	movwf	___awmod@divisor^0,c
  4902  002936  EC21  F013         	call	___awmod	;wreg free
  4903  00293A  C002  F00A         	movff	?___awmod,??_set_hours
  4904  00293E  C003  F00B         	movff	?___awmod+1,??_set_hours+1
  4905  002942  C00D  F002         	movff	set_hours@hour,___awdiv@dividend
  4906  002946  6A03               	clrf	(___awdiv@dividend+1)^0,c
  4907  002948  0E00               	movlw	0
  4908  00294A  6E05               	movwf	(___awdiv@divisor+1)^0,c
  4909  00294C  0E0A               	movlw	10
  4910  00294E  6E04               	movwf	___awdiv@divisor^0,c
  4911  002950  EC42  F011         	call	___awdiv	;wreg free
  4912  002954  5002               	movf	?___awdiv^0,w,c
  4913  002956  0D10               	mullw	16
  4914  002958  50F3               	movf	243,w,c
  4915  00295A  240A               	addwf	??_set_hours^0,w,c
  4916  00295C  6E0D               	movwf	set_hours@hour^0,c
  4917  00295E                     
  4918                           ;timer.c: 108:   unsigned char curr_hour= i2c_read(104, 0x02);
  4919  00295E  0E02               	movlw	2
  4920  002960  6E02               	movwf	i2c_read@registers^0,c
  4921  002962  0E68               	movlw	104
  4922  002964  EC59  F00F         	call	_i2c_read
  4923  002968  6E0C               	movwf	set_hours@curr_hour^0,c
  4924  00296A                     
  4925                           ;timer.c: 111:   curr_hour &= 0x40;
  4926  00296A  0E40               	movlw	64
  4927  00296C  160C               	andwf	set_hours@curr_hour^0,f,c
  4928  00296E                     
  4929                           ;timer.c: 114:   i2c_write(104, 0x02, curr_hour | hour);
  4930  00296E  0E02               	movlw	2
  4931  002970  6E02               	movwf	i2c_write@registers^0,c
  4932  002972  500C               	movf	set_hours@curr_hour^0,w,c
  4933  002974  100D               	iorwf	set_hours@hour^0,w,c
  4934  002976  6E03               	movwf	i2c_write@data^0,c
  4935  002978  0E68               	movlw	104
  4936  00297A  ECA4  F011         	call	_i2c_write
  4937  00297E                     l346:
  4938  00297E  0012               	return		;funcret
  4939  002980                     __end_of_set_hours:
  4940                           	opt callstack 0
  4941                           
  4942 ;; *************** function _set_Aseconds *****************
  4943 ;; Defined at:
  4944 ;;		line 223 in file "timer.c"
  4945 ;; Parameters:    Size  Location     Type
  4946 ;;  Asec            1    wreg     unsigned char 
  4947 ;; Auto vars:     Size  Location     Type
  4948 ;;  Asec            1   11[COMRAM] unsigned char 
  4949 ;; Return value:  Size  Location     Type
  4950 ;;                  1    wreg      void 
  4951 ;; Registers used:
  4952 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4953 ;; Tracked objects:
  4954 ;;		On entry : 0/0
  4955 ;;		On exit  : 0/0
  4956 ;;		Unchanged: 0/0
  4957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4959 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4960 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4961 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4962 ;;Total ram usage:        3 bytes
  4963 ;; Hardware stack levels used:    1
  4964 ;; Hardware stack levels required when called:    2
  4965 ;; This function calls:
  4966 ;;		___awdiv
  4967 ;;		___awmod
  4968 ;;		_i2c_write
  4969 ;; This function is called by:
  4970 ;;		_main
  4971 ;; This function uses a non-reentrant model
  4972 ;;
  4973                           
  4974                           	psect	text17
  4975  002B10                     __ptext17:
  4976                           	opt callstack 0
  4977  002B10                     _set_Aseconds:
  4978                           	opt callstack 28
  4979                           
  4980                           ;incstack = 0
  4981                           ;set_Aseconds@Asec stored from wreg
  4982  002B10  6E0C               	movwf	set_Aseconds@Asec^0,c
  4983  002B12                     
  4984                           ;timer.c: 225:  if (Asec<60) {
  4985  002B12  0E3C               	movlw	60
  4986  002B14  600C               	cpfslt	set_Aseconds@Asec^0,c
  4987  002B16  EF8F  F015         	goto	u2281
  4988  002B1A  EF91  F015         	goto	u2280
  4989  002B1E                     u2281:
  4990  002B1E  EFB3  F015         	goto	l381
  4991  002B22                     u2280:
  4992  002B22                     
  4993                           ;timer.c: 227:   Asec=((Asec/10)<<4)+(Asec%10);
  4994  002B22  C00C  F002         	movff	set_Aseconds@Asec,___awmod@dividend
  4995  002B26  6A03               	clrf	(___awmod@dividend+1)^0,c
  4996  002B28  0E00               	movlw	0
  4997  002B2A  6E05               	movwf	(___awmod@divisor+1)^0,c
  4998  002B2C  0E0A               	movlw	10
  4999  002B2E  6E04               	movwf	___awmod@divisor^0,c
  5000  002B30  EC21  F013         	call	___awmod	;wreg free
  5001  002B34  C002  F00A         	movff	?___awmod,??_set_Aseconds
  5002  002B38  C003  F00B         	movff	?___awmod+1,??_set_Aseconds+1
  5003  002B3C  C00C  F002         	movff	set_Aseconds@Asec,___awdiv@dividend
  5004  002B40  6A03               	clrf	(___awdiv@dividend+1)^0,c
  5005  002B42  0E00               	movlw	0
  5006  002B44  6E05               	movwf	(___awdiv@divisor+1)^0,c
  5007  002B46  0E0A               	movlw	10
  5008  002B48  6E04               	movwf	___awdiv@divisor^0,c
  5009  002B4A  EC42  F011         	call	___awdiv	;wreg free
  5010  002B4E  5002               	movf	?___awdiv^0,w,c
  5011  002B50  0D10               	mullw	16
  5012  002B52  50F3               	movf	243,w,c
  5013  002B54  240A               	addwf	??_set_Aseconds^0,w,c
  5014  002B56  6E0C               	movwf	set_Aseconds@Asec^0,c
  5015  002B58                     
  5016                           ;timer.c: 230:   i2c_write(104, 0x07, Asec);
  5017  002B58  0E07               	movlw	7
  5018  002B5A  6E02               	movwf	i2c_write@registers^0,c
  5019  002B5C  C00C  F003         	movff	set_Aseconds@Asec,i2c_write@data
  5020  002B60  0E68               	movlw	104
  5021  002B62  ECA4  F011         	call	_i2c_write
  5022  002B66                     l381:
  5023  002B66  0012               	return		;funcret
  5024  002B68                     __end_of_set_Aseconds:
  5025                           	opt callstack 0
  5026                           
  5027 ;; *************** function _set_Aminutes *****************
  5028 ;; Defined at:
  5029 ;;		line 247 in file "timer.c"
  5030 ;; Parameters:    Size  Location     Type
  5031 ;;  Amin            1    wreg     unsigned char 
  5032 ;; Auto vars:     Size  Location     Type
  5033 ;;  Amin            1   11[COMRAM] unsigned char 
  5034 ;; Return value:  Size  Location     Type
  5035 ;;                  1    wreg      void 
  5036 ;; Registers used:
  5037 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5038 ;; Tracked objects:
  5039 ;;		On entry : 0/0
  5040 ;;		On exit  : 0/0
  5041 ;;		Unchanged: 0/0
  5042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5044 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5045 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5046 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5047 ;;Total ram usage:        3 bytes
  5048 ;; Hardware stack levels used:    1
  5049 ;; Hardware stack levels required when called:    2
  5050 ;; This function calls:
  5051 ;;		___awdiv
  5052 ;;		___awmod
  5053 ;;		_i2c_write
  5054 ;; This function is called by:
  5055 ;;		_main
  5056 ;; This function uses a non-reentrant model
  5057 ;;
  5058                           
  5059                           	psect	text18
  5060  002B68                     __ptext18:
  5061                           	opt callstack 0
  5062  002B68                     _set_Aminutes:
  5063                           	opt callstack 28
  5064                           
  5065                           ;incstack = 0
  5066                           ;set_Aminutes@Amin stored from wreg
  5067  002B68  6E0C               	movwf	set_Aminutes@Amin^0,c
  5068  002B6A                     
  5069                           ;timer.c: 249:  if (Amin<60) {
  5070  002B6A  0E3C               	movlw	60
  5071  002B6C  600C               	cpfslt	set_Aminutes@Amin^0,c
  5072  002B6E  EFBB  F015         	goto	u2271
  5073  002B72  EFBD  F015         	goto	u2270
  5074  002B76                     u2271:
  5075  002B76  EFDF  F015         	goto	l388
  5076  002B7A                     u2270:
  5077  002B7A                     
  5078                           ;timer.c: 251:      Amin = ((Amin/10)<<4)+(Amin%10);
  5079  002B7A  C00C  F002         	movff	set_Aminutes@Amin,___awmod@dividend
  5080  002B7E  6A03               	clrf	(___awmod@dividend+1)^0,c
  5081  002B80  0E00               	movlw	0
  5082  002B82  6E05               	movwf	(___awmod@divisor+1)^0,c
  5083  002B84  0E0A               	movlw	10
  5084  002B86  6E04               	movwf	___awmod@divisor^0,c
  5085  002B88  EC21  F013         	call	___awmod	;wreg free
  5086  002B8C  C002  F00A         	movff	?___awmod,??_set_Aminutes
  5087  002B90  C003  F00B         	movff	?___awmod+1,??_set_Aminutes+1
  5088  002B94  C00C  F002         	movff	set_Aminutes@Amin,___awdiv@dividend
  5089  002B98  6A03               	clrf	(___awdiv@dividend+1)^0,c
  5090  002B9A  0E00               	movlw	0
  5091  002B9C  6E05               	movwf	(___awdiv@divisor+1)^0,c
  5092  002B9E  0E0A               	movlw	10
  5093  002BA0  6E04               	movwf	___awdiv@divisor^0,c
  5094  002BA2  EC42  F011         	call	___awdiv	;wreg free
  5095  002BA6  5002               	movf	?___awdiv^0,w,c
  5096  002BA8  0D10               	mullw	16
  5097  002BAA  50F3               	movf	243,w,c
  5098  002BAC  240A               	addwf	??_set_Aminutes^0,w,c
  5099  002BAE  6E0C               	movwf	set_Aminutes@Amin^0,c
  5100  002BB0                     
  5101                           ;timer.c: 254:   i2c_write(104, 0x08, Amin);
  5102  002BB0  0E08               	movlw	8
  5103  002BB2  6E02               	movwf	i2c_write@registers^0,c
  5104  002BB4  C00C  F003         	movff	set_Aminutes@Amin,i2c_write@data
  5105  002BB8  0E68               	movlw	104
  5106  002BBA  ECA4  F011         	call	_i2c_write
  5107  002BBE                     l388:
  5108  002BBE  0012               	return		;funcret
  5109  002BC0                     __end_of_set_Aminutes:
  5110                           	opt callstack 0
  5111                           
  5112 ;; *************** function _set_Ahours *****************
  5113 ;; Defined at:
  5114 ;;		line 271 in file "timer.c"
  5115 ;; Parameters:    Size  Location     Type
  5116 ;;  Ahour           1    wreg     unsigned char 
  5117 ;; Auto vars:     Size  Location     Type
  5118 ;;  Ahour           1   12[COMRAM] unsigned char 
  5119 ;;  Acurr_hour      1   11[COMRAM] unsigned char 
  5120 ;; Return value:  Size  Location     Type
  5121 ;;                  1    wreg      void 
  5122 ;; Registers used:
  5123 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5124 ;; Tracked objects:
  5125 ;;		On entry : 0/0
  5126 ;;		On exit  : 0/0
  5127 ;;		Unchanged: 0/0
  5128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5130 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5131 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5132 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5133 ;;Total ram usage:        4 bytes
  5134 ;; Hardware stack levels used:    1
  5135 ;; Hardware stack levels required when called:    2
  5136 ;; This function calls:
  5137 ;;		___awdiv
  5138 ;;		___awmod
  5139 ;;		_i2c_read
  5140 ;;		_i2c_write
  5141 ;; This function is called by:
  5142 ;;		_main
  5143 ;; This function uses a non-reentrant model
  5144 ;;
  5145                           
  5146                           	psect	text19
  5147  002980                     __ptext19:
  5148                           	opt callstack 0
  5149  002980                     _set_Ahours:
  5150                           	opt callstack 28
  5151                           
  5152                           ;incstack = 0
  5153                           ;set_Ahours@Ahour stored from wreg
  5154  002980  6E0D               	movwf	set_Ahours@Ahour^0,c
  5155  002982                     
  5156                           ;timer.c: 273:  if (Ahour<24) {
  5157  002982  0E18               	movlw	24
  5158  002984  600D               	cpfslt	set_Ahours@Ahour^0,c
  5159  002986  EFC7  F014         	goto	u2261
  5160  00298A  EFC9  F014         	goto	u2260
  5161  00298E                     u2261:
  5162  00298E  EFF4  F014         	goto	l395
  5163  002992                     u2260:
  5164  002992                     
  5165                           ;timer.c: 275:      Ahour=((Ahour/10)<<4)+(Ahour%10);
  5166  002992  C00D  F002         	movff	set_Ahours@Ahour,___awmod@dividend
  5167  002996  6A03               	clrf	(___awmod@dividend+1)^0,c
  5168  002998  0E00               	movlw	0
  5169  00299A  6E05               	movwf	(___awmod@divisor+1)^0,c
  5170  00299C  0E0A               	movlw	10
  5171  00299E  6E04               	movwf	___awmod@divisor^0,c
  5172  0029A0  EC21  F013         	call	___awmod	;wreg free
  5173  0029A4  C002  F00A         	movff	?___awmod,??_set_Ahours
  5174  0029A8  C003  F00B         	movff	?___awmod+1,??_set_Ahours+1
  5175  0029AC  C00D  F002         	movff	set_Ahours@Ahour,___awdiv@dividend
  5176  0029B0  6A03               	clrf	(___awdiv@dividend+1)^0,c
  5177  0029B2  0E00               	movlw	0
  5178  0029B4  6E05               	movwf	(___awdiv@divisor+1)^0,c
  5179  0029B6  0E0A               	movlw	10
  5180  0029B8  6E04               	movwf	___awdiv@divisor^0,c
  5181  0029BA  EC42  F011         	call	___awdiv	;wreg free
  5182  0029BE  5002               	movf	?___awdiv^0,w,c
  5183  0029C0  0D10               	mullw	16
  5184  0029C2  50F3               	movf	243,w,c
  5185  0029C4  240A               	addwf	??_set_Ahours^0,w,c
  5186  0029C6  6E0D               	movwf	set_Ahours@Ahour^0,c
  5187  0029C8                     
  5188                           ;timer.c: 278:   unsigned char Acurr_hour= i2c_read(104, 0x09);
  5189  0029C8  0E09               	movlw	9
  5190  0029CA  6E02               	movwf	i2c_read@registers^0,c
  5191  0029CC  0E68               	movlw	104
  5192  0029CE  EC59  F00F         	call	_i2c_read
  5193  0029D2  6E0C               	movwf	set_Ahours@Acurr_hour^0,c
  5194  0029D4                     
  5195                           ;timer.c: 281:   Acurr_hour &= 0x40;
  5196  0029D4  0E40               	movlw	64
  5197  0029D6  160C               	andwf	set_Ahours@Acurr_hour^0,f,c
  5198  0029D8                     
  5199                           ;timer.c: 284:   i2c_write(104, 0x09, Acurr_hour | Ahour);
  5200  0029D8  0E09               	movlw	9
  5201  0029DA  6E02               	movwf	i2c_write@registers^0,c
  5202  0029DC  500C               	movf	set_Ahours@Acurr_hour^0,w,c
  5203  0029DE  100D               	iorwf	set_Ahours@Ahour^0,w,c
  5204  0029E0  6E03               	movwf	i2c_write@data^0,c
  5205  0029E2  0E68               	movlw	104
  5206  0029E4  ECA4  F011         	call	_i2c_write
  5207  0029E8                     l395:
  5208  0029E8  0012               	return		;funcret
  5209  0029EA                     __end_of_set_Ahours:
  5210                           	opt callstack 0
  5211                           
  5212 ;; *************** function ___awmod *****************
  5213 ;; Defined at:
  5214 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  5215 ;; Parameters:    Size  Location     Type
  5216 ;;  dividend        2    1[COMRAM] int 
  5217 ;;  divisor         2    3[COMRAM] int 
  5218 ;; Auto vars:     Size  Location     Type
  5219 ;;  sign            1    6[COMRAM] unsigned char 
  5220 ;;  counter         1    5[COMRAM] unsigned char 
  5221 ;; Return value:  Size  Location     Type
  5222 ;;                  2    1[COMRAM] int 
  5223 ;; Registers used:
  5224 ;;		wreg, status,2, status,0
  5225 ;; Tracked objects:
  5226 ;;		On entry : 0/0
  5227 ;;		On exit  : 0/0
  5228 ;;		Unchanged: 0/0
  5229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5230 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5231 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5233 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5234 ;;Total ram usage:        6 bytes
  5235 ;; Hardware stack levels used:    1
  5236 ;; Hardware stack levels required when called:    1
  5237 ;; This function calls:
  5238 ;;		Nothing
  5239 ;; This function is called by:
  5240 ;;		_set_seconds
  5241 ;;		_set_minutes
  5242 ;;		_set_hours
  5243 ;;		_set_Aseconds
  5244 ;;		_set_Aminutes
  5245 ;;		_set_Ahours
  5246 ;;		_set_months
  5247 ;;		_set_days
  5248 ;;		_set_years
  5249 ;; This function uses a non-reentrant model
  5250 ;;
  5251                           
  5252                           	psect	text20
  5253  002642                     __ptext20:
  5254                           	opt callstack 0
  5255  002642                     ___awmod:
  5256                           	opt callstack 28
  5257  002642  0E00               	movlw	0
  5258  002644  6E07               	movwf	___awmod@sign^0,c
  5259  002646  BE03               	btfsc	(___awmod@dividend+1)^0,7,c
  5260  002648  EF2A  F013         	goto	u2120
  5261  00264C  EF28  F013         	goto	u2121
  5262  002650                     u2121:
  5263  002650  EF30  F013         	goto	l2776
  5264  002654                     u2120:
  5265  002654  6C02               	negf	___awmod@dividend^0,c
  5266  002656  1E03               	comf	(___awmod@dividend+1)^0,f,c
  5267  002658  B0D8               	btfsc	status,0,c
  5268  00265A  2A03               	incf	(___awmod@dividend+1)^0,f,c
  5269  00265C  0E01               	movlw	1
  5270  00265E  6E07               	movwf	___awmod@sign^0,c
  5271  002660                     l2776:
  5272  002660  BE05               	btfsc	(___awmod@divisor+1)^0,7,c
  5273  002662  EF37  F013         	goto	u2130
  5274  002666  EF35  F013         	goto	u2131
  5275  00266A                     u2131:
  5276  00266A  EF3B  F013         	goto	l2780
  5277  00266E                     u2130:
  5278  00266E  6C04               	negf	___awmod@divisor^0,c
  5279  002670  1E05               	comf	(___awmod@divisor+1)^0,f,c
  5280  002672  B0D8               	btfsc	status,0,c
  5281  002674  2A05               	incf	(___awmod@divisor+1)^0,f,c
  5282  002676                     l2780:
  5283  002676  5004               	movf	___awmod@divisor^0,w,c
  5284  002678  1005               	iorwf	(___awmod@divisor+1)^0,w,c
  5285  00267A  B4D8               	btfsc	status,2,c
  5286  00267C  EF42  F013         	goto	u2141
  5287  002680  EF44  F013         	goto	u2140
  5288  002684                     u2141:
  5289  002684  EF68  F013         	goto	l2796
  5290  002688                     u2140:
  5291  002688  0E01               	movlw	1
  5292  00268A  6E06               	movwf	___awmod@counter^0,c
  5293  00268C  EF4C  F013         	goto	l2786
  5294  002690                     l2784:
  5295  002690  90D8               	bcf	status,0,c
  5296  002692  3604               	rlcf	___awmod@divisor^0,f,c
  5297  002694  3605               	rlcf	(___awmod@divisor+1)^0,f,c
  5298  002696  2A06               	incf	___awmod@counter^0,f,c
  5299  002698                     l2786:
  5300  002698  AE05               	btfss	(___awmod@divisor+1)^0,7,c
  5301  00269A  EF51  F013         	goto	u2151
  5302  00269E  EF53  F013         	goto	u2150
  5303  0026A2                     u2151:
  5304  0026A2  EF48  F013         	goto	l2784
  5305  0026A6                     u2150:
  5306  0026A6                     l2788:
  5307  0026A6  5004               	movf	___awmod@divisor^0,w,c
  5308  0026A8  5C02               	subwf	___awmod@dividend^0,w,c
  5309  0026AA  5005               	movf	(___awmod@divisor+1)^0,w,c
  5310  0026AC  5803               	subwfb	(___awmod@dividend+1)^0,w,c
  5311  0026AE  A0D8               	btfss	status,0,c
  5312  0026B0  EF5C  F013         	goto	u2161
  5313  0026B4  EF5E  F013         	goto	u2160
  5314  0026B8                     u2161:
  5315  0026B8  EF62  F013         	goto	l2792
  5316  0026BC                     u2160:
  5317  0026BC  5004               	movf	___awmod@divisor^0,w,c
  5318  0026BE  5E02               	subwf	___awmod@dividend^0,f,c
  5319  0026C0  5005               	movf	(___awmod@divisor+1)^0,w,c
  5320  0026C2  5A03               	subwfb	(___awmod@dividend+1)^0,f,c
  5321  0026C4                     l2792:
  5322  0026C4  90D8               	bcf	status,0,c
  5323  0026C6  3205               	rrcf	(___awmod@divisor+1)^0,f,c
  5324  0026C8  3204               	rrcf	___awmod@divisor^0,f,c
  5325  0026CA  2E06               	decfsz	___awmod@counter^0,f,c
  5326  0026CC  EF53  F013         	goto	l2788
  5327  0026D0                     l2796:
  5328  0026D0  5007               	movf	___awmod@sign^0,w,c
  5329  0026D2  B4D8               	btfsc	status,2,c
  5330  0026D4  EF6E  F013         	goto	u2171
  5331  0026D8  EF70  F013         	goto	u2170
  5332  0026DC                     u2171:
  5333  0026DC  EF74  F013         	goto	l2800
  5334  0026E0                     u2170:
  5335  0026E0  6C02               	negf	___awmod@dividend^0,c
  5336  0026E2  1E03               	comf	(___awmod@dividend+1)^0,f,c
  5337  0026E4  B0D8               	btfsc	status,0,c
  5338  0026E6  2A03               	incf	(___awmod@dividend+1)^0,f,c
  5339  0026E8                     l2800:
  5340  0026E8  C002  F002         	movff	___awmod@dividend,?___awmod
  5341  0026EC  C003  F003         	movff	___awmod@dividend+1,?___awmod+1
  5342  0026F0  0012               	return		;funcret
  5343  0026F2                     __end_of___awmod:
  5344                           	opt callstack 0
  5345                           
  5346 ;; *************** function ___awdiv *****************
  5347 ;; Defined at:
  5348 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
  5349 ;; Parameters:    Size  Location     Type
  5350 ;;  dividend        2    1[COMRAM] int 
  5351 ;;  divisor         2    3[COMRAM] int 
  5352 ;; Auto vars:     Size  Location     Type
  5353 ;;  quotient        2    7[COMRAM] int 
  5354 ;;  sign            1    6[COMRAM] unsigned char 
  5355 ;;  counter         1    5[COMRAM] unsigned char 
  5356 ;; Return value:  Size  Location     Type
  5357 ;;                  2    1[COMRAM] int 
  5358 ;; Registers used:
  5359 ;;		wreg, status,2, status,0
  5360 ;; Tracked objects:
  5361 ;;		On entry : 0/0
  5362 ;;		On exit  : 0/0
  5363 ;;		Unchanged: 0/0
  5364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5365 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5366 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5368 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5369 ;;Total ram usage:        8 bytes
  5370 ;; Hardware stack levels used:    1
  5371 ;; Hardware stack levels required when called:    1
  5372 ;; This function calls:
  5373 ;;		Nothing
  5374 ;; This function is called by:
  5375 ;;		_set_seconds
  5376 ;;		_set_minutes
  5377 ;;		_set_hours
  5378 ;;		_set_Aseconds
  5379 ;;		_set_Aminutes
  5380 ;;		_set_Ahours
  5381 ;;		_set_months
  5382 ;;		_set_days
  5383 ;;		_set_years
  5384 ;; This function uses a non-reentrant model
  5385 ;;
  5386                           
  5387                           	psect	text21
  5388  002284                     __ptext21:
  5389                           	opt callstack 0
  5390  002284                     ___awdiv:
  5391                           	opt callstack 28
  5392  002284  0E00               	movlw	0
  5393  002286  6E07               	movwf	___awdiv@sign^0,c
  5394  002288  BE05               	btfsc	(___awdiv@divisor+1)^0,7,c
  5395  00228A  EF4B  F011         	goto	u2060
  5396  00228E  EF49  F011         	goto	u2061
  5397  002292                     u2061:
  5398  002292  EF51  F011         	goto	l2732
  5399  002296                     u2060:
  5400  002296  6C04               	negf	___awdiv@divisor^0,c
  5401  002298  1E05               	comf	(___awdiv@divisor+1)^0,f,c
  5402  00229A  B0D8               	btfsc	status,0,c
  5403  00229C  2A05               	incf	(___awdiv@divisor+1)^0,f,c
  5404  00229E  0E01               	movlw	1
  5405  0022A0  6E07               	movwf	___awdiv@sign^0,c
  5406  0022A2                     l2732:
  5407  0022A2  BE03               	btfsc	(___awdiv@dividend+1)^0,7,c
  5408  0022A4  EF58  F011         	goto	u2070
  5409  0022A8  EF56  F011         	goto	u2071
  5410  0022AC                     u2071:
  5411  0022AC  EF5E  F011         	goto	l2738
  5412  0022B0                     u2070:
  5413  0022B0  6C02               	negf	___awdiv@dividend^0,c
  5414  0022B2  1E03               	comf	(___awdiv@dividend+1)^0,f,c
  5415  0022B4  B0D8               	btfsc	status,0,c
  5416  0022B6  2A03               	incf	(___awdiv@dividend+1)^0,f,c
  5417  0022B8  0E01               	movlw	1
  5418  0022BA  1A07               	xorwf	___awdiv@sign^0,f,c
  5419  0022BC                     l2738:
  5420  0022BC  0E00               	movlw	0
  5421  0022BE  6E09               	movwf	(___awdiv@quotient+1)^0,c
  5422  0022C0  0E00               	movlw	0
  5423  0022C2  6E08               	movwf	___awdiv@quotient^0,c
  5424  0022C4  5004               	movf	___awdiv@divisor^0,w,c
  5425  0022C6  1005               	iorwf	(___awdiv@divisor+1)^0,w,c
  5426  0022C8  B4D8               	btfsc	status,2,c
  5427  0022CA  EF69  F011         	goto	u2081
  5428  0022CE  EF6B  F011         	goto	u2080
  5429  0022D2                     u2081:
  5430  0022D2  EF93  F011         	goto	l2760
  5431  0022D6                     u2080:
  5432  0022D6  0E01               	movlw	1
  5433  0022D8  6E06               	movwf	___awdiv@counter^0,c
  5434  0022DA  EF73  F011         	goto	l2746
  5435  0022DE                     l2744:
  5436  0022DE  90D8               	bcf	status,0,c
  5437  0022E0  3604               	rlcf	___awdiv@divisor^0,f,c
  5438  0022E2  3605               	rlcf	(___awdiv@divisor+1)^0,f,c
  5439  0022E4  2A06               	incf	___awdiv@counter^0,f,c
  5440  0022E6                     l2746:
  5441  0022E6  AE05               	btfss	(___awdiv@divisor+1)^0,7,c
  5442  0022E8  EF78  F011         	goto	u2091
  5443  0022EC  EF7A  F011         	goto	u2090
  5444  0022F0                     u2091:
  5445  0022F0  EF6F  F011         	goto	l2744
  5446  0022F4                     u2090:
  5447  0022F4                     l2748:
  5448  0022F4  90D8               	bcf	status,0,c
  5449  0022F6  3608               	rlcf	___awdiv@quotient^0,f,c
  5450  0022F8  3609               	rlcf	(___awdiv@quotient+1)^0,f,c
  5451  0022FA  5004               	movf	___awdiv@divisor^0,w,c
  5452  0022FC  5C02               	subwf	___awdiv@dividend^0,w,c
  5453  0022FE  5005               	movf	(___awdiv@divisor+1)^0,w,c
  5454  002300  5803               	subwfb	(___awdiv@dividend+1)^0,w,c
  5455  002302  A0D8               	btfss	status,0,c
  5456  002304  EF86  F011         	goto	u2101
  5457  002308  EF88  F011         	goto	u2100
  5458  00230C                     u2101:
  5459  00230C  EF8D  F011         	goto	l2756
  5460  002310                     u2100:
  5461  002310  5004               	movf	___awdiv@divisor^0,w,c
  5462  002312  5E02               	subwf	___awdiv@dividend^0,f,c
  5463  002314  5005               	movf	(___awdiv@divisor+1)^0,w,c
  5464  002316  5A03               	subwfb	(___awdiv@dividend+1)^0,f,c
  5465  002318  8008               	bsf	___awdiv@quotient^0,0,c
  5466  00231A                     l2756:
  5467  00231A  90D8               	bcf	status,0,c
  5468  00231C  3205               	rrcf	(___awdiv@divisor+1)^0,f,c
  5469  00231E  3204               	rrcf	___awdiv@divisor^0,f,c
  5470  002320  2E06               	decfsz	___awdiv@counter^0,f,c
  5471  002322  EF7A  F011         	goto	l2748
  5472  002326                     l2760:
  5473  002326  5007               	movf	___awdiv@sign^0,w,c
  5474  002328  B4D8               	btfsc	status,2,c
  5475  00232A  EF99  F011         	goto	u2111
  5476  00232E  EF9B  F011         	goto	u2110
  5477  002332                     u2111:
  5478  002332  EF9F  F011         	goto	l2764
  5479  002336                     u2110:
  5480  002336  6C08               	negf	___awdiv@quotient^0,c
  5481  002338  1E09               	comf	(___awdiv@quotient+1)^0,f,c
  5482  00233A  B0D8               	btfsc	status,0,c
  5483  00233C  2A09               	incf	(___awdiv@quotient+1)^0,f,c
  5484  00233E                     l2764:
  5485  00233E  C008  F002         	movff	___awdiv@quotient,?___awdiv
  5486  002342  C009  F003         	movff	___awdiv@quotient+1,?___awdiv+1
  5487  002346  0012               	return		;funcret
  5488  002348                     __end_of___awdiv:
  5489                           	opt callstack 0
  5490                           
  5491 ;; *************** function _rtc_init *****************
  5492 ;; Defined at:
  5493 ;;		line 12 in file "timer.c"
  5494 ;; Parameters:    Size  Location     Type
  5495 ;;		None
  5496 ;; Auto vars:     Size  Location     Type
  5497 ;;  i               2    8[COMRAM] unsigned int 
  5498 ;;  hour            1   11[COMRAM] unsigned char 
  5499 ;;  sec             1   10[COMRAM] unsigned char 
  5500 ;; Return value:  Size  Location     Type
  5501 ;;                  1    wreg      void 
  5502 ;; Registers used:
  5503 ;;		wreg, status,2, status,0, cstack
  5504 ;; Tracked objects:
  5505 ;;		On entry : 0/0
  5506 ;;		On exit  : 0/0
  5507 ;;		Unchanged: 0/0
  5508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5510 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5512 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5513 ;;Total ram usage:        4 bytes
  5514 ;; Hardware stack levels used:    1
  5515 ;; Hardware stack levels required when called:    2
  5516 ;; This function calls:
  5517 ;;		_i2c_read
  5518 ;;		_i2c_write
  5519 ;; This function is called by:
  5520 ;;		_main
  5521 ;; This function uses a non-reentrant model
  5522 ;;
  5523                           
  5524                           	psect	text22
  5525  00282C                     __ptext22:
  5526                           	opt callstack 0
  5527  00282C                     _rtc_init:
  5528                           	opt callstack 28
  5529  00282C                     
  5530                           ;timer.c: 14:  unsigned char sec = i2c_read(104, 0x00);
  5531  00282C  0E00               	movlw	0
  5532  00282E  6E02               	movwf	i2c_read@registers^0,c
  5533  002830  0E68               	movlw	104
  5534  002832  EC59  F00F         	call	_i2c_read
  5535  002836  6E0B               	movwf	rtc_init@sec^0,c
  5536  002838                     
  5537                           ;timer.c: 17:  if ((sec&0x80)!= 0) {
  5538  002838  AE0B               	btfss	rtc_init@sec^0,7,c
  5539  00283A  EF21  F014         	goto	u2181
  5540  00283E  EF23  F014         	goto	u2180
  5541  002842                     u2181:
  5542  002842  EF40  F014         	goto	l2836
  5543  002846                     u2180:
  5544  002846                     
  5545                           ;timer.c: 18:   i2c_write(104, 0x00, sec & 0x7f);
  5546  002846  0E00               	movlw	0
  5547  002848  6E02               	movwf	i2c_write@registers^0,c
  5548  00284A  500B               	movf	rtc_init@sec^0,w,c
  5549  00284C  0B7F               	andlw	127
  5550  00284E  6E03               	movwf	i2c_write@data^0,c
  5551  002850  0E68               	movlw	104
  5552  002852  ECA4  F011         	call	_i2c_write
  5553  002856                     
  5554                           ;timer.c: 20:   for (unsigned int i = 0; i < 500; i++) {
  5555  002856  0E00               	movlw	0
  5556  002858  6E0A               	movwf	(rtc_init@i+1)^0,c
  5557  00285A  0E00               	movlw	0
  5558  00285C  6E09               	movwf	rtc_init@i^0,c
  5559  00285E                     l2832:
  5560                           
  5561                           ;timer.c: 21:    _delay((unsigned long)((1)*(4000000/4000.0)));
  5562  00285E  0EC8               	movlw	200
  5563  002860                     u3617:
  5564  002860  D000               	nop2	
  5565  002862  2EE8               	decfsz	wreg,f,c
  5566  002864  D7FD               	bra	u3617
  5567  002866                     
  5568                           ;timer.c: 22:   }
  5569  002866  4A09               	infsnz	rtc_init@i^0,f,c
  5570  002868  2A0A               	incf	(rtc_init@i+1)^0,f,c
  5571  00286A  0EF4               	movlw	244
  5572  00286C  5C09               	subwf	rtc_init@i^0,w,c
  5573  00286E  0E01               	movlw	1
  5574  002870  580A               	subwfb	(rtc_init@i+1)^0,w,c
  5575  002872  A0D8               	btfss	status,0,c
  5576  002874  EF3E  F014         	goto	u2191
  5577  002878  EF40  F014         	goto	u2190
  5578  00287C                     u2191:
  5579  00287C  EF2F  F014         	goto	l2832
  5580  002880                     u2190:
  5581  002880                     l2836:
  5582                           
  5583                           ;timer.c: 26:  unsigned char hour = i2c_read(104, 0x02);
  5584  002880  0E02               	movlw	2
  5585  002882  6E02               	movwf	i2c_read@registers^0,c
  5586  002884  0E68               	movlw	104
  5587  002886  EC59  F00F         	call	_i2c_read
  5588  00288A  6E0C               	movwf	rtc_init@hour^0,c
  5589  00288C                     
  5590                           ;timer.c: 29:  if ((hour & 0x40) != 0) {
  5591  00288C  AC0C               	btfss	rtc_init@hour^0,6,c
  5592  00288E  EF4B  F014         	goto	u2201
  5593  002892  EF4D  F014         	goto	u2200
  5594  002896                     u2201:
  5595  002896  EF55  F014         	goto	l325
  5596  00289A                     u2200:
  5597  00289A                     
  5598                           ;timer.c: 30:   i2c_write(104, 0x02, hour & 0xbf);
  5599  00289A  0E02               	movlw	2
  5600  00289C  6E02               	movwf	i2c_write@registers^0,c
  5601  00289E  500C               	movf	rtc_init@hour^0,w,c
  5602  0028A0  0BBF               	andlw	191
  5603  0028A2  6E03               	movwf	i2c_write@data^0,c
  5604  0028A4  0E68               	movlw	104
  5605  0028A6  ECA4  F011         	call	_i2c_write
  5606  0028AA                     l325:
  5607  0028AA  0012               	return		;funcret
  5608  0028AC                     __end_of_rtc_init:
  5609                           	opt callstack 0
  5610                           
  5611 ;; *************** function _i2c_write *****************
  5612 ;; Defined at:
  5613 ;;		line 103 in file "../timer.X/i2c.c"
  5614 ;; Parameters:    Size  Location     Type
  5615 ;;  address         1    wreg     unsigned char 
  5616 ;;  registers       1    1[COMRAM] unsigned char 
  5617 ;;  data            1    2[COMRAM] unsigned char 
  5618 ;; Auto vars:     Size  Location     Type
  5619 ;;  address         1    3[COMRAM] unsigned char 
  5620 ;; Return value:  Size  Location     Type
  5621 ;;                  1    wreg      void 
  5622 ;; Registers used:
  5623 ;;		wreg, status,2, status,0
  5624 ;; Tracked objects:
  5625 ;;		On entry : 0/0
  5626 ;;		On exit  : 0/0
  5627 ;;		Unchanged: 0/0
  5628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5629 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5630 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5632 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5633 ;;Total ram usage:        3 bytes
  5634 ;; Hardware stack levels used:    1
  5635 ;; Hardware stack levels required when called:    1
  5636 ;; This function calls:
  5637 ;;		Nothing
  5638 ;; This function is called by:
  5639 ;;		_main
  5640 ;;		_rtc_init
  5641 ;;		_set_seconds
  5642 ;;		_set_minutes
  5643 ;;		_set_hours
  5644 ;;		_set_Aseconds
  5645 ;;		_set_Aminutes
  5646 ;;		_set_Ahours
  5647 ;;		_set_dayname
  5648 ;;		_set_months
  5649 ;;		_set_days
  5650 ;;		_set_years
  5651 ;; This function uses a non-reentrant model
  5652 ;;
  5653                           
  5654                           	psect	text23
  5655  002348                     __ptext23:
  5656                           	opt callstack 0
  5657  002348                     _i2c_write:
  5658                           	opt callstack 28
  5659                           
  5660                           ;incstack = 0
  5661                           ;i2c_write@address stored from wreg
  5662  002348  6E04               	movwf	i2c_write@address^0,c
  5663  00234A                     
  5664                           ;../timer.X/i2c.c: 104:  SSP1CON2bits.SEN = 1;
  5665  00234A  8097               	bsf	151,0,c	;volatile
  5666  00234C                     l270:
  5667  00234C  B097               	btfsc	151,0,c	;volatile
  5668  00234E  EFAB  F011         	goto	u1941
  5669  002352  EFAD  F011         	goto	u1940
  5670  002356                     u1941:
  5671  002356  EFA6  F011         	goto	l270
  5672  00235A                     u1940:
  5673  00235A                     
  5674                           ;../timer.X/i2c.c: 107:  SSP1BUF = (address << 1) & 0xfe;
  5675  00235A  5004               	movf	i2c_write@address^0,w,c
  5676  00235C  2404               	addwf	i2c_write@address^0,w,c
  5677  00235E  0BFE               	andlw	254
  5678  002360  6E92               	movwf	146,c	;volatile
  5679  002362                     l273:
  5680  002362  B495               	btfsc	149,2,c	;volatile
  5681  002364  EFB6  F011         	goto	u1951
  5682  002368  EFB8  F011         	goto	u1950
  5683  00236C                     u1951:
  5684  00236C  EFB1  F011         	goto	l273
  5685  002370                     u1950:
  5686  002370                     
  5687                           ;../timer.X/i2c.c: 112:  if (SSP1CON2bits.ACKSTAT == 1) {
  5688  002370  AC97               	btfss	151,6,c	;volatile
  5689  002372  EFBD  F011         	goto	u1961
  5690  002376  EFBF  F011         	goto	u1960
  5691  00237A                     u1961:
  5692  00237A  EFC9  F011         	goto	l276
  5693  00237E                     u1960:
  5694  00237E                     
  5695                           ;../timer.X/i2c.c: 113:   SSP1CON2bits.PEN = 1;
  5696  00237E  8497               	bsf	151,2,c	;volatile
  5697  002380                     l277:
  5698  002380  B497               	btfsc	151,2,c	;volatile
  5699  002382  EFC5  F011         	goto	u1971
  5700  002386  EFC7  F011         	goto	u1970
  5701  00238A                     u1971:
  5702  00238A  EFC0  F011         	goto	l277
  5703  00238E                     u1970:
  5704  00238E  EF05  F012         	goto	l280
  5705  002392                     l276:
  5706                           
  5707                           ;../timer.X/i2c.c: 118:  SSP1BUF = registers;
  5708  002392  C002  FF92         	movff	i2c_write@registers,3986	;volatile
  5709  002396                     l281:
  5710  002396  B495               	btfsc	149,2,c	;volatile
  5711  002398  EFD0  F011         	goto	u1981
  5712  00239C  EFD2  F011         	goto	u1980
  5713  0023A0                     u1981:
  5714  0023A0  EFCB  F011         	goto	l281
  5715  0023A4                     u1980:
  5716  0023A4                     
  5717                           ;../timer.X/i2c.c: 123:  if (SSP1CON2bits.ACKSTAT == 1) {
  5718  0023A4  AC97               	btfss	151,6,c	;volatile
  5719  0023A6  EFD7  F011         	goto	u1991
  5720  0023AA  EFD9  F011         	goto	u1990
  5721  0023AE                     u1991:
  5722  0023AE  EFE3  F011         	goto	l284
  5723  0023B2                     u1990:
  5724  0023B2                     
  5725                           ;../timer.X/i2c.c: 124:   SSP1CON2bits.PEN = 1;
  5726  0023B2  8497               	bsf	151,2,c	;volatile
  5727  0023B4                     l285:
  5728  0023B4  B497               	btfsc	151,2,c	;volatile
  5729  0023B6  EFDF  F011         	goto	u2001
  5730  0023BA  EFE1  F011         	goto	u2000
  5731  0023BE                     u2001:
  5732  0023BE  EFDA  F011         	goto	l285
  5733  0023C2                     u2000:
  5734  0023C2  EF05  F012         	goto	l280
  5735  0023C6                     l284:
  5736                           
  5737                           ;../timer.X/i2c.c: 129:  SSP1BUF = data;
  5738  0023C6  C003  FF92         	movff	i2c_write@data,3986	;volatile
  5739  0023CA                     l288:
  5740  0023CA  B495               	btfsc	149,2,c	;volatile
  5741  0023CC  EFEA  F011         	goto	u2011
  5742  0023D0  EFEC  F011         	goto	u2010
  5743  0023D4                     u2011:
  5744  0023D4  EFE5  F011         	goto	l288
  5745  0023D8                     u2010:
  5746  0023D8                     
  5747                           ;../timer.X/i2c.c: 133:  if (SSP1CON2bits.ACKSTAT == 1) {
  5748  0023D8  AC97               	btfss	151,6,c	;volatile
  5749  0023DA  EFF1  F011         	goto	u2021
  5750  0023DE  EFF3  F011         	goto	u2020
  5751  0023E2                     u2021:
  5752  0023E2  EFFD  F011         	goto	l291
  5753  0023E6                     u2020:
  5754  0023E6                     
  5755                           ;../timer.X/i2c.c: 134:   SSP1CON2bits.PEN = 1;
  5756  0023E6  8497               	bsf	151,2,c	;volatile
  5757  0023E8                     l292:
  5758  0023E8  B497               	btfsc	151,2,c	;volatile
  5759  0023EA  EFF9  F011         	goto	u2031
  5760  0023EE  EFFB  F011         	goto	u2030
  5761  0023F2                     u2031:
  5762  0023F2  EFF4  F011         	goto	l292
  5763  0023F6                     u2030:
  5764  0023F6  EF05  F012         	goto	l280
  5765  0023FA                     l291:
  5766                           
  5767                           ;../timer.X/i2c.c: 139:     SSP1CON2bits.PEN = 1;
  5768  0023FA  8497               	bsf	151,2,c	;volatile
  5769  0023FC                     l295:
  5770  0023FC  B497               	btfsc	151,2,c	;volatile
  5771  0023FE  EF03  F012         	goto	u2041
  5772  002402  EF05  F012         	goto	u2040
  5773  002406                     u2041:
  5774  002406  EFFE  F011         	goto	l295
  5775  00240A                     u2040:
  5776  00240A                     l280:
  5777  00240A  0012               	return		;funcret
  5778  00240C                     __end_of_i2c_write:
  5779                           	opt callstack 0
  5780                           
  5781 ;; *************** function _lcd_init *****************
  5782 ;; Defined at:
  5783 ;;		line 61 in file "../timer.X/lcd.c"
  5784 ;; Parameters:    Size  Location     Type
  5785 ;;		None
  5786 ;; Auto vars:     Size  Location     Type
  5787 ;;		None
  5788 ;; Return value:  Size  Location     Type
  5789 ;;                  1    wreg      void 
  5790 ;; Registers used:
  5791 ;;		wreg, status,2, status,0, cstack
  5792 ;; Tracked objects:
  5793 ;;		On entry : 0/0
  5794 ;;		On exit  : 0/0
  5795 ;;		Unchanged: 0/0
  5796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5800 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5801 ;;Total ram usage:        0 bytes
  5802 ;; Hardware stack levels used:    1
  5803 ;; Hardware stack levels required when called:    2
  5804 ;; This function calls:
  5805 ;;		_lcd_command
  5806 ;; This function is called by:
  5807 ;;		_main
  5808 ;; This function uses a non-reentrant model
  5809 ;;
  5810                           
  5811                           	psect	text24
  5812  002E1E                     __ptext24:
  5813                           	opt callstack 0
  5814  002E1E                     _lcd_init:
  5815                           	opt callstack 28
  5816  002E1E                     
  5817                           ;../timer.X/lcd.c: 62:  lcd_command(0x33);
  5818  002E1E  0E33               	movlw	51
  5819  002E20  EC67  F012         	call	_lcd_command
  5820                           
  5821                           ;../timer.X/lcd.c: 63:  lcd_command(0x32);
  5822  002E24  0E32               	movlw	50
  5823  002E26  EC67  F012         	call	_lcd_command
  5824                           
  5825                           ;../timer.X/lcd.c: 64:  lcd_command(0x2C);
  5826  002E2A  0E2C               	movlw	44
  5827  002E2C  EC67  F012         	call	_lcd_command
  5828                           
  5829                           ;../timer.X/lcd.c: 65:  lcd_command(0x0C);
  5830  002E30  0E0C               	movlw	12
  5831  002E32  EC67  F012         	call	_lcd_command
  5832                           
  5833                           ;../timer.X/lcd.c: 66:  lcd_command(0x01);
  5834  002E36  0E01               	movlw	1
  5835  002E38  EC67  F012         	call	_lcd_command
  5836  002E3C  0012               	return		;funcret
  5837  002E3E                     __end_of_lcd_init:
  5838                           	opt callstack 0
  5839                           
  5840 ;; *************** function _lcd_command *****************
  5841 ;; Defined at:
  5842 ;;		line 13 in file "../timer.X/lcd.c"
  5843 ;; Parameters:    Size  Location     Type
  5844 ;;  x               1    wreg     unsigned char 
  5845 ;; Auto vars:     Size  Location     Type
  5846 ;;  x               1    3[COMRAM] unsigned char 
  5847 ;;  temp            1    2[COMRAM] unsigned char 
  5848 ;; Return value:  Size  Location     Type
  5849 ;;                  1    wreg      void 
  5850 ;; Registers used:
  5851 ;;		wreg, status,2, status,0, cstack
  5852 ;; Tracked objects:
  5853 ;;		On entry : 0/0
  5854 ;;		On exit  : 0/0
  5855 ;;		Unchanged: 0/0
  5856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5858 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5859 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5860 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5861 ;;Total ram usage:        3 bytes
  5862 ;; Hardware stack levels used:    1
  5863 ;; Hardware stack levels required when called:    1
  5864 ;; This function calls:
  5865 ;;		Nothing
  5866 ;; This function is called by:
  5867 ;;		_main
  5868 ;;		_lcd_init
  5869 ;; This function uses a non-reentrant model
  5870 ;;
  5871                           
  5872                           	psect	text25
  5873  0024CE                     __ptext25:
  5874                           	opt callstack 0
  5875  0024CE                     _lcd_command:
  5876                           	opt callstack 28
  5877                           
  5878                           ;incstack = 0
  5879                           ;lcd_command@x stored from wreg
  5880  0024CE  6E04               	movwf	lcd_command@x^0,c
  5881  0024D0                     
  5882                           ;../timer.X/lcd.c: 14:  char temp;;../timer.X/lcd.c: 17:  TRISDbits.TRISD0 = 0;
  5883  0024D0  908B               	bcf	139,0,c	;volatile
  5884                           
  5885                           ;../timer.X/lcd.c: 18:  TRISDbits.TRISD1 = 0;
  5886  0024D2  928B               	bcf	139,1,c	;volatile
  5887                           
  5888                           ;../timer.X/lcd.c: 19:  TRISDbits.TRISD2 = 0;
  5889  0024D4  948B               	bcf	139,2,c	;volatile
  5890                           
  5891                           ;../timer.X/lcd.c: 20:  TRISDbits.TRISD3 = 0;
  5892  0024D6  968B               	bcf	139,3,c	;volatile
  5893                           
  5894                           ;../timer.X/lcd.c: 21:  TRISDbits.TRISD4 = 0;
  5895  0024D8  988B               	bcf	139,4,c	;volatile
  5896                           
  5897                           ;../timer.X/lcd.c: 22:  TRISDbits.TRISD7 = 0;
  5898  0024DA  9E8B               	bcf	139,7,c	;volatile
  5899  0024DC                     
  5900                           ;../timer.X/lcd.c: 24:  temp = x;
  5901  0024DC  C004  F003         	movff	lcd_command@x,lcd_command@temp
  5902  0024E0                     
  5903                           ;../timer.X/lcd.c: 27:     PORTD = 0;
  5904  0024E0  0E00               	movlw	0
  5905  0024E2  6E90               	movwf	144,c	;volatile
  5906  0024E4                     
  5907                           ;../timer.X/lcd.c: 28:     _delay((unsigned long)((5)*(4000000/4000.0)));
  5908  0024E4  0E07               	movlw	7
  5909  0024E6  6E02               	movwf	??_lcd_command^0,c
  5910  0024E8  0E7D               	movlw	125
  5911  0024EA                     u3627:
  5912  0024EA  2EE8               	decfsz	wreg,f,c
  5913  0024EC  D7FE               	bra	u3627
  5914  0024EE  2E02               	decfsz	??_lcd_command^0,f,c
  5915  0024F0  D7FC               	bra	u3627
  5916  0024F2  F000               	nop	
  5917  0024F4                     
  5918                           ;../timer.X/lcd.c: 30:  x = x >>4;
  5919  0024F4  3804               	swapf	lcd_command@x^0,w,c
  5920  0024F6  0B0F               	andlw	15
  5921  0024F8  6E04               	movwf	lcd_command@x^0,c
  5922  0024FA                     
  5923                           ;../timer.X/lcd.c: 31:  x = x & 0xF;
  5924  0024FA  5004               	movf	lcd_command@x^0,w,c
  5925  0024FC  0B0F               	andlw	15
  5926  0024FE  6E04               	movwf	lcd_command@x^0,c
  5927  002500                     
  5928                           ;../timer.X/lcd.c: 32:  x = x | 0x80;
  5929  002500  5004               	movf	lcd_command@x^0,w,c
  5930  002502  0980               	iorlw	128
  5931  002504  6E04               	movwf	lcd_command@x^0,c
  5932  002506                     
  5933                           ;../timer.X/lcd.c: 33:  PORTD = x;
  5934  002506  C004  FF90         	movff	lcd_command@x,3984	;volatile
  5935  00250A                     
  5936                           ;../timer.X/lcd.c: 34:  _delay((unsigned long)((5)*(4000000/4000.0)));
  5937  00250A  0E07               	movlw	7
  5938  00250C  6E02               	movwf	??_lcd_command^0,c
  5939  00250E  0E7D               	movlw	125
  5940  002510                     u3637:
  5941  002510  2EE8               	decfsz	wreg,f,c
  5942  002512  D7FE               	bra	u3637
  5943  002514  2E02               	decfsz	??_lcd_command^0,f,c
  5944  002516  D7FC               	bra	u3637
  5945  002518  F000               	nop	
  5946  00251A                     
  5947                           ;../timer.X/lcd.c: 36:  x = x & 0xF;
  5948  00251A  5004               	movf	lcd_command@x^0,w,c
  5949  00251C  0B0F               	andlw	15
  5950  00251E  6E04               	movwf	lcd_command@x^0,c
  5951  002520                     
  5952                           ;../timer.X/lcd.c: 37:  PORTD = x;
  5953  002520  C004  FF90         	movff	lcd_command@x,3984	;volatile
  5954  002524                     
  5955                           ;../timer.X/lcd.c: 38:  _delay((unsigned long)((5)*(4000000/4000.0)));
  5956  002524  0E07               	movlw	7
  5957  002526  6E02               	movwf	??_lcd_command^0,c
  5958  002528  0E7D               	movlw	125
  5959  00252A                     u3647:
  5960  00252A  2EE8               	decfsz	wreg,f,c
  5961  00252C  D7FE               	bra	u3647
  5962  00252E  2E02               	decfsz	??_lcd_command^0,f,c
  5963  002530  D7FC               	bra	u3647
  5964  002532  F000               	nop	
  5965  002534                     
  5966                           ;../timer.X/lcd.c: 40:  PORTD = 0;
  5967  002534  0E00               	movlw	0
  5968  002536  6E90               	movwf	144,c	;volatile
  5969  002538                     
  5970                           ;../timer.X/lcd.c: 41:  _delay((unsigned long)((5)*(4000000/4000.0)));
  5971  002538  0E07               	movlw	7
  5972  00253A  6E02               	movwf	??_lcd_command^0,c
  5973  00253C  0E7D               	movlw	125
  5974  00253E                     u3657:
  5975  00253E  2EE8               	decfsz	wreg,f,c
  5976  002540  D7FE               	bra	u3657
  5977  002542  2E02               	decfsz	??_lcd_command^0,f,c
  5978  002544  D7FC               	bra	u3657
  5979  002546  F000               	nop	
  5980  002548                     
  5981                           ;../timer.X/lcd.c: 44:  x = temp;
  5982  002548  C003  F004         	movff	lcd_command@temp,lcd_command@x
  5983  00254C                     
  5984                           ;../timer.X/lcd.c: 45:  x = x & 0xF;
  5985  00254C  5004               	movf	lcd_command@x^0,w,c
  5986  00254E  0B0F               	andlw	15
  5987  002550  6E04               	movwf	lcd_command@x^0,c
  5988  002552                     
  5989                           ;../timer.X/lcd.c: 46:  x = x | 0x80;
  5990  002552  5004               	movf	lcd_command@x^0,w,c
  5991  002554  0980               	iorlw	128
  5992  002556  6E04               	movwf	lcd_command@x^0,c
  5993  002558                     
  5994                           ;../timer.X/lcd.c: 47:  PORTD = x;
  5995  002558  C004  FF90         	movff	lcd_command@x,3984	;volatile
  5996  00255C                     
  5997                           ;../timer.X/lcd.c: 48:  _delay((unsigned long)((5)*(4000000/4000.0)));
  5998  00255C  0E07               	movlw	7
  5999  00255E  6E02               	movwf	??_lcd_command^0,c
  6000  002560  0E7D               	movlw	125
  6001  002562                     u3667:
  6002  002562  2EE8               	decfsz	wreg,f,c
  6003  002564  D7FE               	bra	u3667
  6004  002566  2E02               	decfsz	??_lcd_command^0,f,c
  6005  002568  D7FC               	bra	u3667
  6006  00256A  F000               	nop	
  6007  00256C                     
  6008                           ;../timer.X/lcd.c: 50:  x = x & 0xF;
  6009  00256C  5004               	movf	lcd_command@x^0,w,c
  6010  00256E  0B0F               	andlw	15
  6011  002570  6E04               	movwf	lcd_command@x^0,c
  6012  002572                     
  6013                           ;../timer.X/lcd.c: 51:  PORTD = x;
  6014  002572  C004  FF90         	movff	lcd_command@x,3984	;volatile
  6015  002576                     
  6016                           ;../timer.X/lcd.c: 52:  _delay((unsigned long)((5)*(4000000/4000.0)));
  6017  002576  0E07               	movlw	7
  6018  002578  6E02               	movwf	??_lcd_command^0,c
  6019  00257A  0E7D               	movlw	125
  6020  00257C                     u3677:
  6021  00257C  2EE8               	decfsz	wreg,f,c
  6022  00257E  D7FE               	bra	u3677
  6023  002580  2E02               	decfsz	??_lcd_command^0,f,c
  6024  002582  D7FC               	bra	u3677
  6025  002584  F000               	nop	
  6026  002586  0012               	return		;funcret
  6027  002588                     __end_of_lcd_command:
  6028                           	opt callstack 0
  6029                           
  6030 ;; *************** function _lcd_char *****************
  6031 ;; Defined at:
  6032 ;;		line 75 in file "../timer.X/lcd.c"
  6033 ;; Parameters:    Size  Location     Type
  6034 ;;  x               1    wreg     unsigned char 
  6035 ;; Auto vars:     Size  Location     Type
  6036 ;;  x               1    3[COMRAM] unsigned char 
  6037 ;;  temp            1    2[COMRAM] unsigned char 
  6038 ;; Return value:  Size  Location     Type
  6039 ;;                  1    wreg      void 
  6040 ;; Registers used:
  6041 ;;		wreg, status,2, status,0, cstack
  6042 ;; Tracked objects:
  6043 ;;		On entry : 0/0
  6044 ;;		On exit  : 0/0
  6045 ;;		Unchanged: 0/0
  6046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6048 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6049 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6050 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6051 ;;Total ram usage:        3 bytes
  6052 ;; Hardware stack levels used:    1
  6053 ;; Hardware stack levels required when called:    1
  6054 ;; This function calls:
  6055 ;;		Nothing
  6056 ;; This function is called by:
  6057 ;;		_main
  6058 ;; This function uses a non-reentrant model
  6059 ;;
  6060                           
  6061                           	psect	text26
  6062  002588                     __ptext26:
  6063                           	opt callstack 0
  6064  002588                     _lcd_char:
  6065                           	opt callstack 29
  6066                           
  6067                           ;incstack = 0
  6068                           ;lcd_char@x stored from wreg
  6069  002588  6E04               	movwf	lcd_char@x^0,c
  6070  00258A                     
  6071                           ;../timer.X/lcd.c: 76:  char temp;;../timer.X/lcd.c: 79:  TRISDbits.TRISD0 = 0;
  6072  00258A  908B               	bcf	139,0,c	;volatile
  6073                           
  6074                           ;../timer.X/lcd.c: 80:  TRISDbits.TRISD1 = 0;
  6075  00258C  928B               	bcf	139,1,c	;volatile
  6076                           
  6077                           ;../timer.X/lcd.c: 81:  TRISDbits.TRISD2 = 0;
  6078  00258E  948B               	bcf	139,2,c	;volatile
  6079                           
  6080                           ;../timer.X/lcd.c: 82:  TRISDbits.TRISD3 = 0;
  6081  002590  968B               	bcf	139,3,c	;volatile
  6082                           
  6083                           ;../timer.X/lcd.c: 83:  TRISDbits.TRISD4 = 0;
  6084  002592  988B               	bcf	139,4,c	;volatile
  6085                           
  6086                           ;../timer.X/lcd.c: 84:  TRISDbits.TRISD7 = 0;
  6087  002594  9E8B               	bcf	139,7,c	;volatile
  6088  002596                     
  6089                           ;../timer.X/lcd.c: 86:  temp = x;
  6090  002596  C004  F003         	movff	lcd_char@x,lcd_char@temp
  6091  00259A                     
  6092                           ;../timer.X/lcd.c: 89:  PORTD = 0x10;
  6093  00259A  0E10               	movlw	16
  6094  00259C  6E90               	movwf	144,c	;volatile
  6095  00259E                     
  6096                           ;../timer.X/lcd.c: 90:  _delay((unsigned long)((5)*(4000000/4000.0)));
  6097  00259E  0E07               	movlw	7
  6098  0025A0  6E02               	movwf	??_lcd_char^0,c
  6099  0025A2  0E7D               	movlw	125
  6100  0025A4                     u3687:
  6101  0025A4  2EE8               	decfsz	wreg,f,c
  6102  0025A6  D7FE               	bra	u3687
  6103  0025A8  2E02               	decfsz	??_lcd_char^0,f,c
  6104  0025AA  D7FC               	bra	u3687
  6105  0025AC  F000               	nop	
  6106  0025AE                     
  6107                           ;../timer.X/lcd.c: 92:  x = x >>4;
  6108  0025AE  3804               	swapf	lcd_char@x^0,w,c
  6109  0025B0  0B0F               	andlw	15
  6110  0025B2  6E04               	movwf	lcd_char@x^0,c
  6111  0025B4                     
  6112                           ;../timer.X/lcd.c: 93:  x = x & 0xF;
  6113  0025B4  5004               	movf	lcd_char@x^0,w,c
  6114  0025B6  0B0F               	andlw	15
  6115  0025B8  6E04               	movwf	lcd_char@x^0,c
  6116  0025BA                     
  6117                           ;../timer.X/lcd.c: 94:  x = x | 0x90;
  6118  0025BA  5004               	movf	lcd_char@x^0,w,c
  6119  0025BC  0990               	iorlw	144
  6120  0025BE  6E04               	movwf	lcd_char@x^0,c
  6121  0025C0                     
  6122                           ;../timer.X/lcd.c: 95:  PORTD = x;
  6123  0025C0  C004  FF90         	movff	lcd_char@x,3984	;volatile
  6124  0025C4                     
  6125                           ;../timer.X/lcd.c: 96:  _delay((unsigned long)((5)*(4000000/4000.0)));
  6126  0025C4  0E07               	movlw	7
  6127  0025C6  6E02               	movwf	??_lcd_char^0,c
  6128  0025C8  0E7D               	movlw	125
  6129  0025CA                     u3697:
  6130  0025CA  2EE8               	decfsz	wreg,f,c
  6131  0025CC  D7FE               	bra	u3697
  6132  0025CE  2E02               	decfsz	??_lcd_char^0,f,c
  6133  0025D0  D7FC               	bra	u3697
  6134  0025D2  F000               	nop	
  6135  0025D4                     
  6136                           ;../timer.X/lcd.c: 98:  x = x & 0x1F;
  6137  0025D4  5004               	movf	lcd_char@x^0,w,c
  6138  0025D6  0B1F               	andlw	31
  6139  0025D8  6E04               	movwf	lcd_char@x^0,c
  6140  0025DA                     
  6141                           ;../timer.X/lcd.c: 99:  PORTD = x;
  6142  0025DA  C004  FF90         	movff	lcd_char@x,3984	;volatile
  6143  0025DE                     
  6144                           ;../timer.X/lcd.c: 100:  _delay((unsigned long)((5)*(4000000/4000.0)));
  6145  0025DE  0E07               	movlw	7
  6146  0025E0  6E02               	movwf	??_lcd_char^0,c
  6147  0025E2  0E7D               	movlw	125
  6148  0025E4                     u3707:
  6149  0025E4  2EE8               	decfsz	wreg,f,c
  6150  0025E6  D7FE               	bra	u3707
  6151  0025E8  2E02               	decfsz	??_lcd_char^0,f,c
  6152  0025EA  D7FC               	bra	u3707
  6153  0025EC  F000               	nop	
  6154  0025EE                     
  6155                           ;../timer.X/lcd.c: 102:  PORTD = 0x10;
  6156  0025EE  0E10               	movlw	16
  6157  0025F0  6E90               	movwf	144,c	;volatile
  6158  0025F2                     
  6159                           ;../timer.X/lcd.c: 103:  _delay((unsigned long)((5)*(4000000/4000.0)));
  6160  0025F2  0E07               	movlw	7
  6161  0025F4  6E02               	movwf	??_lcd_char^0,c
  6162  0025F6  0E7D               	movlw	125
  6163  0025F8                     u3717:
  6164  0025F8  2EE8               	decfsz	wreg,f,c
  6165  0025FA  D7FE               	bra	u3717
  6166  0025FC  2E02               	decfsz	??_lcd_char^0,f,c
  6167  0025FE  D7FC               	bra	u3717
  6168  002600  F000               	nop	
  6169  002602                     
  6170                           ;../timer.X/lcd.c: 106:  x = temp;
  6171  002602  C003  F004         	movff	lcd_char@temp,lcd_char@x
  6172  002606                     
  6173                           ;../timer.X/lcd.c: 107:  x = x & 0xF;
  6174  002606  5004               	movf	lcd_char@x^0,w,c
  6175  002608  0B0F               	andlw	15
  6176  00260A  6E04               	movwf	lcd_char@x^0,c
  6177  00260C                     
  6178                           ;../timer.X/lcd.c: 108:  x = x | 0x90;
  6179  00260C  5004               	movf	lcd_char@x^0,w,c
  6180  00260E  0990               	iorlw	144
  6181  002610  6E04               	movwf	lcd_char@x^0,c
  6182  002612                     
  6183                           ;../timer.X/lcd.c: 109:  PORTD = x;
  6184  002612  C004  FF90         	movff	lcd_char@x,3984	;volatile
  6185  002616                     
  6186                           ;../timer.X/lcd.c: 110:  _delay((unsigned long)((5)*(4000000/4000.0)));
  6187  002616  0E07               	movlw	7
  6188  002618  6E02               	movwf	??_lcd_char^0,c
  6189  00261A  0E7D               	movlw	125
  6190  00261C                     u3727:
  6191  00261C  2EE8               	decfsz	wreg,f,c
  6192  00261E  D7FE               	bra	u3727
  6193  002620  2E02               	decfsz	??_lcd_char^0,f,c
  6194  002622  D7FC               	bra	u3727
  6195  002624  F000               	nop	
  6196  002626                     
  6197                           ;../timer.X/lcd.c: 112:  x = x & 0x1F;
  6198  002626  5004               	movf	lcd_char@x^0,w,c
  6199  002628  0B1F               	andlw	31
  6200  00262A  6E04               	movwf	lcd_char@x^0,c
  6201  00262C                     
  6202                           ;../timer.X/lcd.c: 113:  PORTD = x;
  6203  00262C  C004  FF90         	movff	lcd_char@x,3984	;volatile
  6204  002630                     
  6205                           ;../timer.X/lcd.c: 114:  _delay((unsigned long)((5)*(4000000/4000.0)));
  6206  002630  0E07               	movlw	7
  6207  002632  6E02               	movwf	??_lcd_char^0,c
  6208  002634  0E7D               	movlw	125
  6209  002636                     u3737:
  6210  002636  2EE8               	decfsz	wreg,f,c
  6211  002638  D7FE               	bra	u3737
  6212  00263A  2E02               	decfsz	??_lcd_char^0,f,c
  6213  00263C  D7FC               	bra	u3737
  6214  00263E  F000               	nop	
  6215  002640  0012               	return		;funcret
  6216  002642                     __end_of_lcd_char:
  6217                           	opt callstack 0
  6218                           
  6219 ;; *************** function _i2c_init *****************
  6220 ;; Defined at:
  6221 ;;		line 10 in file "../timer.X/i2c.c"
  6222 ;; Parameters:    Size  Location     Type
  6223 ;;		None
  6224 ;; Auto vars:     Size  Location     Type
  6225 ;;		None
  6226 ;; Return value:  Size  Location     Type
  6227 ;;                  1    wreg      void 
  6228 ;; Registers used:
  6229 ;;		wreg, status,2
  6230 ;; Tracked objects:
  6231 ;;		On entry : 0/0
  6232 ;;		On exit  : 0/0
  6233 ;;		Unchanged: 0/0
  6234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6238 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6239 ;;Total ram usage:        0 bytes
  6240 ;; Hardware stack levels used:    1
  6241 ;; Hardware stack levels required when called:    1
  6242 ;; This function calls:
  6243 ;;		Nothing
  6244 ;; This function is called by:
  6245 ;;		_main
  6246 ;; This function uses a non-reentrant model
  6247 ;;
  6248                           
  6249                           	psect	text27
  6250  002D4C                     __ptext27:
  6251                           	opt callstack 0
  6252  002D4C                     _i2c_init:
  6253                           	opt callstack 29
  6254  002D4C                     
  6255                           ;../timer.X/i2c.c: 12:     TRISCbits.TRISC3 = 1;
  6256  002D4C  868A               	bsf	138,3,c	;volatile
  6257                           
  6258                           ;../timer.X/i2c.c: 13:     TRISCbits.TRISC4 = 1;
  6259  002D4E  888A               	bsf	138,4,c	;volatile
  6260  002D50                     
  6261                           ;../timer.X/i2c.c: 17:     SSP1CLKPPS = 0x13;
  6262  002D50  0E13               	movlw	19
  6263  002D52  010E               	movlb	14	; () banked
  6264  002D54  6FB7               	movwf	183,b	;volatile
  6265                           
  6266                           ;../timer.X/i2c.c: 18:     SSP1DATPPS = 0x14;
  6267  002D56  0E14               	movlw	20
  6268  002D58  6FB8               	movwf	184,b	;volatile
  6269                           
  6270                           ;../timer.X/i2c.c: 20:     RC4PPS = 0x10;
  6271  002D5A  0E10               	movlw	16
  6272  002D5C  6FFB               	movwf	251,b	;volatile
  6273                           
  6274                           ;../timer.X/i2c.c: 21:     RC3PPS = 0x0F;
  6275  002D5E  0E0F               	movlw	15
  6276  002D60  6FFA               	movwf	250,b	;volatile
  6277                           
  6278                           ;../timer.X/i2c.c: 24:     SSP1ADD = 12;
  6279  002D62  0E0C               	movlw	12
  6280  002D64  6E93               	movwf	147,c	;volatile
  6281                           
  6282                           ;../timer.X/i2c.c: 26:     SSP1CON1bits.SSPM = 8;
  6283  002D66  5096               	movf	150,w,c	;volatile
  6284  002D68  0BF0               	andlw	-16
  6285  002D6A  0908               	iorlw	8
  6286  002D6C  6E96               	movwf	150,c	;volatile
  6287  002D6E                     
  6288                           ; BSR set to: 14
  6289                           ;../timer.X/i2c.c: 28:     SSP1CON1bits.WCOL = 0;
  6290  002D6E  9E96               	bcf	150,7,c	;volatile
  6291  002D70                     
  6292                           ; BSR set to: 14
  6293                           ;../timer.X/i2c.c: 29:     SSP1CON1bits.SSPOV = 0;
  6294  002D70  9C96               	bcf	150,6,c	;volatile
  6295  002D72                     
  6296                           ; BSR set to: 14
  6297                           ;../timer.X/i2c.c: 30:     SSP1CON1bits.SSPEN = 1;
  6298  002D72  8A96               	bsf	150,5,c	;volatile
  6299  002D74                     
  6300                           ; BSR set to: 14
  6301  002D74  0012               	return		;funcret
  6302  002D76                     __end_of_i2c_init:
  6303                           	opt callstack 0
  6304                           
  6305 ;; *************** function _getr *****************
  6306 ;; Defined at:
  6307 ;;		line 98 in file "ccp.c"
  6308 ;; Parameters:    Size  Location     Type
  6309 ;;		None
  6310 ;; Auto vars:     Size  Location     Type
  6311 ;;		None
  6312 ;; Return value:  Size  Location     Type
  6313 ;;                  2    1[COMRAM] int 
  6314 ;; Registers used:
  6315 ;;		None
  6316 ;; Tracked objects:
  6317 ;;		On entry : 0/0
  6318 ;;		On exit  : 0/0
  6319 ;;		Unchanged: 0/0
  6320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6321 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6324 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6325 ;;Total ram usage:        2 bytes
  6326 ;; Hardware stack levels used:    1
  6327 ;; Hardware stack levels required when called:    1
  6328 ;; This function calls:
  6329 ;;		Nothing
  6330 ;; This function is called by:
  6331 ;;		_main
  6332 ;; This function uses a non-reentrant model
  6333 ;;
  6334                           
  6335                           	psect	text28
  6336  002E7E                     __ptext28:
  6337                           	opt callstack 0
  6338  002E7E                     _getr:
  6339                           	opt callstack 29
  6340  002E7E                     
  6341                           ;ccp.c: 99:     return r;
  6342  002E7E  C0C1  F002         	movff	_r,?_getr
  6343  002E82  C0C2  F003         	movff	_r+1,?_getr+1
  6344  002E86  0012               	return		;funcret
  6345  002E88                     __end_of_getr:
  6346                           	opt callstack 0
  6347                           
  6348 ;; *************** function _get_seconds *****************
  6349 ;; Defined at:
  6350 ;;		line 37 in file "timer.c"
  6351 ;; Parameters:    Size  Location     Type
  6352 ;;		None
  6353 ;; Auto vars:     Size  Location     Type
  6354 ;;  sec             1    9[COMRAM] unsigned char 
  6355 ;; Return value:  Size  Location     Type
  6356 ;;                  1    wreg      unsigned char 
  6357 ;; Registers used:
  6358 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6359 ;; Tracked objects:
  6360 ;;		On entry : 0/0
  6361 ;;		On exit  : 0/0
  6362 ;;		Unchanged: 0/0
  6363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6365 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6366 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6367 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6368 ;;Total ram usage:        2 bytes
  6369 ;; Hardware stack levels used:    1
  6370 ;; Hardware stack levels required when called:    2
  6371 ;; This function calls:
  6372 ;;		_i2c_read
  6373 ;; This function is called by:
  6374 ;;		_main
  6375 ;; This function uses a non-reentrant model
  6376 ;;
  6377                           
  6378                           	psect	text29
  6379  002D76                     __ptext29:
  6380                           	opt callstack 0
  6381  002D76                     _get_seconds:
  6382                           	opt callstack 28
  6383  002D76                     
  6384                           ;timer.c: 38:  unsigned char sec = i2c_read(104, 0x00);
  6385  002D76  0E00               	movlw	0
  6386  002D78  6E02               	movwf	i2c_read@registers^0,c
  6387  002D7A  0E68               	movlw	104
  6388  002D7C  EC59  F00F         	call	_i2c_read
  6389  002D80  6E0A               	movwf	get_seconds@sec^0,c
  6390  002D82                     
  6391                           ;timer.c: 41:  return (sec&0x0f)+(((sec>>4)&0x07)*10);
  6392  002D82  C00A  F009         	movff	get_seconds@sec,??_get_seconds
  6393  002D86  0E0F               	movlw	15
  6394  002D88  1609               	andwf	??_get_seconds^0,f,c
  6395  002D8A  380A               	swapf	get_seconds@sec^0,w,c
  6396  002D8C  0B0F               	andlw	15
  6397  002D8E  0B07               	andlw	7
  6398  002D90  0D0A               	mullw	10
  6399  002D92  50F3               	movf	243,w,c
  6400  002D94  2409               	addwf	??_get_seconds^0,w,c
  6401  002D96  0012               	return		;funcret
  6402  002D98                     __end_of_get_seconds:
  6403                           	opt callstack 0
  6404                           
  6405 ;; *************** function _get_minutes *****************
  6406 ;; Defined at:
  6407 ;;		line 67 in file "timer.c"
  6408 ;; Parameters:    Size  Location     Type
  6409 ;;		None
  6410 ;; Auto vars:     Size  Location     Type
  6411 ;;  min             1    9[COMRAM] unsigned char 
  6412 ;; Return value:  Size  Location     Type
  6413 ;;                  1    wreg      unsigned char 
  6414 ;; Registers used:
  6415 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6416 ;; Tracked objects:
  6417 ;;		On entry : 0/0
  6418 ;;		On exit  : 0/0
  6419 ;;		Unchanged: 0/0
  6420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6422 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6423 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6424 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6425 ;;Total ram usage:        2 bytes
  6426 ;; Hardware stack levels used:    1
  6427 ;; Hardware stack levels required when called:    2
  6428 ;; This function calls:
  6429 ;;		_i2c_read
  6430 ;; This function is called by:
  6431 ;;		_main
  6432 ;; This function uses a non-reentrant model
  6433 ;;
  6434                           
  6435                           	psect	text30
  6436  002E3E                     __ptext30:
  6437                           	opt callstack 0
  6438  002E3E                     _get_minutes:
  6439                           	opt callstack 28
  6440  002E3E                     
  6441                           ;timer.c: 68:  unsigned char min = i2c_read(104, 0x01);
  6442  002E3E  0E01               	movlw	1
  6443  002E40  6E02               	movwf	i2c_read@registers^0,c
  6444  002E42  0E68               	movlw	104
  6445  002E44  EC59  F00F         	call	_i2c_read
  6446  002E48  6E0A               	movwf	get_minutes@min^0,c
  6447  002E4A                     
  6448                           ;timer.c: 71:  return (min&0x0f)+((min >> 4)*10);
  6449  002E4A  C00A  F009         	movff	get_minutes@min,??_get_minutes
  6450  002E4E  0E0F               	movlw	15
  6451  002E50  1609               	andwf	??_get_minutes^0,f,c
  6452  002E52  380A               	swapf	get_minutes@min^0,w,c
  6453  002E54  0B0F               	andlw	15
  6454  002E56  0D0A               	mullw	10
  6455  002E58  50F3               	movf	243,w,c
  6456  002E5A  2409               	addwf	??_get_minutes^0,w,c
  6457  002E5C  0012               	return		;funcret
  6458  002E5E                     __end_of_get_minutes:
  6459                           	opt callstack 0
  6460                           
  6461 ;; *************** function _get_hours *****************
  6462 ;; Defined at:
  6463 ;;		line 91 in file "timer.c"
  6464 ;; Parameters:    Size  Location     Type
  6465 ;;		None
  6466 ;; Auto vars:     Size  Location     Type
  6467 ;;  hour            1    9[COMRAM] unsigned char 
  6468 ;; Return value:  Size  Location     Type
  6469 ;;                  1    wreg      unsigned char 
  6470 ;; Registers used:
  6471 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6472 ;; Tracked objects:
  6473 ;;		On entry : 0/0
  6474 ;;		On exit  : 0/0
  6475 ;;		Unchanged: 0/0
  6476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6478 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6479 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6480 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6481 ;;Total ram usage:        2 bytes
  6482 ;; Hardware stack levels used:    1
  6483 ;; Hardware stack levels required when called:    2
  6484 ;; This function calls:
  6485 ;;		_i2c_read
  6486 ;; This function is called by:
  6487 ;;		_main
  6488 ;; This function uses a non-reentrant model
  6489 ;;
  6490                           
  6491                           	psect	text31
  6492  002D98                     __ptext31:
  6493                           	opt callstack 0
  6494  002D98                     _get_hours:
  6495                           	opt callstack 28
  6496  002D98                     
  6497                           ;timer.c: 92:  unsigned char hour = i2c_read(104, 0x02);
  6498  002D98  0E02               	movlw	2
  6499  002D9A  6E02               	movwf	i2c_read@registers^0,c
  6500  002D9C  0E68               	movlw	104
  6501  002D9E  EC59  F00F         	call	_i2c_read
  6502  002DA2  6E0A               	movwf	get_hours@hour^0,c
  6503  002DA4                     
  6504                           ;timer.c: 95:  return (hour&0x0f)+(((hour >> 4)&0x03)*10);
  6505  002DA4  C00A  F009         	movff	get_hours@hour,??_get_hours
  6506  002DA8  0E0F               	movlw	15
  6507  002DAA  1609               	andwf	??_get_hours^0,f,c
  6508  002DAC  380A               	swapf	get_hours@hour^0,w,c
  6509  002DAE  0B0F               	andlw	15
  6510  002DB0  0B03               	andlw	3
  6511  002DB2  0D0A               	mullw	10
  6512  002DB4  50F3               	movf	243,w,c
  6513  002DB6  2409               	addwf	??_get_hours^0,w,c
  6514  002DB8  0012               	return		;funcret
  6515  002DBA                     __end_of_get_hours:
  6516                           	opt callstack 0
  6517                           
  6518 ;; *************** function _get_Aseconds *****************
  6519 ;; Defined at:
  6520 ;;		line 213 in file "timer.c"
  6521 ;; Parameters:    Size  Location     Type
  6522 ;;		None
  6523 ;; Auto vars:     Size  Location     Type
  6524 ;;  Asec            1    9[COMRAM] unsigned char 
  6525 ;; Return value:  Size  Location     Type
  6526 ;;                  1    wreg      unsigned char 
  6527 ;; Registers used:
  6528 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6529 ;; Tracked objects:
  6530 ;;		On entry : 0/0
  6531 ;;		On exit  : 0/0
  6532 ;;		Unchanged: 0/0
  6533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6535 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6536 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6537 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6538 ;;Total ram usage:        2 bytes
  6539 ;; Hardware stack levels used:    1
  6540 ;; Hardware stack levels required when called:    2
  6541 ;; This function calls:
  6542 ;;		_i2c_read
  6543 ;; This function is called by:
  6544 ;;		_main
  6545 ;; This function uses a non-reentrant model
  6546 ;;
  6547                           
  6548                           	psect	text32
  6549  002DBA                     __ptext32:
  6550                           	opt callstack 0
  6551  002DBA                     _get_Aseconds:
  6552                           	opt callstack 28
  6553  002DBA                     
  6554                           ;timer.c: 214:  unsigned char Asec = i2c_read(104, 0x07);
  6555  002DBA  0E07               	movlw	7
  6556  002DBC  6E02               	movwf	i2c_read@registers^0,c
  6557  002DBE  0E68               	movlw	104
  6558  002DC0  EC59  F00F         	call	_i2c_read
  6559  002DC4  6E0A               	movwf	get_Aseconds@Asec^0,c
  6560  002DC6                     
  6561                           ;timer.c: 217:  return (Asec&0x0f)+(((Asec>>4)&0x07)*10);
  6562  002DC6  C00A  F009         	movff	get_Aseconds@Asec,??_get_Aseconds
  6563  002DCA  0E0F               	movlw	15
  6564  002DCC  1609               	andwf	??_get_Aseconds^0,f,c
  6565  002DCE  380A               	swapf	get_Aseconds@Asec^0,w,c
  6566  002DD0  0B0F               	andlw	15
  6567  002DD2  0B07               	andlw	7
  6568  002DD4  0D0A               	mullw	10
  6569  002DD6  50F3               	movf	243,w,c
  6570  002DD8  2409               	addwf	??_get_Aseconds^0,w,c
  6571  002DDA  0012               	return		;funcret
  6572  002DDC                     __end_of_get_Aseconds:
  6573                           	opt callstack 0
  6574                           
  6575 ;; *************** function _get_Aminutes *****************
  6576 ;; Defined at:
  6577 ;;		line 237 in file "timer.c"
  6578 ;; Parameters:    Size  Location     Type
  6579 ;;		None
  6580 ;; Auto vars:     Size  Location     Type
  6581 ;;  Amin            1    9[COMRAM] unsigned char 
  6582 ;; Return value:  Size  Location     Type
  6583 ;;                  1    wreg      unsigned char 
  6584 ;; Registers used:
  6585 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6586 ;; Tracked objects:
  6587 ;;		On entry : 0/0
  6588 ;;		On exit  : 0/0
  6589 ;;		Unchanged: 0/0
  6590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6592 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6593 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6594 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6595 ;;Total ram usage:        2 bytes
  6596 ;; Hardware stack levels used:    1
  6597 ;; Hardware stack levels required when called:    2
  6598 ;; This function calls:
  6599 ;;		_i2c_read
  6600 ;; This function is called by:
  6601 ;;		_main
  6602 ;; This function uses a non-reentrant model
  6603 ;;
  6604                           
  6605                           	psect	text33
  6606  002E5E                     __ptext33:
  6607                           	opt callstack 0
  6608  002E5E                     _get_Aminutes:
  6609                           	opt callstack 28
  6610  002E5E                     
  6611                           ;timer.c: 238:  unsigned char Amin = i2c_read(104, 0x08);
  6612  002E5E  0E08               	movlw	8
  6613  002E60  6E02               	movwf	i2c_read@registers^0,c
  6614  002E62  0E68               	movlw	104
  6615  002E64  EC59  F00F         	call	_i2c_read
  6616  002E68  6E0A               	movwf	get_Aminutes@Amin^0,c
  6617  002E6A                     
  6618                           ;timer.c: 241:  return (Amin&0x0f)+((Amin >> 4)*10);
  6619  002E6A  C00A  F009         	movff	get_Aminutes@Amin,??_get_Aminutes
  6620  002E6E  0E0F               	movlw	15
  6621  002E70  1609               	andwf	??_get_Aminutes^0,f,c
  6622  002E72  380A               	swapf	get_Aminutes@Amin^0,w,c
  6623  002E74  0B0F               	andlw	15
  6624  002E76  0D0A               	mullw	10
  6625  002E78  50F3               	movf	243,w,c
  6626  002E7A  2409               	addwf	??_get_Aminutes^0,w,c
  6627  002E7C  0012               	return		;funcret
  6628  002E7E                     __end_of_get_Aminutes:
  6629                           	opt callstack 0
  6630                           
  6631 ;; *************** function _get_Ahours *****************
  6632 ;; Defined at:
  6633 ;;		line 261 in file "timer.c"
  6634 ;; Parameters:    Size  Location     Type
  6635 ;;		None
  6636 ;; Auto vars:     Size  Location     Type
  6637 ;;  Ahour           1    9[COMRAM] unsigned char 
  6638 ;; Return value:  Size  Location     Type
  6639 ;;                  1    wreg      unsigned char 
  6640 ;; Registers used:
  6641 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6642 ;; Tracked objects:
  6643 ;;		On entry : 0/0
  6644 ;;		On exit  : 0/0
  6645 ;;		Unchanged: 0/0
  6646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6648 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6649 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6650 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6651 ;;Total ram usage:        2 bytes
  6652 ;; Hardware stack levels used:    1
  6653 ;; Hardware stack levels required when called:    2
  6654 ;; This function calls:
  6655 ;;		_i2c_read
  6656 ;; This function is called by:
  6657 ;;		_main
  6658 ;; This function uses a non-reentrant model
  6659 ;;
  6660                           
  6661                           	psect	text34
  6662  002DDC                     __ptext34:
  6663                           	opt callstack 0
  6664  002DDC                     _get_Ahours:
  6665                           	opt callstack 28
  6666  002DDC                     
  6667                           ;timer.c: 262:  unsigned char Ahour = i2c_read(104, 0x09);
  6668  002DDC  0E09               	movlw	9
  6669  002DDE  6E02               	movwf	i2c_read@registers^0,c
  6670  002DE0  0E68               	movlw	104
  6671  002DE2  EC59  F00F         	call	_i2c_read
  6672  002DE6  6E0A               	movwf	get_Ahours@Ahour^0,c
  6673  002DE8                     
  6674                           ;timer.c: 265:  return (Ahour&0x0f)+(((Ahour >> 4)&0x03)*10);
  6675  002DE8  C00A  F009         	movff	get_Ahours@Ahour,??_get_Ahours
  6676  002DEC  0E0F               	movlw	15
  6677  002DEE  1609               	andwf	??_get_Ahours^0,f,c
  6678  002DF0  380A               	swapf	get_Ahours@Ahour^0,w,c
  6679  002DF2  0B0F               	andlw	15
  6680  002DF4  0B03               	andlw	3
  6681  002DF6  0D0A               	mullw	10
  6682  002DF8  50F3               	movf	243,w,c
  6683  002DFA  2409               	addwf	??_get_Ahours^0,w,c
  6684  002DFC  0012               	return		;funcret
  6685  002DFE                     __end_of_get_Ahours:
  6686                           	opt callstack 0
  6687                           
  6688 ;; *************** function _i2c_read *****************
  6689 ;; Defined at:
  6690 ;;		line 36 in file "../timer.X/i2c.c"
  6691 ;; Parameters:    Size  Location     Type
  6692 ;;  address         1    wreg     unsigned char 
  6693 ;;  registers       1    1[COMRAM] unsigned char 
  6694 ;; Auto vars:     Size  Location     Type
  6695 ;;  address         1    7[COMRAM] unsigned char 
  6696 ;;  num             4    2[COMRAM] unsigned long 
  6697 ;;  read            1    6[COMRAM] unsigned char 
  6698 ;; Return value:  Size  Location     Type
  6699 ;;                  1    wreg      unsigned char 
  6700 ;; Registers used:
  6701 ;;		wreg, status,2, status,0
  6702 ;; Tracked objects:
  6703 ;;		On entry : 0/0
  6704 ;;		On exit  : 0/0
  6705 ;;		Unchanged: 0/0
  6706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6707 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6708 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6710 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6711 ;;Total ram usage:        7 bytes
  6712 ;; Hardware stack levels used:    1
  6713 ;; Hardware stack levels required when called:    1
  6714 ;; This function calls:
  6715 ;;		Nothing
  6716 ;; This function is called by:
  6717 ;;		_main
  6718 ;;		_rtc_init
  6719 ;;		_get_seconds
  6720 ;;		_set_seconds
  6721 ;;		_get_minutes
  6722 ;;		_get_hours
  6723 ;;		_set_hours
  6724 ;;		_get_Aseconds
  6725 ;;		_get_Aminutes
  6726 ;;		_get_Ahours
  6727 ;;		_set_Ahours
  6728 ;;		_get_dayname
  6729 ;;		_get_months
  6730 ;;		_get_days
  6731 ;;		_get_years
  6732 ;; This function uses a non-reentrant model
  6733 ;;
  6734                           
  6735                           	psect	text35
  6736  001EB2                     __ptext35:
  6737                           	opt callstack 0
  6738  001EB2                     _i2c_read:
  6739                           	opt callstack 28
  6740                           
  6741                           ;incstack = 0
  6742                           ;i2c_read@address stored from wreg
  6743  001EB2  6E08               	movwf	i2c_read@address^0,c
  6744  001EB4                     
  6745                           ;../timer.X/i2c.c: 37:  SSP1CON2bits.SEN = 1;
  6746  001EB4  8097               	bsf	151,0,c	;volatile
  6747  001EB6                     l227:
  6748  001EB6  B097               	btfsc	151,0,c	;volatile
  6749  001EB8  EF60  F00F         	goto	u1781
  6750  001EBC  EF62  F00F         	goto	u1780
  6751  001EC0                     u1781:
  6752  001EC0  EF5B  F00F         	goto	l227
  6753  001EC4                     u1780:
  6754  001EC4                     
  6755                           ;../timer.X/i2c.c: 40:  SSP1BUF = (address << 1) & 0xfe;
  6756  001EC4  5008               	movf	i2c_read@address^0,w,c
  6757  001EC6  2408               	addwf	i2c_read@address^0,w,c
  6758  001EC8  0BFE               	andlw	254
  6759  001ECA  6E92               	movwf	146,c	;volatile
  6760  001ECC                     l230:
  6761  001ECC  B495               	btfsc	149,2,c	;volatile
  6762  001ECE  EF6B  F00F         	goto	u1791
  6763  001ED2  EF6D  F00F         	goto	u1790
  6764  001ED6                     u1791:
  6765  001ED6  EF66  F00F         	goto	l230
  6766  001EDA                     u1790:
  6767  001EDA                     
  6768                           ;../timer.X/i2c.c: 45:  if (SSP1CON2bits.ACKSTAT == 1) {
  6769  001EDA  AC97               	btfss	151,6,c	;volatile
  6770  001EDC  EF72  F00F         	goto	u1801
  6771  001EE0  EF74  F00F         	goto	u1800
  6772  001EE4                     u1801:
  6773  001EE4  EF7F  F00F         	goto	l233
  6774  001EE8                     u1800:
  6775  001EE8                     
  6776                           ;../timer.X/i2c.c: 46:   SSP1CON2bits.PEN = 1;
  6777  001EE8  8497               	bsf	151,2,c	;volatile
  6778  001EEA                     l234:
  6779  001EEA  B497               	btfsc	151,2,c	;volatile
  6780  001EEC  EF7A  F00F         	goto	u1811
  6781  001EF0  EF7C  F00F         	goto	u1810
  6782  001EF4                     u1811:
  6783  001EF4  EF75  F00F         	goto	l234
  6784  001EF8                     u1810:
  6785  001EF8                     l2674:
  6786                           
  6787                           ;../timer.X/i2c.c: 48:   return 0;
  6788  001EF8  0E00               	movlw	0
  6789  001EFA  EFFC  F00F         	goto	l237
  6790  001EFE                     l233:
  6791                           
  6792                           ;../timer.X/i2c.c: 51:  SSP1BUF = registers;
  6793  001EFE  C002  FF92         	movff	i2c_read@registers,3986	;volatile
  6794  001F02                     l238:
  6795  001F02  B495               	btfsc	149,2,c	;volatile
  6796  001F04  EF86  F00F         	goto	u1821
  6797  001F08  EF88  F00F         	goto	u1820
  6798  001F0C                     u1821:
  6799  001F0C  EF81  F00F         	goto	l238
  6800  001F10                     u1820:
  6801  001F10                     
  6802                           ;../timer.X/i2c.c: 56:  if (SSP1CON2bits.ACKSTAT == 1) {
  6803  001F10  AC97               	btfss	151,6,c	;volatile
  6804  001F12  EF8D  F00F         	goto	u1831
  6805  001F16  EF8F  F00F         	goto	u1830
  6806  001F1A                     u1831:
  6807  001F1A  EF99  F00F         	goto	l241
  6808  001F1E                     u1830:
  6809  001F1E                     
  6810                           ;../timer.X/i2c.c: 57:   SSP1CON2bits.PEN = 1;
  6811  001F1E  8497               	bsf	151,2,c	;volatile
  6812  001F20                     l242:
  6813  001F20  B497               	btfsc	151,2,c	;volatile
  6814  001F22  EF95  F00F         	goto	u1841
  6815  001F26  EF97  F00F         	goto	u1840
  6816  001F2A                     u1841:
  6817  001F2A  EF90  F00F         	goto	l242
  6818  001F2E                     u1840:
  6819  001F2E  EF7C  F00F         	goto	l2674
  6820  001F32                     l241:
  6821                           
  6822                           ;../timer.X/i2c.c: 63:  SSP1CON2bits.RSEN = 1;
  6823  001F32  8297               	bsf	151,1,c	;volatile
  6824  001F34                     l245:
  6825  001F34  B297               	btfsc	151,1,c	;volatile
  6826  001F36  EF9F  F00F         	goto	u1851
  6827  001F3A  EFA1  F00F         	goto	u1850
  6828  001F3E                     u1851:
  6829  001F3E  EF9A  F00F         	goto	l245
  6830  001F42                     u1850:
  6831  001F42                     
  6832                           ;../timer.X/i2c.c: 66:  SSP1BUF = (address << 1) | 0x01;
  6833  001F42  80D8               	bsf	status,0,c
  6834  001F44  3408               	rlcf	i2c_read@address^0,w,c
  6835  001F46  6E92               	movwf	146,c	;volatile
  6836  001F48                     l248:
  6837  001F48  B495               	btfsc	149,2,c	;volatile
  6838  001F4A  EFA9  F00F         	goto	u1861
  6839  001F4E  EFAB  F00F         	goto	u1860
  6840  001F52                     u1861:
  6841  001F52  EFA4  F00F         	goto	l248
  6842  001F56                     u1860:
  6843  001F56                     
  6844                           ;../timer.X/i2c.c: 70:  if (SSP1CON2bits.ACKSTAT == 1) {
  6845  001F56  AC97               	btfss	151,6,c	;volatile
  6846  001F58  EFB0  F00F         	goto	u1871
  6847  001F5C  EFB2  F00F         	goto	u1870
  6848  001F60                     u1871:
  6849  001F60  EFBC  F00F         	goto	l251
  6850  001F64                     u1870:
  6851  001F64                     
  6852                           ;../timer.X/i2c.c: 71:   SSP1CON2bits.PEN = 1;
  6853  001F64  8497               	bsf	151,2,c	;volatile
  6854  001F66                     l252:
  6855  001F66  B497               	btfsc	151,2,c	;volatile
  6856  001F68  EFB8  F00F         	goto	u1881
  6857  001F6C  EFBA  F00F         	goto	u1880
  6858  001F70                     u1881:
  6859  001F70  EFB3  F00F         	goto	l252
  6860  001F74                     u1880:
  6861  001F74  EF7C  F00F         	goto	l2674
  6862  001F78                     l251:
  6863                           
  6864                           ;../timer.X/i2c.c: 76:  SSP1CON2bits.RCEN = 1;
  6865  001F78  8697               	bsf	151,3,c	;volatile
  6866  001F7A                     
  6867                           ;../timer.X/i2c.c: 78:  unsigned long num = 10000L;
  6868  001F7A  0E10               	movlw	16
  6869  001F7C  6E03               	movwf	i2c_read@num^0,c
  6870  001F7E  0E27               	movlw	39
  6871  001F80  6E04               	movwf	(i2c_read@num+1)^0,c
  6872  001F82  0E00               	movlw	0
  6873  001F84  6E05               	movwf	(i2c_read@num+2)^0,c
  6874  001F86  0E00               	movlw	0
  6875  001F88  6E06               	movwf	(i2c_read@num+3)^0,c
  6876                           
  6877                           ;../timer.X/i2c.c: 79:  while (SSP1STATbits.BF == 0) {
  6878  001F8A  EFE1  F00F         	goto	l255
  6879  001F8E                     l2694:
  6880                           
  6881                           ;../timer.X/i2c.c: 80:         if (--num == 0) {
  6882  001F8E  0603               	decf	i2c_read@num^0,f,c
  6883  001F90  0E00               	movlw	0
  6884  001F92  5A04               	subwfb	(i2c_read@num+1)^0,f,c
  6885  001F94  5A05               	subwfb	(i2c_read@num+2)^0,f,c
  6886  001F96  5A06               	subwfb	(i2c_read@num+3)^0,f,c
  6887  001F98  5003               	movf	i2c_read@num^0,w,c
  6888  001F9A  1004               	iorwf	(i2c_read@num+1)^0,w,c
  6889  001F9C  1005               	iorwf	(i2c_read@num+2)^0,w,c
  6890  001F9E  1006               	iorwf	(i2c_read@num+3)^0,w,c
  6891  001FA0  A4D8               	btfss	status,2,c
  6892  001FA2  EFD5  F00F         	goto	u1891
  6893  001FA6  EFD7  F00F         	goto	u1890
  6894  001FAA                     u1891:
  6895  001FAA  EFE1  F00F         	goto	l255
  6896  001FAE                     u1890:
  6897  001FAE                     
  6898                           ;../timer.X/i2c.c: 81:             SSP1CON2bits.PEN = 1;
  6899  001FAE  8497               	bsf	151,2,c	;volatile
  6900  001FB0                     l258:
  6901  001FB0  B497               	btfsc	151,2,c	;volatile
  6902  001FB2  EFDD  F00F         	goto	u1901
  6903  001FB6  EFDF  F00F         	goto	u1900
  6904  001FBA                     u1901:
  6905  001FBA  EFD8  F00F         	goto	l258
  6906  001FBE                     u1900:
  6907  001FBE  EF7C  F00F         	goto	l2674
  6908  001FC2                     l255:
  6909                           
  6910                           ;../timer.X/i2c.c: 79:  while (SSP1STATbits.BF == 0) {
  6911  001FC2  A095               	btfss	149,0,c	;volatile
  6912  001FC4  EFE6  F00F         	goto	u1911
  6913  001FC8  EFE8  F00F         	goto	u1910
  6914  001FCC                     u1911:
  6915  001FCC  EFC7  F00F         	goto	l2694
  6916  001FD0                     u1910:
  6917  001FD0                     
  6918                           ;../timer.X/i2c.c: 87:  unsigned char read = SSP1BUF;
  6919  001FD0  CF92 F007          	movff	3986,i2c_read@read	;volatile
  6920                           
  6921                           ;../timer.X/i2c.c: 90:  SSP1CON2bits.ACKDT = 1;
  6922  001FD4  8A97               	bsf	151,5,c	;volatile
  6923                           
  6924                           ;../timer.X/i2c.c: 91:  SSP1CON2bits.ACKEN = 1;
  6925  001FD6  8897               	bsf	151,4,c	;volatile
  6926  001FD8                     l262:
  6927  001FD8  B897               	btfsc	151,4,c	;volatile
  6928  001FDA  EFF1  F00F         	goto	u1921
  6929  001FDE  EFF3  F00F         	goto	u1920
  6930  001FE2                     u1921:
  6931  001FE2  EFEC  F00F         	goto	l262
  6932  001FE6                     u1920:
  6933  001FE6                     
  6934                           ;../timer.X/i2c.c: 94:  SSP1CON2bits.PEN = 1;
  6935  001FE6  8497               	bsf	151,2,c	;volatile
  6936  001FE8                     l265:
  6937  001FE8  B497               	btfsc	151,2,c	;volatile
  6938  001FEA  EFF9  F00F         	goto	u1931
  6939  001FEE  EFFB  F00F         	goto	u1930
  6940  001FF2                     u1931:
  6941  001FF2  EFF4  F00F         	goto	l265
  6942  001FF6                     u1930:
  6943  001FF6                     
  6944                           ;../timer.X/i2c.c: 97:  return read;
  6945  001FF6  5007               	movf	i2c_read@read^0,w,c
  6946  001FF8                     l237:
  6947  001FF8  0012               	return		;funcret
  6948  001FFA                     __end_of_i2c_read:
  6949                           	opt callstack 0
  6950                           
  6951 ;; *************** function _ccp_init *****************
  6952 ;; Defined at:
  6953 ;;		line 16 in file "ccp.c"
  6954 ;; Parameters:    Size  Location     Type
  6955 ;;		None
  6956 ;; Auto vars:     Size  Location     Type
  6957 ;;		None
  6958 ;; Return value:  Size  Location     Type
  6959 ;;                  1    wreg      void 
  6960 ;; Registers used:
  6961 ;;		wreg, status,2
  6962 ;; Tracked objects:
  6963 ;;		On entry : 0/0
  6964 ;;		On exit  : 0/0
  6965 ;;		Unchanged: 0/0
  6966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6970 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6971 ;;Total ram usage:        0 bytes
  6972 ;; Hardware stack levels used:    1
  6973 ;; Hardware stack levels required when called:    1
  6974 ;; This function calls:
  6975 ;;		Nothing
  6976 ;; This function is called by:
  6977 ;;		_main
  6978 ;; This function uses a non-reentrant model
  6979 ;;
  6980                           
  6981                           	psect	text36
  6982  002CD8                     __ptext36:
  6983                           	opt callstack 0
  6984  002CD8                     _ccp_init:
  6985                           	opt callstack 29
  6986  002CD8                     
  6987                           ;ccp.c: 18:     TMR1 = 0;
  6988  002CD8  0E00               	movlw	0
  6989  002CDA  6ECE               	movwf	206,c	;volatile
  6990  002CDC  0E00               	movlw	0
  6991  002CDE  6ECD               	movwf	205,c	;volatile
  6992  002CE0                     
  6993                           ;ccp.c: 19:     T1CKPS0 = 1;
  6994  002CE0  88CF               	bsf	4047,4,c	;volatile
  6995  002CE2                     
  6996                           ;ccp.c: 20:     T1CKPS1 = 1;
  6997  002CE2  8ACF               	bsf	4047,5,c	;volatile
  6998  002CE4                     
  6999                           ;ccp.c: 21:     T1CONbits.NOT_SYNC = 0;
  7000  002CE4  94CF               	bcf	207,2,c	;volatile
  7001  002CE6                     
  7002                           ;ccp.c: 22:     T1CONbits.RD16 = 1;
  7003  002CE6  82CF               	bsf	207,1,c	;volatile
  7004                           
  7005                           ;ccp.c: 23:     TMR1CLKbits.CS=1;
  7006  002CE8  50D2               	movf	210,w,c	;volatile
  7007  002CEA  0BF0               	andlw	-16
  7008  002CEC  0901               	iorlw	1
  7009  002CEE  6ED2               	movwf	210,c	;volatile
  7010  002CF0                     
  7011                           ;ccp.c: 24:     TMR1IF=0;
  7012  002CF0  010E               	movlb	14	; () banked
  7013  002CF2  91CE               	bcf	206,0,b	;volatile
  7014  002CF4                     
  7015                           ; BSR set to: 14
  7016                           ;ccp.c: 25:     TMR1ON = 1;
  7017  002CF4  80CF               	bsf	4047,0,c	;volatile
  7018                           
  7019                           ;ccp.c: 28:     CCP1PPS=0x12;
  7020  002CF6  0E12               	movlw	18
  7021  002CF8  6FAF               	movwf	175,b	;volatile
  7022                           
  7023                           ;ccp.c: 29:     CCPR1=0x00;
  7024  002CFA  0E00               	movlw	0
  7025  002CFC  6EAB               	movwf	171,c	;volatile
  7026  002CFE  0E00               	movlw	0
  7027  002D00  6EAA               	movwf	170,c	;volatile
  7028                           
  7029                           ;ccp.c: 30:     CCP1CONbits.MODE=0x05;
  7030  002D02  50AC               	movf	172,w,c	;volatile
  7031  002D04  0BF0               	andlw	-16
  7032  002D06  0905               	iorlw	5
  7033  002D08  6EAC               	movwf	172,c	;volatile
  7034  002D0A                     
  7035                           ; BSR set to: 14
  7036                           ;ccp.c: 31:     CCP1CONbits.EN = 1;
  7037  002D0A  8EAC               	bsf	172,7,c	;volatile
  7038  002D0C                     
  7039                           ; BSR set to: 14
  7040                           ;ccp.c: 32:     CCP1IF=0;
  7041  002D0C  91D0               	bcf	208,0,b	;volatile
  7042  002D0E                     
  7043                           ; BSR set to: 14
  7044                           ;ccp.c: 36:     CCP1IE = 1;
  7045  002D0E  81C8               	bsf	200,0,b	;volatile
  7046  002D10                     
  7047                           ; BSR set to: 14
  7048                           ;ccp.c: 37:     PEIE = 1;
  7049  002D10  8CF2               	bsf	4082,6,c	;volatile
  7050  002D12                     
  7051                           ; BSR set to: 14
  7052                           ;ccp.c: 38:     GIE = 1;
  7053  002D12  8EF2               	bsf	4082,7,c	;volatile
  7054  002D14                     
  7055                           ; BSR set to: 14
  7056  002D14  0012               	return		;funcret
  7057  002D16                     __end_of_ccp_init:
  7058                           	opt callstack 0
  7059                           
  7060 ;; *************** function _adc_init *****************
  7061 ;; Defined at:
  7062 ;;		line 9 in file "../timer.X/adc.c"
  7063 ;; Parameters:    Size  Location     Type
  7064 ;;		None
  7065 ;; Auto vars:     Size  Location     Type
  7066 ;;		None
  7067 ;; Return value:  Size  Location     Type
  7068 ;;                  1    wreg      void 
  7069 ;; Registers used:
  7070 ;;		wreg, status,2
  7071 ;; Tracked objects:
  7072 ;;		On entry : 0/0
  7073 ;;		On exit  : 0/0
  7074 ;;		Unchanged: 0/0
  7075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7079 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7080 ;;Total ram usage:        0 bytes
  7081 ;; Hardware stack levels used:    1
  7082 ;; Hardware stack levels required when called:    1
  7083 ;; This function calls:
  7084 ;;		Nothing
  7085 ;; This function is called by:
  7086 ;;		_main
  7087 ;; This function uses a non-reentrant model
  7088 ;;
  7089                           
  7090                           	psect	text37
  7091  002E88                     __ptext37:
  7092                           	opt callstack 0
  7093  002E88                     _adc_init:
  7094                           	opt callstack 29
  7095  002E88                     
  7096                           ;../timer.X/adc.c: 10:     TRISAbits.TRISA0 = 1;
  7097  002E88  8088               	bsf	136,0,c	;volatile
  7098  002E8A                     
  7099                           ;../timer.X/adc.c: 13:     ANSELC = 0x0;
  7100  002E8A  0E00               	movlw	0
  7101  002E8C  010F               	movlb	15	; () banked
  7102  002E8E  6F21               	movwf	33,b	;volatile
  7103  002E90                     
  7104                           ; BSR set to: 15
  7105  002E90  0012               	return		;funcret
  7106  002E92                     __end_of_adc_init:
  7107                           	opt callstack 0
  7108                           
  7109 ;; *************** function _adcNum0 *****************
  7110 ;; Defined at:
  7111 ;;		line 19 in file "../timer.X/adc.c"
  7112 ;; Parameters:    Size  Location     Type
  7113 ;;		None
  7114 ;; Auto vars:     Size  Location     Type
  7115 ;;		None
  7116 ;; Return value:  Size  Location     Type
  7117 ;;                  4    1[COMRAM] unsigned long 
  7118 ;; Registers used:
  7119 ;;		wreg, status,2, status,0
  7120 ;; Tracked objects:
  7121 ;;		On entry : 0/0
  7122 ;;		On exit  : 0/0
  7123 ;;		Unchanged: 0/0
  7124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7125 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7127 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7128 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7129 ;;Total ram usage:        7 bytes
  7130 ;; Hardware stack levels used:    1
  7131 ;; Hardware stack levels required when called:    1
  7132 ;; This function calls:
  7133 ;;		Nothing
  7134 ;; This function is called by:
  7135 ;;		_main
  7136 ;; This function uses a non-reentrant model
  7137 ;;
  7138                           
  7139                           	psect	text38
  7140  002C56                     __ptext38:
  7141                           	opt callstack 0
  7142  002C56                     _adcNum0:
  7143                           	opt callstack 29
  7144  002C56                     
  7145                           ;../timer.X/adc.c: 20:     ADCON0 = 0x00;
  7146  002C56  0E00               	movlw	0
  7147  002C58  6E60               	movwf	96,c	;volatile
  7148                           
  7149                           ;../timer.X/adc.c: 21:     ADPCH = 0;
  7150  002C5A  0E00               	movlw	0
  7151  002C5C  010F               	movlb	15	; () banked
  7152  002C5E  6F5F               	movwf	95,b	;volatile
  7153  002C60                     
  7154                           ; BSR set to: 15
  7155                           ;../timer.X/adc.c: 22:     ADCON0bits.ADON = 1;
  7156  002C60  8E60               	bsf	96,7,c	;volatile
  7157  002C62                     
  7158                           ; BSR set to: 15
  7159                           ;../timer.X/adc.c: 23:     ADCON0bits.GO = 1;
  7160  002C62  8060               	bsf	96,0,c	;volatile
  7161  002C64                     l198:
  7162  002C64  B060               	btfsc	96,0,c	;volatile
  7163  002C66  EF37  F016         	goto	u2211
  7164  002C6A  EF39  F016         	goto	u2210
  7165  002C6E                     u2211:
  7166  002C6E  EF32  F016         	goto	l198
  7167  002C72                     u2210:
  7168  002C72                     
  7169                           ;../timer.X/adc.c: 27:     ADCON0bits.ADON = 0;
  7170  002C72  9E60               	bcf	96,7,c	;volatile
  7171  002C74                     
  7172                           ;../timer.X/adc.c: 30:     return (ADRES >> 6);
  7173  002C74  CF63 F006          	movff	3939,??_adcNum0	;volatile
  7174  002C78  CF64 F007          	movff	3940,??_adcNum0+1	;volatile
  7175  002C7C  0E06               	movlw	6
  7176  002C7E  6E08               	movwf	(??_adcNum0+2)^0,c
  7177  002C80                     u2225:
  7178  002C80  90D8               	bcf	status,0,c
  7179  002C82  3207               	rrcf	(??_adcNum0+1)^0,f,c
  7180  002C84  3206               	rrcf	??_adcNum0^0,f,c
  7181  002C86  2E08               	decfsz	(??_adcNum0+2)^0,f,c
  7182  002C88  EF40  F016         	goto	u2225
  7183  002C8C  C006  F002         	movff	??_adcNum0,?_adcNum0
  7184  002C90  C007  F003         	movff	??_adcNum0+1,?_adcNum0+1
  7185  002C94  6A04               	clrf	(?_adcNum0+2)^0,c
  7186  002C96  6A05               	clrf	(?_adcNum0+3)^0,c
  7187  002C98  0012               	return		;funcret
  7188  002C9A                     __end_of_adcNum0:
  7189                           	opt callstack 0
  7190                           
  7191 ;; *************** function ___lldiv *****************
  7192 ;; Defined at:
  7193 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\__lldiv.c"
  7194 ;; Parameters:    Size  Location     Type
  7195 ;;  dividend        4    1[COMRAM] unsigned long 
  7196 ;;  divisor         4    5[COMRAM] unsigned long 
  7197 ;; Auto vars:     Size  Location     Type
  7198 ;;  quotient        4    9[COMRAM] unsigned long 
  7199 ;;  counter         1   13[COMRAM] unsigned char 
  7200 ;; Return value:  Size  Location     Type
  7201 ;;                  4    1[COMRAM] unsigned long 
  7202 ;; Registers used:
  7203 ;;		wreg, status,2, status,0
  7204 ;; Tracked objects:
  7205 ;;		On entry : 0/0
  7206 ;;		On exit  : 0/0
  7207 ;;		Unchanged: 0/0
  7208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7209 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7210 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7212 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7213 ;;Total ram usage:       13 bytes
  7214 ;; Hardware stack levels used:    1
  7215 ;; Hardware stack levels required when called:    1
  7216 ;; This function calls:
  7217 ;;		Nothing
  7218 ;; This function is called by:
  7219 ;;		_main
  7220 ;; This function uses a non-reentrant model
  7221 ;;
  7222                           
  7223                           	psect	text39
  7224  0026F2                     __ptext39:
  7225                           	opt callstack 0
  7226  0026F2                     ___lldiv:
  7227                           	opt callstack 29
  7228  0026F2  0E00               	movlw	0
  7229  0026F4  6E0A               	movwf	___lldiv@quotient^0,c
  7230  0026F6  0E00               	movlw	0
  7231  0026F8  6E0B               	movwf	(___lldiv@quotient+1)^0,c
  7232  0026FA  0E00               	movlw	0
  7233  0026FC  6E0C               	movwf	(___lldiv@quotient+2)^0,c
  7234  0026FE  0E00               	movlw	0
  7235  002700  6E0D               	movwf	(___lldiv@quotient+3)^0,c
  7236  002702  5006               	movf	___lldiv@divisor^0,w,c
  7237  002704  1007               	iorwf	(___lldiv@divisor+1)^0,w,c
  7238  002706  1008               	iorwf	(___lldiv@divisor+2)^0,w,c
  7239  002708  1009               	iorwf	(___lldiv@divisor+3)^0,w,c
  7240  00270A  B4D8               	btfsc	status,2,c
  7241  00270C  EF8A  F013         	goto	u2311
  7242  002710  EF8C  F013         	goto	u2310
  7243  002714                     u2311:
  7244  002714  EFC2  F013         	goto	l574
  7245  002718                     u2310:
  7246  002718  0E01               	movlw	1
  7247  00271A  6E0E               	movwf	___lldiv@counter^0,c
  7248  00271C  EF96  F013         	goto	l3052
  7249  002720                     l3050:
  7250  002720  90D8               	bcf	status,0,c
  7251  002722  3606               	rlcf	___lldiv@divisor^0,f,c
  7252  002724  3607               	rlcf	(___lldiv@divisor+1)^0,f,c
  7253  002726  3608               	rlcf	(___lldiv@divisor+2)^0,f,c
  7254  002728  3609               	rlcf	(___lldiv@divisor+3)^0,f,c
  7255  00272A  2A0E               	incf	___lldiv@counter^0,f,c
  7256  00272C                     l3052:
  7257  00272C  AE09               	btfss	(___lldiv@divisor+3)^0,7,c
  7258  00272E  EF9B  F013         	goto	u2321
  7259  002732  EF9D  F013         	goto	u2320
  7260  002736                     u2321:
  7261  002736  EF90  F013         	goto	l3050
  7262  00273A                     u2320:
  7263  00273A                     l3054:
  7264  00273A  90D8               	bcf	status,0,c
  7265  00273C  360A               	rlcf	___lldiv@quotient^0,f,c
  7266  00273E  360B               	rlcf	(___lldiv@quotient+1)^0,f,c
  7267  002740  360C               	rlcf	(___lldiv@quotient+2)^0,f,c
  7268  002742  360D               	rlcf	(___lldiv@quotient+3)^0,f,c
  7269  002744  5006               	movf	___lldiv@divisor^0,w,c
  7270  002746  5C02               	subwf	___lldiv@dividend^0,w,c
  7271  002748  5007               	movf	(___lldiv@divisor+1)^0,w,c
  7272  00274A  5803               	subwfb	(___lldiv@dividend+1)^0,w,c
  7273  00274C  5008               	movf	(___lldiv@divisor+2)^0,w,c
  7274  00274E  5804               	subwfb	(___lldiv@dividend+2)^0,w,c
  7275  002750  5009               	movf	(___lldiv@divisor+3)^0,w,c
  7276  002752  5805               	subwfb	(___lldiv@dividend+3)^0,w,c
  7277  002754  A0D8               	btfss	status,0,c
  7278  002756  EFAF  F013         	goto	u2331
  7279  00275A  EFB1  F013         	goto	u2330
  7280  00275E                     u2331:
  7281  00275E  EFBA  F013         	goto	l3062
  7282  002762                     u2330:
  7283  002762  5006               	movf	___lldiv@divisor^0,w,c
  7284  002764  5E02               	subwf	___lldiv@dividend^0,f,c
  7285  002766  5007               	movf	(___lldiv@divisor+1)^0,w,c
  7286  002768  5A03               	subwfb	(___lldiv@dividend+1)^0,f,c
  7287  00276A  5008               	movf	(___lldiv@divisor+2)^0,w,c
  7288  00276C  5A04               	subwfb	(___lldiv@dividend+2)^0,f,c
  7289  00276E  5009               	movf	(___lldiv@divisor+3)^0,w,c
  7290  002770  5A05               	subwfb	(___lldiv@dividend+3)^0,f,c
  7291  002772  800A               	bsf	___lldiv@quotient^0,0,c
  7292  002774                     l3062:
  7293  002774  90D8               	bcf	status,0,c
  7294  002776  3209               	rrcf	(___lldiv@divisor+3)^0,f,c
  7295  002778  3208               	rrcf	(___lldiv@divisor+2)^0,f,c
  7296  00277A  3207               	rrcf	(___lldiv@divisor+1)^0,f,c
  7297  00277C  3206               	rrcf	___lldiv@divisor^0,f,c
  7298  00277E  2E0E               	decfsz	___lldiv@counter^0,f,c
  7299  002780  EF9D  F013         	goto	l3054
  7300  002784                     l574:
  7301  002784  C00A  F002         	movff	___lldiv@quotient,?___lldiv
  7302  002788  C00B  F003         	movff	___lldiv@quotient+1,?___lldiv+1
  7303  00278C  C00C  F004         	movff	___lldiv@quotient+2,?___lldiv+2
  7304  002790  C00D  F005         	movff	___lldiv@quotient+3,?___lldiv+3
  7305  002794  0012               	return		;funcret
  7306  002796                     __end_of___lldiv:
  7307                           	opt callstack 0
  7308                           
  7309 ;; *************** function _ISR *****************
  7310 ;; Defined at:
  7311 ;;		line 41 in file "ccp.c"
  7312 ;; Parameters:    Size  Location     Type
  7313 ;;		None
  7314 ;; Auto vars:     Size  Location     Type
  7315 ;;		None
  7316 ;; Return value:  Size  Location     Type
  7317 ;;                  1    wreg      void 
  7318 ;; Registers used:
  7319 ;;		wreg, status,2, status,0
  7320 ;; Tracked objects:
  7321 ;;		On entry : 0/0
  7322 ;;		On exit  : 0/0
  7323 ;;		Unchanged: 0/0
  7324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7327 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7328 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7329 ;;Total ram usage:        1 bytes
  7330 ;; Hardware stack levels used:    1
  7331 ;; This function calls:
  7332 ;;		Nothing
  7333 ;; This function is called by:
  7334 ;;		Interrupt level 2
  7335 ;; This function uses a non-reentrant model
  7336 ;;
  7337                           
  7338                           	psect	intcode
  7339  000008                     __pintcode:
  7340                           	opt callstack 0
  7341  000008                     _ISR:
  7342                           	opt callstack 22
  7343                           
  7344                           ;incstack = 0
  7345  000008  825D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  7346  00000A                     
  7347                           ;ccp.c: 42:   if (CCP1IF){
  7348  00000A  010E               	movlb	14	; () banked
  7349  00000C  A1D0               	btfss	208,0,b	;volatile
  7350  00000E  EF0B  F000         	goto	i2u296_41
  7351  000012  EF0D  F000         	goto	i2u296_40
  7352  000016                     i2u296_41:
  7353  000016  EF69  F000         	goto	i2l484
  7354  00001A                     i2u296_40:
  7355  00001A                     
  7356                           ; BSR set to: 14
  7357                           ;ccp.c: 43:         TMR1 = 0;
  7358  00001A  0E00               	movlw	0
  7359  00001C  6ECE               	movwf	206,c	;volatile
  7360  00001E  0E00               	movlw	0
  7361  000020  6ECD               	movwf	205,c	;volatile
  7362  000022                     
  7363                           ; BSR set to: 14
  7364                           ;ccp.c: 44:         PIR6bits.CCP1IF = 0;
  7365  000022  91D0               	bcf	208,0,b	;volatile
  7366  000024                     i2l476:
  7367                           
  7368                           ; BSR set to: 14
  7369  000024  A1D0               	btfss	208,0,b	;volatile
  7370  000026  EF17  F000         	goto	i2u297_41
  7371  00002A  EF19  F000         	goto	i2u297_40
  7372  00002E                     i2u297_41:
  7373  00002E  EF12  F000         	goto	i2l476
  7374  000032                     i2u297_40:
  7375  000032                     
  7376                           ; BSR set to: 14
  7377                           ;ccp.c: 47:         PIR6bits.CCP1IF = 0;
  7378  000032  91D0               	bcf	208,0,b	;volatile
  7379  000034                     
  7380                           ; BSR set to: 14
  7381                           ;ccp.c: 48:         f = CCPR1;
  7382  000034  CFAA F0B3          	movff	4010,_f	;volatile
  7383  000038  CFAB F0B4          	movff	4011,_f+1	;volatile
  7384  00003C  0100               	movlb	0	; () banked
  7385  00003E  6BB5               	clrf	(_f+2)& (0+255),b
  7386  000040  6BB6               	clrf	(_f+3)& (0+255),b
  7387  000042                     
  7388                           ; BSR set to: 0
  7389                           ;ccp.c: 50:         if(f>=1680){
  7390  000042  51B6               	movf	(_f+3)& (0+255),w,b
  7391  000044  11B5               	iorwf	(_f+2)& (0+255),w,b
  7392  000046  E10B               	bnz	i2u298_40
  7393  000048  0E90               	movlw	144
  7394  00004A  5DB3               	subwf	_f& (0+255),w,b
  7395  00004C  0E06               	movlw	6
  7396  00004E  59B4               	subwfb	(_f+1)& (0+255),w,b
  7397  000050  A0D8               	btfss	status,0,c
  7398  000052  EF2D  F000         	goto	i2u298_41
  7399  000056  EF2F  F000         	goto	i2u298_40
  7400  00005A                     i2u298_41:
  7401  00005A  EF3D  F000         	goto	i2l3552
  7402  00005E                     i2u298_40:
  7403  00005E                     
  7404                           ; BSR set to: 0
  7405                           ;ccp.c: 51:             r=0;
  7406  00005E  0E00               	movlw	0
  7407  000060  6FC2               	movwf	(_r+1)& (0+255),b
  7408  000062  0E00               	movlw	0
  7409  000064  6FC1               	movwf	_r& (0+255),b
  7410  000066                     i2l3550:
  7411                           
  7412                           ; BSR set to: 0
  7413                           ;ccp.c: 52:             _delay((unsigned long)((20)*(4000000/4000.0)));
  7414  000066  0E1A               	movlw	26
  7415  000068  6E01               	movwf	??_ISR^0,c
  7416  00006A  0EF8               	movlw	248
  7417  00006C                     i2u374_47:
  7418  00006C  2EE8               	decfsz	wreg,f,c
  7419  00006E  D7FE               	bra	i2u374_47
  7420  000070  2E01               	decfsz	??_ISR^0,f,c
  7421  000072  D7FC               	bra	i2u374_47
  7422  000074  D000               	nop2	
  7423                           
  7424                           ;ccp.c: 53:         }
  7425  000076  EF65  F000         	goto	i2l3564
  7426  00007A                     i2l3552:
  7427                           
  7428                           ; BSR set to: 0
  7429  00007A  51B6               	movf	(_f+3)& (0+255),w,b
  7430  00007C  11B5               	iorwf	(_f+2)& (0+255),w,b
  7431  00007E  E10B               	bnz	i2u299_40
  7432  000080  0E82               	movlw	130
  7433  000082  5DB3               	subwf	_f& (0+255),w,b
  7434  000084  0E05               	movlw	5
  7435  000086  59B4               	subwfb	(_f+1)& (0+255),w,b
  7436  000088  A0D8               	btfss	status,0,c
  7437  00008A  EF49  F000         	goto	i2u299_41
  7438  00008E  EF4B  F000         	goto	i2u299_40
  7439  000092                     i2u299_41:
  7440  000092  EF51  F000         	goto	i2l3558
  7441  000096                     i2u299_40:
  7442  000096                     
  7443                           ; BSR set to: 0
  7444                           ;ccp.c: 55:             r=1;
  7445  000096  0E00               	movlw	0
  7446  000098  6FC2               	movwf	(_r+1)& (0+255),b
  7447  00009A  0E01               	movlw	1
  7448  00009C  6FC1               	movwf	_r& (0+255),b
  7449  00009E  EF33  F000         	goto	i2l3550
  7450  0000A2                     i2l3558:
  7451                           
  7452                           ; BSR set to: 0
  7453  0000A2  51B6               	movf	(_f+3)& (0+255),w,b
  7454  0000A4  11B5               	iorwf	(_f+2)& (0+255),w,b
  7455  0000A6  E10B               	bnz	i2u300_40
  7456  0000A8  0E7A               	movlw	122
  7457  0000AA  5DB3               	subwf	_f& (0+255),w,b
  7458  0000AC  0E03               	movlw	3
  7459  0000AE  59B4               	subwfb	(_f+1)& (0+255),w,b
  7460  0000B0  A0D8               	btfss	status,0,c
  7461  0000B2  EF5D  F000         	goto	i2u300_41
  7462  0000B6  EF5F  F000         	goto	i2u300_40
  7463  0000BA                     i2u300_41:
  7464  0000BA  EF65  F000         	goto	i2l3564
  7465  0000BE                     i2u300_40:
  7466  0000BE                     
  7467                           ; BSR set to: 0
  7468                           ;ccp.c: 59:             r=2;
  7469  0000BE  0E00               	movlw	0
  7470  0000C0  6FC2               	movwf	(_r+1)& (0+255),b
  7471  0000C2  0E02               	movlw	2
  7472  0000C4  6FC1               	movwf	_r& (0+255),b
  7473  0000C6  EF33  F000         	goto	i2l3550
  7474  0000CA                     i2l3564:
  7475                           
  7476                           ;ccp.c: 65:     TMR1 = 0;
  7477  0000CA  0E00               	movlw	0
  7478  0000CC  6ECE               	movwf	206,c	;volatile
  7479  0000CE  0E00               	movlw	0
  7480  0000D0  6ECD               	movwf	205,c	;volatile
  7481  0000D2                     i2l484:
  7482  0000D2  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  7483  0000D4  0011               	retfie		f
  7484  0000D6                     __end_of_ISR:
  7485                           	opt callstack 0
  7486                           
  7487                           	psect	rparam
  7488  0000                     
  7489                           	psect	temp
  7490  00005D                     btemp:
  7491                           	opt callstack 0
  7492  00005D                     	ds	1
  7493  0000                     int$flags	set	btemp
  7494  0000                     wtemp8	set	btemp+1
  7495  0000                     ttemp5	set	btemp+1
  7496  0000                     ttemp6	set	btemp+4
  7497  0000                     ttemp7	set	btemp+8
  7498                           tosu	equ	0xFFF
  7499                           tosh	equ	0xFFE
  7500                           tosl	equ	0xFFD
  7501                           stkptr	equ	0xFFC
  7502                           pclatu	equ	0xFFB
  7503                           pclath	equ	0xFFA
  7504                           pcl	equ	0xFF9
  7505                           tblptru	equ	0xFF8
  7506                           tblptrh	equ	0xFF7
  7507                           tblptrl	equ	0xFF6
  7508                           tablat	equ	0xFF5
  7509                           prodh	equ	0xFF4
  7510                           prodl	equ	0xFF3
  7511                           indf0	equ	0xFEF
  7512                           postinc0	equ	0xFEE
  7513                           postdec0	equ	0xFED
  7514                           preinc0	equ	0xFEC
  7515                           plusw0	equ	0xFEB
  7516                           fsr0h	equ	0xFEA
  7517                           fsr0l	equ	0xFE9
  7518                           wreg	equ	0xFE8
  7519                           indf1	equ	0xFE7
  7520                           postinc1	equ	0xFE6
  7521                           postdec1	equ	0xFE5
  7522                           preinc1	equ	0xFE4
  7523                           plusw1	equ	0xFE3
  7524                           fsr1h	equ	0xFE2
  7525                           fsr1l	equ	0xFE1
  7526                           bsr	equ	0xFE0
  7527                           indf2	equ	0xFDF
  7528                           postinc2	equ	0xFDE
  7529                           postdec2	equ	0xFDD
  7530                           preinc2	equ	0xFDC
  7531                           plusw2	equ	0xFDB
  7532                           fsr2h	equ	0xFDA
  7533                           fsr2l	equ	0xFD9
  7534                           status	equ	0xFD8


Data Sizes:
    Strings     3
    Constant    0
    Data        150
    BSS         58
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     90      92
    BANK0           160     75     131
    BANK1           256      0     150
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_7(CODE[3]), STR_6(CODE[3]), STR_5(CODE[3]), STR_4(CODE[3]), 
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 2
		 -> main@array_413(BANK0[2]), main@array(BANK0[2]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 2
		 -> main@array_413(BANK0[2]), main@array(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S2146_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 2
		 -> main@array_413(BANK0[2]), main@array(BANK0[2]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 2
		 -> main@array_413(BANK0[2]), main@array(BANK0[2]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_7(CODE[3]), STR_6(CODE[3]), STR_5(CODE[3]), STR_4(CODE[3]), 
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_7(CODE[3]), STR_6(CODE[3]), STR_5(CODE[3]), STR_4(CODE[3]), 
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_utoa
    _utoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _set_seconds->___awdiv
    _set_minutes->___awdiv
    _set_hours->___awdiv
    _set_Aseconds->___awdiv
    _set_Aminutes->___awdiv
    _set_Ahours->___awdiv
    _rtc_init->_i2c_read
    _lcd_init->_lcd_command
    _get_seconds->_i2c_read
    _get_minutes->_i2c_read
    _get_hours->_i2c_read
    _get_Aseconds->_i2c_read
    _get_Aminutes->_i2c_read
    _get_Ahours->_i2c_read

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                63    63      0   68192
                                             86 COMRAM     4     4      0
                                             16 BANK0     59    59      0
                            ___lldiv
                            _adcNum0
                           _adc_init
                           _ccp_init
                         _get_Ahours
                       _get_Aminutes
                       _get_Aseconds
                          _get_hours
                        _get_minutes
                        _get_seconds
                               _getr
                           _i2c_init
                           _i2c_read
                          _i2c_write
                           _lcd_char
                        _lcd_command
                           _lcd_init
                           _rtc_init
                         _set_Ahours
                       _set_Aminutes
                       _set_Aseconds
                          _set_hours
                        _set_minutes
                        _set_seconds
                           _spi_init
                          _spi_write
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             16    10      6    7049
                                              0 BANK0     16    10      6
                         _get_Ahours (ARG)
                       _get_Aminutes (ARG)
                       _get_Aseconds (ARG)
                          _get_hours (ARG)
                        _get_minutes (ARG)
                        _get_seconds (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    5483
                                             78 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           44    38      6    5130
                                             60 COMRAM    18    12      6
                              _fputc
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                32    22     10    3759
                                             28 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2709
                                             17 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              1 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                             10 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4     834
                                              1 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             17     1     16     311
                                              1 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             25     9     16     314
                                              1 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (1) _spi_write                                            6     6      0     136
                                              1 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (1) _spi_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_seconds                                          4     4      0    7271
                                              9 COMRAM     4     4      0
                            ___awdiv
                            ___awmod
                           _i2c_read
                          _i2c_write
 ---------------------------------------------------------------------------------
 (1) _set_minutes                                          3     3      0    5919
                                              9 COMRAM     3     3      0
                            ___awdiv
                            ___awmod
                          _i2c_write
 ---------------------------------------------------------------------------------
 (1) _set_hours                                            4     4      0    7271
                                              9 COMRAM     4     4      0
                            ___awdiv
                            ___awmod
                           _i2c_read
                          _i2c_write
 ---------------------------------------------------------------------------------
 (1) _set_Aseconds                                         3     3      0    5919
                                              9 COMRAM     3     3      0
                            ___awdiv
                            ___awmod
                          _i2c_write
 ---------------------------------------------------------------------------------
 (1) _set_Aminutes                                         3     3      0    5919
                                              9 COMRAM     3     3      0
                            ___awdiv
                            ___awmod
                          _i2c_write
 ---------------------------------------------------------------------------------
 (1) _set_Ahours                                           4     4      0    7271
                                              9 COMRAM     4     4      0
                            ___awdiv
                            ___awmod
                           _i2c_read
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4    1664
                                              1 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1668
                                              1 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _rtc_init                                             4     4      0    3962
                                              8 COMRAM     4     4      0
                           _i2c_read
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _i2c_write                                            3     1      2    2498
                                              1 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     295
                        _lcd_command
 ---------------------------------------------------------------------------------
 (2) _lcd_command                                          3     3      0     295
                                              1 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _lcd_char                                             3     3      0     295
                                              1 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _i2c_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _getr                                                 2     0      2       0
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _get_seconds                                          2     2      0    1373
                                              8 COMRAM     2     2      0
                           _i2c_read
 ---------------------------------------------------------------------------------
 (1) _get_minutes                                          2     2      0    1373
                                              8 COMRAM     2     2      0
                           _i2c_read
 ---------------------------------------------------------------------------------
 (1) _get_hours                                            2     2      0    1373
                                              8 COMRAM     2     2      0
                           _i2c_read
 ---------------------------------------------------------------------------------
 (1) _get_Aseconds                                         2     2      0    1373
                                              8 COMRAM     2     2      0
                           _i2c_read
 ---------------------------------------------------------------------------------
 (1) _get_Aminutes                                         2     2      0    1373
                                              8 COMRAM     2     2      0
                           _i2c_read
 ---------------------------------------------------------------------------------
 (1) _get_Ahours                                           2     2      0    1373
                                              8 COMRAM     2     2      0
                           _i2c_read
 ---------------------------------------------------------------------------------
 (2) _i2c_read                                             7     6      1    1328
                                              1 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 (1) _ccp_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adcNum0                                              7     3      4       0
                                              1 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             13     5      8     770
                                              1 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR                                                  1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lldiv
   _adcNum0
   _adc_init
   _ccp_init
   _get_Ahours
     _i2c_read
   _get_Aminutes
     _i2c_read
   _get_Aseconds
     _i2c_read
   _get_hours
     _i2c_read
   _get_minutes
     _i2c_read
   _get_seconds
     _i2c_read
   _getr
   _i2c_init
   _i2c_read
   _i2c_write
   _lcd_char
   _lcd_command
   _lcd_init
     _lcd_command
   _rtc_init
     _i2c_read
     _i2c_write
   _set_Ahours
     ___awdiv
     ___awmod
     _i2c_read
     _i2c_write
   _set_Aminutes
     ___awdiv
     ___awmod
     _i2c_write
   _set_Aseconds
     ___awdiv
     ___awmod
     _i2c_write
   _set_hours
     ___awdiv
     ___awmod
     _i2c_read
     _i2c_write
   _set_minutes
     ___awdiv
     ___awmod
     _i2c_write
   _set_seconds
     ___awdiv
     ___awmod
     _i2c_read
     _i2c_write
   _spi_init
   _spi_write
   _sprintf
     _get_Ahours (ARG)
       _i2c_read
     _get_Aminutes (ARG)
       _i2c_read
     _get_Aseconds (ARG)
       _i2c_read
     _get_hours (ARG)
       _i2c_read
     _get_minutes (ARG)
       _i2c_read
     _get_seconds (ARG)
       _i2c_read
     _vfprintf (ARG)
       _vfpfcnvrt
         _fputc
           _putch
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E87      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      96       8       58.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     4B      83       5       81.9%
BITBANK14           88      0       0      33        0.0%
BANK14              88      0       0      34        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5A      5C       1       97.9%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     175       6        0.0%
DATA                 0      0     175       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Apr 24 15:22:28 2020

           ?_get_minutes 0001             ?_get_seconds 0001              main@u24_410 007E  
            main@AsetNum 009C                        _f 00B3                        _r 00C1  
            main@u60_411 0084             lcd_char@temp 0003                       l84 0FE8  
                     l86 1070                       l88 1084                       _f2 00AF  
                     _f3 00AB             ___awdiv@sign 0007              __CFG_LVP$ON 000000  
           rtc_init@hour 000C                      l100 1202                      l200 2C72  
                    l120 14B6                      l104 12A6                      l201 2C98  
                    l122 153E                      l114 13FA                      l115 1818  
                    l140 1774                      l124 1552                      l108 134A  
                    l230 1ECC                      l240 1F10                      l232 1EDA  
                    l224 2D74                      l312 2640                      l136 16D0  
                    l241 1F32                      l233 1EFE                      l250 1F56  
                    l242 1F20                      l234 1EEA                      l306 2586  
                    l154 18D2                      l251 1F78                      l227 1EB6  
                    l155 18F4                      l252 1F66                      l332 2914  
                    l261 1FD0                      l245 1F34                      l237 1FF8  
                    l309 2E3C                      l325 28AA                      l421 2A26  
                    l262 1FD8                      l238 1F02                      l342 2DB8  
                    l270 234C                      l158 191E                      l255 1FC2  
                    l335 2E5C                      l423 2A34                      l264 1FE6  
                    l248 1F48                      l328 2D96                      l280 240A  
                    l424 2A40                      l512 2450                      l265 1FE8  
                    l281 2396                      l273 2362                      l258 1FB0  
                    l290 23D8                      l346 297E                      l418 2E1C  
                    l426 2A4E                      l522 1B48                      l195 2E90  
                    l291 23FA                      l283 23A4                      l275 2370  
                    l339 2B0E                      l427 2A50                      l515 2492  
                    l292 23E8                      l284 23C6                      l276 2392  
                    l532 1D0E                      l524 1B50                      l285 23B4  
                    l277 2380                      l381 2B66                      l517 24CC  
                    l198 2C64                      l470 2D14                      l391 2DFC  
                    l295 23FC                      l543 2AAE                      l384 2E7C  
                    l288 23CA                      l544 2AB6                      l377 2DDA  
                    l537 1EB0                      l395 29E8                      l388 2BBE  
                    l581 2794                      l574 2784                      l487 2E86  
                    l791 26F0                      l778 2346                      l992 20E8  
                    l985 20C8                      l995 2198                      _GIE 007F97  
                    _ISR 0008                      _pad 240C                      _sin 0164  
           ___awmod@sign 0007                      wreg 000FE8              main@alarmON 0080  
            main@channel 0086                     ?_ISR 0001             lcd_command@x 0004  
                   l1002 21B8                     l1230 2282                     l3000 2B7A  
                   l3010 2DDC                     l3002 2BB0                     l3012 2DE8  
                   l3004 2B12                     l1245 2C10                     l3022 2DBA  
                   l3006 2B22                     l3030 29EE                     l1238 2C54  
                   l1254 2D4A                     l3016 2E5E                     l3024 2DC6  
                   l3008 2B58                     l3040 2A3A                     l3032 29F6  
                   l1248 2E92                     l3050 2720                     l3018 2E6A  
                   l3042 2A3C                     l3034 2A1A                     l4010 19B4  
                   l4002 197C                     l3060 2772                     l3052 272C  
                   l3044 26F2                     l3036 2A1E                     l3028 29EC  
                   l2500 2470                     l4012 19BA                     l4004 1984  
                   l3062 2774                     l3054 273A                     l3046 2702  
                   l3038 2A22                     l2510 1FFA                     l2502 2474  
                   l4030 1A06                     l4022 19D4                     l4014 19C2  
                   l3064 277E                     l3056 2744                     l3048 2718  
                   l2520 204E                     l2512 2006                     l2504 24A0  
                   l2600 1E06                     l4040 1A44                     l4024 19DE  
                   l4008 19A4                     l3058 2762                     l2530 20C2  
                   l2522 2060                     l2514 2024                     l2506 24B4  
                   l2602 1E2E                     l2610 1E5C                     l4050 1A60  
                   l4034 1A26                     l4018 19CC                     l2524 208E  
                   l2516 202C                     l2540 2132                     l2532 20EA  
                   l2460 21DE                     l2612 1E6A                     l2604 1E3C  
                   l4060 1AA8                     l4036 1A36                     l4044 1A4E  
                   l4028 19FE                     l2702 1FF6                     l2630 24E4  
                   l2710 237E                     l2526 20AE                     l2518 2040  
                   l2542 2160                     l2534 2108                     l2462 21E8  
                   l2470 2C12                     l2550 1B20                     l2606 1E50  
                   l4062 1AB8                     l4070 1AD0                     l4054 1A80  
                   l4038 1A3C                     l2640 250A                     l2632 24F4  
                   l2624 24D0                     l2712 23B2                     l2800 26E8  
                   l2528 20B0                     l2544 2180                     l2536 2110  
                   l2464 2206                     l2456 21BA                     l2472 2C1E  
                   l2480 2D22                     l2560 1B88                     l2552 1B22  
                   l2616 1E76                     l2720 2A68                     l4064 1ABE  
                   l4056 1A88                     l4048 1A56                     l2810 2D4C  
                   l2650 2538                     l2642 251A                     l2634 24FA  
                   l2626 24DC                     l2714 23E6                     l2706 234A  
                   l2730 229E                     l2546 2192                     l2538 2124  
                   l2466 223C                     l2458 21CC                     l2474 2C30  
                   l2482 2D26                     l2490 241A                     l2562 1B8E  
                   l2570 1C74                     l2554 1B3C                     l2618 1E9E  
                   l2722 2A8E                     l4066 1AC6                     l2804 2E88  
                   l2812 2D50                     l2660 255C                     l2652 2548  
                   l2644 2520                     l2636 2500                     l2628 24E0  
                   l2708 235A                     l2820 282C                     l2740 22C4  
                   l2732 22A2                     l2724 2284                     l2900 2B00  
                   l2476 2C34                     l2484 2D3E                     l2492 242E  
                   l2572 1C86                     l2580 1CE6                     l2564 1C04  
                   l2556 1B78                     l2548 1B10                     l2716 2A52  
                   l4076 1AD8                     l3700 0F60                     l2806 2E8A  
                   l2670 1EC4                     l2814 2D6E                     l2662 256C  
                   l2654 254C                     l2646 2524                     l2638 2506  
                   l2822 2838                     l2750 22FA                     l2742 22D6  
                   l2734 22B0                     l2726 2288                     l2910 2904  
                   l2902 28AE                     l2478 2D16                     l2494 243C  
                   l2574 1CA4                     l2566 1C0A                     l2558 1B80  
                   l2590 1D58                     l2718 2A5A                     l4190 1AEE  
                   l3710 0F6A                     l3702 0F62                     l2672 1EE8  
                   l2816 2D70                     l2920 25AE                     l2912 258A  
                   l2664 2572                     l2656 2552                     l2648 2534  
                   l2808 2E1E                     l2840 289A                     l2832 285E  
                   l2824 2846                     l2752 2310                     l2744 22DE  
                   l2760 2326                     l2736 22B8                     l2728 2296  
                   l2904 28BE                     l2496 2448                     l2488 240C  
                   l2576 1CBE                     l2568 1C10                     l2592 1D5C  
                   l2584 1D10                     l3800 12D4                     l3720 104E  
                   l3712 0F78                     l3704 0F64                     l2674 1EF8  
                   l2818 2D72                     l2930 25D4                     l2922 25B4  
                   l2914 2596                     l2666 2576                     l2658 2558  
                   l2834 2866                     l2826 2856                     l2762 2336  
                   l2754 2318                     l2746 22E6                     l2738 22BC  
                   l2770 2646                     l2906 28F4                     l2850 2E12  
                   l2842 2DFE                     l2498 245C                     l2578 1CD8  
                   l2594 1D84                     l2586 1D38                     l3810 131C  
                   l3802 12D8                     l4186 10F2                     l3730 10B8  
                   l3722 1054                     l3714 0F90                     l3706 0F66  
                   l2860 2CE6                     l2852 2CD8                     l2692 1F7A  
                   l2684 1F42                     l2668 1EB4                     l2940 2602  
                   l2932 25DA                     l2924 25BA                     l2916 259A  
                   l2836 2880                     l2764 233E                     l2756 231A  
                   l2748 22F4                     l2780 2676                     l2772 2654  
                   l2908 2900                     l2844 2E06                     l2596 1DCE  
                   l2588 1D46                     l3660 2BDA                     l3900 1632  
                   l4188 15C0                     l3820 1380                     l3812 132C  
                   l3804 12EA                     l3732 10BE                     l3724 1068  
                   l3740 10DC                     l3716 0FA8                     l3708 0F68  
                   l2870 2D0E                     l2862 2CF0                     l2854 2CE0  
                   l2694 1F8E                     l2686 1F64                     l2678 1F1E  
                   l2950 2626                     l2942 2606                     l2934 25DE  
                   l2926 25C0                     l2918 259E                     l2838 288C  
                   l2758 2320                     l2790 26BC                     l2782 2688  
                   l2774 265C                     l2846 2E0E                     l3662 2BE2  
                   l3910 1680                     l3902 1656                     l3830 13C0  
                   l3822 138C                     l3814 133E                     l3806 12FA  
                   l3750 114A                     l3734 10C8                     l3742 1110  
                   l3726 1086                     l3718 1040                     l3670 0F30  
                   ?_pad 0012                     l2880 2C62                     l2872 2D10  
                   l2864 2CF4                     l2856 2CE2                     l2696 1FAE  
                   l2952 262C                     l2944 260C                     l2936 25EE  
                   l2928 25C4                     l2792 26C4                     l2784 2690  
                   l2776 2660                     l2768 2642                     l2848 2E10  
                   l3664 2BFE                     l3656 2BC0                     l3920 16D6  
                   l3912 1692                     l3904 165A                     l3840 13EA  
                   l3832 13C6                     l3824 1398                     l3816 135C  
                   l3808 130C                     l3760 118C                     l3744 111A  
                   l3736 10D2                     l3728 10A6                     l3680 0F44  
                   l3672 0F34                     l2882 2C74                     l2874 2D12  
                   l2866 2D0A                     l2858 2CE4                     l2954 2630  
                   l2946 2612                     l2938 25F2                     l2794 26CA  
                   l2786 2698                     l2778 266E                     l2890 295E  
                   l3658 2BD2                     l3930 1724                     l3922 16FA  
                   l3914 16A2                     l3906 165E                     l3850 1428  
                   l3842 13F4                     l3834 13CC                     l3826 13B6  
                   l3818 1370                     l3770 11D4                     l3762 1190  
                   l3754 1152                     l3690 0F56                     l3682 0F48  
                   l3674 0F38                     l2876 2C56                     l2868 2D0C  
                   l2956 2D98                     l2980 2D76                     l2948 2616  
                   l2788 26A6                     l2796 26D0                     l2892 296A  
                   l3940 177A                     l3932 1736                     l3924 16FE  
                   l3916 16B2                     l3908 1670                     l3860 1476  
                   l3852 143A                     l3836 13D2                     l3828 13BA  
                   l3780 1230                     l3772 11E4                     l3764 11A2  
                   l3756 1164                     l3748 113A                     l3844 1404  
                   l3692 0F58                     l3684 0F4A                     l3676 0F3C  
                   l3668 0F06                     l2878 2C60                     l2958 2DA4  
                   l2974 2E3E                     l2982 2D82                     l2798 26E0  
                   l2990 2992                     l2894 296E                     l2886 2918  
                   l3950 17C8                     l3942 179E                     l3934 1746  
                   l3926 1702                     l3918 16C4                     l3870 1554  
                   l3862 150E                     l3854 1440                     l3846 1418  
                   l3838 13D8                     l3790 1278                     l3782 1234  
                   l3774 11F6                     l3766 11B2                     l3758 1188  
                   l3694 0F5A                     l3686 0F4C                     l3678 0F40  
                   l2976 2E4A                     l2992 29C8                     l2888 2928  
                   l2896 2ABA                     l3960 1832                     l3952 17DA  
                   l3944 17A2                     l3936 1756                     l3928 1714  
                   l3880 15A0                     l3872 1574                     l3864 151C  
                   l3856 1448                     l3848 141E                     l3792 1288  
                   l3784 1246                     l3776 1208                     l3768 11C4  
                   l3696 0F5C                     l3688 0F4E                     l2986 2E7E  
                   l2994 29D4                     l2898 2ACA                     l3970 1886  
                   l3962 1840                     l3954 17EA                     l3946 17A6  
                   l3938 1768                     l3874 1586                     l3866 1522  
                   l3858 145E                     l3794 129A                     l3786 1256  
                   l3778 122C                     l3698 0F5E                     l2996 29D8  
                   l2988 2982                     l3980 18D4                     l3972 1894  
                   l3964 184A                     l3956 17FA                     l3948 17B8  
                   l3892 1608                     l3876 158C                     l3868 1536  
                   l3884 15AA                     l3796 12AC                     l3788 1268  
                   l2998 2B6A                     l3990 1928                     l3974 18A6  
                   l3966 1858                     l3982 18F6                     l3958 180C  
                   l3894 1618                     l3878 1596                     l3886 15DE  
                   l3798 12D0                     l3992 1932                     l3984 1908  
                   l3976 18B4                     l3968 186A                     l3888 15E8  
                   l3994 1940                     l3978 18BE                     l3898 1620  
                   l3996 1952                     l3988 1920                     l3998 195C  
                   STR_1 0F01                     STR_2 0F01                     STR_3 0F01  
                   STR_4 0F01                     STR_5 0F01                     STR_6 0F01  
                   STR_7 0F01                     u2000 23C2                     u2001 23BE  
                   u2010 23D8                     u2011 23D4                     u2020 23E6  
                   u2100 2310                     u2021 23E2                     u2101 230C  
                   u2030 23F6                     u2110 2336                     u2031 23F2  
                   u2111 2332                     u2040 240A                     u2200 289A  
                   u2120 2654                     u2041 2406                     u2201 2896  
                   u2121 2650                     u2210 2C72                     u2130 266E  
                   u2050 2AAE                     u3010 0F78                     u2211 2C6E  
                   u2131 266A                     u2051 2AAA                     u3011 0F74  
                   u2060 2296                     u2140 2688                     u2300 2A4E  
                   u3100 11D4                     u3020 0F90                     u2061 2292  
                   u2141 2684                     u2301 2A4A                     u3101 11D0  
                   u3021 0F8C                     u2310 2718                     u2070 22B0  
                   u2150 26A6                     u2230 2928                     u1510 21CC  
                   u3110 11E4                     u3030 104E                     u2311 2714  
                   u2071 22AC                     u2151 26A2                     u2231 2924  
                   u1511 21C8                     u3111 11E0                     u3031 104A  
                   u2320 273A                     u2080 22D6                     u2160 26BC  
                   u2240 2ACA                     u1520 21DE                     u1600 24A0  
                   u3200 1370                     u3120 1246                     u3040 1068  
                   u2321 2736                     u2225 2C80                     u2081 22D2  
                   u2161 26B8                     u2241 2AC6                     u1521 21DA  
                   u1601 249C                     u3201 136C                     u3121 1242  
                   u3041 1064                     u2330 2762                     u2090 22F4  
                   u2170 26E0                     u2250 28BE                     u1530 2206  
                   u3210 13EA                     u3130 1256                     u3050 10A6  
                   u2331 275E                     u2091 22F0                     u2171 26DC  
                   u2251 28BA                     u1611 2000                     u1531 2202  
                   u3211 13E6                     u3131 1252                     u3051 10A2  
                   u2180 2846                     u2260 2992                     u1620 2024  
                   u1540 223C                     u1700 1C86                     u3300 1670  
                   u3220 1418                     u3140 1278                     u3060 10B8  
                   u2181 2842                     u2261 298E                     u1621 2020  
                   u1541 2238                     u1701 1C82                     u3301 166C  
                   u3221 1414                     u3141 1274                     u3061 10B4  
                   u2190 2880                     u2270 2B7A                     u1630 204E  
                   u1550 2C54                     u1710 1CA4                     u3310 1680  
                   u3230 143A                     u3150 1288                     u3070 1136  
                   u2191 287C                     u2271 2B76                     u1631 204A  
                   u1551 2C50                     u1711 1CA0                     u3311 167C  
                   u3231 1436                     u3151 1284                     u3071 1132  
                   u1800 1EE8                     u2280 2B22                     u1640 208E  
                   u1560 2D3E                     u1720 1CBE                     u3400 17EA  
                   u3320 16A2                     u3240 145E                     u3160 12EA  
                   u3080 11A2                     u1801 1EE4                     u2281 2B1E  
                   u1641 208A                     u1561 2D3A                     u1721 1CBA  
                   u3401 17E6                     u3321 169E                     u3241 145A  
                   u3161 12E6                     u3081 119E                     u1810 1EF8  
                   u2290 2A34                     u1650 2108                     u1570 241A  
                   u1730 1CD8                     u3410 17FA                     u3330 16B2  
                   u3250 151C                     u3170 12FA                     u3090 11B2  
                   u1811 1EF4                     u2291 2A30                     u1651 2104  
                   u1571 2416                     u1731 1CD4                     u3411 17F6  
                   u3331 16AE                     u3251 1518                     u3171 12F6  
                   u3091 11AE                     u1900 1FBE                     u1820 1F10  
                   u1660 2132                     u1580 243C                     u1740 1CE6  
                   u3500 1978                     u3420 1832                     u3340 1714  
                   u3260 1536                     u3180 131C                     u1901 1FBA  
                   u1821 1F0C                     u1661 212E                     u1581 2438  
                   u1741 1CE2                     u3501 1974                     u3421 182E  
                   u3341 1710                     u3261 1532                     u3181 1318  
                   u1910 1FD0                     u1830 1F1E                     u1670 2160  
                   u1590 2492                     u1750 1D38                     u3510 19A0  
                   u3430 1858                     u3350 1724                     u3270 1574  
                   u3190 132C                     u1911 1FCC                     u1831 1F1A  
                   u1671 215C                     u1591 248E                     u1751 1D34  
                   u3511 199C                     u3431 1854                     u3351 1720  
                   u3271 1570                     u3191 1328                     u1920 1FE6  
                   u1840 1F2E                     u1680 1B20                     u1760 1D84  
                   u3520 19FA                     u3440 186A                     u3360 1746  
                   u3280 1586                     u1921 1FE2                     u1841 1F2A  
                   u1681 1B1C                     u1761 1D80                     u3521 19F6  
                   u3441 1866                     u3361 1742                     u3281 1582  
                   u1930 1FF6                     u1850 1F42                     u1690 1B3C  
                   u1770 1E2E                     u3530 1A22                     u3450 18A6  
                   u3370 1756                     u3290 1604                     u1931 1FF2  
                   u1851 1F3E                     u1691 1B38                     u1771 1E2A  
                   u3531 1A1E                     u3451 18A2                     u3371 1752  
                   u3291 1600                     u1860 1F56                     u1780 1EC4  
                   u1940 235A                     u3540 1A7C                     u3460 18F4  
                   u3380 17B8                     u1861 1F52                     u1781 1EC0  
                   u1941 2356                     u3541 1A78                     u3461 18F0  
                   u3381 17B4                     u1870 1F64                     u1790 1EDA  
                   u1950 2370                     u3550 1AA4                     u3470 1908  
                   u3390 17C8                     u1871 1F60                     u1791 1ED6  
                   u1951 236C                     u3607 1AC0                     u3551 1AA0  
                   u3471 1904                     u3391 17C4                     u1880 1F74  
                   u1960 237E                     u3480 191A                     u1881 1F70  
                   u1961 237A                     u3617 2860                     u3481 1916  
                   u1890 1FAE                     u1970 238E                     u3490 1940  
                   u1891 1FAA                     u3707 25E4                     u3627 24EA  
                   u1971 238A                     u3491 193C                     _PEIE 007F96  
                   u1980 23A4                     u3717 25F8                     u3637 2510  
                   u1981 23A0                     u1990 23B2                     u3727 261C  
                   u3647 252A                     u1991 23AE                     u3567 1922  
                   u3737 2636                     u3657 253E                     u3577 192C  
                   u3667 2562                     u3587 19BC                     u3677 257C  
                   u3597 1A3E                     u3687 25A4                     u3697 25CA  
                   _TMR1 000FCD              main@num_420 0078              main@num_412 0074  
                   _dbuf 00C3                     _getr 2E7E                     _main 0F06  
                   _prec 00BF                     _nout 00BB                     pad@i 0019  
                   pad@p 0016                     fsr1h 000FE2                     fsr2h 000FDA  
                   indf2 000FDF                     fsr1l 000FE1                     pad@w 001B  
                   fsr2l 000FD9                     btemp 005D                     _utoa 1B10  
                   prodl 000FF3                     start 00D6             ___param_bank 000000  
                  ??_ISR 0001                    ??_pad 0018     set_Ahours@Acurr_hour 000C  
                  ?_getr 0002                    ?_main 0001                    _ADPCH 000F5F  
        __end_of_adcNum0 2C9A          __end_of___awdiv 2348                    _ADRES 000F63  
                  _CCPR1 000FAA            __CFG_WDTE$OFF 000000          __end_of___awmod 26F2  
        __end_of___lldiv 2796                    ?_utoa 001D          __end_of___lodiv 20EA  
        ___awdiv@divisor 0004          __end_of___lomod 21BA              i2c_read@num 0003  
                  i2l476 0024                    i2l484 00D2                    i2l478 0032  
        ___awdiv@counter 0006             vfpfcnvrt@fmt 003F             vfpfcnvrt@llu 0047  
                  _PORTD 000F90                    _flags 005B                    _fputc 21BA  
                  _fputs 2C12                    pad@fp 0012                    _width 00BD  
                  _putch 2E92                    main@i 0090                    main@x 0094  
                  main@y 0088                    tablat 000FF5             main@outv_434 00A3  
           main@outv_437 00A4                    nvmcon 000F81                    ttemp5 005E  
                  ttemp6 0061                    ttemp7 0065                    utoa@d 001F  
                  utoa@i 003B                    utoa@n 0033                    utoa@p 002F  
                  utoa@w 0031                    status 000FD8                    wtemp8 005E  
        __end_of_sprintf 2C12         ___lodiv@dividend 0002          get_Ahours@Ahour 000A  
        __initialization 2C9A             __end_of_getr 2E88             __end_of_main 1B10  
           __end_of_utoa 1D10         __end_of_i2c_init 2D76         __end_of_i2c_read 1FFA  
   __end_of_get_Aminutes 2E7E     __end_of_get_Aseconds 2DDC            get_hours@hour 000A  
                 ??_getr 0004                   ??_main 0057                   ??_utoa 0027  
          __activetblptr 000003            main@array_413 00A0         ___lodiv@quotient 0012  
                 _ADCON0 000F60                   _CCP1IE 007640                   _CCP1IF 007680  
                 ?_fputc 0002                   ?_fputs 000B         ___awdiv@dividend 0002  
                 _ANSELA 000F11                   ?_putch 0001                   _ANSELC 000F21  
                 _RB1PPS 000EF0                   _RB3PPS 000EF2         __end_of_adc_init 2E92  
           i2c_read@read 0007                   _RC3PPS 000EFA                   _RC4PPS 000EFB  
                 i2l3540 001A                   i2l3550 0066                   i2l3542 0022  
                 i2l3560 00BE                   i2l3552 007A                   i2l3544 0034  
                 i2l3554 0096                   i2l3546 0042                   i2l3538 000A  
                 i2l3564 00CA                   i2l3548 005E                   i2l3558 00A2  
                 _TMR1IF 007670                   _TMR1ON 007E78       __size_of_i2c_write 00C4  
       __end_of_ccp_init 2D16            main@temp1_416 00A9            main@temp2_417 00A8  
       __end_of_lcd_char 2642             vfprintf@cfmt 0055         __end_of_lcd_init 2E3E  
   __size_of_lcd_command 00BA             ?_set_minutes 0001             ?_set_seconds 0001  
              ??_adcNum0 0006                ??___awdiv 0006                ??___awmod 0006  
              ??___lldiv 000A                ??___lodiv 0012                ??___lomod 0012  
   __size_of_get_minutes 0020     __size_of_get_seconds 0022                   clear_0 2CC4  
       ___awdiv@quotient 0008          ___awmod@divisor 0004                   _value0 00B7  
        ___awmod@counter 0006                   pad@buf 0014                   _strlen 2D16  
                 fputc@c 0002                   fputs@c 000F                   fputs@i 0010  
                 fputs@s 000B             __mediumconst 0000         __end_of_rtc_init 28AC  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
       __end_of_spi_init 2E1E                   putch@c 0001         __end_of_vfprintf 2AB8  
                 utoa@fp 001D                ??_sprintf 0057               __accesstop 0060  
__end_of__initialization 2CCE            spi_write@data 0004            spi_write@full 0006  
          ___rparam_used 000001           __pcstackCOMRAM 0001             __pidataBANK1 2796  
          __end_of_fputc 2284            __end_of_fputs 2C56            __end_of_putch 2E94  
      __end_of_i2c_write 240C       __size_of_get_hours 0022                  ??_fputc 0006  
                ??_fputs 000F                  ??_putch 0002               __pbssBANK0 00AB  
              ?_i2c_init 0001                ?_i2c_read 0002      set_seconds@curr_sec 000C  
          ?_set_Aminutes 0001            ?_set_Aseconds 0001           get_minutes@min 000A  
         get_seconds@sec 000A          lcd_command@temp 0003         get_Aminutes@Amin 000A  
       set_Aminutes@Amin 000C         get_Aseconds@Asec 000A         set_Aseconds@Asec 000C  
  __size_of_get_Aminutes 0020    __size_of_get_Aseconds 0022               _get_Ahours 2DDC  
                _CCP1PPS 000EAF                ?_adc_init 0001       __size_of_set_hours 006A  
                _T1CKPS0 007E7C                  _T1CKPS1 007E7D                  ?_strlen 0002  
              ?_ccp_init 0001       __size_of_vfpfcnvrt 01A2       __size_of_spi_write 0068  
                _SSP1ADD 000F93                  _SSP1BUF 000F92                  _SSP2BUF 000E92  
              ?_lcd_char 0001                ?_lcd_init 0001         ___lomod@dividend 0002  
           _get_Aminutes 2E5E             _get_Aseconds 2DBA           ??_set_Aminutes 000A  
         ??_set_Aseconds 000A               ??_i2c_init 0002               ??_i2c_read 0003  
                __Hparam 0000                  __Lparam 0000        __end_of_get_hours 2DBA  
              ?_rtc_init 0001                ?_spi_init 0001                  _adcNum0 2C56  
                ___awdiv 2284                  ___awmod 2642                  ___lldiv 26F2  
                ___lodiv 1FFA                  ___lomod 20EA                ?_vfprintf 004F  
           __psmallconst 0F00     __size_of_set_minutes 0058     __size_of_set_seconds 006A  
                __pcinit 2C9A                  __ramtop 0F00          i2c_read@address 0008  
             ??_adc_init 0002                  __ptext0 0F06                  __ptext1 2BC0  
                __ptext2 2A52                  __ptext3 1D10                  __ptext4 1B10  
                __ptext5 240C                  __ptext6 2D16                  __ptext7 2C12  
                __ptext8 21BA                  __ptext9 2E92          __size_of_strlen 0036  
           __size_of_ISR 00CE                _T1CONbits 000FCF             __size_of_pad 00C2  
             ??_ccp_init 0002         ___awmod@dividend 0002                  main@u24 007C  
                main@u60 0082               ??_lcd_char 0002                  _sprintf 2BC0  
                main@num 0070               ??_lcd_init 0005     end_of_initialization 2CCE  
             _set_Ahours 2980                  fputc@fp 0004                  fputs@fp 000D  
      __end_of_set_hours 2980          ___lldiv@divisor 0006          ___lldiv@counter 000E  
      __end_of_vfpfcnvrt 1EB2        __end_of_spi_write 2A52               ??_rtc_init 0009  
                postdec1 000FE5                  postdec2 000FDD               ??_spi_init 0002  
                postinc0 000FEE                  postinc1 000FE6                  postinc2 000FDE  
             ??_vfprintf 0055              ?_get_Ahours 0001                  strlen@a 0004  
                strlen@s 0002                _PORTAbits 000F8D                _PORTCbits 000F8F  
          i2c_write@data 0003                _TRISAbits 000F88                _TRISBbits 000F89  
              _TRISCbits 000F8A                _TRISDbits 000F8B           spi_write@bound 0005  
            rtc_init@sec 000B              _CCP1CONbits 000FAC            ??_lcd_command 0002  
             main@setNum 009A            ??_get_minutes 0009            ??_get_seconds 0009  
            vfpfcnvrt@ap 0041              vfpfcnvrt@fp 003D     __end_of_set_Aminutes 2BC0  
   __end_of_set_Aseconds 2B68           __end_of_strlen 2D4C      start_initialization 2C9A  
        ___lodiv@divisor 000A          ___lodiv@counter 001A              __end_of_ISR 00D6  
            __end_of_pad 24CE                _i2c_write 2348           set_minutes@min 000C  
         set_seconds@sec 000D              ?_set_Ahours 0001      __size_of_get_Ahours 0022  
      __size_of_i2c_init 002A        __size_of_i2c_read 0148              vfprintf@fmt 0051  
    __end_of_lcd_command 2588              __pdataBANK1 0100      __end_of_get_minutes 2E5E  
    __end_of_get_seconds 2D98                 ??_strlen 0004          set_Ahours@Ahour 000D  
      __size_of_adc_init 000A              __pbssCOMRAM 005B            __pcstackBANK0 0060  
             ?_i2c_write 0002        __size_of_ccp_init 003E        __size_of_lcd_char 00BA  
      __size_of_lcd_init 0020                __pintcode 0008                 ?_adcNum0 0002  
               ?___awdiv 0002                 ?___awmod 0002                 ?___lldiv 0002  
               ?___lodiv 0002                 ?___lomod 0002        __size_of_rtc_init 0080  
      __size_of_spi_init 0020                _get_hours 2D98      __size_of_set_Ahours 006A  
      __size_of_vfprintf 0066       set_hours@curr_hour 000C          ___lomod@divisor 000A  
            __smallconst 0F00          ___lomod@counter 0012                 ?_sprintf 0060  
         __size_of_fputc 00CA           __size_of_fputs 0044           __size_of_putch 0002  
               _LATAbits 000F83                 _LATBbits 000F84                 _LATCbits 000F85  
            _lcd_command 24CE                 i2u300_40 00BE                 i2u300_41 00BA  
               i2u374_47 006C                 i2u296_40 001A                 i2u296_41 0016  
               i2u297_40 0032                 i2u297_41 002E                 i2u298_40 005E  
               i2u298_41 005A                 i2u299_40 0096                 i2u299_41 0092  
               _PIR6bits 000ED0                _set_hours 2916              _get_minutes 2E3E  
            _get_seconds 2D76            ??_set_minutes 000A            ??_set_seconds 000A  
  __size_of_set_Aminutes 0058    __size_of_set_Aseconds 0058             ??_get_Ahours 0009  
      i2c_read@registers 0002                _vfpfcnvrt 1D10                _spi_write 29EA  
             ?_get_hours 0001                lcd_char@x 0004               _ADCON0bits 000F60  
              main@i_414 0092                main@x_433 0096                main@x_436 0098  
              main@y_432 008A                main@y_435 008C                main@check 008E  
              main@alarm 009E                main@array 00A5                main@temp1 00AA  
              main@temp2 00A7              ??_i2c_write 0004            set_hours@hour 000D  
              copy_data0 2CB2                 _i2c_init 2D4C                 _i2c_read 1EB2  
     __end_of_get_Ahours 2DFE             _set_Aminutes 2B68             _set_Aseconds 2B10  
               __Hrparam 0000               vfprintf@ap 0053                 __Lrparam 0000  
             vfprintf@fp 004F               ?_set_hours 0001         __size_of_adcNum0 0044  
       __size_of___awdiv 00C4         __size_of___awmod 00B0         __size_of___lldiv 00A4  
       __size_of___lodiv 00F0         __size_of___lomod 00D0               ?_vfpfcnvrt 003D  
             ?_spi_write 0001                 _adc_init 2E88      __end_of_set_minutes 2B10  
    __end_of_set_seconds 2916               sprintf@fmt 0062                 _ccp_init 2CD8  
               __ptext10 20EA                 __ptext11 1FFA                 __ptext20 2642  
               __ptext12 29EA                 __ptext21 2284                 __ptext13 2DFE  
               __ptext30 2E3E                 __ptext22 282C                 __ptext14 28AC  
               __ptext31 2D98                 __ptext23 2348                 __ptext15 2AB8  
               __ptext32 2DBA                 __ptext24 2E1E                 __ptext16 2916  
               __ptext33 2E5E                 __ptext25 24CE                 __ptext17 2B10  
               __ptext34 2DDC                 __ptext26 2588                 __ptext18 2B68  
               __ptext35 1EB2                 __ptext27 2D4C                 __ptext19 2980  
               __ptext36 2CD8                 __ptext28 2E7E                 __ptext37 2E88  
               __ptext29 2D76                 __ptext38 2C56                 __ptext39 26F2  
           _SSP1CON1bits 000F96             _SSP1CON2bits 000F97                 _lcd_char 2588  
               _lcd_init 2E1E             _SSP2CON1bits 000E96             ??_set_Ahours 000A  
       __size_of_sprintf 0052            __size_of_getr 000A            __size_of_main 0C0A  
          __size_of_utoa 0200                 _sawtooth 0100                 _rtc_init 282C  
               _spi_init 2DFE                 int$flags 005D                 _vfprintf 2A52  
              rtc_init@i 0009                 _triangle 0132             _SSP1STATbits 000F95  
               main@outv 00A2              ??_get_hours 0009             _SSP2STATbits 000E95  
     __end_of_set_Ahours 29EA              _TMR1CLKbits 000FD2                 intlevel2 0000  
          ?_get_Aminutes 0001            ?_get_Aseconds 0001                sprintf@ap 0068  
       ___lldiv@dividend 0002              ??_set_hours 000A       i2c_write@registers 0002  
            _set_minutes 2AB8              _set_seconds 28AC              ??_vfpfcnvrt 0043  
            ??_spi_write 0002                 sprintf@f 006A                 sprintf@s 0060  
             _SSP1DATPPS 000EB8               _SSP1CLKPPS 000EB7         ___lldiv@quotient 000A  
       i2c_write@address 0004           ??_get_Aminutes 0009           ??_get_Aseconds 0009  
           ?_lcd_command 0001  
