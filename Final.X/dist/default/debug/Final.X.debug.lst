

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Apr 24 15:07:39 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F47K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    59                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    60                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    61                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    62  0000                     
    63                           ; Version 2.10
    64                           ; Generated 31/07/2019 GMT
    65                           ; 
    66                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    67                           ; All rights reserved.
    68                           ; 
    69                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    70                           ; 
    71                           ; Redistribution and use in source and binary forms, with or without modification, are
    72                           ; permitted provided that the following conditions are met:
    73                           ; 
    74                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    75                           ;        conditions and the following disclaimer.
    76                           ; 
    77                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    78                           ;        of conditions and the following disclaimer in the documentation and/or other
    79                           ;        materials provided with the distribution.
    80                           ; 
    81                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    82                           ;        software without specific prior written permission.
    83                           ; 
    84                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    85                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    86                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    87                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    88                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    89                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    90                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    91                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    92                           ; 
    93                           ; 
    94                           ; Code-generator required, PIC18F47K40 Definitions
    95                           ; 
    96                           ; SFR Addresses
    97  0000                     
    98                           	psect	idataBANK1
    99  0030B2                     __pidataBANK1:
   100                           	opt callstack 0
   101                           
   102                           ;initializer for _sawtooth
   103  0030B2  05                 	db	5
   104  0030B3  0A                 	db	10
   105  0030B4  0F                 	db	15
   106  0030B5  14                 	db	20
   107  0030B6  1A                 	db	26
   108  0030B7  1F                 	db	31
   109  0030B8  24                 	db	36
   110  0030B9  29                 	db	41
   111  0030BA  2E                 	db	46
   112  0030BB  33                 	db	51
   113  0030BC  38                 	db	56
   114  0030BD  3D                 	db	61
   115  0030BE  42                 	db	66
   116  0030BF  47                 	db	71
   117  0030C0  4D                 	db	77
   118  0030C1  52                 	db	82
   119  0030C2  57                 	db	87
   120  0030C3  5C                 	db	92
   121  0030C4  61                 	db	97
   122  0030C5  66                 	db	102
   123  0030C6  6B                 	db	107
   124  0030C7  70                 	db	112
   125  0030C8  75                 	db	117
   126  0030C9  7A                 	db	122
   127  0030CA  80                 	db	128
   128  0030CB  85                 	db	133
   129  0030CC  8A                 	db	138
   130  0030CD  8F                 	db	143
   131  0030CE  94                 	db	148
   132  0030CF  99                 	db	153
   133  0030D0  9E                 	db	158
   134  0030D1  A3                 	db	163
   135  0030D2  A8                 	db	168
   136  0030D3  AD                 	db	173
   137  0030D4  B3                 	db	179
   138  0030D5  B8                 	db	184
   139  0030D6  BD                 	db	189
   140  0030D7  C2                 	db	194
   141  0030D8  C7                 	db	199
   142  0030D9  CC                 	db	204
   143  0030DA  D1                 	db	209
   144  0030DB  D6                 	db	214
   145  0030DC  DB                 	db	219
   146  0030DD  E0                 	db	224
   147  0030DE  E6                 	db	230
   148  0030DF  EB                 	db	235
   149  0030E0  F0                 	db	240
   150  0030E1  F5                 	db	245
   151  0030E2  FA                 	db	250
   152  0030E3  FF                 	db	255
   153                           
   154                           ;initializer for _triangle
   155  0030E4  0A                 	db	10
   156  0030E5  14                 	db	20
   157  0030E6  1F                 	db	31
   158  0030E7  29                 	db	41
   159  0030E8  33                 	db	51
   160  0030E9  3D                 	db	61
   161  0030EA  47                 	db	71
   162  0030EB  52                 	db	82
   163  0030EC  5C                 	db	92
   164  0030ED  66                 	db	102
   165  0030EE  70                 	db	112
   166  0030EF  7A                 	db	122
   167  0030F0  85                 	db	133
   168  0030F1  8F                 	db	143
   169  0030F2  99                 	db	153
   170  0030F3  A3                 	db	163
   171  0030F4  AD                 	db	173
   172  0030F5  B8                 	db	184
   173  0030F6  C2                 	db	194
   174  0030F7  CC                 	db	204
   175  0030F8  D6                 	db	214
   176  0030F9  E0                 	db	224
   177  0030FA  EB                 	db	235
   178  0030FB  F5                 	db	245
   179  0030FC  FF                 	db	255
   180  0030FD  F5                 	db	245
   181  0030FE  EB                 	db	235
   182  0030FF  E0                 	db	224
   183  003100  D6                 	db	214
   184  003101  CC                 	db	204
   185  003102  C2                 	db	194
   186  003103  B8                 	db	184
   187  003104  AD                 	db	173
   188  003105  A3                 	db	163
   189  003106  99                 	db	153
   190  003107  8F                 	db	143
   191  003108  85                 	db	133
   192  003109  7A                 	db	122
   193  00310A  70                 	db	112
   194  00310B  66                 	db	102
   195  00310C  5C                 	db	92
   196  00310D  52                 	db	82
   197  00310E  47                 	db	71
   198  00310F  3D                 	db	61
   199  003110  33                 	db	51
   200  003111  29                 	db	41
   201  003112  1F                 	db	31
   202  003113  14                 	db	20
   203  003114  0A                 	db	10
   204  003115  00                 	db	0
   205                           
   206                           ;initializer for _sin
   207  003116  80                 	db	128
   208  003117  8F                 	db	143
   209  003118  9F                 	db	159
   210  003119  AE                 	db	174
   211  00311A  BD                 	db	189
   212  00311B  CA                 	db	202
   213  00311C  D7                 	db	215
   214  00311D  E2                 	db	226
   215  00311E  EB                 	db	235
   216  00311F  F3                 	db	243
   217  003120  F9                 	db	249
   218  003121  FD                 	db	253
   219  003122  FF                 	db	255
   220  003123  FF                 	db	255
   221  003124  FD                 	db	253
   222  003125  F9                 	db	249
   223  003126  F3                 	db	243
   224  003127  EB                 	db	235
   225  003128  E2                 	db	226
   226  003129  D7                 	db	215
   227  00312A  CA                 	db	202
   228  00312B  BD                 	db	189
   229  00312C  AE                 	db	174
   230  00312D  9F                 	db	159
   231  00312E  8F                 	db	143
   232  00312F  80                 	db	128
   233  003130  70                 	db	112
   234  003131  60                 	db	96
   235  003132  51                 	db	81
   236  003133  42                 	db	66
   237  003134  35                 	db	53
   238  003135  28                 	db	40
   239  003136  1D                 	db	29
   240  003137  14                 	db	20
   241  003138  0C                 	db	12
   242  003139  06                 	db	6
   243  00313A  02                 	db	2
   244  00313B  00                 	db	0
   245  00313C  00                 	db	0
   246  00313D  02                 	db	2
   247  00313E  06                 	db	6
   248  00313F  0C                 	db	12
   249  003140  14                 	db	20
   250  003141  1D                 	db	29
   251  003142  28                 	db	40
   252  003143  35                 	db	53
   253  003144  42                 	db	66
   254  003145  51                 	db	81
   255  003146  60                 	db	96
   256  003147  70                 	db	112
   257  0000                     _PIR6bits	set	3792
   258  0000                     _CCP1PPS	set	3759
   259  0000                     _SSP2BUF	set	3730
   260  0000                     _RB3PPS	set	3826
   261  0000                     _RB1PPS	set	3824
   262  0000                     _SSP2CON1bits	set	3734
   263  0000                     _SSP2STATbits	set	3733
   264  0000                     _RC3PPS	set	3834
   265  0000                     _RC4PPS	set	3835
   266  0000                     _SSP1DATPPS	set	3768
   267  0000                     _SSP1CLKPPS	set	3767
   268  0000                     _CCP1IE	set	30272
   269  0000                     _CCP1IF	set	30336
   270  0000                     _TMR1IF	set	30320
   271  0000                     _ADPCH	set	3935
   272  0000                     _ANSELC	set	3873
   273  0000                     _ANSELA	set	3857
   274  0000                     _CCPR1	set	4010
   275  0000                     _TMR1	set	4045
   276  0000                     _ADRES	set	3939
   277  0000                     _CCP1CONbits	set	4012
   278  0000                     _TMR1CLKbits	set	4050
   279  0000                     _T1CONbits	set	4047
   280  0000                     _LATBbits	set	3972
   281  0000                     _TRISBbits	set	3977
   282  0000                     _PORTD	set	3984
   283  0000                     _TRISDbits	set	3979
   284  0000                     _SSP1STATbits	set	3989
   285  0000                     _SSP1BUF	set	3986
   286  0000                     _SSP1CON2bits	set	3991
   287  0000                     _SSP1CON1bits	set	3990
   288  0000                     _SSP1ADD	set	3987
   289  0000                     _ADCON0bits	set	3936
   290  0000                     _ADCON0	set	3936
   291  0000                     _LATAbits	set	3971
   292  0000                     _LATCbits	set	3973
   293  0000                     _PORTCbits	set	3983
   294  0000                     _TRISCbits	set	3978
   295  0000                     _PORTAbits	set	3981
   296  0000                     _TRISAbits	set	3976
   297  0000                     _GIE	set	32663
   298  0000                     _PEIE	set	32662
   299  0000                     _TMR1ON	set	32376
   300  0000                     _T1CKPS1	set	32381
   301  0000                     _T1CKPS0	set	32380
   302                           
   303                           	psect	smallconst
   304  000F00                     __psmallconst:
   305                           	opt callstack 0
   306  000F00  00                 	db	0
   307  000F01                     STR_1:
   308  000F01  25                 	db	37
   309  000F02  64                 	db	100	;'d'
   310  000F03  75                 	db	117	;'u'
   311  000F04  00                 	db	0
   312  000F05                     STR_5:
   313  000F05  25                 	db	37
   314  000F06  6C                 	db	108	;'l'
   315  000F07  75                 	db	117	;'u'
   316  000F08  00                 	db	0
   317  000F09                     STR_8:
   318  000F09  6C                 	db	108	;'l'
   319  000F0A  64                 	db	100	;'d'
   320  000F0B  00                 	db	0
   321  000F0C                     STR_12:
   322  000F0C  6C                 	db	108	;'l'
   323  000F0D  69                 	db	105	;'i'
   324  000F0E  00                 	db	0
   325  0000                     
   326                           ; #config settings
   327  000F0F  00                 	db	0	; dummy byte at the end
   328  0000                     
   329                           	psect	cinit
   330  0035F6                     __pcinit:
   331                           	opt callstack 0
   332  0035F6                     start_initialization:
   333                           	opt callstack 0
   334  0035F6                     __initialization:
   335                           	opt callstack 0
   336                           
   337                           ; NVMREG Errata
   338  0035F6                     	if	3969
   339  0035F6  8E81               	bsf	129,7,c
   340  0035F8  9C81               	bcf	129,6,c
   341  0035FA                     	endif
   342                           
   343                           ; Initialize objects allocated to BANK1 (150 bytes)
   344                           ; load TBLPTR registers with __pidataBANK1
   345  0035FA  0EB2               	movlw	low __pidataBANK1
   346  0035FC  6EF6               	movwf	tblptrl,c
   347  0035FE  0E30               	movlw	high __pidataBANK1
   348  003600  6EF7               	movwf	tblptrh,c
   349  003602  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   350  003604  6EF8               	movwf	tblptru,c
   351  003606  EE01  F000         	lfsr	0,__pdataBANK1
   352  00360A  EE10 F096          	lfsr	1,150
   353  00360E                     copy_data0:
   354  00360E  0009               	tblrd		*+
   355  003610  CFF5 FFEE          	movff	tablat,postinc0
   356  003614  50E5               	movf	postdec1,w,c
   357  003616  50E1               	movf	fsr1l,w,c
   358  003618  E1FA               	bnz	copy_data0
   359                           
   360                           ; Clear objects allocated to BANK0 (56 bytes)
   361  00361A  EE00  F0C1         	lfsr	0,__pbssBANK0
   362  00361E  0E38               	movlw	56
   363  003620                     clear_0:
   364  003620  6AEE               	clrf	postinc0,c
   365  003622  06E8               	decf	wreg,f,c
   366  003624  E1FD               	bnz	clear_0
   367                           
   368                           ; Clear objects allocated to COMRAM (2 bytes)
   369  003626  6A5C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   370  003628  6A5B               	clrf	__pbssCOMRAM& (0+255),c
   371  00362A                     end_of_initialization:
   372                           	opt callstack 0
   373  00362A                     __end_of__initialization:
   374                           	opt callstack 0
   375  00362A  905D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   376  00362C  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   377  00362E  0100               	movlb	0
   378  003630  EF88  F007         	goto	_main	;jump to C main() function
   379                           
   380                           	psect	bssCOMRAM
   381  00005B                     __pbssCOMRAM:
   382                           	opt callstack 0
   383  00005B                     _flags:
   384                           	opt callstack 0
   385  00005B                     	ds	2
   386                           
   387                           	psect	bssBANK0
   388  0000C1                     __pbssBANK0:
   389                           	opt callstack 0
   390  0000C1                     _f3:
   391                           	opt callstack 0
   392  0000C1                     	ds	4
   393  0000C5                     _f2:
   394                           	opt callstack 0
   395  0000C5                     	ds	4
   396  0000C9                     _f:
   397                           	opt callstack 0
   398  0000C9                     	ds	4
   399  0000CD                     _value0:
   400                           	opt callstack 0
   401  0000CD                     	ds	4
   402  0000D1                     _nout:
   403                           	opt callstack 0
   404  0000D1                     	ds	2
   405  0000D3                     _width:
   406                           	opt callstack 0
   407  0000D3                     	ds	2
   408  0000D5                     _prec:
   409                           	opt callstack 0
   410  0000D5                     	ds	2
   411  0000D7                     _r:
   412                           	opt callstack 0
   413  0000D7                     	ds	2
   414  0000D9                     _dbuf:
   415                           	opt callstack 0
   416  0000D9                     	ds	32
   417                           
   418                           	psect	dataBANK1
   419  000100                     __pdataBANK1:
   420                           	opt callstack 0
   421  000100                     _sawtooth:
   422                           	opt callstack 0
   423  000100                     	ds	50
   424  000132                     _triangle:
   425                           	opt callstack 0
   426  000132                     	ds	50
   427  000164                     _sin:
   428                           	opt callstack 0
   429  000164                     	ds	50
   430                           
   431                           	psect	cstackBANK0
   432  000060                     __pcstackBANK0:
   433                           	opt callstack 0
   434  000060                     vfpfcnvrt@ll:
   435                           	opt callstack 0
   436                           
   437                           ; 8 bytes @ 0x0
   438  000060                     	ds	8
   439  000068                     vfpfcnvrt@llu:
   440                           	opt callstack 0
   441                           
   442                           ; 8 bytes @ 0x8
   443  000068                     	ds	8
   444  000070                     vfprintf@cfmt:
   445                           	opt callstack 0
   446                           
   447                           ; 2 bytes @ 0x10
   448  000070                     	ds	2
   449  000072                     ?_sprintf:
   450                           	opt callstack 0
   451  000072                     sprintf@s:
   452                           	opt callstack 0
   453                           
   454                           ; 2 bytes @ 0x12
   455  000072                     	ds	2
   456  000074                     sprintf@fmt:
   457                           	opt callstack 0
   458                           
   459                           ; 2 bytes @ 0x14
   460  000074                     	ds	6
   461  00007A                     sprintf@ap:
   462                           	opt callstack 0
   463                           
   464                           ; 2 bytes @ 0x1A
   465  00007A                     	ds	2
   466  00007C                     sprintf@f:
   467                           	opt callstack 0
   468                           
   469                           ; 6 bytes @ 0x1C
   470  00007C                     	ds	6
   471  000082                     ??_main:
   472                           
   473                           ; 1 bytes @ 0x22
   474  000082                     	ds	4
   475  000086                     main@num:
   476                           	opt callstack 0
   477                           
   478                           ; 4 bytes @ 0x26
   479  000086                     	ds	4
   480  00008A                     main@num_412:
   481                           	opt callstack 0
   482                           
   483                           ; 4 bytes @ 0x2A
   484  00008A                     	ds	4
   485  00008E                     main@num_420:
   486                           	opt callstack 0
   487                           
   488                           ; 4 bytes @ 0x2E
   489  00008E                     	ds	4
   490  000092                     main@u24:
   491                           	opt callstack 0
   492                           
   493                           ; 2 bytes @ 0x32
   494  000092                     	ds	2
   495  000094                     main@u24_410:
   496                           	opt callstack 0
   497                           
   498                           ; 2 bytes @ 0x34
   499  000094                     	ds	2
   500  000096                     main@alarmON:
   501                           	opt callstack 0
   502                           
   503                           ; 2 bytes @ 0x36
   504  000096                     	ds	2
   505  000098                     main@u60:
   506                           	opt callstack 0
   507                           
   508                           ; 2 bytes @ 0x38
   509  000098                     	ds	2
   510  00009A                     main@u60_411:
   511                           	opt callstack 0
   512                           
   513                           ; 2 bytes @ 0x3A
   514  00009A                     	ds	2
   515  00009C                     main@channel:
   516                           	opt callstack 0
   517                           
   518                           ; 2 bytes @ 0x3C
   519  00009C                     	ds	2
   520  00009E                     main@y:
   521                           	opt callstack 0
   522                           
   523                           ; 2 bytes @ 0x3E
   524  00009E                     	ds	2
   525  0000A0                     main@y_432:
   526                           	opt callstack 0
   527                           
   528                           ; 2 bytes @ 0x40
   529  0000A0                     	ds	2
   530  0000A2                     main@y_435:
   531                           	opt callstack 0
   532                           
   533                           ; 2 bytes @ 0x42
   534  0000A2                     	ds	2
   535  0000A4                     main@check:
   536                           	opt callstack 0
   537                           
   538                           ; 2 bytes @ 0x44
   539  0000A4                     	ds	2
   540  0000A6                     main@i:
   541                           	opt callstack 0
   542                           
   543                           ; 2 bytes @ 0x46
   544  0000A6                     	ds	2
   545  0000A8                     main@i_414:
   546                           	opt callstack 0
   547                           
   548                           ; 2 bytes @ 0x48
   549  0000A8                     	ds	2
   550  0000AA                     main@x:
   551                           	opt callstack 0
   552                           
   553                           ; 2 bytes @ 0x4A
   554  0000AA                     	ds	2
   555  0000AC                     main@x_433:
   556                           	opt callstack 0
   557                           
   558                           ; 2 bytes @ 0x4C
   559  0000AC                     	ds	2
   560  0000AE                     main@x_436:
   561                           	opt callstack 0
   562                           
   563                           ; 2 bytes @ 0x4E
   564  0000AE                     	ds	2
   565  0000B0                     main@setNum:
   566                           	opt callstack 0
   567                           
   568                           ; 2 bytes @ 0x50
   569  0000B0                     	ds	2
   570  0000B2                     main@AsetNum:
   571                           	opt callstack 0
   572                           
   573                           ; 2 bytes @ 0x52
   574  0000B2                     	ds	2
   575  0000B4                     main@alarm:
   576                           	opt callstack 0
   577                           
   578                           ; 2 bytes @ 0x54
   579  0000B4                     	ds	2
   580  0000B6                     main@array_413:
   581                           	opt callstack 0
   582                           
   583                           ; 2 bytes @ 0x56
   584  0000B6                     	ds	2
   585  0000B8                     main@outv:
   586                           	opt callstack 0
   587                           
   588                           ; 1 bytes @ 0x58
   589  0000B8                     	ds	1
   590  0000B9                     main@outv_434:
   591                           	opt callstack 0
   592                           
   593                           ; 1 bytes @ 0x59
   594  0000B9                     	ds	1
   595  0000BA                     main@outv_437:
   596                           	opt callstack 0
   597                           
   598                           ; 1 bytes @ 0x5A
   599  0000BA                     	ds	1
   600  0000BB                     main@array:
   601                           	opt callstack 0
   602                           
   603                           ; 2 bytes @ 0x5B
   604  0000BB                     	ds	2
   605  0000BD                     main@temp2:
   606                           	opt callstack 0
   607                           
   608                           ; 1 bytes @ 0x5D
   609  0000BD                     	ds	1
   610  0000BE                     main@temp2_417:
   611                           	opt callstack 0
   612                           
   613                           ; 1 bytes @ 0x5E
   614  0000BE                     	ds	1
   615  0000BF                     main@temp1_416:
   616                           	opt callstack 0
   617                           
   618                           ; 1 bytes @ 0x5F
   619  0000BF                     	ds	1
   620  0000C0                     main@temp1:
   621                           	opt callstack 0
   622                           
   623                           ; 1 bytes @ 0x60
   624  0000C0                     	ds	1
   625                           
   626                           	psect	cstackCOMRAM
   627  000001                     __pcstackCOMRAM:
   628                           	opt callstack 0
   629  000001                     ??_ISR:
   630  000001                     
   631                           ; 1 bytes @ 0x0
   632  000001                     	ds	1
   633  000002                     ??_lcd_char:
   634  000002                     ??_lcd_command:
   635  000002                     ??_spi_write:
   636  000002                     ?_getr:
   637                           	opt callstack 0
   638  000002                     ?_strlen:
   639                           	opt callstack 0
   640  000002                     ?_strncmp:
   641                           	opt callstack 0
   642  000002                     ?___awdiv:
   643                           	opt callstack 0
   644  000002                     ?___awmod:
   645                           	opt callstack 0
   646  000002                     ?_adcNum0:
   647                           	opt callstack 0
   648  000002                     ?___lldiv:
   649                           	opt callstack 0
   650  000002                     ?___aodiv:
   651                           	opt callstack 0
   652  000002                     ?___aomod:
   653                           	opt callstack 0
   654  000002                     ?___lodiv:
   655                           	opt callstack 0
   656  000002                     ?___lomod:
   657                           	opt callstack 0
   658  000002                     i2c_read@registers:
   659                           	opt callstack 0
   660  000002                     i2c_write@registers:
   661                           	opt callstack 0
   662  000002                     ___awdiv@dividend:
   663                           	opt callstack 0
   664  000002                     ___awmod@dividend:
   665                           	opt callstack 0
   666  000002                     fputc@c:
   667                           	opt callstack 0
   668  000002                     strlen@s:
   669                           	opt callstack 0
   670  000002                     strncmp@_l:
   671                           	opt callstack 0
   672  000002                     ___lldiv@dividend:
   673                           	opt callstack 0
   674  000002                     ___aodiv@dividend:
   675                           	opt callstack 0
   676  000002                     ___aomod@dividend:
   677                           	opt callstack 0
   678  000002                     ___lodiv@dividend:
   679                           	opt callstack 0
   680  000002                     ___lomod@dividend:
   681                           	opt callstack 0
   682                           
   683                           ; 8 bytes @ 0x1
   684  000002                     	ds	1
   685  000003                     i2c_write@data:
   686                           	opt callstack 0
   687  000003                     lcd_command@temp:
   688                           	opt callstack 0
   689  000003                     lcd_char@temp:
   690                           	opt callstack 0
   691  000003                     i2c_read@num:
   692                           	opt callstack 0
   693                           
   694                           ; 4 bytes @ 0x2
   695  000003                     	ds	1
   696  000004                     i2c_write@address:
   697                           	opt callstack 0
   698  000004                     lcd_command@x:
   699                           	opt callstack 0
   700  000004                     lcd_char@x:
   701                           	opt callstack 0
   702  000004                     spi_write@data:
   703                           	opt callstack 0
   704  000004                     ___awdiv@divisor:
   705                           	opt callstack 0
   706  000004                     ___awmod@divisor:
   707                           	opt callstack 0
   708  000004                     fputc@fp:
   709                           	opt callstack 0
   710  000004                     strlen@a:
   711                           	opt callstack 0
   712  000004                     strncmp@_r:
   713                           	opt callstack 0
   714                           
   715                           ; 2 bytes @ 0x3
   716  000004                     	ds	1
   717  000005                     spi_write@bound:
   718                           	opt callstack 0
   719                           
   720                           ; 1 bytes @ 0x4
   721  000005                     	ds	1
   722  000006                     ??_adcNum0:
   723  000006                     ??_fputc:
   724  000006                     ___awdiv@counter:
   725                           	opt callstack 0
   726  000006                     ___awmod@counter:
   727                           	opt callstack 0
   728  000006                     spi_write@full:
   729                           	opt callstack 0
   730  000006                     strncmp@n:
   731                           	opt callstack 0
   732  000006                     ___lldiv@divisor:
   733                           	opt callstack 0
   734                           
   735                           ; 4 bytes @ 0x5
   736  000006                     	ds	1
   737  000007                     i2c_read@read:
   738                           	opt callstack 0
   739  000007                     ___awdiv@sign:
   740                           	opt callstack 0
   741  000007                     ___awmod@sign:
   742                           	opt callstack 0
   743                           
   744                           ; 1 bytes @ 0x6
   745  000007                     	ds	1
   746  000008                     ??_strncmp:
   747  000008                     i2c_read@address:
   748                           	opt callstack 0
   749  000008                     ___awdiv@quotient:
   750                           	opt callstack 0
   751                           
   752                           ; 2 bytes @ 0x7
   753  000008                     	ds	1
   754  000009                     ??_get_hours:
   755  000009                     ??_get_minutes:
   756  000009                     ??_get_seconds:
   757  000009                     ??_get_Ahours:
   758  000009                     ??_get_Aminutes:
   759  000009                     ??_get_Aseconds:
   760  000009                     rtc_init@i:
   761                           	opt callstack 0
   762  000009                     strncmp@l:
   763                           	opt callstack 0
   764                           
   765                           ; 2 bytes @ 0x8
   766  000009                     	ds	1
   767  00000A                     ??_set_hours:
   768  00000A                     ??_set_minutes:
   769  00000A                     ??_set_seconds:
   770  00000A                     ??_set_Ahours:
   771  00000A                     ??_set_Aminutes:
   772  00000A                     ??_set_Aseconds:
   773  00000A                     get_seconds@sec:
   774                           	opt callstack 0
   775  00000A                     get_minutes@min:
   776                           	opt callstack 0
   777  00000A                     get_hours@hour:
   778                           	opt callstack 0
   779  00000A                     get_Aseconds@Asec:
   780                           	opt callstack 0
   781  00000A                     get_Aminutes@Amin:
   782                           	opt callstack 0
   783  00000A                     get_Ahours@Ahour:
   784                           	opt callstack 0
   785  00000A                     ___lldiv@quotient:
   786                           	opt callstack 0
   787  00000A                     ___aodiv@divisor:
   788                           	opt callstack 0
   789  00000A                     ___aomod@divisor:
   790                           	opt callstack 0
   791  00000A                     ___lodiv@divisor:
   792                           	opt callstack 0
   793  00000A                     ___lomod@divisor:
   794                           	opt callstack 0
   795                           
   796                           ; 8 bytes @ 0x9
   797  00000A                     	ds	1
   798  00000B                     rtc_init@sec:
   799                           	opt callstack 0
   800  00000B                     fputs@s:
   801                           	opt callstack 0
   802  00000B                     strncmp@r:
   803                           	opt callstack 0
   804                           
   805                           ; 2 bytes @ 0xA
   806  00000B                     	ds	1
   807  00000C                     rtc_init@hour:
   808                           	opt callstack 0
   809  00000C                     set_seconds@curr_sec:
   810                           	opt callstack 0
   811  00000C                     set_minutes@min:
   812                           	opt callstack 0
   813  00000C                     set_hours@curr_hour:
   814                           	opt callstack 0
   815  00000C                     set_Aseconds@Asec:
   816                           	opt callstack 0
   817  00000C                     set_Aminutes@Amin:
   818                           	opt callstack 0
   819  00000C                     set_Ahours@Acurr_hour:
   820                           	opt callstack 0
   821                           
   822                           ; 1 bytes @ 0xB
   823  00000C                     	ds	1
   824  00000D                     set_seconds@sec:
   825                           	opt callstack 0
   826  00000D                     set_hours@hour:
   827                           	opt callstack 0
   828  00000D                     set_Ahours@Ahour:
   829                           	opt callstack 0
   830  00000D                     fputs@fp:
   831                           	opt callstack 0
   832                           
   833                           ; 2 bytes @ 0xC
   834  00000D                     	ds	1
   835  00000E                     ___lldiv@counter:
   836                           	opt callstack 0
   837                           
   838                           ; 1 bytes @ 0xD
   839  00000E                     	ds	1
   840  00000F                     fputs@c:
   841                           	opt callstack 0
   842                           
   843                           ; 1 bytes @ 0xE
   844  00000F                     	ds	1
   845  000010                     fputs@i:
   846                           	opt callstack 0
   847                           
   848                           ; 2 bytes @ 0xF
   849  000010                     	ds	2
   850  000012                     ?_pad:
   851                           	opt callstack 0
   852  000012                     ___aodiv@counter:
   853                           	opt callstack 0
   854  000012                     ___aomod@counter:
   855                           	opt callstack 0
   856  000012                     ___lomod@counter:
   857                           	opt callstack 0
   858  000012                     pad@fp:
   859                           	opt callstack 0
   860  000012                     ___lodiv@quotient:
   861                           	opt callstack 0
   862                           
   863                           ; 8 bytes @ 0x11
   864  000012                     	ds	1
   865  000013                     ___aodiv@sign:
   866                           	opt callstack 0
   867  000013                     ___aomod@sign:
   868                           	opt callstack 0
   869                           
   870                           ; 1 bytes @ 0x12
   871  000013                     	ds	1
   872  000014                     ?_abs:
   873                           	opt callstack 0
   874  000014                     pad@buf:
   875                           	opt callstack 0
   876  000014                     abs@a:
   877                           	opt callstack 0
   878  000014                     ___aodiv@quotient:
   879                           	opt callstack 0
   880                           
   881                           ; 8 bytes @ 0x13
   882  000014                     	ds	2
   883  000016                     ??_abs:
   884  000016                     pad@p:
   885                           	opt callstack 0
   886                           
   887                           ; 2 bytes @ 0x15
   888  000016                     	ds	2
   889  000018                     ??_pad:
   890                           
   891                           ; 1 bytes @ 0x17
   892  000018                     	ds	1
   893  000019                     pad@i:
   894                           	opt callstack 0
   895                           
   896                           ; 2 bytes @ 0x18
   897  000019                     	ds	1
   898  00001A                     ___lodiv@counter:
   899                           	opt callstack 0
   900                           
   901                           ; 1 bytes @ 0x19
   902  00001A                     	ds	1
   903  00001B                     pad@w:
   904                           	opt callstack 0
   905                           
   906                           ; 2 bytes @ 0x1A
   907  00001B                     	ds	2
   908  00001D                     ?_dtoa:
   909                           	opt callstack 0
   910  00001D                     ?_utoa:
   911                           	opt callstack 0
   912  00001D                     dtoa@fp:
   913                           	opt callstack 0
   914  00001D                     utoa@fp:
   915                           	opt callstack 0
   916                           
   917                           ; 2 bytes @ 0x1C
   918  00001D                     	ds	2
   919  00001F                     dtoa@d:
   920                           	opt callstack 0
   921  00001F                     utoa@d:
   922                           	opt callstack 0
   923                           
   924                           ; 8 bytes @ 0x1E
   925  00001F                     	ds	8
   926  000027                     ??_dtoa:
   927  000027                     ??_utoa:
   928                           
   929                           ; 1 bytes @ 0x26
   930  000027                     	ds	8
   931  00002F                     _dtoa$1701:
   932                           	opt callstack 0
   933  00002F                     utoa@p:
   934                           	opt callstack 0
   935                           
   936                           ; 2 bytes @ 0x2E
   937  00002F                     	ds	2
   938  000031                     dtoa@p:
   939                           	opt callstack 0
   940  000031                     utoa@w:
   941                           	opt callstack 0
   942                           
   943                           ; 2 bytes @ 0x30
   944  000031                     	ds	2
   945  000033                     dtoa@w:
   946                           	opt callstack 0
   947  000033                     utoa@n:
   948                           	opt callstack 0
   949                           
   950                           ; 8 bytes @ 0x32
   951  000033                     	ds	2
   952  000035                     dtoa@s:
   953                           	opt callstack 0
   954                           
   955                           ; 2 bytes @ 0x34
   956  000035                     	ds	2
   957  000037                     dtoa@n:
   958                           	opt callstack 0
   959                           
   960                           ; 8 bytes @ 0x36
   961  000037                     	ds	4
   962  00003B                     utoa@i:
   963                           	opt callstack 0
   964                           
   965                           ; 2 bytes @ 0x3A
   966  00003B                     	ds	4
   967  00003F                     dtoa@i:
   968                           	opt callstack 0
   969                           
   970                           ; 2 bytes @ 0x3E
   971  00003F                     	ds	2
   972  000041                     ?_vfpfcnvrt:
   973                           	opt callstack 0
   974  000041                     vfpfcnvrt@fp:
   975                           	opt callstack 0
   976                           
   977                           ; 2 bytes @ 0x40
   978  000041                     	ds	2
   979  000043                     vfpfcnvrt@fmt:
   980                           	opt callstack 0
   981                           
   982                           ; 2 bytes @ 0x42
   983  000043                     	ds	2
   984  000045                     vfpfcnvrt@ap:
   985                           	opt callstack 0
   986                           
   987                           ; 2 bytes @ 0x44
   988  000045                     	ds	2
   989  000047                     ??_vfpfcnvrt:
   990                           
   991                           ; 1 bytes @ 0x46
   992  000047                     	ds	14
   993  000055                     ?_vfprintf:
   994                           	opt callstack 0
   995  000055                     vfprintf@fp:
   996                           	opt callstack 0
   997                           
   998                           ; 2 bytes @ 0x54
   999  000055                     	ds	2
  1000  000057                     vfprintf@fmt:
  1001                           	opt callstack 0
  1002                           
  1003                           ; 2 bytes @ 0x56
  1004  000057                     	ds	2
  1005  000059                     vfprintf@ap:
  1006                           	opt callstack 0
  1007                           
  1008                           ; 2 bytes @ 0x58
  1009  000059                     	ds	2
  1010  00005B                     
  1011                           ; 1 bytes @ 0x5A
  1012 ;;
  1013 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1014 ;;
  1015 ;; *************** function _main *****************
  1016 ;; Defined at:
  1017 ;;		line 40 in file "final_main.c"
  1018 ;; Parameters:    Size  Location     Type
  1019 ;;		None
  1020 ;; Auto vars:     Size  Location     Type
  1021 ;;  outv            1   90[BANK0 ] volatile unsigned char 
  1022 ;;  outv            1   89[BANK0 ] volatile unsigned char 
  1023 ;;  outv            1   88[BANK0 ] volatile unsigned char 
  1024 ;;  x               2   78[BANK0 ] int 
  1025 ;;  x               2   76[BANK0 ] int 
  1026 ;;  x               2   74[BANK0 ] int 
  1027 ;;  y               2   66[BANK0 ] int 
  1028 ;;  y               2   64[BANK0 ] int 
  1029 ;;  y               2   62[BANK0 ] int 
  1030 ;;  i               2   72[BANK0 ] int 
  1031 ;;  num             4   42[BANK0 ] unsigned long 
  1032 ;;  i               2   70[BANK0 ] int 
  1033 ;;  num             4   38[BANK0 ] unsigned long 
  1034 ;;  num             4   46[BANK0 ] unsigned long 
  1035 ;;  array           2   86[BANK0 ] unsigned char [2]
  1036 ;;  u60             2   58[BANK0 ] int 
  1037 ;;  u24             2   52[BANK0 ] int 
  1038 ;;  temp1           1   95[BANK0 ] unsigned char 
  1039 ;;  temp2           1   94[BANK0 ] unsigned char 
  1040 ;;  array           2   91[BANK0 ] unsigned char [2]
  1041 ;;  u60             2   56[BANK0 ] int 
  1042 ;;  u24             2   50[BANK0 ] int 
  1043 ;;  temp1           1   96[BANK0 ] unsigned char 
  1044 ;;  temp2           1   93[BANK0 ] unsigned char 
  1045 ;;  alarm           2   84[BANK0 ] int 
  1046 ;;  AsetNum         2   82[BANK0 ] int 
  1047 ;;  setNum          2   80[BANK0 ] int 
  1048 ;;  check           2   68[BANK0 ] int 
  1049 ;;  channel         2   60[BANK0 ] int 
  1050 ;;  alarmON         2   54[BANK0 ] int 
  1051 ;; Return value:  Size  Location     Type
  1052 ;;                  1    wreg      void 
  1053 ;; Registers used:
  1054 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1055 ;; Tracked objects:
  1056 ;;		On entry : 0/0
  1057 ;;		On exit  : 0/0
  1058 ;;		Unchanged: 0/0
  1059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1061 ;;      Locals:         0      59       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1062 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1063 ;;      Totals:         0      63       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1064 ;;Total ram usage:       63 bytes
  1065 ;; Hardware stack levels required when called:    9
  1066 ;; This function calls:
  1067 ;;		___lldiv
  1068 ;;		_adcNum0
  1069 ;;		_adc_init
  1070 ;;		_ccp_init
  1071 ;;		_get_Ahours
  1072 ;;		_get_Aminutes
  1073 ;;		_get_Aseconds
  1074 ;;		_get_hours
  1075 ;;		_get_minutes
  1076 ;;		_get_seconds
  1077 ;;		_getr
  1078 ;;		_i2c_init
  1079 ;;		_i2c_read
  1080 ;;		_i2c_write
  1081 ;;		_lcd_char
  1082 ;;		_lcd_command
  1083 ;;		_lcd_init
  1084 ;;		_rtc_init
  1085 ;;		_set_Ahours
  1086 ;;		_set_Aminutes
  1087 ;;		_set_Aseconds
  1088 ;;		_set_hours
  1089 ;;		_set_minutes
  1090 ;;		_set_seconds
  1091 ;;		_spi_init
  1092 ;;		_spi_write
  1093 ;;		_sprintf
  1094 ;; This function is called by:
  1095 ;;		Startup code after reset
  1096 ;; This function uses a non-reentrant model
  1097 ;;
  1098                           
  1099                           	psect	text0
  1100  000F10                     __ptext0:
  1101                           	opt callstack 0
  1102  000F10                     _main:
  1103                           	opt callstack 22
  1104  000F10                     
  1105                           ;final_main.c: 41:         if(PORTAbits.RA2==1){
  1106  000F10  0E00               	movlw	0
  1107  000F12  0100               	movlb	0	; () banked
  1108  000F14  6FB1               	movwf	(main@setNum+1)& (0+255),b
  1109  000F16  0E00               	movlw	0
  1110  000F18  6FB0               	movwf	main@setNum& (0+255),b
  1111                           
  1112                           ;final_main.c: 42: 
  1113  000F1A  0E00               	movlw	0
  1114  000F1C  6FB3               	movwf	(main@AsetNum+1)& (0+255),b
  1115  000F1E  0E00               	movlw	0
  1116  000F20  6FB2               	movwf	main@AsetNum& (0+255),b
  1117                           
  1118                           ;final_main.c: 43:             if(value0 == 0){
  1119  000F22  0E00               	movlw	0
  1120  000F24  6FB5               	movwf	(main@alarm+1)& (0+255),b
  1121  000F26  0E00               	movlw	0
  1122  000F28  6FB4               	movwf	main@alarm& (0+255),b
  1123                           
  1124                           ;final_main.c: 44:                 value0 = adcNum0();
  1125  000F2A  0E00               	movlw	0
  1126  000F2C  6FA5               	movwf	(main@check+1)& (0+255),b
  1127  000F2E  0E00               	movlw	0
  1128  000F30  6FA4               	movwf	main@check& (0+255),b
  1129                           
  1130                           ;final_main.c: 46:             else{
  1131  000F32  0E00               	movlw	0
  1132  000F34  6F9D               	movwf	(main@channel+1)& (0+255),b
  1133  000F36  0E00               	movlw	0
  1134  000F38  6F9C               	movwf	main@channel& (0+255),b
  1135  000F3A                     
  1136                           ; BSR set to: 0
  1137                           ;final_main.c: 48:             }
  1138  000F3A  ECF2  F01B         	call	_adc_init	;wreg free
  1139  000F3E                     
  1140                           ;final_main.c: 49: 
  1141  000F3E  ECBD  F01B         	call	_lcd_init	;wreg free
  1142  000F42                     
  1143                           ;final_main.c: 51:             int u24 = value0/42;
  1144  000F42  EC54  F01B         	call	_i2c_init	;wreg free
  1145  000F46                     
  1146                           ;final_main.c: 52:             int u60 = value0/17;
  1147  000F46  ECA4  F018         	call	_rtc_init	;wreg free
  1148  000F4A                     
  1149                           ;final_main.c: 53: 
  1150  000F4A  ECAD  F01B         	call	_spi_init	;wreg free
  1151  000F4E                     
  1152                           ;final_main.c: 54: 
  1153  000F4E  EC1A  F01B         	call	_ccp_init	;wreg free
  1154  000F52                     
  1155                           ;final_main.c: 56:                 setNum++;
  1156  000F52  8488               	bsf	136,2,c	;volatile
  1157  000F54                     
  1158                           ;final_main.c: 57:                 if (setNum==4){
  1159  000F54  8688               	bsf	136,3,c	;volatile
  1160  000F56                     
  1161                           ;final_main.c: 58:                     setNum = 0;
  1162  000F56  8888               	bsf	136,4,c	;volatile
  1163  000F58                     
  1164                           ;final_main.c: 59:                 }
  1165  000F58  8A88               	bsf	136,5,c	;volatile
  1166                           
  1167                           ;final_main.c: 60: 
  1168  000F5A  0E00               	movlw	0
  1169  000F5C  010F               	movlb	15	; () banked
  1170  000F5E  6F11               	movwf	17,b	;volatile
  1171  000F60                     
  1172                           ; BSR set to: 15
  1173                           ;final_main.c: 61:                 unsigned long num = 10000L;
  1174  000F60  9288               	bcf	136,1,c	;volatile
  1175  000F62                     
  1176                           ; BSR set to: 15
  1177                           ;final_main.c: 62:                 while (--num > 0) {
  1178  000F62  928D               	bcf	141,1,c	;volatile
  1179  000F64                     
  1180                           ; BSR set to: 15
  1181                           ;final_main.c: 64:                 }
  1182  000F64  908A               	bcf	138,0,c	;volatile
  1183  000F66                     
  1184                           ; BSR set to: 15
  1185                           ;final_main.c: 65:                 if (setNum != 0){
  1186  000F66  908F               	bcf	143,0,c	;volatile
  1187  000F68                     
  1188                           ; BSR set to: 15
  1189                           ;final_main.c: 66:                     LATCbits.LATC0 =0;
  1190  000F68  928A               	bcf	138,1,c	;volatile
  1191  000F6A                     
  1192                           ; BSR set to: 15
  1193                           ;final_main.c: 67:                 }
  1194  000F6A  928F               	bcf	143,1,c	;volatile
  1195  000F6C                     
  1196                           ; BSR set to: 15
  1197                           ;final_main.c: 68:             }
  1198  000F6C  848A               	bsf	138,2,c	;volatile
  1199  000F6E                     
  1200                           ; BSR set to: 15
  1201                           ;final_main.c: 69: 
  1202  000F6E  948F               	bcf	143,2,c	;volatile
  1203  000F70                     
  1204                           ; BSR set to: 15
  1205                           ;final_main.c: 70:             switch((char)setNum){
  1206  000F70  9A8A               	bcf	138,5,c	;volatile
  1207  000F72                     
  1208                           ; BSR set to: 15
  1209                           ;final_main.c: 71:                case 1:
  1210  000F72  9A8F               	bcf	143,5,c	;volatile
  1211  000F74                     l4521:
  1212                           
  1213                           ;final_main.c: 75:                   set_minutes(u60);
  1214  000F74  A48D               	btfss	141,2,c	;volatile
  1215  000F76  EFBF  F007         	goto	u4461
  1216  000F7A  EFC1  F007         	goto	u4460
  1217  000F7E                     u4461:
  1218  000F7E  EF07  F00A         	goto	l4655
  1219  000F82                     u4460:
  1220  000F82                     
  1221                           ;final_main.c: 77:                case 3:
  1222  000F82  0100               	movlb	0	; () banked
  1223  000F84  51CD               	movf	_value0& (0+255),w,b
  1224  000F86  11CE               	iorwf	(_value0+1)& (0+255),w,b
  1225  000F88  11CF               	iorwf	(_value0+2)& (0+255),w,b
  1226  000F8A  11D0               	iorwf	(_value0+3)& (0+255),w,b
  1227  000F8C  A4D8               	btfss	status,2,c
  1228  000F8E  EFCB  F007         	goto	u4471
  1229  000F92  EFCD  F007         	goto	u4470
  1230  000F96                     u4471:
  1231  000F96  EFD9  F007         	goto	l4527
  1232  000F9A                     u4470:
  1233  000F9A                     
  1234                           ; BSR set to: 0
  1235                           ;final_main.c: 78:                    set_seconds(u60);
  1236  000F9A  ECB9  F01A         	call	_adcNum0	;wreg free
  1237  000F9E  C002  F0CD         	movff	?_adcNum0,_value0
  1238  000FA2  C003  F0CE         	movff	?_adcNum0+1,_value0+1
  1239  000FA6  C004  F0CF         	movff	?_adcNum0+2,_value0+2
  1240  000FAA  C005  F0D0         	movff	?_adcNum0+3,_value0+3
  1241                           
  1242                           ;final_main.c: 79:                    break;
  1243  000FAE  EFF9  F007         	goto	l84
  1244  000FB2                     l4527:
  1245                           
  1246                           ; BSR set to: 0
  1247                           ;final_main.c: 81:                     break;
  1248  000FB2  ECB9  F01A         	call	_adcNum0	;wreg free
  1249  000FB6  0100               	movlb	0	; () banked
  1250  000FB8  51CD               	movf	_value0& (0+255),w,b
  1251  000FBA  2402               	addwf	?_adcNum0^0,w,c
  1252  000FBC  6F82               	movwf	??_main& (0+255),b
  1253  000FBE  51CE               	movf	(_value0+1)& (0+255),w,b
  1254  000FC0  2003               	addwfc	(?_adcNum0+1)^0,w,c
  1255  000FC2  6F83               	movwf	(??_main+1)& (0+255),b
  1256  000FC4  51CF               	movf	(_value0+2)& (0+255),w,b
  1257  000FC6  2004               	addwfc	(?_adcNum0+2)^0,w,c
  1258  000FC8  6F84               	movwf	(??_main+2)& (0+255),b
  1259  000FCA  51D0               	movf	(_value0+3)& (0+255),w,b
  1260  000FCC  2005               	addwfc	(?_adcNum0+3)^0,w,c
  1261  000FCE  6F85               	movwf	(??_main+3)& (0+255),b
  1262  000FD0  90D8               	bcf	status,0,c
  1263  000FD2  3385               	rrcf	(??_main+3)& (0+255),f,b
  1264  000FD4  3384               	rrcf	(??_main+2)& (0+255),f,b
  1265  000FD6  3383               	rrcf	(??_main+1)& (0+255),f,b
  1266  000FD8  3382               	rrcf	??_main& (0+255),f,b
  1267  000FDA  0E01               	movlw	1
  1268  000FDC  2582               	addwf	??_main& (0+255),w,b
  1269  000FDE  6FCD               	movwf	_value0& (0+255),b
  1270  000FE0  0E00               	movlw	0
  1271  000FE2  2183               	addwfc	(??_main+1)& (0+255),w,b
  1272  000FE4  6FCE               	movwf	(_value0+1)& (0+255),b
  1273  000FE6  0E00               	movlw	0
  1274  000FE8  2184               	addwfc	(??_main+2)& (0+255),w,b
  1275  000FEA  6FCF               	movwf	(_value0+2)& (0+255),b
  1276  000FEC  0E00               	movlw	0
  1277  000FEE  2185               	addwfc	(??_main+3)& (0+255),w,b
  1278  000FF0  6FD0               	movwf	(_value0+3)& (0+255),b
  1279  000FF2                     l84:
  1280                           
  1281                           ;final_main.c: 85:             for(int i=0; i<2; i++){
  1282  000FF2  C0CD  F002         	movff	_value0,___lldiv@dividend
  1283  000FF6  C0CE  F003         	movff	_value0+1,___lldiv@dividend+1
  1284  000FFA  C0CF  F004         	movff	_value0+2,___lldiv@dividend+2
  1285  000FFE  C0D0  F005         	movff	_value0+3,___lldiv@dividend+3
  1286  001002  0E2A               	movlw	42
  1287  001004  6E06               	movwf	___lldiv@divisor^0,c
  1288  001006  0E00               	movlw	0
  1289  001008  6E07               	movwf	(___lldiv@divisor+1)^0,c
  1290  00100A  0E00               	movlw	0
  1291  00100C  6E08               	movwf	(___lldiv@divisor+2)^0,c
  1292  00100E  0E00               	movlw	0
  1293  001010  6E09               	movwf	(___lldiv@divisor+3)^0,c
  1294  001012  EC07  F018         	call	___lldiv	;wreg free
  1295  001016  C002  F092         	movff	?___lldiv,main@u24
  1296  00101A  C003  F093         	movff	?___lldiv+1,main@u24+1
  1297                           
  1298                           ;final_main.c: 86:                 array[i]=0;
  1299  00101E  C0CD  F002         	movff	_value0,___lldiv@dividend
  1300  001022  C0CE  F003         	movff	_value0+1,___lldiv@dividend+1
  1301  001026  C0CF  F004         	movff	_value0+2,___lldiv@dividend+2
  1302  00102A  C0D0  F005         	movff	_value0+3,___lldiv@dividend+3
  1303  00102E  0E11               	movlw	17
  1304  001030  6E06               	movwf	___lldiv@divisor^0,c
  1305  001032  0E00               	movlw	0
  1306  001034  6E07               	movwf	(___lldiv@divisor+1)^0,c
  1307  001036  0E00               	movlw	0
  1308  001038  6E08               	movwf	(___lldiv@divisor+2)^0,c
  1309  00103A  0E00               	movlw	0
  1310  00103C  6E09               	movwf	(___lldiv@divisor+3)^0,c
  1311  00103E  EC07  F018         	call	___lldiv	;wreg free
  1312  001042  C002  F098         	movff	?___lldiv,main@u60
  1313  001046  C003  F099         	movff	?___lldiv+1,main@u60+1
  1314  00104A                     
  1315                           ;final_main.c: 89:             lcd_char('T');
  1316  00104A  B68D               	btfsc	141,3,c	;volatile
  1317  00104C  EF2A  F008         	goto	u4481
  1318  001050  EF2C  F008         	goto	u4480
  1319  001054                     u4481:
  1320  001054  EF73  F008         	goto	l4551
  1321  001058                     u4480:
  1322  001058                     
  1323                           ;final_main.c: 90:             lcd_char(':');
  1324  001058  0100               	movlb	0	; () banked
  1325  00105A  4BB0               	infsnz	main@setNum& (0+255),f,b
  1326  00105C  2BB1               	incf	(main@setNum+1)& (0+255),f,b
  1327  00105E                     
  1328                           ; BSR set to: 0
  1329                           ;final_main.c: 91:             lcd_char(' ');
  1330  00105E  0E04               	movlw	4
  1331  001060  19B0               	xorwf	main@setNum& (0+255),w,b
  1332  001062  11B1               	iorwf	(main@setNum+1)& (0+255),w,b
  1333  001064  A4D8               	btfss	status,2,c
  1334  001066  EF37  F008         	goto	u4491
  1335  00106A  EF39  F008         	goto	u4490
  1336  00106E                     u4491:
  1337  00106E  EF3D  F008         	goto	l86
  1338  001072                     u4490:
  1339  001072                     
  1340                           ; BSR set to: 0
  1341                           ;final_main.c: 92: 
  1342  001072  0E00               	movlw	0
  1343  001074  6FB1               	movwf	(main@setNum+1)& (0+255),b
  1344  001076  0E00               	movlw	0
  1345  001078  6FB0               	movwf	main@setNum& (0+255),b
  1346  00107A                     l86:
  1347                           
  1348                           ; BSR set to: 0
  1349                           ;final_main.c: 95:             char temp1 = array[0];
  1350  00107A  0E10               	movlw	16
  1351  00107C  6F86               	movwf	main@num& (0+255),b
  1352  00107E  0E27               	movlw	39
  1353  001080  6F87               	movwf	(main@num+1)& (0+255),b
  1354  001082  0E00               	movlw	0
  1355  001084  6F88               	movwf	(main@num+2)& (0+255),b
  1356  001086  0E00               	movlw	0
  1357  001088  6F89               	movwf	(main@num+3)& (0+255),b
  1358                           
  1359                           ;final_main.c: 96:             char temp2 = array[1];
  1360  00108A  EF48  F008         	goto	l4537
  1361  00108E                     l88:
  1362                           
  1363                           ; BSR set to: 0
  1364                           ;final_main.c: 97:             if((temp1 != 0) && (temp2 != 0)){
  1365  00108E  8085               	bsf	133,0,c	;volatile
  1366  001090                     l4537:
  1367                           
  1368                           ; BSR set to: 0
  1369                           ;final_main.c: 96:             char temp2 = array[1];
  1370  001090  0786               	decf	main@num& (0+255),f,b
  1371  001092  0E00               	movlw	0
  1372  001094  5B87               	subwfb	(main@num+1)& (0+255),f,b
  1373  001096  5B88               	subwfb	(main@num+2)& (0+255),f,b
  1374  001098  5B89               	subwfb	(main@num+3)& (0+255),f,b
  1375  00109A  5186               	movf	main@num& (0+255),w,b
  1376  00109C  1187               	iorwf	(main@num+1)& (0+255),w,b
  1377  00109E  1188               	iorwf	(main@num+2)& (0+255),w,b
  1378  0010A0  1189               	iorwf	(main@num+3)& (0+255),w,b
  1379  0010A2  A4D8               	btfss	status,2,c
  1380  0010A4  EF56  F008         	goto	u4501
  1381  0010A8  EF58  F008         	goto	u4500
  1382  0010AC                     u4501:
  1383  0010AC  EF47  F008         	goto	l88
  1384  0010B0                     u4500:
  1385  0010B0                     
  1386                           ; BSR set to: 0
  1387                           ;final_main.c: 99:                 lcd_char(temp2);
  1388  0010B0  51B0               	movf	main@setNum& (0+255),w,b
  1389  0010B2  11B1               	iorwf	(main@setNum+1)& (0+255),w,b
  1390  0010B4  B4D8               	btfsc	status,2,c
  1391  0010B6  EF5F  F008         	goto	u4511
  1392  0010BA  EF61  F008         	goto	u4510
  1393  0010BE                     u4511:
  1394  0010BE  EF73  F008         	goto	l4551
  1395  0010C2                     u4510:
  1396  0010C2                     
  1397                           ; BSR set to: 0
  1398                           ;final_main.c: 100:             }
  1399  0010C2  9085               	bcf	133,0,c	;volatile
  1400  0010C4  EF73  F008         	goto	l4551
  1401  0010C8                     l4543:
  1402                           
  1403                           ; BSR set to: 0
  1404                           ;final_main.c: 106:                 lcd_char('0');
  1405  0010C8  5192               	movf	main@u24& (0+255),w,b
  1406  0010CA  EC19  F019         	call	_set_hours
  1407                           
  1408                           ;final_main.c: 107:                 lcd_char('0');
  1409  0010CE  EF8D  F008         	goto	l4553
  1410  0010D2                     l4545:
  1411                           
  1412                           ; BSR set to: 0
  1413                           ;final_main.c: 109:             lcd_char(':');
  1414  0010D2  5198               	movf	main@u60& (0+255),w,b
  1415  0010D4  ECEA  F019         	call	_set_minutes
  1416                           
  1417                           ;final_main.c: 110: 
  1418  0010D8  EF8D  F008         	goto	l4553
  1419  0010DC                     l4547:
  1420                           
  1421                           ; BSR set to: 0
  1422                           ;final_main.c: 112:             temp1 = array[0];
  1423  0010DC  5198               	movf	main@u60& (0+255),w,b
  1424  0010DE  ECE4  F018         	call	_set_seconds
  1425                           
  1426                           ;final_main.c: 113:             temp2 = array[1];
  1427  0010E2  EF8D  F008         	goto	l4553
  1428  0010E6                     l4551:
  1429  0010E6  0100               	movlb	0	; () banked
  1430  0010E8  51B0               	movf	main@setNum& (0+255),w,b
  1431  0010EA  6F82               	movwf	??_main& (0+255),b
  1432  0010EC  6B83               	clrf	(??_main+1)& (0+255),b
  1433                           
  1434                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1435                           ; Switch size 1, requested type "simple"
  1436                           ; Number of cases is 1, Range of values is 0 to 0
  1437                           ; switch strategies available:
  1438                           ; Name         Instructions Cycles
  1439                           ; simple_byte            4     3 (average)
  1440                           ;	Chosen strategy is simple_byte
  1441  0010EE  5183               	movf	(??_main+1)& (0+255),w,b
  1442  0010F0  0A00               	xorlw	0	; case 0
  1443  0010F2  B4D8               	btfsc	status,2,c
  1444  0010F4  EF7E  F008         	goto	l4997
  1445  0010F8  EF8D  F008         	goto	l4553
  1446  0010FC                     l4997:
  1447                           
  1448                           ; BSR set to: 0
  1449                           ; Switch size 1, requested type "simple"
  1450                           ; Number of cases is 3, Range of values is 1 to 3
  1451                           ; switch strategies available:
  1452                           ; Name         Instructions Cycles
  1453                           ; simple_byte           10     6 (average)
  1454                           ;	Chosen strategy is simple_byte
  1455  0010FC  5182               	movf	??_main& (0+255),w,b
  1456  0010FE  0A01               	xorlw	1	; case 1
  1457  001100  B4D8               	btfsc	status,2,c
  1458  001102  EF64  F008         	goto	l4543
  1459  001106  0A03               	xorlw	3	; case 2
  1460  001108  B4D8               	btfsc	status,2,c
  1461  00110A  EF69  F008         	goto	l4545
  1462  00110E  0A01               	xorlw	1	; case 3
  1463  001110  B4D8               	btfsc	status,2,c
  1464  001112  EF6E  F008         	goto	l4547
  1465  001116  EF8D  F008         	goto	l4553
  1466  00111A                     l4553:
  1467                           
  1468                           ;final_main.c: 117:             };final_main.c: 119:                 lcd_char('0');
  1469  00111A  0E00               	movlw	0
  1470  00111C  0100               	movlb	0	; () banked
  1471  00111E  6FA7               	movwf	(main@i+1)& (0+255),b
  1472  001120  0E00               	movlw	0
  1473  001122  6FA6               	movwf	main@i& (0+255),b
  1474  001124                     l4555:
  1475                           
  1476                           ; BSR set to: 0
  1477  001124  BFA7               	btfsc	(main@i+1)& (0+255),7,b
  1478  001126  EF9E  F008         	goto	u4521
  1479  00112A  51A7               	movf	(main@i+1)& (0+255),w,b
  1480  00112C  E109               	bnz	u4520
  1481  00112E  0E02               	movlw	2
  1482  001130  5DA6               	subwf	main@i& (0+255),w,b
  1483  001132  A0D8               	btfss	status,0,c
  1484  001134  EF9E  F008         	goto	u4521
  1485  001138  EFA0  F008         	goto	u4520
  1486  00113C                     u4521:
  1487  00113C  EFA2  F008         	goto	l4559
  1488  001140                     u4520:
  1489  001140  EFAE  F008         	goto	l4565
  1490  001144                     l4559:
  1491                           
  1492                           ; BSR set to: 0
  1493                           ;final_main.c: 120:                 lcd_char(temp1);
  1494  001144  0EBB               	movlw	low main@array
  1495  001146  25A6               	addwf	main@i& (0+255),w,b
  1496  001148  6ED9               	movwf	fsr2l,c
  1497  00114A  0E00               	movlw	high main@array
  1498  00114C  21A7               	addwfc	(main@i+1)& (0+255),w,b
  1499  00114E  6EDA               	movwf	fsr2h,c
  1500  001150  0E00               	movlw	0
  1501  001152  6EDF               	movwf	indf2,c
  1502  001154                     
  1503                           ; BSR set to: 0
  1504                           ;final_main.c: 121:             }
  1505  001154  4BA6               	infsnz	main@i& (0+255),f,b
  1506  001156  2BA7               	incf	(main@i+1)& (0+255),f,b
  1507  001158  EF92  F008         	goto	l4555
  1508  00115C                     l4565:
  1509                           
  1510                           ; BSR set to: 0
  1511                           ;final_main.c: 123:                 lcd_char('0');
  1512  00115C  0E54               	movlw	84
  1513  00115E  EC52  F017         	call	_lcd_char
  1514                           
  1515                           ;final_main.c: 124:                 lcd_char('0');
  1516  001162  0E3A               	movlw	58
  1517  001164  EC52  F017         	call	_lcd_char
  1518                           
  1519                           ;final_main.c: 125:             }
  1520  001168  0E20               	movlw	32
  1521  00116A  EC52  F017         	call	_lcd_char
  1522  00116E                     
  1523                           ;final_main.c: 128:             sprintf(array, "%du", get_seconds());
  1524  00116E  0EBB               	movlw	low main@array
  1525  001170  0100               	movlb	0	; () banked
  1526  001172  6F72               	movwf	sprintf@s& (0+255),b
  1527  001174  0E00               	movlw	high main@array
  1528  001176  6F73               	movwf	(sprintf@s+1)& (0+255),b
  1529  001178  0E01               	movlw	low STR_1
  1530  00117A  6F74               	movwf	sprintf@fmt& (0+255),b
  1531  00117C  0E0F               	movlw	high STR_1
  1532  00117E  6F75               	movwf	(sprintf@fmt+1)& (0+255),b
  1533  001180  EC7A  F01B         	call	_get_hours	;wreg free
  1534  001184  0100               	movlb	0	; () banked
  1535  001186  6F82               	movwf	??_main& (0+255),b
  1536  001188  5182               	movf	??_main& (0+255),w,b
  1537  00118A  6F76               	movwf	(?_sprintf+4)& (0+255),b
  1538  00118C  6B77               	clrf	(?_sprintf+5)& (0+255),b
  1539  00118E  EC6E  F01A         	call	_sprintf	;wreg free
  1540  001192                     
  1541                           ;final_main.c: 129:             temp1 = array[0];
  1542  001192  C0BB  F0C0         	movff	main@array,main@temp1
  1543  001196                     
  1544                           ;final_main.c: 130:             temp2 = array[1];
  1545  001196  C0BC  F0BD         	movff	main@array+1,main@temp2
  1546  00119A                     
  1547                           ;final_main.c: 131:             if((temp1 != 0) && (temp2 != 0)){
  1548  00119A  0100               	movlb	0	; () banked
  1549  00119C  51C0               	movf	main@temp1& (0+255),w,b
  1550  00119E  B4D8               	btfsc	status,2,c
  1551  0011A0  EFD4  F008         	goto	u4531
  1552  0011A4  EFD6  F008         	goto	u4530
  1553  0011A8                     u4531:
  1554  0011A8  EFE7  F008         	goto	l4579
  1555  0011AC                     u4530:
  1556  0011AC                     
  1557                           ; BSR set to: 0
  1558  0011AC  51BD               	movf	main@temp2& (0+255),w,b
  1559  0011AE  B4D8               	btfsc	status,2,c
  1560  0011B0  EFDC  F008         	goto	u4541
  1561  0011B4  EFDE  F008         	goto	u4540
  1562  0011B8                     u4541:
  1563  0011B8  EFE7  F008         	goto	l4579
  1564  0011BC                     u4540:
  1565  0011BC                     
  1566                           ; BSR set to: 0
  1567                           ;final_main.c: 132:                 lcd_char(temp1);
  1568  0011BC  51C0               	movf	main@temp1& (0+255),w,b
  1569  0011BE  EC52  F017         	call	_lcd_char
  1570                           
  1571                           ;final_main.c: 133:                 lcd_char(temp2);
  1572  0011C2  0100               	movlb	0	; () banked
  1573  0011C4  51BD               	movf	main@temp2& (0+255),w,b
  1574  0011C6  EC52  F017         	call	_lcd_char
  1575                           
  1576                           ;final_main.c: 134:             }
  1577  0011CA  EF06  F009         	goto	l100
  1578  0011CE                     l4579:
  1579                           
  1580                           ; BSR set to: 0
  1581  0011CE  51C0               	movf	main@temp1& (0+255),w,b
  1582  0011D0  B4D8               	btfsc	status,2,c
  1583  0011D2  EFED  F008         	goto	u4551
  1584  0011D6  EFEF  F008         	goto	u4550
  1585  0011DA                     u4551:
  1586  0011DA  EF00  F009         	goto	l4585
  1587  0011DE                     u4550:
  1588  0011DE                     
  1589                           ; BSR set to: 0
  1590  0011DE  51BD               	movf	main@temp2& (0+255),w,b
  1591  0011E0  A4D8               	btfss	status,2,c
  1592  0011E2  EFF5  F008         	goto	u4561
  1593  0011E6  EFF7  F008         	goto	u4560
  1594  0011EA                     u4561:
  1595  0011EA  EF00  F009         	goto	l4585
  1596  0011EE                     u4560:
  1597  0011EE                     
  1598                           ; BSR set to: 0
  1599                           ;final_main.c: 136:                 lcd_char('0');
  1600  0011EE  0E30               	movlw	48
  1601  0011F0  EC52  F017         	call	_lcd_char
  1602                           
  1603                           ;final_main.c: 137:                 lcd_char(temp1);
  1604  0011F4  0100               	movlb	0	; () banked
  1605  0011F6  51C0               	movf	main@temp1& (0+255),w,b
  1606  0011F8  EC52  F017         	call	_lcd_char
  1607                           
  1608                           ;final_main.c: 138:             }
  1609  0011FC  EF06  F009         	goto	l100
  1610  001200                     l4585:
  1611                           
  1612                           ; BSR set to: 0
  1613                           ;final_main.c: 140:                 lcd_char('0');
  1614  001200  0E30               	movlw	48
  1615  001202  EC52  F017         	call	_lcd_char
  1616                           
  1617                           ;final_main.c: 141:                 lcd_char('0');
  1618  001206  0E30               	movlw	48
  1619  001208  EC52  F017         	call	_lcd_char
  1620  00120C                     l100:
  1621                           
  1622                           ;final_main.c: 143: 
  1623  00120C  0E3A               	movlw	58
  1624  00120E  EC52  F017         	call	_lcd_char
  1625  001212                     
  1626                           ;final_main.c: 145:             lcd_char(' ');
  1627  001212  0EBB               	movlw	low main@array
  1628  001214  0100               	movlb	0	; () banked
  1629  001216  6F72               	movwf	sprintf@s& (0+255),b
  1630  001218  0E00               	movlw	high main@array
  1631  00121A  6F73               	movwf	(sprintf@s+1)& (0+255),b
  1632  00121C  0E01               	movlw	low STR_1
  1633  00121E  6F74               	movwf	sprintf@fmt& (0+255),b
  1634  001220  0E0F               	movlw	high STR_1
  1635  001222  6F75               	movwf	(sprintf@fmt+1)& (0+255),b
  1636  001224  ECCD  F01B         	call	_get_minutes	;wreg free
  1637  001228  0100               	movlb	0	; () banked
  1638  00122A  6F82               	movwf	??_main& (0+255),b
  1639  00122C  5182               	movf	??_main& (0+255),w,b
  1640  00122E  6F76               	movwf	(?_sprintf+4)& (0+255),b
  1641  001230  6B77               	clrf	(?_sprintf+5)& (0+255),b
  1642  001232  EC6E  F01A         	call	_sprintf	;wreg free
  1643  001236                     
  1644                           ;final_main.c: 146:             lcd_char(' ');
  1645  001236  C0BB  F0C0         	movff	main@array,main@temp1
  1646  00123A                     
  1647                           ;final_main.c: 147:             lcd_char(' ');
  1648  00123A  C0BC  F0BD         	movff	main@array+1,main@temp2
  1649  00123E                     
  1650                           ;final_main.c: 148:             if(alarm == 1){
  1651  00123E  0100               	movlb	0	; () banked
  1652  001240  51C0               	movf	main@temp1& (0+255),w,b
  1653  001242  B4D8               	btfsc	status,2,c
  1654  001244  EF26  F009         	goto	u4571
  1655  001248  EF28  F009         	goto	u4570
  1656  00124C                     u4571:
  1657  00124C  EF39  F009         	goto	l4599
  1658  001250                     u4570:
  1659  001250                     
  1660                           ; BSR set to: 0
  1661  001250  51BD               	movf	main@temp2& (0+255),w,b
  1662  001252  B4D8               	btfsc	status,2,c
  1663  001254  EF2E  F009         	goto	u4581
  1664  001258  EF30  F009         	goto	u4580
  1665  00125C                     u4581:
  1666  00125C  EF39  F009         	goto	l4599
  1667  001260                     u4580:
  1668  001260                     
  1669                           ; BSR set to: 0
  1670                           ;final_main.c: 149:                 lcd_char('A');
  1671  001260  51C0               	movf	main@temp1& (0+255),w,b
  1672  001262  EC52  F017         	call	_lcd_char
  1673                           
  1674                           ;final_main.c: 150:                 lcd_char('S');
  1675  001266  0100               	movlb	0	; () banked
  1676  001268  51BD               	movf	main@temp2& (0+255),w,b
  1677  00126A  EC52  F017         	call	_lcd_char
  1678                           
  1679                           ;final_main.c: 151:             }
  1680  00126E  EF58  F009         	goto	l104
  1681  001272                     l4599:
  1682                           
  1683                           ; BSR set to: 0
  1684  001272  51C0               	movf	main@temp1& (0+255),w,b
  1685  001274  B4D8               	btfsc	status,2,c
  1686  001276  EF3F  F009         	goto	u4591
  1687  00127A  EF41  F009         	goto	u4590
  1688  00127E                     u4591:
  1689  00127E  EF52  F009         	goto	l4605
  1690  001282                     u4590:
  1691  001282                     
  1692                           ; BSR set to: 0
  1693  001282  51BD               	movf	main@temp2& (0+255),w,b
  1694  001284  A4D8               	btfss	status,2,c
  1695  001286  EF47  F009         	goto	u4601
  1696  00128A  EF49  F009         	goto	u4600
  1697  00128E                     u4601:
  1698  00128E  EF52  F009         	goto	l4605
  1699  001292                     u4600:
  1700  001292                     
  1701                           ; BSR set to: 0
  1702                           ;final_main.c: 153:                 lcd_char('*');
  1703  001292  0E30               	movlw	48
  1704  001294  EC52  F017         	call	_lcd_char
  1705                           
  1706                           ;final_main.c: 154:                 lcd_char('*');
  1707  001298  0100               	movlb	0	; () banked
  1708  00129A  51C0               	movf	main@temp1& (0+255),w,b
  1709  00129C  EC52  F017         	call	_lcd_char
  1710                           
  1711                           ;final_main.c: 155:             }
  1712  0012A0  EF58  F009         	goto	l104
  1713  0012A4                     l4605:
  1714                           
  1715                           ; BSR set to: 0
  1716                           ;final_main.c: 157: 
  1717  0012A4  0E30               	movlw	48
  1718  0012A6  EC52  F017         	call	_lcd_char
  1719                           
  1720                           ;final_main.c: 158:            channel=getr();
  1721  0012AA  0E30               	movlw	48
  1722  0012AC  EC52  F017         	call	_lcd_char
  1723  0012B0                     l104:
  1724                           
  1725                           ;final_main.c: 160: 
  1726  0012B0  0E3A               	movlw	58
  1727  0012B2  EC52  F017         	call	_lcd_char
  1728  0012B6                     
  1729                           ;final_main.c: 162:             temp1 = array[0];
  1730  0012B6  0EBB               	movlw	low main@array
  1731  0012B8  0100               	movlb	0	; () banked
  1732  0012BA  6F72               	movwf	sprintf@s& (0+255),b
  1733  0012BC  0E00               	movlw	high main@array
  1734  0012BE  6F73               	movwf	(sprintf@s+1)& (0+255),b
  1735  0012C0  0E01               	movlw	low STR_1
  1736  0012C2  6F74               	movwf	sprintf@fmt& (0+255),b
  1737  0012C4  0E0F               	movlw	high STR_1
  1738  0012C6  6F75               	movwf	(sprintf@fmt+1)& (0+255),b
  1739  0012C8  EC69  F01B         	call	_get_seconds	;wreg free
  1740  0012CC  0100               	movlb	0	; () banked
  1741  0012CE  6F82               	movwf	??_main& (0+255),b
  1742  0012D0  5182               	movf	??_main& (0+255),w,b
  1743  0012D2  6F76               	movwf	(?_sprintf+4)& (0+255),b
  1744  0012D4  6B77               	clrf	(?_sprintf+5)& (0+255),b
  1745  0012D6  EC6E  F01A         	call	_sprintf	;wreg free
  1746  0012DA                     
  1747                           ;final_main.c: 163: 
  1748  0012DA  C0BB  F0C0         	movff	main@array,main@temp1
  1749  0012DE                     
  1750                           ;final_main.c: 164:             lcd_command(0xC0);
  1751  0012DE  C0BC  F0BD         	movff	main@array+1,main@temp2
  1752  0012E2                     
  1753                           ;final_main.c: 165: 
  1754  0012E2  0100               	movlb	0	; () banked
  1755  0012E4  51C0               	movf	main@temp1& (0+255),w,b
  1756  0012E6  B4D8               	btfsc	status,2,c
  1757  0012E8  EF78  F009         	goto	u4611
  1758  0012EC  EF7A  F009         	goto	u4610
  1759  0012F0                     u4611:
  1760  0012F0  EF8B  F009         	goto	l4619
  1761  0012F4                     u4610:
  1762  0012F4                     
  1763                           ; BSR set to: 0
  1764  0012F4  51BD               	movf	main@temp2& (0+255),w,b
  1765  0012F6  B4D8               	btfsc	status,2,c
  1766  0012F8  EF80  F009         	goto	u4621
  1767  0012FC  EF82  F009         	goto	u4620
  1768  001300                     u4621:
  1769  001300  EF8B  F009         	goto	l4619
  1770  001304                     u4620:
  1771  001304                     
  1772                           ; BSR set to: 0
  1773                           ;final_main.c: 166:             lcd_char('C');
  1774  001304  51C0               	movf	main@temp1& (0+255),w,b
  1775  001306  EC52  F017         	call	_lcd_char
  1776                           
  1777                           ;final_main.c: 167:             lcd_char('H');
  1778  00130A  0100               	movlb	0	; () banked
  1779  00130C  51BD               	movf	main@temp2& (0+255),w,b
  1780  00130E  EC52  F017         	call	_lcd_char
  1781                           
  1782                           ;final_main.c: 168:             lcd_char(':');
  1783  001312  EFAA  F009         	goto	l108
  1784  001316                     l4619:
  1785                           
  1786                           ; BSR set to: 0
  1787  001316  51C0               	movf	main@temp1& (0+255),w,b
  1788  001318  B4D8               	btfsc	status,2,c
  1789  00131A  EF91  F009         	goto	u4631
  1790  00131E  EF93  F009         	goto	u4630
  1791  001322                     u4631:
  1792  001322  EFA4  F009         	goto	l4625
  1793  001326                     u4630:
  1794  001326                     
  1795                           ; BSR set to: 0
  1796  001326  51BD               	movf	main@temp2& (0+255),w,b
  1797  001328  A4D8               	btfss	status,2,c
  1798  00132A  EF99  F009         	goto	u4641
  1799  00132E  EF9B  F009         	goto	u4640
  1800  001332                     u4641:
  1801  001332  EFA4  F009         	goto	l4625
  1802  001336                     u4640:
  1803  001336                     
  1804                           ; BSR set to: 0
  1805                           ;final_main.c: 170:             if((temp1 != 0)){
  1806  001336  0E30               	movlw	48
  1807  001338  EC52  F017         	call	_lcd_char
  1808                           
  1809                           ;final_main.c: 171:                 lcd_char(temp1);
  1810  00133C  0100               	movlb	0	; () banked
  1811  00133E  51C0               	movf	main@temp1& (0+255),w,b
  1812  001340  EC52  F017         	call	_lcd_char
  1813                           
  1814                           ;final_main.c: 172:             }
  1815  001344  EFAA  F009         	goto	l108
  1816  001348                     l4625:
  1817                           
  1818                           ; BSR set to: 0
  1819                           ;final_main.c: 174:                 lcd_char('0');
  1820  001348  0E30               	movlw	48
  1821  00134A  EC52  F017         	call	_lcd_char
  1822                           
  1823                           ;final_main.c: 175:             }
  1824  00134E  0E30               	movlw	48
  1825  001350  EC52  F017         	call	_lcd_char
  1826  001354                     l108:
  1827                           
  1828                           ;final_main.c: 179:         else{
  1829  001354  0E20               	movlw	32
  1830  001356  EC52  F017         	call	_lcd_char
  1831                           
  1832                           ;final_main.c: 180:             if(check==0){
  1833  00135A  0E20               	movlw	32
  1834  00135C  EC52  F017         	call	_lcd_char
  1835                           
  1836                           ;final_main.c: 181:                 lcd_command(0x01);
  1837  001360  0E20               	movlw	32
  1838  001362  EC52  F017         	call	_lcd_char
  1839  001366                     
  1840                           ;final_main.c: 182:                 check++;
  1841  001366  0100               	movlb	0	; () banked
  1842  001368  05B4               	decf	main@alarm& (0+255),w,b
  1843  00136A  11B5               	iorwf	(main@alarm+1)& (0+255),w,b
  1844  00136C  A4D8               	btfss	status,2,c
  1845  00136E  EFBB  F009         	goto	u4651
  1846  001372  EFBD  F009         	goto	u4650
  1847  001376                     u4651:
  1848  001376  EFC5  F009         	goto	l4631
  1849  00137A                     u4650:
  1850  00137A                     
  1851                           ; BSR set to: 0
  1852                           ;final_main.c: 183:             }
  1853  00137A  0E41               	movlw	65
  1854  00137C  EC52  F017         	call	_lcd_char
  1855                           
  1856                           ;final_main.c: 184:             else if(check==1){
  1857  001380  0E53               	movlw	83
  1858  001382  EC52  F017         	call	_lcd_char
  1859                           
  1860                           ;final_main.c: 185:                 lcd_command(0x02);
  1861  001386  EFCB  F009         	goto	l4633
  1862  00138A                     l4631:
  1863                           
  1864                           ; BSR set to: 0
  1865                           ;final_main.c: 187:             }
  1866  00138A  0E2A               	movlw	42
  1867  00138C  EC52  F017         	call	_lcd_char
  1868                           
  1869                           ;final_main.c: 188: 
  1870  001390  0E2A               	movlw	42
  1871  001392  EC52  F017         	call	_lcd_char
  1872  001396                     l4633:
  1873                           
  1874                           ;final_main.c: 192:             }
  1875  001396  ECED  F01B         	call	_getr	;wreg free
  1876  00139A  C002  F09C         	movff	?_getr,main@channel
  1877  00139E  C003  F09D         	movff	?_getr+1,main@channel+1
  1878  0013A2                     
  1879                           ;final_main.c: 195:             }
  1880  0013A2  0EBB               	movlw	low main@array
  1881  0013A4  0100               	movlb	0	; () banked
  1882  0013A6  6F72               	movwf	sprintf@s& (0+255),b
  1883  0013A8  0E00               	movlw	high main@array
  1884  0013AA  6F73               	movwf	(sprintf@s+1)& (0+255),b
  1885  0013AC  0E01               	movlw	low STR_1
  1886  0013AE  6F74               	movwf	sprintf@fmt& (0+255),b
  1887  0013B0  0E0F               	movlw	high STR_1
  1888  0013B2  6F75               	movwf	(sprintf@fmt+1)& (0+255),b
  1889  0013B4  C09C  F076         	movff	main@channel,?_sprintf+4
  1890  0013B8  C09D  F077         	movff	main@channel+1,?_sprintf+5
  1891  0013BC  EC6E  F01A         	call	_sprintf	;wreg free
  1892  0013C0                     
  1893                           ;final_main.c: 196: 
  1894  0013C0  C0BB  F0C0         	movff	main@array,main@temp1
  1895  0013C4                     
  1896                           ;final_main.c: 198:             int u24 = value0/42;
  1897  0013C4  0EC0               	movlw	192
  1898  0013C6  ECF5  F016         	call	_lcd_command
  1899  0013CA                     
  1900                           ;final_main.c: 200: 
  1901  0013CA  0E43               	movlw	67
  1902  0013CC  EC52  F017         	call	_lcd_char
  1903  0013D0                     
  1904                           ;final_main.c: 201: 
  1905  0013D0  0E48               	movlw	72
  1906  0013D2  EC52  F017         	call	_lcd_char
  1907  0013D6                     
  1908                           ;final_main.c: 202:             if(PORTAbits.RA3!=1){
  1909  0013D6  0E3A               	movlw	58
  1910  0013D8  EC52  F017         	call	_lcd_char
  1911  0013DC                     
  1912                           ;final_main.c: 203:                 AsetNum++;
  1913  0013DC  0E20               	movlw	32
  1914  0013DE  EC52  F017         	call	_lcd_char
  1915  0013E2                     
  1916                           ;final_main.c: 204:                 if (AsetNum==4){
  1917  0013E2  0100               	movlb	0	; () banked
  1918  0013E4  51C0               	movf	main@temp1& (0+255),w,b
  1919  0013E6  B4D8               	btfsc	status,2,c
  1920  0013E8  EFF8  F009         	goto	u4661
  1921  0013EC  EFFA  F009         	goto	u4660
  1922  0013F0                     u4661:
  1923  0013F0  EFFF  F009         	goto	l4653
  1924  0013F4                     u4660:
  1925  0013F4                     
  1926                           ; BSR set to: 0
  1927                           ;final_main.c: 205:                     AsetNum = 0;
  1928  0013F4  51C0               	movf	main@temp1& (0+255),w,b
  1929  0013F6  EC52  F017         	call	_lcd_char
  1930                           
  1931                           ;final_main.c: 206:                 }
  1932  0013FA  EF02  F00A         	goto	l114
  1933  0013FE                     l4653:
  1934                           
  1935                           ; BSR set to: 0
  1936                           ;final_main.c: 208:                 unsigned long num = 10000L;
  1937  0013FE  0E30               	movlw	48
  1938  001400  EC52  F017         	call	_lcd_char
  1939  001404                     l114:
  1940                           
  1941                           ;final_main.c: 211:                 }
  1942  001404  0E02               	movlw	2
  1943  001406  ECF5  F016         	call	_lcd_command
  1944                           
  1945                           ;final_main.c: 212:                 if (AsetNum != 0){
  1946  00140A  EF11  F00C         	goto	l115
  1947  00140E                     l4655:
  1948                           
  1949                           ;final_main.c: 214:                 }
  1950  00140E  0100               	movlb	0	; () banked
  1951  001410  51A4               	movf	main@check& (0+255),w,b
  1952  001412  11A5               	iorwf	(main@check+1)& (0+255),w,b
  1953  001414  A4D8               	btfss	status,2,c
  1954  001416  EF0F  F00A         	goto	u4671
  1955  00141A  EF11  F00A         	goto	u4670
  1956  00141E                     u4671:
  1957  00141E  EF19  F00A         	goto	l4661
  1958  001422                     u4670:
  1959  001422                     
  1960                           ; BSR set to: 0
  1961                           ;final_main.c: 215:             }
  1962  001422  0E01               	movlw	1
  1963  001424  ECF5  F016         	call	_lcd_command
  1964  001428                     
  1965                           ;final_main.c: 216: 
  1966  001428  0100               	movlb	0	; () banked
  1967  00142A  4BA4               	infsnz	main@check& (0+255),f,b
  1968  00142C  2BA5               	incf	(main@check+1)& (0+255),f,b
  1969                           
  1970                           ;final_main.c: 217:             switch((char)AsetNum){
  1971  00142E  EF29  F00A         	goto	l4667
  1972  001432                     l4661:
  1973                           
  1974                           ; BSR set to: 0
  1975  001432  05A4               	decf	main@check& (0+255),w,b
  1976  001434  11A5               	iorwf	(main@check+1)& (0+255),w,b
  1977  001436  A4D8               	btfss	status,2,c
  1978  001438  EF20  F00A         	goto	u4681
  1979  00143C  EF22  F00A         	goto	u4680
  1980  001440                     u4681:
  1981  001440  EF29  F00A         	goto	l4667
  1982  001444                     u4680:
  1983  001444                     
  1984                           ; BSR set to: 0
  1985                           ;final_main.c: 219:                    set_Ahours(u24);
  1986  001444  0E02               	movlw	2
  1987  001446  ECF5  F016         	call	_lcd_command
  1988  00144A                     
  1989                           ;final_main.c: 220:                    break;
  1990  00144A  0100               	movlb	0	; () banked
  1991  00144C  07A4               	decf	main@check& (0+255),f,b
  1992  00144E  A0D8               	btfss	status,0,c
  1993  001450  07A5               	decf	(main@check+1)& (0+255),f,b
  1994  001452                     l4667:
  1995                           
  1996                           ; BSR set to: 0
  1997                           ;final_main.c: 224:                case 3:
  1998  001452  51CD               	movf	_value0& (0+255),w,b
  1999  001454  11CE               	iorwf	(_value0+1)& (0+255),w,b
  2000  001456  11CF               	iorwf	(_value0+2)& (0+255),w,b
  2001  001458  11D0               	iorwf	(_value0+3)& (0+255),w,b
  2002  00145A  A4D8               	btfss	status,2,c
  2003  00145C  EF32  F00A         	goto	u4691
  2004  001460  EF34  F00A         	goto	u4690
  2005  001464                     u4691:
  2006  001464  EF40  F00A         	goto	l4671
  2007  001468                     u4690:
  2008  001468                     
  2009                           ; BSR set to: 0
  2010                           ;final_main.c: 225:                    set_Aseconds(u60);
  2011  001468  ECB9  F01A         	call	_adcNum0	;wreg free
  2012  00146C  C002  F0CD         	movff	?_adcNum0,_value0
  2013  001470  C003  F0CE         	movff	?_adcNum0+1,_value0+1
  2014  001474  C004  F0CF         	movff	?_adcNum0+2,_value0+2
  2015  001478  C005  F0D0         	movff	?_adcNum0+3,_value0+3
  2016                           
  2017                           ;final_main.c: 226:                    break;
  2018  00147C  EF60  F00A         	goto	l120
  2019  001480                     l4671:
  2020                           
  2021                           ; BSR set to: 0
  2022                           ;final_main.c: 228:                     break;
  2023  001480  ECB9  F01A         	call	_adcNum0	;wreg free
  2024  001484  0100               	movlb	0	; () banked
  2025  001486  51CD               	movf	_value0& (0+255),w,b
  2026  001488  2402               	addwf	?_adcNum0^0,w,c
  2027  00148A  6F82               	movwf	??_main& (0+255),b
  2028  00148C  51CE               	movf	(_value0+1)& (0+255),w,b
  2029  00148E  2003               	addwfc	(?_adcNum0+1)^0,w,c
  2030  001490  6F83               	movwf	(??_main+1)& (0+255),b
  2031  001492  51CF               	movf	(_value0+2)& (0+255),w,b
  2032  001494  2004               	addwfc	(?_adcNum0+2)^0,w,c
  2033  001496  6F84               	movwf	(??_main+2)& (0+255),b
  2034  001498  51D0               	movf	(_value0+3)& (0+255),w,b
  2035  00149A  2005               	addwfc	(?_adcNum0+3)^0,w,c
  2036  00149C  6F85               	movwf	(??_main+3)& (0+255),b
  2037  00149E  90D8               	bcf	status,0,c
  2038  0014A0  3385               	rrcf	(??_main+3)& (0+255),f,b
  2039  0014A2  3384               	rrcf	(??_main+2)& (0+255),f,b
  2040  0014A4  3383               	rrcf	(??_main+1)& (0+255),f,b
  2041  0014A6  3382               	rrcf	??_main& (0+255),f,b
  2042  0014A8  0E01               	movlw	1
  2043  0014AA  2582               	addwf	??_main& (0+255),w,b
  2044  0014AC  6FCD               	movwf	_value0& (0+255),b
  2045  0014AE  0E00               	movlw	0
  2046  0014B0  2183               	addwfc	(??_main+1)& (0+255),w,b
  2047  0014B2  6FCE               	movwf	(_value0+1)& (0+255),b
  2048  0014B4  0E00               	movlw	0
  2049  0014B6  2184               	addwfc	(??_main+2)& (0+255),w,b
  2050  0014B8  6FCF               	movwf	(_value0+2)& (0+255),b
  2051  0014BA  0E00               	movlw	0
  2052  0014BC  2185               	addwfc	(??_main+3)& (0+255),w,b
  2053  0014BE  6FD0               	movwf	(_value0+3)& (0+255),b
  2054  0014C0                     l120:
  2055                           
  2056                           ;final_main.c: 232:             for(int i=0; i<2; i++){
  2057  0014C0  C0CD  F002         	movff	_value0,___lldiv@dividend
  2058  0014C4  C0CE  F003         	movff	_value0+1,___lldiv@dividend+1
  2059  0014C8  C0CF  F004         	movff	_value0+2,___lldiv@dividend+2
  2060  0014CC  C0D0  F005         	movff	_value0+3,___lldiv@dividend+3
  2061  0014D0  0E2A               	movlw	42
  2062  0014D2  6E06               	movwf	___lldiv@divisor^0,c
  2063  0014D4  0E00               	movlw	0
  2064  0014D6  6E07               	movwf	(___lldiv@divisor+1)^0,c
  2065  0014D8  0E00               	movlw	0
  2066  0014DA  6E08               	movwf	(___lldiv@divisor+2)^0,c
  2067  0014DC  0E00               	movlw	0
  2068  0014DE  6E09               	movwf	(___lldiv@divisor+3)^0,c
  2069  0014E0  EC07  F018         	call	___lldiv	;wreg free
  2070  0014E4  C002  F094         	movff	?___lldiv,main@u24_410
  2071  0014E8  C003  F095         	movff	?___lldiv+1,main@u24_410+1
  2072                           
  2073                           ;final_main.c: 233:                 array[i]=0;
  2074  0014EC  C0CD  F002         	movff	_value0,___lldiv@dividend
  2075  0014F0  C0CE  F003         	movff	_value0+1,___lldiv@dividend+1
  2076  0014F4  C0CF  F004         	movff	_value0+2,___lldiv@dividend+2
  2077  0014F8  C0D0  F005         	movff	_value0+3,___lldiv@dividend+3
  2078  0014FC  0E11               	movlw	17
  2079  0014FE  6E06               	movwf	___lldiv@divisor^0,c
  2080  001500  0E00               	movlw	0
  2081  001502  6E07               	movwf	(___lldiv@divisor+1)^0,c
  2082  001504  0E00               	movlw	0
  2083  001506  6E08               	movwf	(___lldiv@divisor+2)^0,c
  2084  001508  0E00               	movlw	0
  2085  00150A  6E09               	movwf	(___lldiv@divisor+3)^0,c
  2086  00150C  EC07  F018         	call	___lldiv	;wreg free
  2087  001510  C002  F09A         	movff	?___lldiv,main@u60_411
  2088  001514  C003  F09B         	movff	?___lldiv+1,main@u60_411+1
  2089  001518                     
  2090                           ;final_main.c: 236:             lcd_char('A');
  2091  001518  B68D               	btfsc	141,3,c	;volatile
  2092  00151A  EF91  F00A         	goto	u4701
  2093  00151E  EF93  F00A         	goto	u4700
  2094  001522                     u4701:
  2095  001522  EFDA  F00A         	goto	l4695
  2096  001526                     u4700:
  2097  001526                     
  2098                           ;final_main.c: 237:             lcd_char(':');
  2099  001526  0100               	movlb	0	; () banked
  2100  001528  4BB2               	infsnz	main@AsetNum& (0+255),f,b
  2101  00152A  2BB3               	incf	(main@AsetNum+1)& (0+255),f,b
  2102  00152C                     
  2103                           ; BSR set to: 0
  2104                           ;final_main.c: 238:             lcd_char(' ');
  2105  00152C  0E04               	movlw	4
  2106  00152E  19B2               	xorwf	main@AsetNum& (0+255),w,b
  2107  001530  11B3               	iorwf	(main@AsetNum+1)& (0+255),w,b
  2108  001532  A4D8               	btfss	status,2,c
  2109  001534  EF9E  F00A         	goto	u4711
  2110  001538  EFA0  F00A         	goto	u4710
  2111  00153C                     u4711:
  2112  00153C  EFA4  F00A         	goto	l122
  2113  001540                     u4710:
  2114  001540                     
  2115                           ; BSR set to: 0
  2116                           ;final_main.c: 239: 
  2117  001540  0E00               	movlw	0
  2118  001542  6FB3               	movwf	(main@AsetNum+1)& (0+255),b
  2119  001544  0E00               	movlw	0
  2120  001546  6FB2               	movwf	main@AsetNum& (0+255),b
  2121  001548                     l122:
  2122                           
  2123                           ; BSR set to: 0
  2124                           ;final_main.c: 242:             char temp1 = array[0];
  2125  001548  0E10               	movlw	16
  2126  00154A  6F8A               	movwf	main@num_412& (0+255),b
  2127  00154C  0E27               	movlw	39
  2128  00154E  6F8B               	movwf	(main@num_412+1)& (0+255),b
  2129  001550  0E00               	movlw	0
  2130  001552  6F8C               	movwf	(main@num_412+2)& (0+255),b
  2131  001554  0E00               	movlw	0
  2132  001556  6F8D               	movwf	(main@num_412+3)& (0+255),b
  2133                           
  2134                           ;final_main.c: 243:             char temp2 = array[1];
  2135  001558  EFAF  F00A         	goto	l4681
  2136  00155C                     l124:
  2137                           
  2138                           ; BSR set to: 0
  2139                           ;final_main.c: 244:             if((temp1 != 0) && (temp2 != 0)){
  2140  00155C  8285               	bsf	133,1,c	;volatile
  2141  00155E                     l4681:
  2142                           
  2143                           ; BSR set to: 0
  2144                           ;final_main.c: 243:             char temp2 = array[1];
  2145  00155E  078A               	decf	main@num_412& (0+255),f,b
  2146  001560  0E00               	movlw	0
  2147  001562  5B8B               	subwfb	(main@num_412+1)& (0+255),f,b
  2148  001564  5B8C               	subwfb	(main@num_412+2)& (0+255),f,b
  2149  001566  5B8D               	subwfb	(main@num_412+3)& (0+255),f,b
  2150  001568  518A               	movf	main@num_412& (0+255),w,b
  2151  00156A  118B               	iorwf	(main@num_412+1)& (0+255),w,b
  2152  00156C  118C               	iorwf	(main@num_412+2)& (0+255),w,b
  2153  00156E  118D               	iorwf	(main@num_412+3)& (0+255),w,b
  2154  001570  A4D8               	btfss	status,2,c
  2155  001572  EFBD  F00A         	goto	u4721
  2156  001576  EFBF  F00A         	goto	u4720
  2157  00157A                     u4721:
  2158  00157A  EFAE  F00A         	goto	l124
  2159  00157E                     u4720:
  2160  00157E                     
  2161                           ; BSR set to: 0
  2162                           ;final_main.c: 246:                 lcd_char(temp2);
  2163  00157E  51B2               	movf	main@AsetNum& (0+255),w,b
  2164  001580  11B3               	iorwf	(main@AsetNum+1)& (0+255),w,b
  2165  001582  B4D8               	btfsc	status,2,c
  2166  001584  EFC6  F00A         	goto	u4731
  2167  001588  EFC8  F00A         	goto	u4730
  2168  00158C                     u4731:
  2169  00158C  EFDA  F00A         	goto	l4695
  2170  001590                     u4730:
  2171  001590                     
  2172                           ; BSR set to: 0
  2173                           ;final_main.c: 247:             }
  2174  001590  9285               	bcf	133,1,c	;volatile
  2175  001592  EFDA  F00A         	goto	l4695
  2176  001596                     l4687:
  2177                           
  2178                           ; BSR set to: 0
  2179                           ;final_main.c: 253:                 lcd_char('0');
  2180  001596  5194               	movf	main@u24_410& (0+255),w,b
  2181  001598  EC4E  F019         	call	_set_Ahours
  2182                           
  2183                           ;final_main.c: 254:                 lcd_char('0');
  2184  00159C  EFF4  F00A         	goto	l4697
  2185  0015A0                     l4689:
  2186                           
  2187                           ; BSR set to: 0
  2188                           ;final_main.c: 256:             lcd_char(':');
  2189  0015A0  519A               	movf	main@u60_411& (0+255),w,b
  2190  0015A2  EC42  F01A         	call	_set_Aminutes
  2191                           
  2192                           ;final_main.c: 257: 
  2193  0015A6  EFF4  F00A         	goto	l4697
  2194  0015AA                     l4691:
  2195                           
  2196                           ; BSR set to: 0
  2197                           ;final_main.c: 259:             temp1 = array[0];
  2198  0015AA  519A               	movf	main@u60_411& (0+255),w,b
  2199  0015AC  EC16  F01A         	call	_set_Aseconds
  2200                           
  2201                           ;final_main.c: 260:             temp2 = array[1];
  2202  0015B0  EFF4  F00A         	goto	l4697
  2203  0015B4                     l4695:
  2204  0015B4  0100               	movlb	0	; () banked
  2205  0015B6  51B2               	movf	main@AsetNum& (0+255),w,b
  2206  0015B8  6F82               	movwf	??_main& (0+255),b
  2207  0015BA  6B83               	clrf	(??_main+1)& (0+255),b
  2208                           
  2209                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2210                           ; Switch size 1, requested type "simple"
  2211                           ; Number of cases is 1, Range of values is 0 to 0
  2212                           ; switch strategies available:
  2213                           ; Name         Instructions Cycles
  2214                           ; simple_byte            4     3 (average)
  2215                           ;	Chosen strategy is simple_byte
  2216  0015BC  5183               	movf	(??_main+1)& (0+255),w,b
  2217  0015BE  0A00               	xorlw	0	; case 0
  2218  0015C0  B4D8               	btfsc	status,2,c
  2219  0015C2  EFE5  F00A         	goto	l4999
  2220  0015C6  EFF4  F00A         	goto	l4697
  2221  0015CA                     l4999:
  2222                           
  2223                           ; BSR set to: 0
  2224                           ; Switch size 1, requested type "simple"
  2225                           ; Number of cases is 3, Range of values is 1 to 3
  2226                           ; switch strategies available:
  2227                           ; Name         Instructions Cycles
  2228                           ; simple_byte           10     6 (average)
  2229                           ;	Chosen strategy is simple_byte
  2230  0015CA  5182               	movf	??_main& (0+255),w,b
  2231  0015CC  0A01               	xorlw	1	; case 1
  2232  0015CE  B4D8               	btfsc	status,2,c
  2233  0015D0  EFCB  F00A         	goto	l4687
  2234  0015D4  0A03               	xorlw	3	; case 2
  2235  0015D6  B4D8               	btfsc	status,2,c
  2236  0015D8  EFD0  F00A         	goto	l4689
  2237  0015DC  0A01               	xorlw	1	; case 3
  2238  0015DE  B4D8               	btfsc	status,2,c
  2239  0015E0  EFD5  F00A         	goto	l4691
  2240  0015E4  EFF4  F00A         	goto	l4697
  2241  0015E8                     l4697:
  2242                           
  2243                           ;final_main.c: 264:             };final_main.c: 266:                 lcd_char('0');
  2244  0015E8  0E00               	movlw	0
  2245  0015EA  0100               	movlb	0	; () banked
  2246  0015EC  6FA9               	movwf	(main@i_414+1)& (0+255),b
  2247  0015EE  0E00               	movlw	0
  2248  0015F0  6FA8               	movwf	main@i_414& (0+255),b
  2249  0015F2                     l4699:
  2250                           
  2251                           ; BSR set to: 0
  2252  0015F2  BFA9               	btfsc	(main@i_414+1)& (0+255),7,b
  2253  0015F4  EF05  F00B         	goto	u4741
  2254  0015F8  51A9               	movf	(main@i_414+1)& (0+255),w,b
  2255  0015FA  E109               	bnz	u4740
  2256  0015FC  0E02               	movlw	2
  2257  0015FE  5DA8               	subwf	main@i_414& (0+255),w,b
  2258  001600  A0D8               	btfss	status,0,c
  2259  001602  EF05  F00B         	goto	u4741
  2260  001606  EF07  F00B         	goto	u4740
  2261  00160A                     u4741:
  2262  00160A  EF09  F00B         	goto	l4703
  2263  00160E                     u4740:
  2264  00160E  EF15  F00B         	goto	l4709
  2265  001612                     l4703:
  2266                           
  2267                           ; BSR set to: 0
  2268                           ;final_main.c: 267:                 lcd_char(temp1);
  2269  001612  0EB6               	movlw	low main@array_413
  2270  001614  25A8               	addwf	main@i_414& (0+255),w,b
  2271  001616  6ED9               	movwf	fsr2l,c
  2272  001618  0E00               	movlw	high main@array_413
  2273  00161A  21A9               	addwfc	(main@i_414+1)& (0+255),w,b
  2274  00161C  6EDA               	movwf	fsr2h,c
  2275  00161E  0E00               	movlw	0
  2276  001620  6EDF               	movwf	indf2,c
  2277  001622                     
  2278                           ; BSR set to: 0
  2279                           ;final_main.c: 268:             }
  2280  001622  4BA8               	infsnz	main@i_414& (0+255),f,b
  2281  001624  2BA9               	incf	(main@i_414+1)& (0+255),f,b
  2282  001626  EFF9  F00A         	goto	l4699
  2283  00162A                     l4709:
  2284                           
  2285                           ; BSR set to: 0
  2286                           ;final_main.c: 270:                 lcd_char('0');
  2287  00162A  0E41               	movlw	65
  2288  00162C  EC52  F017         	call	_lcd_char
  2289                           
  2290                           ;final_main.c: 271:                 lcd_char('0');
  2291  001630  0E3A               	movlw	58
  2292  001632  EC52  F017         	call	_lcd_char
  2293                           
  2294                           ;final_main.c: 272:             }
  2295  001636  0E20               	movlw	32
  2296  001638  EC52  F017         	call	_lcd_char
  2297  00163C                     
  2298                           ;final_main.c: 275:             sprintf(array, "%lu", get_Aseconds());
  2299  00163C  0EB6               	movlw	low main@array_413
  2300  00163E  0100               	movlb	0	; () banked
  2301  001640  6F72               	movwf	sprintf@s& (0+255),b
  2302  001642  0E00               	movlw	high main@array_413
  2303  001644  6F73               	movwf	(sprintf@s+1)& (0+255),b
  2304  001646  0E05               	movlw	low STR_5
  2305  001648  6F74               	movwf	sprintf@fmt& (0+255),b
  2306  00164A  0E0F               	movlw	high STR_5
  2307  00164C  6F75               	movwf	(sprintf@fmt+1)& (0+255),b
  2308  00164E  EC9C  F01B         	call	_get_Ahours	;wreg free
  2309  001652  0100               	movlb	0	; () banked
  2310  001654  6F82               	movwf	??_main& (0+255),b
  2311  001656  5182               	movf	??_main& (0+255),w,b
  2312  001658  6F76               	movwf	(?_sprintf+4)& (0+255),b
  2313  00165A  6B77               	clrf	(?_sprintf+5)& (0+255),b
  2314  00165C  EC6E  F01A         	call	_sprintf	;wreg free
  2315  001660                     
  2316                           ;final_main.c: 276:             temp1 = array[0];
  2317  001660  C0B6  F0BF         	movff	main@array_413,main@temp1_416
  2318  001664                     
  2319                           ;final_main.c: 277:             temp2 = array[1];
  2320  001664  C0B7  F0BE         	movff	main@array_413+1,main@temp2_417
  2321  001668                     
  2322                           ;final_main.c: 278:             if((temp1 != 0) && (temp2 != 0)){
  2323  001668  0100               	movlb	0	; () banked
  2324  00166A  51BF               	movf	main@temp1_416& (0+255),w,b
  2325  00166C  B4D8               	btfsc	status,2,c
  2326  00166E  EF3B  F00B         	goto	u4751
  2327  001672  EF3D  F00B         	goto	u4750
  2328  001676                     u4751:
  2329  001676  EF4E  F00B         	goto	l4723
  2330  00167A                     u4750:
  2331  00167A                     
  2332                           ; BSR set to: 0
  2333  00167A  51BE               	movf	main@temp2_417& (0+255),w,b
  2334  00167C  B4D8               	btfsc	status,2,c
  2335  00167E  EF43  F00B         	goto	u4761
  2336  001682  EF45  F00B         	goto	u4760
  2337  001686                     u4761:
  2338  001686  EF4E  F00B         	goto	l4723
  2339  00168A                     u4760:
  2340  00168A                     
  2341                           ; BSR set to: 0
  2342                           ;final_main.c: 279:                 lcd_char(temp1);
  2343  00168A  51BF               	movf	main@temp1_416& (0+255),w,b
  2344  00168C  EC52  F017         	call	_lcd_char
  2345                           
  2346                           ;final_main.c: 280:                 lcd_char(temp2);
  2347  001690  0100               	movlb	0	; () banked
  2348  001692  51BE               	movf	main@temp2_417& (0+255),w,b
  2349  001694  EC52  F017         	call	_lcd_char
  2350                           
  2351                           ;final_main.c: 281:             }
  2352  001698  EF6D  F00B         	goto	l136
  2353  00169C                     l4723:
  2354                           
  2355                           ; BSR set to: 0
  2356  00169C  51BF               	movf	main@temp1_416& (0+255),w,b
  2357  00169E  B4D8               	btfsc	status,2,c
  2358  0016A0  EF54  F00B         	goto	u4771
  2359  0016A4  EF56  F00B         	goto	u4770
  2360  0016A8                     u4771:
  2361  0016A8  EF67  F00B         	goto	l4729
  2362  0016AC                     u4770:
  2363  0016AC                     
  2364                           ; BSR set to: 0
  2365  0016AC  51BE               	movf	main@temp2_417& (0+255),w,b
  2366  0016AE  A4D8               	btfss	status,2,c
  2367  0016B0  EF5C  F00B         	goto	u4781
  2368  0016B4  EF5E  F00B         	goto	u4780
  2369  0016B8                     u4781:
  2370  0016B8  EF67  F00B         	goto	l4729
  2371  0016BC                     u4780:
  2372  0016BC                     
  2373                           ; BSR set to: 0
  2374                           ;final_main.c: 283:                 lcd_char('0');
  2375  0016BC  0E30               	movlw	48
  2376  0016BE  EC52  F017         	call	_lcd_char
  2377                           
  2378                           ;final_main.c: 284:                 lcd_char(temp1);
  2379  0016C2  0100               	movlb	0	; () banked
  2380  0016C4  51BF               	movf	main@temp1_416& (0+255),w,b
  2381  0016C6  EC52  F017         	call	_lcd_char
  2382                           
  2383                           ;final_main.c: 285:             }
  2384  0016CA  EF6D  F00B         	goto	l136
  2385  0016CE                     l4729:
  2386                           
  2387                           ; BSR set to: 0
  2388                           ;final_main.c: 287:                 lcd_char('0');
  2389  0016CE  0E30               	movlw	48
  2390  0016D0  EC52  F017         	call	_lcd_char
  2391                           
  2392                           ;final_main.c: 288:                 lcd_char('0');
  2393  0016D4  0E30               	movlw	48
  2394  0016D6  EC52  F017         	call	_lcd_char
  2395  0016DA                     l136:
  2396                           
  2397                           ;final_main.c: 290:         }
  2398  0016DA  0E3A               	movlw	58
  2399  0016DC  EC52  F017         	call	_lcd_char
  2400  0016E0                     
  2401                           ;final_main.c: 292:         if ((i2c_read(104, 0x0F)&0x01) == 1){
  2402  0016E0  0EB6               	movlw	low main@array_413
  2403  0016E2  0100               	movlb	0	; () banked
  2404  0016E4  6F72               	movwf	sprintf@s& (0+255),b
  2405  0016E6  0E00               	movlw	high main@array_413
  2406  0016E8  6F73               	movwf	(sprintf@s+1)& (0+255),b
  2407  0016EA  0E05               	movlw	low STR_5
  2408  0016EC  6F74               	movwf	sprintf@fmt& (0+255),b
  2409  0016EE  0E0F               	movlw	high STR_5
  2410  0016F0  6F75               	movwf	(sprintf@fmt+1)& (0+255),b
  2411  0016F2  ECDD  F01B         	call	_get_Aminutes	;wreg free
  2412  0016F6  0100               	movlb	0	; () banked
  2413  0016F8  6F82               	movwf	??_main& (0+255),b
  2414  0016FA  5182               	movf	??_main& (0+255),w,b
  2415  0016FC  6F76               	movwf	(?_sprintf+4)& (0+255),b
  2416  0016FE  6B77               	clrf	(?_sprintf+5)& (0+255),b
  2417  001700  EC6E  F01A         	call	_sprintf	;wreg free
  2418  001704                     
  2419                           ;final_main.c: 293:             alarmON = 1;
  2420  001704  C0B6  F0BF         	movff	main@array_413,main@temp1_416
  2421  001708                     
  2422                           ;final_main.c: 294:         }
  2423  001708  C0B7  F0BE         	movff	main@array_413+1,main@temp2_417
  2424  00170C                     
  2425                           ;final_main.c: 295:         else{
  2426  00170C  0100               	movlb	0	; () banked
  2427  00170E  51BF               	movf	main@temp1_416& (0+255),w,b
  2428  001710  B4D8               	btfsc	status,2,c
  2429  001712  EF8D  F00B         	goto	u4791
  2430  001716  EF8F  F00B         	goto	u4790
  2431  00171A                     u4791:
  2432  00171A  EFA0  F00B         	goto	l4743
  2433  00171E                     u4790:
  2434  00171E                     
  2435                           ; BSR set to: 0
  2436  00171E  51BE               	movf	main@temp2_417& (0+255),w,b
  2437  001720  B4D8               	btfsc	status,2,c
  2438  001722  EF95  F00B         	goto	u4801
  2439  001726  EF97  F00B         	goto	u4800
  2440  00172A                     u4801:
  2441  00172A  EFA0  F00B         	goto	l4743
  2442  00172E                     u4800:
  2443  00172E                     
  2444                           ; BSR set to: 0
  2445                           ;final_main.c: 296:             alarmON = 0;
  2446  00172E  51BF               	movf	main@temp1_416& (0+255),w,b
  2447  001730  EC52  F017         	call	_lcd_char
  2448                           
  2449                           ;final_main.c: 297:         }
  2450  001734  0100               	movlb	0	; () banked
  2451  001736  51BE               	movf	main@temp2_417& (0+255),w,b
  2452  001738  EC52  F017         	call	_lcd_char
  2453                           
  2454                           ;final_main.c: 298: 
  2455  00173C  EFBF  F00B         	goto	l140
  2456  001740                     l4743:
  2457                           
  2458                           ; BSR set to: 0
  2459  001740  51BF               	movf	main@temp1_416& (0+255),w,b
  2460  001742  B4D8               	btfsc	status,2,c
  2461  001744  EFA6  F00B         	goto	u4811
  2462  001748  EFA8  F00B         	goto	u4810
  2463  00174C                     u4811:
  2464  00174C  EFB9  F00B         	goto	l4749
  2465  001750                     u4810:
  2466  001750                     
  2467                           ; BSR set to: 0
  2468  001750  51BE               	movf	main@temp2_417& (0+255),w,b
  2469  001752  A4D8               	btfss	status,2,c
  2470  001754  EFAE  F00B         	goto	u4821
  2471  001758  EFB0  F00B         	goto	u4820
  2472  00175C                     u4821:
  2473  00175C  EFB9  F00B         	goto	l4749
  2474  001760                     u4820:
  2475  001760                     
  2476                           ; BSR set to: 0
  2477                           ;final_main.c: 300:         if (PORTAbits.RA4!=1){
  2478  001760  0E30               	movlw	48
  2479  001762  EC52  F017         	call	_lcd_char
  2480                           
  2481                           ;final_main.c: 301:             if(alarm ==0){
  2482  001766  0100               	movlb	0	; () banked
  2483  001768  51BF               	movf	main@temp1_416& (0+255),w,b
  2484  00176A  EC52  F017         	call	_lcd_char
  2485                           
  2486                           ;final_main.c: 302:                 i2c_write(104, 0x0E, 0x05);
  2487  00176E  EFBF  F00B         	goto	l140
  2488  001772                     l4749:
  2489                           
  2490                           ; BSR set to: 0
  2491                           ;final_main.c: 304:                 alarm = 1;
  2492  001772  0E30               	movlw	48
  2493  001774  EC52  F017         	call	_lcd_char
  2494                           
  2495                           ;final_main.c: 305:             }
  2496  001778  0E30               	movlw	48
  2497  00177A  EC52  F017         	call	_lcd_char
  2498  00177E                     l140:
  2499                           
  2500                           ;final_main.c: 307:                 i2c_write(104, 0x0E, 0x04);
  2501  00177E  0E3A               	movlw	58
  2502  001780  EC52  F017         	call	_lcd_char
  2503  001784                     
  2504                           ;final_main.c: 309:             }
  2505  001784  0EB6               	movlw	low main@array_413
  2506  001786  0100               	movlb	0	; () banked
  2507  001788  6F72               	movwf	sprintf@s& (0+255),b
  2508  00178A  0E00               	movlw	high main@array_413
  2509  00178C  6F73               	movwf	(sprintf@s+1)& (0+255),b
  2510  00178E  0E05               	movlw	low STR_5
  2511  001790  6F74               	movwf	sprintf@fmt& (0+255),b
  2512  001792  0E0F               	movlw	high STR_5
  2513  001794  6F75               	movwf	(sprintf@fmt+1)& (0+255),b
  2514  001796  EC8B  F01B         	call	_get_Aseconds	;wreg free
  2515  00179A  0100               	movlb	0	; () banked
  2516  00179C  6F82               	movwf	??_main& (0+255),b
  2517  00179E  5182               	movf	??_main& (0+255),w,b
  2518  0017A0  6F76               	movwf	(?_sprintf+4)& (0+255),b
  2519  0017A2  6B77               	clrf	(?_sprintf+5)& (0+255),b
  2520  0017A4  EC6E  F01A         	call	_sprintf	;wreg free
  2521  0017A8                     
  2522                           ;final_main.c: 310: 
  2523  0017A8  C0B6  F0BF         	movff	main@array_413,main@temp1_416
  2524  0017AC                     
  2525                           ;final_main.c: 311:             unsigned long num = 10000L;
  2526  0017AC  C0B7  F0BE         	movff	main@array_413+1,main@temp2_417
  2527  0017B0                     
  2528                           ;final_main.c: 312:             while (--num > 0) {
  2529  0017B0  0100               	movlb	0	; () banked
  2530  0017B2  51BF               	movf	main@temp1_416& (0+255),w,b
  2531  0017B4  B4D8               	btfsc	status,2,c
  2532  0017B6  EFDF  F00B         	goto	u4831
  2533  0017BA  EFE1  F00B         	goto	u4830
  2534  0017BE                     u4831:
  2535  0017BE  EFF2  F00B         	goto	l4763
  2536  0017C2                     u4830:
  2537  0017C2                     
  2538                           ; BSR set to: 0
  2539  0017C2  51BE               	movf	main@temp2_417& (0+255),w,b
  2540  0017C4  B4D8               	btfsc	status,2,c
  2541  0017C6  EFE7  F00B         	goto	u4841
  2542  0017CA  EFE9  F00B         	goto	u4840
  2543  0017CE                     u4841:
  2544  0017CE  EFF2  F00B         	goto	l4763
  2545  0017D2                     u4840:
  2546  0017D2                     
  2547                           ; BSR set to: 0
  2548                           ;final_main.c: 313:                     LATAbits.LATA1 =1;
  2549  0017D2  51BF               	movf	main@temp1_416& (0+255),w,b
  2550  0017D4  EC52  F017         	call	_lcd_char
  2551                           
  2552                           ;final_main.c: 314:             }
  2553  0017D8  0100               	movlb	0	; () banked
  2554  0017DA  51BE               	movf	main@temp2_417& (0+255),w,b
  2555  0017DC  EC52  F017         	call	_lcd_char
  2556                           
  2557                           ;final_main.c: 315:             LATAbits.LATA1 =0;
  2558  0017E0  EF11  F00C         	goto	l115
  2559  0017E4                     l4763:
  2560                           
  2561                           ; BSR set to: 0
  2562  0017E4  51BF               	movf	main@temp1_416& (0+255),w,b
  2563  0017E6  B4D8               	btfsc	status,2,c
  2564  0017E8  EFF8  F00B         	goto	u4851
  2565  0017EC  EFFA  F00B         	goto	u4850
  2566  0017F0                     u4851:
  2567  0017F0  EF0B  F00C         	goto	l4769
  2568  0017F4                     u4850:
  2569  0017F4                     
  2570                           ; BSR set to: 0
  2571  0017F4  51BE               	movf	main@temp2_417& (0+255),w,b
  2572  0017F6  A4D8               	btfss	status,2,c
  2573  0017F8  EF00  F00C         	goto	u4861
  2574  0017FC  EF02  F00C         	goto	u4860
  2575  001800                     u4861:
  2576  001800  EF0B  F00C         	goto	l4769
  2577  001804                     u4860:
  2578  001804                     
  2579                           ; BSR set to: 0
  2580                           ;final_main.c: 317: 
  2581  001804  0E30               	movlw	48
  2582  001806  EC52  F017         	call	_lcd_char
  2583                           
  2584                           ;final_main.c: 318:         if(alarmON == 1 && alarm == 1){
  2585  00180A  0100               	movlb	0	; () banked
  2586  00180C  51BF               	movf	main@temp1_416& (0+255),w,b
  2587  00180E  EC52  F017         	call	_lcd_char
  2588                           
  2589                           ;final_main.c: 319:            while(PORTAbits.RA4==1){
  2590  001812  EF11  F00C         	goto	l115
  2591  001816                     l4769:
  2592                           
  2593                           ; BSR set to: 0
  2594                           ;final_main.c: 321:                 LATCbits.LATC5=1;
  2595  001816  0E30               	movlw	48
  2596  001818  EC52  F017         	call	_lcd_char
  2597                           
  2598                           ;final_main.c: 322:                 _delay((unsigned long)((0.25)*(4000000/4000.0)));
  2599  00181C  0E30               	movlw	48
  2600  00181E  EC52  F017         	call	_lcd_char
  2601  001822                     l115:
  2602                           
  2603                           ;final_main.c: 326:            i2c_write(104, 0x0F,0x00);
  2604  001822  0E0F               	movlw	15
  2605  001824  6E02               	movwf	i2c_read@registers^0,c
  2606  001826  0E68               	movlw	104
  2607  001828  EC6C  F013         	call	_i2c_read
  2608  00182C  0100               	movlb	0	; () banked
  2609  00182E  6F82               	movwf	??_main& (0+255),b
  2610  001830  A182               	btfss	??_main& (0+255),0,b
  2611  001832  EF1D  F00C         	goto	u4871
  2612  001836  EF1F  F00C         	goto	u4870
  2613  00183A                     u4871:
  2614  00183A  EF25  F00C         	goto	l4773
  2615  00183E                     u4870:
  2616  00183E                     
  2617                           ; BSR set to: 0
  2618                           ;final_main.c: 327:         }
  2619  00183E  0E00               	movlw	0
  2620  001840  6F97               	movwf	(main@alarmON+1)& (0+255),b
  2621  001842  0E01               	movlw	1
  2622  001844  6F96               	movwf	main@alarmON& (0+255),b
  2623                           
  2624                           ;final_main.c: 328: 
  2625  001846  EF29  F00C         	goto	l4775
  2626  00184A                     l4773:
  2627                           
  2628                           ; BSR set to: 0
  2629                           ;final_main.c: 330:         switch(channel){
  2630  00184A  0E00               	movlw	0
  2631  00184C  6F97               	movwf	(main@alarmON+1)& (0+255),b
  2632  00184E  0E00               	movlw	0
  2633  001850  6F96               	movwf	main@alarmON& (0+255),b
  2634  001852                     l4775:
  2635                           
  2636                           ; BSR set to: 0
  2637                           ;final_main.c: 334:                          unsigned char volatile outv = (int)(sin[x])
      +                          ;
  2638  001852  B88D               	btfsc	141,4,c	;volatile
  2639  001854  EF2E  F00C         	goto	u4881
  2640  001858  EF30  F00C         	goto	u4880
  2641  00185C                     u4881:
  2642  00185C  EF7F  F00C         	goto	l4793
  2643  001860                     u4880:
  2644  001860                     
  2645                           ; BSR set to: 0
  2646                           ;final_main.c: 335:                          spi_write(outv);
  2647  001860  51B4               	movf	main@alarm& (0+255),w,b
  2648  001862  11B5               	iorwf	(main@alarm+1)& (0+255),w,b
  2649  001864  A4D8               	btfss	status,2,c
  2650  001866  EF37  F00C         	goto	u4891
  2651  00186A  EF39  F00C         	goto	u4890
  2652  00186E                     u4891:
  2653  00186E  EF4E  F00C         	goto	l4783
  2654  001872                     u4890:
  2655  001872                     
  2656                           ; BSR set to: 0
  2657                           ;final_main.c: 336:                          _delay((unsigned long)((1)*(4000000/4000.0)
      +                          ));
  2658  001872  0E0E               	movlw	14
  2659  001874  6E02               	movwf	i2c_write@registers^0,c
  2660  001876  0E05               	movlw	5
  2661  001878  6E03               	movwf	i2c_write@data^0,c
  2662  00187A  0E68               	movlw	104
  2663  00187C  EC32  F016         	call	_i2c_write
  2664                           
  2665                           ;final_main.c: 337:                     }
  2666  001880  0E0A               	movlw	10
  2667  001882  6E02               	movwf	i2c_write@registers^0,c
  2668  001884  0E80               	movlw	128
  2669  001886  6E03               	movwf	i2c_write@data^0,c
  2670  001888  0E68               	movlw	104
  2671  00188A  EC32  F016         	call	_i2c_write
  2672  00188E                     
  2673                           ;final_main.c: 338:                }
  2674  00188E  0E00               	movlw	0
  2675  001890  0100               	movlb	0	; () banked
  2676  001892  6FB5               	movwf	(main@alarm+1)& (0+255),b
  2677  001894  0E01               	movlw	1
  2678  001896  6FB4               	movwf	main@alarm& (0+255),b
  2679                           
  2680                           ;final_main.c: 339:                break;
  2681  001898  EF63  F00C         	goto	l4789
  2682  00189C                     l4783:
  2683                           
  2684                           ; BSR set to: 0
  2685  00189C  05B4               	decf	main@alarm& (0+255),w,b
  2686  00189E  11B5               	iorwf	(main@alarm+1)& (0+255),w,b
  2687  0018A0  A4D8               	btfss	status,2,c
  2688  0018A2  EF55  F00C         	goto	u4901
  2689  0018A6  EF57  F00C         	goto	u4900
  2690  0018AA                     u4901:
  2691  0018AA  EF63  F00C         	goto	l4789
  2692  0018AE                     u4900:
  2693  0018AE                     
  2694                           ; BSR set to: 0
  2695                           ;final_main.c: 341:                for(int y=0; y<2; y++){
  2696  0018AE  0E0E               	movlw	14
  2697  0018B0  6E02               	movwf	i2c_write@registers^0,c
  2698  0018B2  0E04               	movlw	4
  2699  0018B4  6E03               	movwf	i2c_write@data^0,c
  2700  0018B6  0E68               	movlw	104
  2701  0018B8  EC32  F016         	call	_i2c_write
  2702  0018BC                     
  2703                           ;final_main.c: 342:                     for (int x = 0; x < 50; x++){
  2704  0018BC  0E00               	movlw	0
  2705  0018BE  0100               	movlb	0	; () banked
  2706  0018C0  6FB5               	movwf	(main@alarm+1)& (0+255),b
  2707  0018C2  0E00               	movlw	0
  2708  0018C4  6FB4               	movwf	main@alarm& (0+255),b
  2709  0018C6                     l4789:
  2710                           
  2711                           ; BSR set to: 0
  2712                           ;final_main.c: 345:                          _delay((unsigned long)((1)*(4000000/4000.0)
      +                          ));
  2713  0018C6  0E10               	movlw	16
  2714  0018C8  6F8E               	movwf	main@num_420& (0+255),b
  2715  0018CA  0E27               	movlw	39
  2716  0018CC  6F8F               	movwf	(main@num_420+1)& (0+255),b
  2717  0018CE  0E00               	movlw	0
  2718  0018D0  6F90               	movwf	(main@num_420+2)& (0+255),b
  2719  0018D2  0E00               	movlw	0
  2720  0018D4  6F91               	movwf	(main@num_420+3)& (0+255),b
  2721                           
  2722                           ;final_main.c: 346:                     }
  2723  0018D6  EF6E  F00C         	goto	l4791
  2724  0018DA                     l154:
  2725                           
  2726                           ; BSR set to: 0
  2727                           ;final_main.c: 347:                }
  2728  0018DA  8283               	bsf	131,1,c	;volatile
  2729  0018DC                     l4791:
  2730                           
  2731                           ; BSR set to: 0
  2732                           ;final_main.c: 346:                     }
  2733  0018DC  078E               	decf	main@num_420& (0+255),f,b
  2734  0018DE  0E00               	movlw	0
  2735  0018E0  5B8F               	subwfb	(main@num_420+1)& (0+255),f,b
  2736  0018E2  5B90               	subwfb	(main@num_420+2)& (0+255),f,b
  2737  0018E4  5B91               	subwfb	(main@num_420+3)& (0+255),f,b
  2738  0018E6  518E               	movf	main@num_420& (0+255),w,b
  2739  0018E8  118F               	iorwf	(main@num_420+1)& (0+255),w,b
  2740  0018EA  1190               	iorwf	(main@num_420+2)& (0+255),w,b
  2741  0018EC  1191               	iorwf	(main@num_420+3)& (0+255),w,b
  2742  0018EE  A4D8               	btfss	status,2,c
  2743  0018F0  EF7C  F00C         	goto	u4911
  2744  0018F4  EF7E  F00C         	goto	u4910
  2745  0018F8                     u4911:
  2746  0018F8  EF6D  F00C         	goto	l154
  2747  0018FC                     u4910:
  2748  0018FC                     
  2749                           ; BSR set to: 0
  2750                           ;final_main.c: 349:            case 2:
  2751  0018FC  9283               	bcf	131,1,c	;volatile
  2752  0018FE                     l4793:
  2753                           
  2754                           ; BSR set to: 0
  2755                           ;final_main.c: 352:                      unsigned char volatile outv = (int)(sawtooth[x]
      +                          );
  2756  0018FE  0596               	decf	main@alarmON& (0+255),w,b
  2757  001900  1197               	iorwf	(main@alarmON+1)& (0+255),w,b
  2758  001902  A4D8               	btfss	status,2,c
  2759  001904  EF86  F00C         	goto	u4921
  2760  001908  EF88  F00C         	goto	u4920
  2761  00190C                     u4921:
  2762  00190C  EF6D  F00D         	goto	l4887
  2763  001910                     u4920:
  2764  001910                     
  2765                           ; BSR set to: 0
  2766  001910  05B4               	decf	main@alarm& (0+255),w,b
  2767  001912  11B5               	iorwf	(main@alarm+1)& (0+255),w,b
  2768  001914  A4D8               	btfss	status,2,c
  2769  001916  EF8F  F00C         	goto	u4931
  2770  00191A  EF91  F00C         	goto	u4930
  2771  00191E                     u4931:
  2772  00191E  EF6D  F00D         	goto	l4887
  2773  001922                     u4930:
  2774  001922  EF9D  F00C         	goto	l4803
  2775  001926                     l158:
  2776                           
  2777                           ;final_main.c: 355:                 }
  2778  001926  8A85               	bsf	133,5,c	;volatile
  2779  001928                     
  2780                           ;final_main.c: 356:                }
  2781  001928  0E53               	movlw	83
  2782  00192A                     u5017:
  2783  00192A  2EE8               	decfsz	wreg,f,c
  2784  00192C  D7FE               	bra	u5017
  2785  00192E  F000               	nop	
  2786  001930                     
  2787                           ;final_main.c: 357:                break;
  2788  001930  9A85               	bcf	133,5,c	;volatile
  2789                           
  2790                           ;final_main.c: 358:            default:
  2791  001932  0E53               	movlw	83
  2792  001934                     u5027:
  2793  001934  2EE8               	decfsz	wreg,f,c
  2794  001936  D7FE               	bra	u5027
  2795  001938  F000               	nop	
  2796  00193A                     l4803:
  2797                           
  2798                           ;final_main.c: 353:                      spi_write(outv);
  2799  00193A  B88D               	btfsc	141,4,c	;volatile
  2800  00193C  EFA2  F00C         	goto	u4941
  2801  001940  EFA4  F00C         	goto	u4940
  2802  001944                     u4941:
  2803  001944  EF93  F00C         	goto	l158
  2804  001948                     u4940:
  2805  001948                     
  2806                           ;final_main.c: 360:         }
  2807  001948  0E0F               	movlw	15
  2808  00194A  6E02               	movwf	i2c_write@registers^0,c
  2809  00194C  0E00               	movlw	0
  2810  00194E  6E03               	movwf	i2c_write@data^0,c
  2811  001950  0E68               	movlw	104
  2812  001952  EC32  F016         	call	_i2c_write
  2813  001956  EF6D  F00D         	goto	l4887
  2814  00195A                     l4807:
  2815                           
  2816                           ; BSR set to: 0
  2817  00195A  0E00               	movlw	0
  2818  00195C  6F9F               	movwf	(main@y+1)& (0+255),b
  2819  00195E  0E00               	movlw	0
  2820  001960  6F9E               	movwf	main@y& (0+255),b
  2821  001962                     l4809:
  2822                           
  2823                           ; BSR set to: 0
  2824  001962  BF9F               	btfsc	(main@y+1)& (0+255),7,b
  2825  001964  EFBD  F00C         	goto	u4951
  2826  001968  519F               	movf	(main@y+1)& (0+255),w,b
  2827  00196A  E109               	bnz	u4950
  2828  00196C  0E02               	movlw	2
  2829  00196E  5D9E               	subwf	main@y& (0+255),w,b
  2830  001970  A0D8               	btfss	status,0,c
  2831  001972  EFBD  F00C         	goto	u4951
  2832  001976  EFBF  F00C         	goto	u4950
  2833  00197A                     u4951:
  2834  00197A  EFC1  F00C         	goto	l4813
  2835  00197E                     u4950:
  2836  00197E  EFBA  F007         	goto	l4521
  2837  001982                     l4813:
  2838                           
  2839                           ; BSR set to: 0
  2840  001982  0E00               	movlw	0
  2841  001984  6FAB               	movwf	(main@x+1)& (0+255),b
  2842  001986  0E00               	movlw	0
  2843  001988  6FAA               	movwf	main@x& (0+255),b
  2844  00198A                     l4815:
  2845                           
  2846                           ; BSR set to: 0
  2847  00198A  BFAB               	btfsc	(main@x+1)& (0+255),7,b
  2848  00198C  EFD1  F00C         	goto	u4961
  2849  001990  51AB               	movf	(main@x+1)& (0+255),w,b
  2850  001992  E109               	bnz	u4960
  2851  001994  0E32               	movlw	50
  2852  001996  5DAA               	subwf	main@x& (0+255),w,b
  2853  001998  A0D8               	btfss	status,0,c
  2854  00199A  EFD1  F00C         	goto	u4961
  2855  00199E  EFD3  F00C         	goto	u4960
  2856  0019A2                     u4961:
  2857  0019A2  EFD5  F00C         	goto	l4819
  2858  0019A6                     u4960:
  2859  0019A6  EFE9  F00C         	goto	l4829
  2860  0019AA                     l4819:
  2861                           
  2862                           ; BSR set to: 0
  2863  0019AA  0E64               	movlw	low _sin
  2864  0019AC  25AA               	addwf	main@x& (0+255),w,b
  2865  0019AE  6ED9               	movwf	fsr2l,c
  2866  0019B0  0E01               	movlw	high _sin
  2867  0019B2  21AB               	addwfc	(main@x+1)& (0+255),w,b
  2868  0019B4  6EDA               	movwf	fsr2h,c
  2869  0019B6  50DF               	movf	indf2,w,c
  2870  0019B8  6FB8               	movwf	main@outv& (0+255),b	;volatile
  2871  0019BA                     
  2872                           ; BSR set to: 0
  2873  0019BA  51B8               	movf	main@outv& (0+255),w,b	;volatile
  2874  0019BC  EC83  F019         	call	_spi_write
  2875  0019C0  0EC8               	movlw	200
  2876  0019C2                     u5037:
  2877  0019C2  D000               	nop2	
  2878  0019C4  2EE8               	decfsz	wreg,f,c
  2879  0019C6  D7FD               	bra	u5037
  2880  0019C8  0100               	movlb	0	; () banked
  2881  0019CA  4BAA               	infsnz	main@x& (0+255),f,b
  2882  0019CC  2BAB               	incf	(main@x+1)& (0+255),f,b
  2883  0019CE  EFC5  F00C         	goto	l4815
  2884  0019D2                     l4829:
  2885                           
  2886                           ; BSR set to: 0
  2887  0019D2  4B9E               	infsnz	main@y& (0+255),f,b
  2888  0019D4  2B9F               	incf	(main@y+1)& (0+255),f,b
  2889  0019D6  EFB1  F00C         	goto	l4809
  2890  0019DA                     l4833:
  2891                           
  2892                           ; BSR set to: 0
  2893  0019DA  0E00               	movlw	0
  2894  0019DC  6FA1               	movwf	(main@y_432+1)& (0+255),b
  2895  0019DE  0E00               	movlw	0
  2896  0019E0  6FA0               	movwf	main@y_432& (0+255),b
  2897  0019E2                     l4835:
  2898                           
  2899                           ; BSR set to: 0
  2900  0019E2  BFA1               	btfsc	(main@y_432+1)& (0+255),7,b
  2901  0019E4  EFFD  F00C         	goto	u4971
  2902  0019E8  51A1               	movf	(main@y_432+1)& (0+255),w,b
  2903  0019EA  E109               	bnz	u4970
  2904  0019EC  0E02               	movlw	2
  2905  0019EE  5DA0               	subwf	main@y_432& (0+255),w,b
  2906  0019F0  A0D8               	btfss	status,0,c
  2907  0019F2  EFFD  F00C         	goto	u4971
  2908  0019F6  EFFF  F00C         	goto	u4970
  2909  0019FA                     u4971:
  2910  0019FA  EF01  F00D         	goto	l4839
  2911  0019FE                     u4970:
  2912  0019FE  EFBA  F007         	goto	l4521
  2913  001A02                     l4839:
  2914                           
  2915                           ; BSR set to: 0
  2916  001A02  0E00               	movlw	0
  2917  001A04  6FAD               	movwf	(main@x_433+1)& (0+255),b
  2918  001A06  0E00               	movlw	0
  2919  001A08  6FAC               	movwf	main@x_433& (0+255),b
  2920  001A0A                     l4841:
  2921                           
  2922                           ; BSR set to: 0
  2923  001A0A  BFAD               	btfsc	(main@x_433+1)& (0+255),7,b
  2924  001A0C  EF11  F00D         	goto	u4981
  2925  001A10  51AD               	movf	(main@x_433+1)& (0+255),w,b
  2926  001A12  E109               	bnz	u4980
  2927  001A14  0E32               	movlw	50
  2928  001A16  5DAC               	subwf	main@x_433& (0+255),w,b
  2929  001A18  A0D8               	btfss	status,0,c
  2930  001A1A  EF11  F00D         	goto	u4981
  2931  001A1E  EF13  F00D         	goto	u4980
  2932  001A22                     u4981:
  2933  001A22  EF15  F00D         	goto	l4845
  2934  001A26                     u4980:
  2935  001A26  EF29  F00D         	goto	l4855
  2936  001A2A                     l4845:
  2937                           
  2938                           ; BSR set to: 0
  2939  001A2A  0E32               	movlw	low _triangle
  2940  001A2C  25AC               	addwf	main@x_433& (0+255),w,b
  2941  001A2E  6ED9               	movwf	fsr2l,c
  2942  001A30  0E01               	movlw	high _triangle
  2943  001A32  21AD               	addwfc	(main@x_433+1)& (0+255),w,b
  2944  001A34  6EDA               	movwf	fsr2h,c
  2945  001A36  50DF               	movf	indf2,w,c
  2946  001A38  6FB9               	movwf	main@outv_434& (0+255),b	;volatile
  2947  001A3A                     
  2948                           ; BSR set to: 0
  2949  001A3A  51B9               	movf	main@outv_434& (0+255),w,b	;volatile
  2950  001A3C  EC83  F019         	call	_spi_write
  2951  001A40  0EC8               	movlw	200
  2952  001A42                     u5047:
  2953  001A42  D000               	nop2	
  2954  001A44  2EE8               	decfsz	wreg,f,c
  2955  001A46  D7FD               	bra	u5047
  2956  001A48  0100               	movlb	0	; () banked
  2957  001A4A  4BAC               	infsnz	main@x_433& (0+255),f,b
  2958  001A4C  2BAD               	incf	(main@x_433+1)& (0+255),f,b
  2959  001A4E  EF05  F00D         	goto	l4841
  2960  001A52                     l4855:
  2961                           
  2962                           ; BSR set to: 0
  2963  001A52  4BA0               	infsnz	main@y_432& (0+255),f,b
  2964  001A54  2BA1               	incf	(main@y_432+1)& (0+255),f,b
  2965  001A56  EFF1  F00C         	goto	l4835
  2966  001A5A                     l4859:
  2967                           
  2968                           ; BSR set to: 0
  2969  001A5A  0E00               	movlw	0
  2970  001A5C  6FA3               	movwf	(main@y_435+1)& (0+255),b
  2971  001A5E  0E00               	movlw	0
  2972  001A60  6FA2               	movwf	main@y_435& (0+255),b
  2973  001A62                     l4861:
  2974                           
  2975                           ; BSR set to: 0
  2976  001A62  BFA3               	btfsc	(main@y_435+1)& (0+255),7,b
  2977  001A64  EF3D  F00D         	goto	u4991
  2978  001A68  51A3               	movf	(main@y_435+1)& (0+255),w,b
  2979  001A6A  E109               	bnz	u4990
  2980  001A6C  0E02               	movlw	2
  2981  001A6E  5DA2               	subwf	main@y_435& (0+255),w,b
  2982  001A70  A0D8               	btfss	status,0,c
  2983  001A72  EF3D  F00D         	goto	u4991
  2984  001A76  EF3F  F00D         	goto	u4990
  2985  001A7A                     u4991:
  2986  001A7A  EF41  F00D         	goto	l4865
  2987  001A7E                     u4990:
  2988  001A7E  EFBA  F007         	goto	l4521
  2989  001A82                     l4865:
  2990                           
  2991                           ; BSR set to: 0
  2992  001A82  0E00               	movlw	0
  2993  001A84  6FAF               	movwf	(main@x_436+1)& (0+255),b
  2994  001A86  0E00               	movlw	0
  2995  001A88  6FAE               	movwf	main@x_436& (0+255),b
  2996  001A8A                     l4867:
  2997                           
  2998                           ; BSR set to: 0
  2999  001A8A  BFAF               	btfsc	(main@x_436+1)& (0+255),7,b
  3000  001A8C  EF51  F00D         	goto	u5001
  3001  001A90  51AF               	movf	(main@x_436+1)& (0+255),w,b
  3002  001A92  E109               	bnz	u5000
  3003  001A94  0E32               	movlw	50
  3004  001A96  5DAE               	subwf	main@x_436& (0+255),w,b
  3005  001A98  A0D8               	btfss	status,0,c
  3006  001A9A  EF51  F00D         	goto	u5001
  3007  001A9E  EF53  F00D         	goto	u5000
  3008  001AA2                     u5001:
  3009  001AA2  EF55  F00D         	goto	l4871
  3010  001AA6                     u5000:
  3011  001AA6  EF69  F00D         	goto	l4881
  3012  001AAA                     l4871:
  3013                           
  3014                           ; BSR set to: 0
  3015  001AAA  0E00               	movlw	low _sawtooth
  3016  001AAC  25AE               	addwf	main@x_436& (0+255),w,b
  3017  001AAE  6ED9               	movwf	fsr2l,c
  3018  001AB0  0E01               	movlw	high _sawtooth
  3019  001AB2  21AF               	addwfc	(main@x_436+1)& (0+255),w,b
  3020  001AB4  6EDA               	movwf	fsr2h,c
  3021  001AB6  50DF               	movf	indf2,w,c
  3022  001AB8  6FBA               	movwf	main@outv_437& (0+255),b	;volatile
  3023  001ABA                     
  3024                           ; BSR set to: 0
  3025  001ABA  51BA               	movf	main@outv_437& (0+255),w,b	;volatile
  3026  001ABC  EC83  F019         	call	_spi_write
  3027  001AC0  0EC8               	movlw	200
  3028  001AC2                     u5057:
  3029  001AC2  D000               	nop2	
  3030  001AC4  2EE8               	decfsz	wreg,f,c
  3031  001AC6  D7FD               	bra	u5057
  3032  001AC8  0100               	movlb	0	; () banked
  3033  001ACA  4BAE               	infsnz	main@x_436& (0+255),f,b
  3034  001ACC  2BAF               	incf	(main@x_436+1)& (0+255),f,b
  3035  001ACE  EF45  F00D         	goto	l4867
  3036  001AD2                     l4881:
  3037                           
  3038                           ; BSR set to: 0
  3039  001AD2  4BA2               	infsnz	main@y_435& (0+255),f,b
  3040  001AD4  2BA3               	incf	(main@y_435+1)& (0+255),f,b
  3041  001AD6  EF31  F00D         	goto	l4861
  3042  001ADA                     l4887:
  3043  001ADA  C09C  F082         	movff	main@channel,??_main
  3044  001ADE  C09D  F083         	movff	main@channel+1,??_main+1
  3045                           
  3046                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3047                           ; Switch size 1, requested type "simple"
  3048                           ; Number of cases is 1, Range of values is 0 to 0
  3049                           ; switch strategies available:
  3050                           ; Name         Instructions Cycles
  3051                           ; simple_byte            4     3 (average)
  3052                           ;	Chosen strategy is simple_byte
  3053  001AE2  0100               	movlb	0	; () banked
  3054  001AE4  5183               	movf	(??_main+1)& (0+255),w,b
  3055  001AE6  0A00               	xorlw	0	; case 0
  3056  001AE8  B4D8               	btfsc	status,2,c
  3057  001AEA  EF79  F00D         	goto	l5001
  3058  001AEE  EFBA  F007         	goto	l4521
  3059  001AF2                     l5001:
  3060                           
  3061                           ; BSR set to: 0
  3062                           ; Switch size 1, requested type "simple"
  3063                           ; Number of cases is 3, Range of values is 0 to 2
  3064                           ; switch strategies available:
  3065                           ; Name         Instructions Cycles
  3066                           ; simple_byte           10     6 (average)
  3067                           ;	Chosen strategy is simple_byte
  3068  001AF2  5182               	movf	??_main& (0+255),w,b
  3069  001AF4  0A00               	xorlw	0	; case 0
  3070  001AF6  B4D8               	btfsc	status,2,c
  3071  001AF8  EFAD  F00C         	goto	l4807
  3072  001AFC  0A01               	xorlw	1	; case 1
  3073  001AFE  B4D8               	btfsc	status,2,c
  3074  001B00  EFED  F00C         	goto	l4833
  3075  001B04  0A03               	xorlw	3	; case 2
  3076  001B06  B4D8               	btfsc	status,2,c
  3077  001B08  EF2D  F00D         	goto	l4859
  3078  001B0C  EFBA  F007         	goto	l4521
  3079  001B10  EF6B  F000         	goto	start
  3080  001B14                     __end_of_main:
  3081                           	opt callstack 0
  3082                           
  3083 ;; *************** function _sprintf *****************
  3084 ;; Defined at:
  3085 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
  3086 ;; Parameters:    Size  Location     Type
  3087 ;;  s               2   18[BANK0 ] PTR unsigned char 
  3088 ;;		 -> main@array_413(2), main@array(2), 
  3089 ;;  fmt             2   20[BANK0 ] PTR const unsigned char 
  3090 ;;		 -> STR_7(4), STR_6(4), STR_5(4), STR_4(4), 
  3091 ;;		 -> STR_3(4), STR_2(4), STR_1(4), 
  3092 ;; Auto vars:     Size  Location     Type
  3093 ;;  f               6   28[BANK0 ] struct _IO_FILE
  3094 ;;  ap              2   26[BANK0 ] PTR void [1]
  3095 ;;		 -> ?_sprintf(2), 
  3096 ;;  ret             2    0        int 
  3097 ;; Return value:  Size  Location     Type
  3098 ;;                  2   18[BANK0 ] int 
  3099 ;; Registers used:
  3100 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3101 ;; Tracked objects:
  3102 ;;		On entry : 0/0
  3103 ;;		On exit  : 0/0
  3104 ;;		Unchanged: 0/0
  3105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3106 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3107 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3109 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3110 ;;Total ram usage:       16 bytes
  3111 ;; Hardware stack levels used:    1
  3112 ;; Hardware stack levels required when called:    8
  3113 ;; This function calls:
  3114 ;;		_vfprintf
  3115 ;; This function is called by:
  3116 ;;		_main
  3117 ;; This function uses a non-reentrant model
  3118 ;;
  3119                           
  3120                           	psect	text1
  3121  0034DC                     __ptext1:
  3122                           	opt callstack 0
  3123  0034DC                     _sprintf:
  3124                           	opt callstack 22
  3125  0034DC  0E76               	movlw	low (?_sprintf+4)
  3126  0034DE  0100               	movlb	0	; () banked
  3127  0034E0  6F7A               	movwf	sprintf@ap& (0+255),b
  3128  0034E2  0E00               	movlw	high (?_sprintf+4)
  3129  0034E4  6F7B               	movwf	(sprintf@ap+1)& (0+255),b
  3130  0034E6  C072  F07C         	movff	sprintf@s,sprintf@f
  3131  0034EA  C073  F07D         	movff	sprintf@s+1,sprintf@f+1
  3132  0034EE                     
  3133                           ; BSR set to: 0
  3134  0034EE  0E00               	movlw	0
  3135  0034F0  6F7F               	movwf	(sprintf@f+3)& (0+255),b
  3136  0034F2  0E00               	movlw	0
  3137  0034F4  6F7E               	movwf	(sprintf@f+2)& (0+255),b
  3138  0034F6                     
  3139                           ; BSR set to: 0
  3140  0034F6  0E00               	movlw	0
  3141  0034F8  6F81               	movwf	(sprintf@f+5)& (0+255),b
  3142  0034FA  0E00               	movlw	0
  3143  0034FC  6F80               	movwf	(sprintf@f+4)& (0+255),b
  3144  0034FE                     
  3145                           ; BSR set to: 0
  3146  0034FE  0E7C               	movlw	low sprintf@f
  3147  003500  6E55               	movwf	vfprintf@fp^0,c
  3148  003502  0E00               	movlw	high sprintf@f
  3149  003504  6E56               	movwf	(vfprintf@fp+1)^0,c
  3150  003506  C074  F057         	movff	sprintf@fmt,vfprintf@fmt
  3151  00350A  C075  F058         	movff	sprintf@fmt+1,vfprintf@fmt+1
  3152  00350E  0E7A               	movlw	low sprintf@ap
  3153  003510  6E59               	movwf	vfprintf@ap^0,c
  3154  003512  0E00               	movlw	high sprintf@ap
  3155  003514  6E5A               	movwf	(vfprintf@ap+1)^0,c
  3156  003516  ECB7  F019         	call	_vfprintf	;wreg free
  3157  00351A  0100               	movlb	0	; () banked
  3158  00351C  517E               	movf	(sprintf@f+2)& (0+255),w,b
  3159  00351E  2572               	addwf	sprintf@s& (0+255),w,b
  3160  003520  6ED9               	movwf	fsr2l,c
  3161  003522  517F               	movf	(sprintf@f+3)& (0+255),w,b
  3162  003524  2173               	addwfc	(sprintf@s+1)& (0+255),w,b
  3163  003526  6EDA               	movwf	fsr2h,c
  3164  003528  0E00               	movlw	0
  3165  00352A  6EDF               	movwf	indf2,c
  3166  00352C                     
  3167                           ; BSR set to: 0
  3168  00352C  0012               	return		;funcret
  3169  00352E                     __end_of_sprintf:
  3170                           	opt callstack 0
  3171                           
  3172 ;; *************** function _vfprintf *****************
  3173 ;; Defined at:
  3174 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3175 ;; Parameters:    Size  Location     Type
  3176 ;;  fp              2   84[COMRAM] PTR struct _IO_FILE
  3177 ;;		 -> sprintf@f(6), 
  3178 ;;  fmt             2   86[COMRAM] PTR const unsigned char 
  3179 ;;		 -> STR_7(4), STR_6(4), STR_5(4), STR_4(4), 
  3180 ;;		 -> STR_3(4), STR_2(4), STR_1(4), 
  3181 ;;  ap              2   88[COMRAM] PTR PTR void 
  3182 ;;		 -> sprintf@ap(2), 
  3183 ;; Auto vars:     Size  Location     Type
  3184 ;;  cfmt            2   16[BANK0 ] PTR unsigned char 
  3185 ;;		 -> STR_7(4), STR_6(4), STR_5(4), STR_4(4), 
  3186 ;;		 -> STR_3(4), STR_2(4), STR_1(4), 
  3187 ;; Return value:  Size  Location     Type
  3188 ;;                  2   84[COMRAM] int 
  3189 ;; Registers used:
  3190 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3191 ;; Tracked objects:
  3192 ;;		On entry : 0/0
  3193 ;;		On exit  : 0/0
  3194 ;;		Unchanged: 0/0
  3195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3196 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3197 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3199 ;;      Totals:         6       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3200 ;;Total ram usage:        8 bytes
  3201 ;; Hardware stack levels used:    1
  3202 ;; Hardware stack levels required when called:    7
  3203 ;; This function calls:
  3204 ;;		_vfpfcnvrt
  3205 ;; This function is called by:
  3206 ;;		_sprintf
  3207 ;; This function uses a non-reentrant model
  3208 ;;
  3209                           
  3210                           	psect	text2
  3211  00336E                     __ptext2:
  3212                           	opt callstack 0
  3213  00336E                     _vfprintf:
  3214                           	opt callstack 22
  3215  00336E                     
  3216                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  3217  00336E  C057  F070         	movff	vfprintf@fmt,vfprintf@cfmt
  3218  003372  C058  F071         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3219  003376                     
  3220                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  3221  003376  0E00               	movlw	0
  3222  003378  0100               	movlb	0	; () banked
  3223  00337A  6FD2               	movwf	(_nout+1)& (0+255),b
  3224  00337C  0E00               	movlw	0
  3225  00337E  6FD1               	movwf	_nout& (0+255),b
  3226                           
  3227                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  3228  003380  EFD5  F019         	goto	l4465
  3229  003384                     l4463:
  3230                           
  3231                           ; BSR set to: 0
  3232                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  3233  003384  C055  F041         	movff	vfprintf@fp,vfpfcnvrt@fp
  3234  003388  C056  F042         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3235  00338C  0E70               	movlw	low vfprintf@cfmt
  3236  00338E  6E43               	movwf	vfpfcnvrt@fmt^0,c
  3237  003390  0E00               	movlw	high vfprintf@cfmt
  3238  003392  6E44               	movwf	(vfpfcnvrt@fmt+1)^0,c
  3239  003394  C059  F045         	movff	vfprintf@ap,vfpfcnvrt@ap
  3240  003398  C05A  F046         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3241  00339C  EC8A  F00D         	call	_vfpfcnvrt	;wreg free
  3242  0033A0  5041               	movf	?_vfpfcnvrt^0,w,c
  3243  0033A2  0100               	movlb	0	; () banked
  3244  0033A4  27D1               	addwf	_nout& (0+255),f,b
  3245  0033A6  5042               	movf	(?_vfpfcnvrt+1)^0,w,c
  3246  0033A8  23D2               	addwfc	(_nout+1)& (0+255),f,b
  3247  0033AA                     l4465:
  3248                           
  3249                           ; BSR set to: 0
  3250                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  3251  0033AA  C070  FFF6         	movff	vfprintf@cfmt,tblptrl
  3252  0033AE  C071  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3253  0033B2                     	if	0	;tblptru may be non-zero
  3254  0033B2                     	endif
  3255  0033B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3256  0033B2  0E00               	movlw	low (__mediumconst shr (0+16))
  3257  0033B4  6EF8               	movwf	tblptru,c
  3258  0033B6                     	endif
  3259  0033B6  0008               	tblrd		*
  3260  0033B8  50F5               	movf	tablat,w,c
  3261  0033BA  0900               	iorlw	0
  3262  0033BC  A4D8               	btfss	status,2,c
  3263  0033BE  EFE3  F019         	goto	u4451
  3264  0033C2  EFE5  F019         	goto	u4450
  3265  0033C6                     u4451:
  3266  0033C6  EFC2  F019         	goto	l4463
  3267  0033CA                     u4450:
  3268  0033CA                     
  3269                           ; BSR set to: 0
  3270                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  3271  0033CA  C0D1  F055         	movff	_nout,?_vfprintf
  3272  0033CE  C0D2  F056         	movff	_nout+1,?_vfprintf+1
  3273  0033D2                     
  3274                           ; BSR set to: 0
  3275  0033D2  0012               	return		;funcret
  3276  0033D4                     __end_of_vfprintf:
  3277                           	opt callstack 0
  3278                           
  3279 ;; *************** function _vfpfcnvrt *****************
  3280 ;; Defined at:
  3281 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3282 ;; Parameters:    Size  Location     Type
  3283 ;;  fp              2   64[COMRAM] PTR struct _IO_FILE
  3284 ;;		 -> sprintf@f(6), 
  3285 ;;  fmt             2   66[COMRAM] PTR PTR unsigned char 
  3286 ;;		 -> vfprintf@cfmt(2), 
  3287 ;;  ap              2   68[COMRAM] PTR PTR void 
  3288 ;;		 -> sprintf@ap(2), 
  3289 ;; Auto vars:     Size  Location     Type
  3290 ;;  llu             8    8[BANK0 ] unsigned long long 
  3291 ;;  ll              8    0[BANK0 ] long long 
  3292 ;;  f               4    0        long long 
  3293 ;;  vp              3    0        PTR void 
  3294 ;;  ct              3    0        unsigned char [3]
  3295 ;;  cp              3    0        PTR unsigned char 
  3296 ;;  i               2    0        int 
  3297 ;;  done            2    0        int 
  3298 ;;  c               1    0        unsigned char 
  3299 ;; Return value:  Size  Location     Type
  3300 ;;                  2   64[COMRAM] int 
  3301 ;; Registers used:
  3302 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3303 ;; Tracked objects:
  3304 ;;		On entry : 0/0
  3305 ;;		On exit  : 0/0
  3306 ;;		Unchanged: 0/0
  3307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3308 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3309 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3310 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3311 ;;      Totals:        20      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3312 ;;Total ram usage:       36 bytes
  3313 ;; Hardware stack levels used:    1
  3314 ;; Hardware stack levels required when called:    6
  3315 ;; This function calls:
  3316 ;;		_dtoa
  3317 ;;		_fputc
  3318 ;;		_strncmp
  3319 ;;		_utoa
  3320 ;; This function is called by:
  3321 ;;		_vfprintf
  3322 ;; This function uses a non-reentrant model
  3323 ;;
  3324                           
  3325                           	psect	text3
  3326  001B14                     __ptext3:
  3327                           	opt callstack 0
  3328  001B14                     _vfpfcnvrt:
  3329                           	opt callstack 22
  3330  001B14                     
  3331                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  3332  001B14  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3333  001B18  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3334  001B1C  CFDE FFF6          	movff	postinc2,tblptrl
  3335  001B20  CFDD FFF7          	movff	postdec2,tblptrh
  3336  001B24                     	if	0	;tblptru may be non-zero
  3337  001B24                     	endif
  3338  001B24                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3339  001B24  0E00               	movlw	low (__mediumconst shr (0+16))
  3340  001B26  6EF8               	movwf	tblptru,c
  3341  001B28                     	endif
  3342  001B28  0008               	tblrd		*
  3343  001B2A  50F5               	movf	tablat,w,c
  3344  001B2C  0A25               	xorlw	37
  3345  001B2E  A4D8               	btfss	status,2,c
  3346  001B30  EF9C  F00D         	goto	u4371
  3347  001B34  EF9E  F00D         	goto	u4370
  3348  001B38                     u4371:
  3349  001B38  EF69  F00F         	goto	l4451
  3350  001B3C                     u4370:
  3351  001B3C                     
  3352                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  3353  001B3C  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3354  001B40  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3355  001B44  2ADE               	incf	postinc2,f,c
  3356  001B46  0E00               	movlw	0
  3357  001B48  22DD               	addwfc	postdec2,f,c
  3358  001B4A                     
  3359                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  3360  001B4A  0E00               	movlw	0
  3361  001B4C  0100               	movlb	0	; () banked
  3362  001B4E  6FD4               	movwf	(_width+1)& (0+255),b
  3363  001B50  0E00               	movlw	0
  3364  001B52  6FD3               	movwf	_width& (0+255),b
  3365  001B54  C0D3  F05B         	movff	_width,_flags
  3366  001B58  C0D4  F05C         	movff	_width+1,_flags+1
  3367  001B5C                     
  3368                           ; BSR set to: 0
  3369                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  3370  001B5C  69D5               	setf	_prec& (0+255),b
  3371  001B5E  69D6               	setf	(_prec+1)& (0+255),b
  3372  001B60                     
  3373                           ; BSR set to: 0
  3374                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  3375  001B60  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3376  001B64  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3377  001B68  CFDE FFF6          	movff	postinc2,tblptrl
  3378  001B6C  CFDD FFF7          	movff	postdec2,tblptrh
  3379  001B70                     	if	0	;tblptru may be non-zero
  3380  001B70                     	endif
  3381  001B70                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3382  001B70  0E00               	movlw	low (__mediumconst shr (0+16))
  3383  001B72  6EF8               	movwf	tblptru,c
  3384  001B74                     	endif
  3385  001B74  0008               	tblrd		*
  3386  001B76  50F5               	movf	tablat,w,c
  3387  001B78  0A64               	xorlw	100
  3388  001B7A  B4D8               	btfsc	status,2,c
  3389  001B7C  EFC2  F00D         	goto	u4381
  3390  001B80  EFC4  F00D         	goto	u4380
  3391  001B84                     u4381:
  3392  001B84  EFD8  F00D         	goto	l4403
  3393  001B88                     u4380:
  3394  001B88                     
  3395                           ; BSR set to: 0
  3396  001B88  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3397  001B8C  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3398  001B90  CFDE FFF6          	movff	postinc2,tblptrl
  3399  001B94  CFDD FFF7          	movff	postdec2,tblptrh
  3400  001B98                     	if	0	;tblptru may be non-zero
  3401  001B98                     	endif
  3402  001B98                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3403  001B98  0E00               	movlw	low (__mediumconst shr (0+16))
  3404  001B9A  6EF8               	movwf	tblptru,c
  3405  001B9C                     	endif
  3406  001B9C  0008               	tblrd		*
  3407  001B9E  50F5               	movf	tablat,w,c
  3408  001BA0  0A69               	xorlw	105
  3409  001BA2  A4D8               	btfss	status,2,c
  3410  001BA4  EFD6  F00D         	goto	u4391
  3411  001BA8  EFD8  F00D         	goto	u4390
  3412  001BAC                     u4391:
  3413  001BAC  EF18  F00E         	goto	l4409
  3414  001BB0                     u4390:
  3415  001BB0                     l4403:
  3416                           
  3417                           ; BSR set to: 0
  3418                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  3419  001BB0  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3420  001BB4  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3421  001BB8  2ADE               	incf	postinc2,f,c
  3422  001BBA  0E00               	movlw	0
  3423  001BBC  22DD               	addwfc	postdec2,f,c
  3424                           
  3425                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  3426  001BBE  C045  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3427  001BC2  C046  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3428  001BC6  CFDF F047          	movff	indf2,??_vfpfcnvrt
  3429  001BCA  0E02               	movlw	2
  3430  001BCC  26DE               	addwf	postinc2,f,c
  3431  001BCE  CFDF F048          	movff	indf2,??_vfpfcnvrt+1
  3432  001BD2  0E00               	movlw	0
  3433  001BD4  22DD               	addwfc	postdec2,f,c
  3434  001BD6  C047  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3435  001BDA  C048  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3436  001BDE  CFDE F060          	movff	postinc2,vfpfcnvrt@ll
  3437  001BE2  CFDD F061          	movff	postdec2,vfpfcnvrt@ll+1
  3438  001BE6  0E00               	movlw	0
  3439  001BE8  BF61               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  3440  001BEA  0EFF               	movlw	-1
  3441  001BEC  6F62               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  3442  001BEE  6F63               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  3443  001BF0  6F64               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  3444  001BF2  6F65               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  3445  001BF4  6F66               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  3446  001BF6  6F67               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  3447  001BF8                     l4405:
  3448                           
  3449                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  3450  001BF8  C041  F01D         	movff	vfpfcnvrt@fp,dtoa@fp
  3451  001BFC  C042  F01E         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  3452  001C00  C060  F01F         	movff	vfpfcnvrt@ll,dtoa@d
  3453  001C04  C061  F020         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  3454  001C08  C062  F021         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  3455  001C0C  C063  F022         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  3456  001C10  C064  F023         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  3457  001C14  C065  F024         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  3458  001C18  C066  F025         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  3459  001C1C  C067  F026         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  3460  001C20  EC87  F00F         	call	_dtoa	;wreg free
  3461  001C24  C01D  F041         	movff	?_dtoa,?_vfpfcnvrt
  3462  001C28  C01E  F042         	movff	?_dtoa+1,?_vfpfcnvrt+1
  3463  001C2C  EF86  F00F         	goto	l569
  3464  001C30                     l4409:
  3465                           
  3466                           ; BSR set to: 0
  3467                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 835:       
      +                            if (!strncmp(*fmt, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", (
      +                          (sizeof("li")/sizeof("li"[0]))-1))) {
  3468  001C30  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3469  001C34  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3470  001C38  CFDE F002          	movff	postinc2,strncmp@_l
  3471  001C3C  CFDD F003          	movff	postdec2,strncmp@_l+1
  3472  001C40  0E09               	movlw	low STR_8
  3473  001C42  6E04               	movwf	strncmp@_r^0,c
  3474  001C44  0E0F               	movlw	high STR_8
  3475  001C46  6E05               	movwf	(strncmp@_r+1)^0,c
  3476  001C48  0E00               	movlw	0
  3477  001C4A  6E07               	movwf	(strncmp@n+1)^0,c
  3478  001C4C  0E02               	movlw	2
  3479  001C4E  6E06               	movwf	strncmp@n^0,c
  3480  001C50  EC10  F014         	call	_strncmp	;wreg free
  3481  001C54  5002               	movf	?_strncmp^0,w,c
  3482  001C56  1003               	iorwf	(?_strncmp+1)^0,w,c
  3483  001C58  B4D8               	btfsc	status,2,c
  3484  001C5A  EF31  F00E         	goto	u4401
  3485  001C5E  EF33  F00E         	goto	u4400
  3486  001C62                     u4401:
  3487  001C62  EF4E  F00E         	goto	l4413
  3488  001C66                     u4400:
  3489  001C66  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3490  001C6A  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3491  001C6E  CFDE F002          	movff	postinc2,strncmp@_l
  3492  001C72  CFDD F003          	movff	postdec2,strncmp@_l+1
  3493  001C76  0E0C               	movlw	low STR_12
  3494  001C78  6E04               	movwf	strncmp@_r^0,c
  3495  001C7A  0E0F               	movlw	high STR_12
  3496  001C7C  6E05               	movwf	(strncmp@_r+1)^0,c
  3497  001C7E  0E00               	movlw	0
  3498  001C80  6E07               	movwf	(strncmp@n+1)^0,c
  3499  001C82  0E02               	movlw	2
  3500  001C84  6E06               	movwf	strncmp@n^0,c
  3501  001C86  EC10  F014         	call	_strncmp	;wreg free
  3502  001C8A  5002               	movf	?_strncmp^0,w,c
  3503  001C8C  1003               	iorwf	(?_strncmp+1)^0,w,c
  3504  001C8E  A4D8               	btfss	status,2,c
  3505  001C90  EF4C  F00E         	goto	u4411
  3506  001C94  EF4E  F00E         	goto	u4410
  3507  001C98                     u4411:
  3508  001C98  EF91  F00E         	goto	l4419
  3509  001C9C                     u4410:
  3510  001C9C                     l4413:
  3511                           
  3512                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 836: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 838:             
      +                          *fmt += ((sizeof("ld")/sizeof("ld"[0]))-1);
  3513  001C9C  0E02               	movlw	2
  3514  001C9E  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3515  001CA2  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3516  001CA6  26DE               	addwf	postinc2,f,c
  3517  001CA8  0E00               	movlw	0
  3518  001CAA  22DD               	addwfc	postdec2,f,c
  3519                           
  3520                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 839:       
      +                                ll = (long long)(*(long *)__va_arg(*(long **)ap, (long)0));
  3521  001CAC  C045  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3522  001CB0  C046  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3523  001CB4  CFDF F047          	movff	indf2,??_vfpfcnvrt
  3524  001CB8  0E04               	movlw	4
  3525  001CBA  26DE               	addwf	postinc2,f,c
  3526  001CBC  CFDF F048          	movff	indf2,??_vfpfcnvrt+1
  3527  001CC0  0E00               	movlw	0
  3528  001CC2  22DD               	addwfc	postdec2,f,c
  3529  001CC4  C047  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3530  001CC8  C048  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3531  001CCC  CFDE F049          	movff	postinc2,??_vfpfcnvrt+2
  3532  001CD0  CFDE F04A          	movff	postinc2,??_vfpfcnvrt+3
  3533  001CD4  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+4
  3534  001CD8  CFDE F04C          	movff	postinc2,??_vfpfcnvrt+5
  3535  001CDC  C049  F04D         	movff	??_vfpfcnvrt+2,??_vfpfcnvrt+6
  3536  001CE0  C04A  F04E         	movff	??_vfpfcnvrt+3,??_vfpfcnvrt+7
  3537  001CE4  C04B  F04F         	movff	??_vfpfcnvrt+4,??_vfpfcnvrt+8
  3538  001CE8  C04C  F050         	movff	??_vfpfcnvrt+5,??_vfpfcnvrt+9
  3539  001CEC  6A51               	clrf	(??_vfpfcnvrt+10)^0,c
  3540  001CEE  BE50               	btfsc	(??_vfpfcnvrt+9)^0,7,c
  3541  001CF0  6851               	setf	(??_vfpfcnvrt+10)^0,c
  3542  001CF2  C051  F052         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+11
  3543  001CF6  C051  F053         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+12
  3544  001CFA  C051  F054         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+13
  3545  001CFE  C04D  F060         	movff	??_vfpfcnvrt+6,vfpfcnvrt@ll
  3546  001D02  C04E  F061         	movff	??_vfpfcnvrt+7,vfpfcnvrt@ll+1
  3547  001D06  C04F  F062         	movff	??_vfpfcnvrt+8,vfpfcnvrt@ll+2
  3548  001D0A  C050  F063         	movff	??_vfpfcnvrt+9,vfpfcnvrt@ll+3
  3549  001D0E  C051  F064         	movff	??_vfpfcnvrt+10,vfpfcnvrt@ll+4
  3550  001D12  C052  F065         	movff	??_vfpfcnvrt+11,vfpfcnvrt@ll+5
  3551  001D16  C053  F066         	movff	??_vfpfcnvrt+12,vfpfcnvrt@ll+6
  3552  001D1A  C054  F067         	movff	??_vfpfcnvrt+13,vfpfcnvrt@ll+7
  3553  001D1E  EFFC  F00D         	goto	l4405
  3554  001D22                     l4419:
  3555                           
  3556                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
  3557  001D22  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3558  001D26  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3559  001D2A  CFDE FFF6          	movff	postinc2,tblptrl
  3560  001D2E  CFDD FFF7          	movff	postdec2,tblptrh
  3561  001D32                     	if	0	;tblptru may be non-zero
  3562  001D32                     	endif
  3563  001D32                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3564  001D32  0E00               	movlw	low (__mediumconst shr (0+16))
  3565  001D34  6EF8               	movwf	tblptru,c
  3566  001D36                     	endif
  3567  001D36  0008               	tblrd		*
  3568  001D38  50F5               	movf	tablat,w,c
  3569  001D3A  0A75               	xorlw	117
  3570  001D3C  A4D8               	btfss	status,2,c
  3571  001D3E  EFA3  F00E         	goto	u4421
  3572  001D42  EFA5  F00E         	goto	u4420
  3573  001D46                     u4421:
  3574  001D46  EFE7  F00E         	goto	l4427
  3575  001D4A                     u4420:
  3576  001D4A                     
  3577                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
  3578  001D4A  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3579  001D4E  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3580  001D52  2ADE               	incf	postinc2,f,c
  3581  001D54  0E00               	movlw	0
  3582  001D56  22DD               	addwfc	postdec2,f,c
  3583                           
  3584                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  3585  001D58  C045  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3586  001D5C  C046  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3587  001D60  CFDF F047          	movff	indf2,??_vfpfcnvrt
  3588  001D64  0E02               	movlw	2
  3589  001D66  26DE               	addwf	postinc2,f,c
  3590  001D68  CFDF F048          	movff	indf2,??_vfpfcnvrt+1
  3591  001D6C  0E00               	movlw	0
  3592  001D6E  22DD               	addwfc	postdec2,f,c
  3593  001D70  C047  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3594  001D74  C048  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3595  001D78  CFDE F049          	movff	postinc2,??_vfpfcnvrt+2
  3596  001D7C  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+3
  3597  001D80  C049  F068         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3598  001D84  C04A  F069         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3599  001D88  0100               	movlb	0	; () banked
  3600  001D8A  6B6A               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  3601  001D8C  6B6B               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  3602  001D8E  6B6C               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  3603  001D90  6B6D               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  3604  001D92  6B6E               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  3605  001D94  6B6F               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  3606  001D96                     l4423:
  3607                           
  3608                           ; BSR set to: 0
  3609                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1187:      
      +                                 return utoa(fp, llu);
  3610  001D96  C041  F01D         	movff	vfpfcnvrt@fp,utoa@fp
  3611  001D9A  C042  F01E         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  3612  001D9E  C068  F01F         	movff	vfpfcnvrt@llu,utoa@d
  3613  001DA2  C069  F020         	movff	vfpfcnvrt@llu+1,utoa@d+1
  3614  001DA6  C06A  F021         	movff	vfpfcnvrt@llu+2,utoa@d+2
  3615  001DAA  C06B  F022         	movff	vfpfcnvrt@llu+3,utoa@d+3
  3616  001DAE  C06C  F023         	movff	vfpfcnvrt@llu+4,utoa@d+4
  3617  001DB2  C06D  F024         	movff	vfpfcnvrt@llu+5,utoa@d+5
  3618  001DB6  C06E  F025         	movff	vfpfcnvrt@llu+6,utoa@d+6
  3619  001DBA  C06F  F026         	movff	vfpfcnvrt@llu+7,utoa@d+7
  3620  001DBE  ECF6  F010         	call	_utoa	;wreg free
  3621  001DC2  C01D  F041         	movff	?_utoa,?_vfpfcnvrt
  3622  001DC6  C01E  F042         	movff	?_utoa+1,?_vfpfcnvrt+1
  3623  001DCA  EF86  F00F         	goto	l569
  3624  001DCE                     l4427:
  3625                           
  3626                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1192:      
      +                             if (!strncmp(*fmt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
  3627  001DCE  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3628  001DD2  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3629  001DD6  CFDE F002          	movff	postinc2,strncmp@_l
  3630  001DDA  CFDD F003          	movff	postdec2,strncmp@_l+1
  3631  001DDE  0E06               	movlw	low (STR_5+1)
  3632  001DE0  6E04               	movwf	strncmp@_r^0,c
  3633  001DE2  0E0F               	movlw	high (STR_5+1)
  3634  001DE4  6E05               	movwf	(strncmp@_r+1)^0,c
  3635  001DE6  0E00               	movlw	0
  3636  001DE8  6E07               	movwf	(strncmp@n+1)^0,c
  3637  001DEA  0E02               	movlw	2
  3638  001DEC  6E06               	movwf	strncmp@n^0,c
  3639  001DEE  EC10  F014         	call	_strncmp	;wreg free
  3640  001DF2  5002               	movf	?_strncmp^0,w,c
  3641  001DF4  1003               	iorwf	(?_strncmp+1)^0,w,c
  3642  001DF6  A4D8               	btfss	status,2,c
  3643  001DF8  EF00  F00F         	goto	u4431
  3644  001DFC  EF02  F00F         	goto	u4430
  3645  001E00                     u4431:
  3646  001E00  EF31  F00F         	goto	l4435
  3647  001E04                     u4430:
  3648  001E04                     
  3649                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1194:      
      +                                 *fmt += ((sizeof("lu")/sizeof("lu"[0]))-1);
  3650  001E04  0E02               	movlw	2
  3651  001E06  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3652  001E0A  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3653  001E0E  26DE               	addwf	postinc2,f,c
  3654  001E10  0E00               	movlw	0
  3655  001E12  22DD               	addwfc	postdec2,f,c
  3656                           
  3657                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1195:      
      +                                 llu = (unsigned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (uns
      +                          igned long)0));
  3658  001E14  C045  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3659  001E18  C046  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3660  001E1C  CFDF F047          	movff	indf2,??_vfpfcnvrt
  3661  001E20  0E04               	movlw	4
  3662  001E22  26DE               	addwf	postinc2,f,c
  3663  001E24  CFDF F048          	movff	indf2,??_vfpfcnvrt+1
  3664  001E28  0E00               	movlw	0
  3665  001E2A  22DD               	addwfc	postdec2,f,c
  3666  001E2C  C047  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3667  001E30  C048  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3668  001E34  CFDE F049          	movff	postinc2,??_vfpfcnvrt+2
  3669  001E38  CFDE F04A          	movff	postinc2,??_vfpfcnvrt+3
  3670  001E3C  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+4
  3671  001E40  CFDE F04C          	movff	postinc2,??_vfpfcnvrt+5
  3672  001E44  5049               	movf	(??_vfpfcnvrt+2)^0,w,c
  3673  001E46  0100               	movlb	0	; () banked
  3674  001E48  6F68               	movwf	vfpfcnvrt@llu& (0+255),b
  3675  001E4A  504A               	movf	(??_vfpfcnvrt+3)^0,w,c
  3676  001E4C  6F69               	movwf	(vfpfcnvrt@llu+1)& (0+255),b
  3677  001E4E  504B               	movf	(??_vfpfcnvrt+4)^0,w,c
  3678  001E50  6F6A               	movwf	(vfpfcnvrt@llu+2)& (0+255),b
  3679  001E52  504C               	movf	(??_vfpfcnvrt+5)^0,w,c
  3680  001E54  6F6B               	movwf	(vfpfcnvrt@llu+3)& (0+255),b
  3681  001E56  6B6C               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  3682  001E58  6B6D               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  3683  001E5A  6B6E               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  3684  001E5C  6B6F               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  3685  001E5E  EFCB  F00E         	goto	l4423
  3686  001E62                     l4435:
  3687                           
  3688                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  3689  001E62  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3690  001E66  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3691  001E6A  CFDE FFF6          	movff	postinc2,tblptrl
  3692  001E6E  CFDD FFF7          	movff	postdec2,tblptrh
  3693  001E72                     	if	0	;tblptru may be non-zero
  3694  001E72                     	endif
  3695  001E72                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3696  001E72  0E00               	movlw	low (__mediumconst shr (0+16))
  3697  001E74  6EF8               	movwf	tblptru,c
  3698  001E76                     	endif
  3699  001E76  0008               	tblrd		*
  3700  001E78  50F5               	movf	tablat,w,c
  3701  001E7A  0A25               	xorlw	37
  3702  001E7C  A4D8               	btfss	status,2,c
  3703  001E7E  EF43  F00F         	goto	u4441
  3704  001E82  EF45  F00F         	goto	u4440
  3705  001E86                     u4441:
  3706  001E86  EF5C  F00F         	goto	l4445
  3707  001E8A                     u4440:
  3708  001E8A                     
  3709                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  3710  001E8A  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3711  001E8E  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3712  001E92  2ADE               	incf	postinc2,f,c
  3713  001E94  0E00               	movlw	0
  3714  001E96  22DD               	addwfc	postdec2,f,c
  3715  001E98                     
  3716                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  3717  001E98  0E00               	movlw	0
  3718  001E9A  6E03               	movwf	(fputc@c+1)^0,c
  3719  001E9C  0E25               	movlw	37
  3720  001E9E  6E02               	movwf	fputc@c^0,c
  3721  001EA0  C041  F004         	movff	vfpfcnvrt@fp,fputc@fp
  3722  001EA4  C042  F005         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3723  001EA8  EC6B  F015         	call	_fputc	;wreg free
  3724  001EAC                     l4441:
  3725                           
  3726                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  3727  001EAC  0E00               	movlw	0
  3728  001EAE  6E42               	movwf	(?_vfpfcnvrt+1)^0,c
  3729  001EB0  0E01               	movlw	1
  3730  001EB2  6E41               	movwf	?_vfpfcnvrt^0,c
  3731  001EB4  EF86  F00F         	goto	l569
  3732  001EB8                     l4445:
  3733                           
  3734                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  3735  001EB8  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3736  001EBC  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3737  001EC0  2ADE               	incf	postinc2,f,c
  3738  001EC2  0E00               	movlw	0
  3739  001EC4  22DD               	addwfc	postdec2,f,c
  3740  001EC6                     
  3741                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  3742  001EC6  0E00               	movlw	0
  3743  001EC8  6E42               	movwf	(?_vfpfcnvrt+1)^0,c
  3744  001ECA  0E00               	movlw	0
  3745  001ECC  6E41               	movwf	?_vfpfcnvrt^0,c
  3746  001ECE  EF86  F00F         	goto	l569
  3747  001ED2                     l4451:
  3748                           
  3749                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  3750  001ED2  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3751  001ED6  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3752  001EDA  CFDE FFF6          	movff	postinc2,tblptrl
  3753  001EDE  CFDD FFF7          	movff	postdec2,tblptrh
  3754  001EE2                     	if	0	;tblptru may be non-zero
  3755  001EE2                     	endif
  3756  001EE2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3757  001EE2  0E00               	movlw	low (__mediumconst shr (0+16))
  3758  001EE4  6EF8               	movwf	tblptru,c
  3759  001EE6                     	endif
  3760  001EE6  0008               	tblrd		*
  3761  001EE8  50F5               	movf	tablat,w,c
  3762  001EEA  6E02               	movwf	fputc@c^0,c
  3763  001EEC  6A03               	clrf	(fputc@c+1)^0,c
  3764  001EEE  C041  F004         	movff	vfpfcnvrt@fp,fputc@fp
  3765  001EF2  C042  F005         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3766  001EF6  EC6B  F015         	call	_fputc	;wreg free
  3767  001EFA                     
  3768                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  3769  001EFA  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3770  001EFE  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3771  001F02  2ADE               	incf	postinc2,f,c
  3772  001F04  0E00               	movlw	0
  3773  001F06  22DD               	addwfc	postdec2,f,c
  3774  001F08  EF56  F00F         	goto	l4441
  3775  001F0C                     l569:
  3776  001F0C  0012               	return		;funcret
  3777  001F0E                     __end_of_vfpfcnvrt:
  3778                           	opt callstack 0
  3779                           
  3780 ;; *************** function _utoa *****************
  3781 ;; Defined at:
  3782 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3783 ;; Parameters:    Size  Location     Type
  3784 ;;  fp              2   28[COMRAM] PTR struct _IO_FILE
  3785 ;;		 -> sprintf@f(6), 
  3786 ;;  d               8   30[COMRAM] unsigned long long 
  3787 ;; Auto vars:     Size  Location     Type
  3788 ;;  n               8   50[COMRAM] unsigned long long 
  3789 ;;  i               2   58[COMRAM] int 
  3790 ;;  w               2   48[COMRAM] int 
  3791 ;;  p               2   46[COMRAM] int 
  3792 ;; Return value:  Size  Location     Type
  3793 ;;                  2   28[COMRAM] int 
  3794 ;; Registers used:
  3795 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3796 ;; Tracked objects:
  3797 ;;		On entry : 0/0
  3798 ;;		On exit  : 0/0
  3799 ;;		Unchanged: 0/0
  3800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3801 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3802 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3803 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3804 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3805 ;;Total ram usage:       32 bytes
  3806 ;; Hardware stack levels used:    1
  3807 ;; Hardware stack levels required when called:    5
  3808 ;; This function calls:
  3809 ;;		___lodiv
  3810 ;;		___lomod
  3811 ;;		_pad
  3812 ;; This function is called by:
  3813 ;;		_vfpfcnvrt
  3814 ;; This function uses a non-reentrant model
  3815 ;;
  3816                           
  3817                           	psect	text4
  3818  0021EC                     __ptext4:
  3819                           	opt callstack 0
  3820  0021EC                     _utoa:
  3821                           	opt callstack 22
  3822  0021EC                     
  3823                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  3824  0021EC  0100               	movlb	0	; () banked
  3825  0021EE  BFD6               	btfsc	(_prec+1)& (0+255),7,b
  3826  0021F0  EFFC  F010         	goto	u4251
  3827  0021F4  EFFE  F010         	goto	u4250
  3828  0021F8                     u4251:
  3829  0021F8  EFFF  F010         	goto	l4339
  3830  0021FC                     u4250:
  3831  0021FC                     
  3832                           ; BSR set to: 0
  3833                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
  3834  0021FC  925B               	bcf	_flags^0,1,c
  3835  0021FE                     l4339:
  3836                           
  3837                           ; BSR set to: 0
  3838                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
  3839  0021FE  BFD6               	btfsc	(_prec+1)& (0+255),7,b
  3840  002200  EF0C  F011         	goto	u4260
  3841  002204  51D6               	movf	(_prec+1)& (0+255),w,b
  3842  002206  E106               	bnz	u4261
  3843  002208  05D5               	decf	_prec& (0+255),w,b
  3844  00220A  B0D8               	btfsc	status,0,c
  3845  00220C  EF0A  F011         	goto	u4261
  3846  002210  EF0C  F011         	goto	u4260
  3847  002214                     u4261:
  3848  002214  EF12  F011         	goto	l552
  3849  002218                     u4260:
  3850  002218                     
  3851                           ; BSR set to: 0
  3852  002218  0E00               	movlw	0
  3853  00221A  6E30               	movwf	(utoa@p+1)^0,c
  3854  00221C  0E01               	movlw	1
  3855  00221E  6E2F               	movwf	utoa@p^0,c
  3856  002220  EF16  F011         	goto	l554
  3857  002224                     l552:
  3858                           
  3859                           ; BSR set to: 0
  3860  002224  C0D5  F02F         	movff	_prec,utoa@p
  3861  002228  C0D6  F030         	movff	_prec+1,utoa@p+1
  3862  00222C                     l554:
  3863                           
  3864                           ; BSR set to: 0
  3865                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
  3866  00222C  C0D3  F031         	movff	_width,utoa@w
  3867  002230  C0D4  F032         	movff	_width+1,utoa@w+1
  3868                           
  3869                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
  3870  002234  C01F  F033         	movff	utoa@d,utoa@n
  3871  002238  C020  F034         	movff	utoa@d+1,utoa@n+1
  3872  00223C  C021  F035         	movff	utoa@d+2,utoa@n+2
  3873  002240  C022  F036         	movff	utoa@d+3,utoa@n+3
  3874  002244  C023  F037         	movff	utoa@d+4,utoa@n+4
  3875  002248  C024  F038         	movff	utoa@d+5,utoa@n+5
  3876  00224C  C025  F039         	movff	utoa@d+6,utoa@n+6
  3877  002250  C026  F03A         	movff	utoa@d+7,utoa@n+7
  3878  002254                     
  3879                           ; BSR set to: 0
  3880                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
  3881  002254  0E00               	movlw	0
  3882  002256  6E3C               	movwf	(utoa@i+1)^0,c
  3883  002258  0E1F               	movlw	31
  3884  00225A  6E3B               	movwf	utoa@i^0,c
  3885  00225C                     
  3886                           ; BSR set to: 0
  3887                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
  3888  00225C  0E00               	movlw	0
  3889  00225E  6FF8               	movwf	(_dbuf+31)& (0+255),b
  3890                           
  3891                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3892  002260  EFA8  F011         	goto	l4357
  3893  002264                     l4347:
  3894                           
  3895                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
  3896  002264  063B               	decf	utoa@i^0,f,c
  3897  002266  A0D8               	btfss	status,0,c
  3898  002268  063C               	decf	(utoa@i+1)^0,f,c
  3899  00226A                     
  3900                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
  3901  00226A  0ED9               	movlw	low _dbuf
  3902  00226C  243B               	addwf	utoa@i^0,w,c
  3903  00226E  6ED9               	movwf	fsr2l,c
  3904  002270  0E00               	movlw	high _dbuf
  3905  002272  203C               	addwfc	(utoa@i+1)^0,w,c
  3906  002274  6EDA               	movwf	fsr2h,c
  3907  002276  C033  F002         	movff	utoa@n,___lomod@dividend
  3908  00227A  C034  F003         	movff	utoa@n+1,___lomod@dividend+1
  3909  00227E  C035  F004         	movff	utoa@n+2,___lomod@dividend+2
  3910  002282  C036  F005         	movff	utoa@n+3,___lomod@dividend+3
  3911  002286  C037  F006         	movff	utoa@n+4,___lomod@dividend+4
  3912  00228A  C038  F007         	movff	utoa@n+5,___lomod@dividend+5
  3913  00228E  C039  F008         	movff	utoa@n+6,___lomod@dividend+6
  3914  002292  C03A  F009         	movff	utoa@n+7,___lomod@dividend+7
  3915  002296  0E0A               	movlw	10
  3916  002298  6E0A               	movwf	___lomod@divisor^0,c
  3917  00229A  0E00               	movlw	0
  3918  00229C  6E0B               	movwf	(___lomod@divisor+1)^0,c
  3919  00229E  0E00               	movlw	0
  3920  0022A0  6E0C               	movwf	(___lomod@divisor+2)^0,c
  3921  0022A2  0E00               	movlw	0
  3922  0022A4  6E0D               	movwf	(___lomod@divisor+3)^0,c
  3923  0022A6  0E00               	movlw	0
  3924  0022A8  6E0E               	movwf	(___lomod@divisor+4)^0,c
  3925  0022AA  0E00               	movlw	0
  3926  0022AC  6E0F               	movwf	(___lomod@divisor+5)^0,c
  3927  0022AE  0E00               	movlw	0
  3928  0022B0  6E10               	movwf	(___lomod@divisor+6)^0,c
  3929  0022B2  0E00               	movlw	0
  3930  0022B4  6E11               	movwf	(___lomod@divisor+7)^0,c
  3931  0022B6  EC03  F015         	call	___lomod	;wreg free
  3932  0022BA  C002  F027         	movff	?___lomod,??_utoa
  3933  0022BE  C003  F028         	movff	?___lomod+1,??_utoa+1
  3934  0022C2  C004  F029         	movff	?___lomod+2,??_utoa+2
  3935  0022C6  C005  F02A         	movff	?___lomod+3,??_utoa+3
  3936  0022CA  C006  F02B         	movff	?___lomod+4,??_utoa+4
  3937  0022CE  C007  F02C         	movff	?___lomod+5,??_utoa+5
  3938  0022D2  C008  F02D         	movff	?___lomod+6,??_utoa+6
  3939  0022D6  C009  F02E         	movff	?___lomod+7,??_utoa+7
  3940  0022DA  5027               	movf	??_utoa^0,w,c
  3941  0022DC  0F30               	addlw	48
  3942  0022DE  6EDF               	movwf	indf2,c
  3943  0022E0                     
  3944                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
  3945  0022E0  062F               	decf	utoa@p^0,f,c
  3946  0022E2  A0D8               	btfss	status,0,c
  3947  0022E4  0630               	decf	(utoa@p+1)^0,f,c
  3948  0022E6                     
  3949                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
  3950  0022E6  0631               	decf	utoa@w^0,f,c
  3951  0022E8  A0D8               	btfss	status,0,c
  3952  0022EA  0632               	decf	(utoa@w+1)^0,f,c
  3953  0022EC                     
  3954                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
  3955  0022EC  C033  F002         	movff	utoa@n,___lodiv@dividend
  3956  0022F0  C034  F003         	movff	utoa@n+1,___lodiv@dividend+1
  3957  0022F4  C035  F004         	movff	utoa@n+2,___lodiv@dividend+2
  3958  0022F8  C036  F005         	movff	utoa@n+3,___lodiv@dividend+3
  3959  0022FC  C037  F006         	movff	utoa@n+4,___lodiv@dividend+4
  3960  002300  C038  F007         	movff	utoa@n+5,___lodiv@dividend+5
  3961  002304  C039  F008         	movff	utoa@n+6,___lodiv@dividend+6
  3962  002308  C03A  F009         	movff	utoa@n+7,___lodiv@dividend+7
  3963  00230C  0E0A               	movlw	10
  3964  00230E  6E0A               	movwf	___lodiv@divisor^0,c
  3965  002310  0E00               	movlw	0
  3966  002312  6E0B               	movwf	(___lodiv@divisor+1)^0,c
  3967  002314  0E00               	movlw	0
  3968  002316  6E0C               	movwf	(___lodiv@divisor+2)^0,c
  3969  002318  0E00               	movlw	0
  3970  00231A  6E0D               	movwf	(___lodiv@divisor+3)^0,c
  3971  00231C  0E00               	movlw	0
  3972  00231E  6E0E               	movwf	(___lodiv@divisor+4)^0,c
  3973  002320  0E00               	movlw	0
  3974  002322  6E0F               	movwf	(___lodiv@divisor+5)^0,c
  3975  002324  0E00               	movlw	0
  3976  002326  6E10               	movwf	(___lodiv@divisor+6)^0,c
  3977  002328  0E00               	movlw	0
  3978  00232A  6E11               	movwf	(___lodiv@divisor+7)^0,c
  3979  00232C  EC8B  F014         	call	___lodiv	;wreg free
  3980  002330  C002  F033         	movff	?___lodiv,utoa@n
  3981  002334  C003  F034         	movff	?___lodiv+1,utoa@n+1
  3982  002338  C004  F035         	movff	?___lodiv+2,utoa@n+2
  3983  00233C  C005  F036         	movff	?___lodiv+3,utoa@n+3
  3984  002340  C006  F037         	movff	?___lodiv+4,utoa@n+4
  3985  002344  C007  F038         	movff	?___lodiv+5,utoa@n+5
  3986  002348  C008  F039         	movff	?___lodiv+6,utoa@n+6
  3987  00234C  C009  F03A         	movff	?___lodiv+7,utoa@n+7
  3988  002350                     l4357:
  3989                           
  3990                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3991  002350  503B               	movf	utoa@i^0,w,c
  3992  002352  103C               	iorwf	(utoa@i+1)^0,w,c
  3993  002354  B4D8               	btfsc	status,2,c
  3994  002356  EFAF  F011         	goto	u4271
  3995  00235A  EFB1  F011         	goto	u4270
  3996  00235E                     u4271:
  3997  00235E  EFE1  F011         	goto	l4367
  3998  002362                     u4270:
  3999  002362  5033               	movf	utoa@n^0,w,c
  4000  002364  1034               	iorwf	(utoa@n+1)^0,w,c
  4001  002366  1035               	iorwf	(utoa@n+2)^0,w,c
  4002  002368  1036               	iorwf	(utoa@n+3)^0,w,c
  4003  00236A  1037               	iorwf	(utoa@n+4)^0,w,c
  4004  00236C  1038               	iorwf	(utoa@n+5)^0,w,c
  4005  00236E  1039               	iorwf	(utoa@n+6)^0,w,c
  4006  002370  103A               	iorwf	(utoa@n+7)^0,w,c
  4007  002372  A4D8               	btfss	status,2,c
  4008  002374  EFBE  F011         	goto	u4281
  4009  002378  EFC0  F011         	goto	u4280
  4010  00237C                     u4281:
  4011  00237C  EF32  F011         	goto	l4347
  4012  002380                     u4280:
  4013  002380  BE30               	btfsc	(utoa@p+1)^0,7,c
  4014  002382  EFCD  F011         	goto	u4290
  4015  002386  5030               	movf	(utoa@p+1)^0,w,c
  4016  002388  E106               	bnz	u4291
  4017  00238A  042F               	decf	utoa@p^0,w,c
  4018  00238C  B0D8               	btfsc	status,0,c
  4019  00238E  EFCB  F011         	goto	u4291
  4020  002392  EFCD  F011         	goto	u4290
  4021  002396                     u4291:
  4022  002396  EF32  F011         	goto	l4347
  4023  00239A                     u4290:
  4024  00239A  BE32               	btfsc	(utoa@w+1)^0,7,c
  4025  00239C  EFD8  F011         	goto	u4301
  4026  0023A0  5032               	movf	(utoa@w+1)^0,w,c
  4027  0023A2  E108               	bnz	u4300
  4028  0023A4  0431               	decf	utoa@w^0,w,c
  4029  0023A6  A0D8               	btfss	status,0,c
  4030  0023A8  EFD8  F011         	goto	u4301
  4031  0023AC  EFDA  F011         	goto	u4300
  4032  0023B0                     u4301:
  4033  0023B0  EFE1  F011         	goto	l4367
  4034  0023B4                     u4300:
  4035  0023B4  B25B               	btfsc	_flags^0,1,c
  4036  0023B6  EFDF  F011         	goto	u4311
  4037  0023BA  EFE1  F011         	goto	u4310
  4038  0023BE                     u4311:
  4039  0023BE  EF32  F011         	goto	l4347
  4040  0023C2                     u4310:
  4041  0023C2                     l4367:
  4042                           
  4043                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
  4044  0023C2  C01D  F012         	movff	utoa@fp,pad@fp
  4045  0023C6  C01E  F013         	movff	utoa@fp+1,pad@fp+1
  4046  0023CA  0ED9               	movlw	low _dbuf
  4047  0023CC  243B               	addwf	utoa@i^0,w,c
  4048  0023CE  6E14               	movwf	pad@buf^0,c
  4049  0023D0  0E00               	movlw	high _dbuf
  4050  0023D2  203C               	addwfc	(utoa@i+1)^0,w,c
  4051  0023D4  6E15               	movwf	(pad@buf+1)^0,c
  4052  0023D6  C031  F016         	movff	utoa@w,pad@p
  4053  0023DA  C032  F017         	movff	utoa@w+1,pad@p+1
  4054  0023DE  EC94  F016         	call	_pad	;wreg free
  4055  0023E2  C012  F01D         	movff	?_pad,?_utoa
  4056  0023E6  C013  F01E         	movff	?_pad+1,?_utoa+1
  4057  0023EA  0012               	return		;funcret
  4058  0023EC                     __end_of_utoa:
  4059                           	opt callstack 0
  4060                           
  4061 ;; *************** function ___lomod *****************
  4062 ;; Defined at:
  4063 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lomod.c"
  4064 ;; Parameters:    Size  Location     Type
  4065 ;;  dividend        8    1[COMRAM] unsigned long long 
  4066 ;;  divisor         8    9[COMRAM] unsigned long long 
  4067 ;; Auto vars:     Size  Location     Type
  4068 ;;  counter         1   17[COMRAM] unsigned char 
  4069 ;; Return value:  Size  Location     Type
  4070 ;;                  8    1[COMRAM] unsigned long long 
  4071 ;; Registers used:
  4072 ;;		wreg, status,2, status,0
  4073 ;; Tracked objects:
  4074 ;;		On entry : 0/0
  4075 ;;		On exit  : 0/0
  4076 ;;		Unchanged: 0/0
  4077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4078 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4079 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4081 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4082 ;;Total ram usage:       17 bytes
  4083 ;; Hardware stack levels used:    1
  4084 ;; Hardware stack levels required when called:    1
  4085 ;; This function calls:
  4086 ;;		Nothing
  4087 ;; This function is called by:
  4088 ;;		_utoa
  4089 ;; This function uses a non-reentrant model
  4090 ;;
  4091                           
  4092                           	psect	text5
  4093  002A06                     __ptext5:
  4094                           	opt callstack 0
  4095  002A06                     ___lomod:
  4096                           	opt callstack 25
  4097  002A06  500A               	movf	___lomod@divisor^0,w,c
  4098  002A08  100B               	iorwf	(___lomod@divisor+1)^0,w,c
  4099  002A0A  100C               	iorwf	(___lomod@divisor+2)^0,w,c
  4100  002A0C  100D               	iorwf	(___lomod@divisor+3)^0,w,c
  4101  002A0E  100E               	iorwf	(___lomod@divisor+4)^0,w,c
  4102  002A10  100F               	iorwf	(___lomod@divisor+5)^0,w,c
  4103  002A12  1010               	iorwf	(___lomod@divisor+6)^0,w,c
  4104  002A14  1011               	iorwf	(___lomod@divisor+7)^0,w,c
  4105  002A16  B4D8               	btfsc	status,2,c
  4106  002A18  EF10  F015         	goto	u4071
  4107  002A1C  EF12  F015         	goto	u4070
  4108  002A20                     u4071:
  4109  002A20  EF5A  F015         	goto	l1032
  4110  002A24                     u4070:
  4111  002A24  0E01               	movlw	1
  4112  002A26  6E12               	movwf	___lomod@counter^0,c
  4113  002A28  EF20  F015         	goto	l4263
  4114  002A2C                     l4261:
  4115  002A2C  90D8               	bcf	status,0,c
  4116  002A2E  360A               	rlcf	___lomod@divisor^0,f,c
  4117  002A30  360B               	rlcf	(___lomod@divisor+1)^0,f,c
  4118  002A32  360C               	rlcf	(___lomod@divisor+2)^0,f,c
  4119  002A34  360D               	rlcf	(___lomod@divisor+3)^0,f,c
  4120  002A36  360E               	rlcf	(___lomod@divisor+4)^0,f,c
  4121  002A38  360F               	rlcf	(___lomod@divisor+5)^0,f,c
  4122  002A3A  3610               	rlcf	(___lomod@divisor+6)^0,f,c
  4123  002A3C  3611               	rlcf	(___lomod@divisor+7)^0,f,c
  4124  002A3E  2A12               	incf	___lomod@counter^0,f,c
  4125  002A40                     l4263:
  4126  002A40  AE11               	btfss	(___lomod@divisor+7)^0,7,c
  4127  002A42  EF25  F015         	goto	u4081
  4128  002A46  EF27  F015         	goto	u4080
  4129  002A4A                     u4081:
  4130  002A4A  EF16  F015         	goto	l4261
  4131  002A4E                     u4080:
  4132  002A4E                     l4265:
  4133  002A4E  500A               	movf	___lomod@divisor^0,w,c
  4134  002A50  5C02               	subwf	___lomod@dividend^0,w,c
  4135  002A52  500B               	movf	(___lomod@divisor+1)^0,w,c
  4136  002A54  5803               	subwfb	(___lomod@dividend+1)^0,w,c
  4137  002A56  500C               	movf	(___lomod@divisor+2)^0,w,c
  4138  002A58  5804               	subwfb	(___lomod@dividend+2)^0,w,c
  4139  002A5A  500D               	movf	(___lomod@divisor+3)^0,w,c
  4140  002A5C  5805               	subwfb	(___lomod@dividend+3)^0,w,c
  4141  002A5E  500E               	movf	(___lomod@divisor+4)^0,w,c
  4142  002A60  5806               	subwfb	(___lomod@dividend+4)^0,w,c
  4143  002A62  500F               	movf	(___lomod@divisor+5)^0,w,c
  4144  002A64  5807               	subwfb	(___lomod@dividend+5)^0,w,c
  4145  002A66  5010               	movf	(___lomod@divisor+6)^0,w,c
  4146  002A68  5808               	subwfb	(___lomod@dividend+6)^0,w,c
  4147  002A6A  5011               	movf	(___lomod@divisor+7)^0,w,c
  4148  002A6C  5809               	subwfb	(___lomod@dividend+7)^0,w,c
  4149  002A6E  A0D8               	btfss	status,0,c
  4150  002A70  EF3C  F015         	goto	u4091
  4151  002A74  EF3E  F015         	goto	u4090
  4152  002A78                     u4091:
  4153  002A78  EF4E  F015         	goto	l4269
  4154  002A7C                     u4090:
  4155  002A7C  500A               	movf	___lomod@divisor^0,w,c
  4156  002A7E  5E02               	subwf	___lomod@dividend^0,f,c
  4157  002A80  500B               	movf	(___lomod@divisor+1)^0,w,c
  4158  002A82  5A03               	subwfb	(___lomod@dividend+1)^0,f,c
  4159  002A84  500C               	movf	(___lomod@divisor+2)^0,w,c
  4160  002A86  5A04               	subwfb	(___lomod@dividend+2)^0,f,c
  4161  002A88  500D               	movf	(___lomod@divisor+3)^0,w,c
  4162  002A8A  5A05               	subwfb	(___lomod@dividend+3)^0,f,c
  4163  002A8C  500E               	movf	(___lomod@divisor+4)^0,w,c
  4164  002A8E  5A06               	subwfb	(___lomod@dividend+4)^0,f,c
  4165  002A90  500F               	movf	(___lomod@divisor+5)^0,w,c
  4166  002A92  5A07               	subwfb	(___lomod@dividend+5)^0,f,c
  4167  002A94  5010               	movf	(___lomod@divisor+6)^0,w,c
  4168  002A96  5A08               	subwfb	(___lomod@dividend+6)^0,f,c
  4169  002A98  5011               	movf	(___lomod@divisor+7)^0,w,c
  4170  002A9A  5A09               	subwfb	(___lomod@dividend+7)^0,f,c
  4171  002A9C                     l4269:
  4172  002A9C  90D8               	bcf	status,0,c
  4173  002A9E  3211               	rrcf	(___lomod@divisor+7)^0,f,c
  4174  002AA0  3210               	rrcf	(___lomod@divisor+6)^0,f,c
  4175  002AA2  320F               	rrcf	(___lomod@divisor+5)^0,f,c
  4176  002AA4  320E               	rrcf	(___lomod@divisor+4)^0,f,c
  4177  002AA6  320D               	rrcf	(___lomod@divisor+3)^0,f,c
  4178  002AA8  320C               	rrcf	(___lomod@divisor+2)^0,f,c
  4179  002AAA  320B               	rrcf	(___lomod@divisor+1)^0,f,c
  4180  002AAC  320A               	rrcf	___lomod@divisor^0,f,c
  4181  002AAE  2E12               	decfsz	___lomod@counter^0,f,c
  4182  002AB0  EF27  F015         	goto	l4265
  4183  002AB4                     l1032:
  4184  002AB4  C002  F002         	movff	___lomod@dividend,?___lomod
  4185  002AB8  C003  F003         	movff	___lomod@dividend+1,?___lomod+1
  4186  002ABC  C004  F004         	movff	___lomod@dividend+2,?___lomod+2
  4187  002AC0  C005  F005         	movff	___lomod@dividend+3,?___lomod+3
  4188  002AC4  C006  F006         	movff	___lomod@dividend+4,?___lomod+4
  4189  002AC8  C007  F007         	movff	___lomod@dividend+5,?___lomod+5
  4190  002ACC  C008  F008         	movff	___lomod@dividend+6,?___lomod+6
  4191  002AD0  C009  F009         	movff	___lomod@dividend+7,?___lomod+7
  4192  002AD4  0012               	return		;funcret
  4193  002AD6                     __end_of___lomod:
  4194                           	opt callstack 0
  4195                           
  4196 ;; *************** function ___lodiv *****************
  4197 ;; Defined at:
  4198 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lodiv.c"
  4199 ;; Parameters:    Size  Location     Type
  4200 ;;  dividend        8    1[COMRAM] unsigned long long 
  4201 ;;  divisor         8    9[COMRAM] unsigned long long 
  4202 ;; Auto vars:     Size  Location     Type
  4203 ;;  quotient        8   17[COMRAM] unsigned long long 
  4204 ;;  counter         1   25[COMRAM] unsigned char 
  4205 ;; Return value:  Size  Location     Type
  4206 ;;                  8    1[COMRAM] unsigned long long 
  4207 ;; Registers used:
  4208 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4209 ;; Tracked objects:
  4210 ;;		On entry : 0/0
  4211 ;;		On exit  : 0/0
  4212 ;;		Unchanged: 0/0
  4213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4214 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4215 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4217 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4218 ;;Total ram usage:       25 bytes
  4219 ;; Hardware stack levels used:    1
  4220 ;; Hardware stack levels required when called:    1
  4221 ;; This function calls:
  4222 ;;		Nothing
  4223 ;; This function is called by:
  4224 ;;		_utoa
  4225 ;; This function uses a non-reentrant model
  4226 ;;
  4227                           
  4228                           	psect	text6
  4229  002916                     __ptext6:
  4230                           	opt callstack 0
  4231  002916                     ___lodiv:
  4232                           	opt callstack 25
  4233  002916  EE20  F012         	lfsr	2,___lodiv@quotient
  4234  00291A  0E07               	movlw	7
  4235  00291C                     u4031:
  4236  00291C  6ADE               	clrf	postinc2,c
  4237  00291E  06E8               	decf	wreg,f,c
  4238  002920  E2FD               	bc	u4031
  4239  002922  500A               	movf	___lodiv@divisor^0,w,c
  4240  002924  100B               	iorwf	(___lodiv@divisor+1)^0,w,c
  4241  002926  100C               	iorwf	(___lodiv@divisor+2)^0,w,c
  4242  002928  100D               	iorwf	(___lodiv@divisor+3)^0,w,c
  4243  00292A  100E               	iorwf	(___lodiv@divisor+4)^0,w,c
  4244  00292C  100F               	iorwf	(___lodiv@divisor+5)^0,w,c
  4245  00292E  1010               	iorwf	(___lodiv@divisor+6)^0,w,c
  4246  002930  1011               	iorwf	(___lodiv@divisor+7)^0,w,c
  4247  002932  B4D8               	btfsc	status,2,c
  4248  002934  EF9E  F014         	goto	u4041
  4249  002938  EFA0  F014         	goto	u4040
  4250  00293C                     u4041:
  4251  00293C  EFF2  F014         	goto	l1022
  4252  002940                     u4040:
  4253  002940  0E01               	movlw	1
  4254  002942  6E1A               	movwf	___lodiv@counter^0,c
  4255  002944  EFAE  F014         	goto	l4243
  4256  002948                     l4241:
  4257  002948  90D8               	bcf	status,0,c
  4258  00294A  360A               	rlcf	___lodiv@divisor^0,f,c
  4259  00294C  360B               	rlcf	(___lodiv@divisor+1)^0,f,c
  4260  00294E  360C               	rlcf	(___lodiv@divisor+2)^0,f,c
  4261  002950  360D               	rlcf	(___lodiv@divisor+3)^0,f,c
  4262  002952  360E               	rlcf	(___lodiv@divisor+4)^0,f,c
  4263  002954  360F               	rlcf	(___lodiv@divisor+5)^0,f,c
  4264  002956  3610               	rlcf	(___lodiv@divisor+6)^0,f,c
  4265  002958  3611               	rlcf	(___lodiv@divisor+7)^0,f,c
  4266  00295A  2A1A               	incf	___lodiv@counter^0,f,c
  4267  00295C                     l4243:
  4268  00295C  AE11               	btfss	(___lodiv@divisor+7)^0,7,c
  4269  00295E  EFB3  F014         	goto	u4051
  4270  002962  EFB5  F014         	goto	u4050
  4271  002966                     u4051:
  4272  002966  EFA4  F014         	goto	l4241
  4273  00296A                     u4050:
  4274  00296A                     l4245:
  4275  00296A  90D8               	bcf	status,0,c
  4276  00296C  3612               	rlcf	___lodiv@quotient^0,f,c
  4277  00296E  3613               	rlcf	(___lodiv@quotient+1)^0,f,c
  4278  002970  3614               	rlcf	(___lodiv@quotient+2)^0,f,c
  4279  002972  3615               	rlcf	(___lodiv@quotient+3)^0,f,c
  4280  002974  3616               	rlcf	(___lodiv@quotient+4)^0,f,c
  4281  002976  3617               	rlcf	(___lodiv@quotient+5)^0,f,c
  4282  002978  3618               	rlcf	(___lodiv@quotient+6)^0,f,c
  4283  00297A  3619               	rlcf	(___lodiv@quotient+7)^0,f,c
  4284  00297C  500A               	movf	___lodiv@divisor^0,w,c
  4285  00297E  5C02               	subwf	___lodiv@dividend^0,w,c
  4286  002980  500B               	movf	(___lodiv@divisor+1)^0,w,c
  4287  002982  5803               	subwfb	(___lodiv@dividend+1)^0,w,c
  4288  002984  500C               	movf	(___lodiv@divisor+2)^0,w,c
  4289  002986  5804               	subwfb	(___lodiv@dividend+2)^0,w,c
  4290  002988  500D               	movf	(___lodiv@divisor+3)^0,w,c
  4291  00298A  5805               	subwfb	(___lodiv@dividend+3)^0,w,c
  4292  00298C  500E               	movf	(___lodiv@divisor+4)^0,w,c
  4293  00298E  5806               	subwfb	(___lodiv@dividend+4)^0,w,c
  4294  002990  500F               	movf	(___lodiv@divisor+5)^0,w,c
  4295  002992  5807               	subwfb	(___lodiv@dividend+5)^0,w,c
  4296  002994  5010               	movf	(___lodiv@divisor+6)^0,w,c
  4297  002996  5808               	subwfb	(___lodiv@dividend+6)^0,w,c
  4298  002998  5011               	movf	(___lodiv@divisor+7)^0,w,c
  4299  00299A  5809               	subwfb	(___lodiv@dividend+7)^0,w,c
  4300  00299C  A0D8               	btfss	status,0,c
  4301  00299E  EFD3  F014         	goto	u4061
  4302  0029A2  EFD5  F014         	goto	u4060
  4303  0029A6                     u4061:
  4304  0029A6  EFE6  F014         	goto	l4253
  4305  0029AA                     u4060:
  4306  0029AA  500A               	movf	___lodiv@divisor^0,w,c
  4307  0029AC  5E02               	subwf	___lodiv@dividend^0,f,c
  4308  0029AE  500B               	movf	(___lodiv@divisor+1)^0,w,c
  4309  0029B0  5A03               	subwfb	(___lodiv@dividend+1)^0,f,c
  4310  0029B2  500C               	movf	(___lodiv@divisor+2)^0,w,c
  4311  0029B4  5A04               	subwfb	(___lodiv@dividend+2)^0,f,c
  4312  0029B6  500D               	movf	(___lodiv@divisor+3)^0,w,c
  4313  0029B8  5A05               	subwfb	(___lodiv@dividend+3)^0,f,c
  4314  0029BA  500E               	movf	(___lodiv@divisor+4)^0,w,c
  4315  0029BC  5A06               	subwfb	(___lodiv@dividend+4)^0,f,c
  4316  0029BE  500F               	movf	(___lodiv@divisor+5)^0,w,c
  4317  0029C0  5A07               	subwfb	(___lodiv@dividend+5)^0,f,c
  4318  0029C2  5010               	movf	(___lodiv@divisor+6)^0,w,c
  4319  0029C4  5A08               	subwfb	(___lodiv@dividend+6)^0,f,c
  4320  0029C6  5011               	movf	(___lodiv@divisor+7)^0,w,c
  4321  0029C8  5A09               	subwfb	(___lodiv@dividend+7)^0,f,c
  4322  0029CA  8012               	bsf	___lodiv@quotient^0,0,c
  4323  0029CC                     l4253:
  4324  0029CC  90D8               	bcf	status,0,c
  4325  0029CE  3211               	rrcf	(___lodiv@divisor+7)^0,f,c
  4326  0029D0  3210               	rrcf	(___lodiv@divisor+6)^0,f,c
  4327  0029D2  320F               	rrcf	(___lodiv@divisor+5)^0,f,c
  4328  0029D4  320E               	rrcf	(___lodiv@divisor+4)^0,f,c
  4329  0029D6  320D               	rrcf	(___lodiv@divisor+3)^0,f,c
  4330  0029D8  320C               	rrcf	(___lodiv@divisor+2)^0,f,c
  4331  0029DA  320B               	rrcf	(___lodiv@divisor+1)^0,f,c
  4332  0029DC  320A               	rrcf	___lodiv@divisor^0,f,c
  4333  0029DE  2E1A               	decfsz	___lodiv@counter^0,f,c
  4334  0029E0  EFB5  F014         	goto	l4245
  4335  0029E4                     l1022:
  4336  0029E4  C012  F002         	movff	___lodiv@quotient,?___lodiv
  4337  0029E8  C013  F003         	movff	___lodiv@quotient+1,?___lodiv+1
  4338  0029EC  C014  F004         	movff	___lodiv@quotient+2,?___lodiv+2
  4339  0029F0  C015  F005         	movff	___lodiv@quotient+3,?___lodiv+3
  4340  0029F4  C016  F006         	movff	___lodiv@quotient+4,?___lodiv+4
  4341  0029F8  C017  F007         	movff	___lodiv@quotient+5,?___lodiv+5
  4342  0029FC  C018  F008         	movff	___lodiv@quotient+6,?___lodiv+6
  4343  002A00  C019  F009         	movff	___lodiv@quotient+7,?___lodiv+7
  4344  002A04  0012               	return		;funcret
  4345  002A06                     __end_of___lodiv:
  4346                           	opt callstack 0
  4347                           
  4348 ;; *************** function _strncmp *****************
  4349 ;; Defined at:
  4350 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strncmp.c"
  4351 ;; Parameters:    Size  Location     Type
  4352 ;;  _l              2    1[COMRAM] PTR const unsigned char 
  4353 ;;		 -> STR_7(4), STR_6(4), STR_5(4), STR_4(4), 
  4354 ;;		 -> STR_3(4), STR_2(4), STR_1(4), 
  4355 ;;  _r              2    3[COMRAM] PTR const unsigned char 
  4356 ;;		 -> STR_19(3), STR_14(3), STR_10(3), 
  4357 ;;  n               2    5[COMRAM] unsigned int 
  4358 ;; Auto vars:     Size  Location     Type
  4359 ;;  r               2   10[COMRAM] PTR const unsigned char 
  4360 ;;		 -> STR_19(3), STR_14(3), STR_10(3), 
  4361 ;;  l               2    8[COMRAM] PTR const unsigned char 
  4362 ;;		 -> STR_7(4), STR_6(4), STR_5(4), STR_4(4), 
  4363 ;;		 -> STR_3(4), STR_2(4), STR_1(4), 
  4364 ;; Return value:  Size  Location     Type
  4365 ;;                  2    1[COMRAM] int 
  4366 ;; Registers used:
  4367 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  4368 ;; Tracked objects:
  4369 ;;		On entry : 0/0
  4370 ;;		On exit  : 0/0
  4371 ;;		Unchanged: 0/0
  4372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4373 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4374 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4375 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4376 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4377 ;;Total ram usage:       11 bytes
  4378 ;; Hardware stack levels used:    1
  4379 ;; Hardware stack levels required when called:    1
  4380 ;; This function calls:
  4381 ;;		Nothing
  4382 ;; This function is called by:
  4383 ;;		_vfpfcnvrt
  4384 ;; This function uses a non-reentrant model
  4385 ;;
  4386                           
  4387                           	psect	text7
  4388  002820                     __ptext7:
  4389                           	opt callstack 0
  4390  002820                     _strncmp:
  4391                           	opt callstack 26
  4392  002820  C002  F009         	movff	strncmp@_l,strncmp@l
  4393  002824  C003  F00A         	movff	strncmp@_l+1,strncmp@l+1
  4394  002828  C004  F00B         	movff	strncmp@_r,strncmp@r
  4395  00282C  C005  F00C         	movff	strncmp@_r+1,strncmp@r+1
  4396  002830  0606               	decf	strncmp@n^0,f,c
  4397  002832  A0D8               	btfss	status,0,c
  4398  002834  0607               	decf	(strncmp@n+1)^0,f,c
  4399  002836  2806               	incf	strncmp@n^0,w,c
  4400  002838  E106               	bnz	u4321
  4401  00283A  2807               	incf	(strncmp@n+1)^0,w,c
  4402  00283C  A4D8               	btfss	status,2,c
  4403  00283E  EF23  F014         	goto	u4321
  4404  002842  EF25  F014         	goto	u4320
  4405  002846                     u4321:
  4406  002846  EF32  F014         	goto	l4379
  4407  00284A                     u4320:
  4408  00284A  0E00               	movlw	0
  4409  00284C  6E03               	movwf	(?_strncmp+1)^0,c
  4410  00284E  0E00               	movlw	0
  4411  002850  6E02               	movwf	?_strncmp^0,c
  4412  002852  EF8A  F014         	goto	l1302
  4413  002856                     l4377:
  4414  002856  4A09               	infsnz	strncmp@l^0,f,c
  4415  002858  2A0A               	incf	(strncmp@l+1)^0,f,c
  4416  00285A  4A0B               	infsnz	strncmp@r^0,f,c
  4417  00285C  2A0C               	incf	(strncmp@r+1)^0,f,c
  4418  00285E  0606               	decf	strncmp@n^0,f,c
  4419  002860  A0D8               	btfss	status,0,c
  4420  002862  0607               	decf	(strncmp@n+1)^0,f,c
  4421  002864                     l4379:
  4422  002864  C009  FFF6         	movff	strncmp@l,tblptrl
  4423  002868  C00A  FFF7         	movff	strncmp@l+1,tblptrh
  4424  00286C                     	if	0	;tblptru may be non-zero
  4425  00286C                     	endif
  4426  00286C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4427  00286C  0E00               	movlw	low (__mediumconst shr (0+16))
  4428  00286E  6EF8               	movwf	tblptru,c
  4429  002870                     	endif
  4430  002870  0008               	tblrd		*
  4431  002872  50F5               	movf	tablat,w,c
  4432  002874  0900               	iorlw	0
  4433  002876  B4D8               	btfsc	status,2,c
  4434  002878  EF40  F014         	goto	u4331
  4435  00287C  EF42  F014         	goto	u4330
  4436  002880                     u4331:
  4437  002880  EF74  F014         	goto	l4387
  4438  002884                     u4330:
  4439  002884  C00B  FFF6         	movff	strncmp@r,tblptrl
  4440  002888  C00C  FFF7         	movff	strncmp@r+1,tblptrh
  4441  00288C                     	if	0	;tblptru may be non-zero
  4442  00288C                     	endif
  4443  00288C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4444  00288C  0E00               	movlw	low (__mediumconst shr (0+16))
  4445  00288E  6EF8               	movwf	tblptru,c
  4446  002890                     	endif
  4447  002890  0008               	tblrd		*
  4448  002892  50F5               	movf	tablat,w,c
  4449  002894  0900               	iorlw	0
  4450  002896  B4D8               	btfsc	status,2,c
  4451  002898  EF50  F014         	goto	u4341
  4452  00289C  EF52  F014         	goto	u4340
  4453  0028A0                     u4341:
  4454  0028A0  EF74  F014         	goto	l4387
  4455  0028A4                     u4340:
  4456  0028A4  5006               	movf	strncmp@n^0,w,c
  4457  0028A6  1007               	iorwf	(strncmp@n+1)^0,w,c
  4458  0028A8  B4D8               	btfsc	status,2,c
  4459  0028AA  EF59  F014         	goto	u4351
  4460  0028AE  EF5B  F014         	goto	u4350
  4461  0028B2                     u4351:
  4462  0028B2  EF74  F014         	goto	l4387
  4463  0028B6                     u4350:
  4464  0028B6  C009  FFF6         	movff	strncmp@l,tblptrl
  4465  0028BA  C00A  FFF7         	movff	strncmp@l+1,tblptrh
  4466  0028BE                     	if	0	;tblptru may be non-zero
  4467  0028BE                     	endif
  4468  0028BE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4469  0028BE  0E00               	movlw	low (__mediumconst shr (0+16))
  4470  0028C0  6EF8               	movwf	tblptru,c
  4471  0028C2                     	endif
  4472  0028C2  0008               	tblrd		*
  4473  0028C4  CFF5 F008          	movff	tablat,??_strncmp
  4474  0028C8  C00B  FFF6         	movff	strncmp@r,tblptrl
  4475  0028CC  C00C  FFF7         	movff	strncmp@r+1,tblptrh
  4476  0028D0                     	if	0	;tblptru may be non-zero
  4477  0028D0                     	endif
  4478  0028D0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4479  0028D0  0E00               	movlw	low (__mediumconst shr (0+16))
  4480  0028D2  6EF8               	movwf	tblptru,c
  4481  0028D4                     	endif
  4482  0028D4  0008               	tblrd		*
  4483  0028D6  50F5               	movf	tablat,w,c
  4484  0028D8  1808               	xorwf	??_strncmp^0,w,c
  4485  0028DA  B4D8               	btfsc	status,2,c
  4486  0028DC  EF72  F014         	goto	u4361
  4487  0028E0  EF74  F014         	goto	u4360
  4488  0028E4                     u4361:
  4489  0028E4  EF2B  F014         	goto	l4377
  4490  0028E8                     u4360:
  4491  0028E8                     l4387:
  4492  0028E8  C009  FFF6         	movff	strncmp@l,tblptrl
  4493  0028EC  C00A  FFF7         	movff	strncmp@l+1,tblptrh
  4494  0028F0                     	if	0	;tblptru may be non-zero
  4495  0028F0                     	endif
  4496  0028F0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4497  0028F0  0E00               	movlw	low (__mediumconst shr (0+16))
  4498  0028F2  6EF8               	movwf	tblptru,c
  4499  0028F4                     	endif
  4500  0028F4  0008               	tblrd		*
  4501  0028F6  CFF5 F008          	movff	tablat,??_strncmp
  4502  0028FA  C00B  FFF6         	movff	strncmp@r,tblptrl
  4503  0028FE  C00C  FFF7         	movff	strncmp@r+1,tblptrh
  4504  002902                     	if	0	;tblptru may be non-zero
  4505  002902                     	endif
  4506  002902                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4507  002902  0E00               	movlw	low (__mediumconst shr (0+16))
  4508  002904  6EF8               	movwf	tblptru,c
  4509  002906                     	endif
  4510  002906  0008               	tblrd		*
  4511  002908  50F5               	movf	tablat,w,c
  4512  00290A  5C08               	subwf	??_strncmp^0,w,c
  4513  00290C  6E02               	movwf	?_strncmp^0,c
  4514  00290E  6A03               	clrf	(?_strncmp+1)^0,c
  4515  002910  A0D8               	btfss	status,0,c
  4516  002912  0603               	decf	(?_strncmp+1)^0,f,c
  4517  002914                     l1302:
  4518  002914  0012               	return		;funcret
  4519  002916                     __end_of_strncmp:
  4520                           	opt callstack 0
  4521                           
  4522 ;; *************** function _dtoa *****************
  4523 ;; Defined at:
  4524 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  4525 ;; Parameters:    Size  Location     Type
  4526 ;;  fp              2   28[COMRAM] PTR struct _IO_FILE
  4527 ;;		 -> sprintf@f(6), 
  4528 ;;  d               8   30[COMRAM] long long 
  4529 ;; Auto vars:     Size  Location     Type
  4530 ;;  n               8   54[COMRAM] long long 
  4531 ;;  i               2   62[COMRAM] int 
  4532 ;;  s               2   52[COMRAM] int 
  4533 ;;  w               2   50[COMRAM] int 
  4534 ;;  p               2   48[COMRAM] int 
  4535 ;; Return value:  Size  Location     Type
  4536 ;;                  2   28[COMRAM] int 
  4537 ;; Registers used:
  4538 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4539 ;; Tracked objects:
  4540 ;;		On entry : 0/0
  4541 ;;		On exit  : 0/0
  4542 ;;		Unchanged: 0/0
  4543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4544 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4545 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4546 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4547 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4548 ;;Total ram usage:       36 bytes
  4549 ;; Hardware stack levels used:    1
  4550 ;; Hardware stack levels required when called:    5
  4551 ;; This function calls:
  4552 ;;		___aodiv
  4553 ;;		___aomod
  4554 ;;		_abs
  4555 ;;		_pad
  4556 ;; This function is called by:
  4557 ;;		_vfpfcnvrt
  4558 ;; This function uses a non-reentrant model
  4559 ;;
  4560                           
  4561                           	psect	text8
  4562  001F0E                     __ptext8:
  4563                           	opt callstack 0
  4564  001F0E                     _dtoa:
  4565                           	opt callstack 22
  4566  001F0E                     
  4567                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
  4568  001F0E  C01F  F037         	movff	dtoa@d,dtoa@n
  4569  001F12  C020  F038         	movff	dtoa@d+1,dtoa@n+1
  4570  001F16  C021  F039         	movff	dtoa@d+2,dtoa@n+2
  4571  001F1A  C022  F03A         	movff	dtoa@d+3,dtoa@n+3
  4572  001F1E  C023  F03B         	movff	dtoa@d+4,dtoa@n+4
  4573  001F22  C024  F03C         	movff	dtoa@d+5,dtoa@n+5
  4574  001F26  C025  F03D         	movff	dtoa@d+6,dtoa@n+6
  4575  001F2A  C026  F03E         	movff	dtoa@d+7,dtoa@n+7
  4576  001F2E                     
  4577                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  4578  001F2E  BE3E               	btfsc	(dtoa@n+7)^0,7,c
  4579  001F30  EF9C  F00F         	goto	u4101
  4580  001F34  EF9F  F00F         	goto	u4100
  4581  001F38                     u4101:
  4582  001F38  0E01               	movlw	1
  4583  001F3A  EFA0  F00F         	goto	u4110
  4584  001F3E                     u4100:
  4585  001F3E  0E00               	movlw	0
  4586  001F40                     u4110:
  4587  001F40  6E35               	movwf	dtoa@s^0,c
  4588  001F42  6A36               	clrf	(dtoa@s+1)^0,c
  4589                           
  4590                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  4591  001F44  5035               	movf	dtoa@s^0,w,c
  4592  001F46  1036               	iorwf	(dtoa@s+1)^0,w,c
  4593  001F48  B4D8               	btfsc	status,2,c
  4594  001F4A  EFA9  F00F         	goto	u4121
  4595  001F4E  EFAB  F00F         	goto	u4120
  4596  001F52                     u4121:
  4597  001F52  EFBB  F00F         	goto	l4279
  4598  001F56                     u4120:
  4599  001F56                     
  4600                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  4601  001F56  1E3E               	comf	(dtoa@n+7)^0,f,c
  4602  001F58  1E3D               	comf	(dtoa@n+6)^0,f,c
  4603  001F5A  1E3C               	comf	(dtoa@n+5)^0,f,c
  4604  001F5C  1E3B               	comf	(dtoa@n+4)^0,f,c
  4605  001F5E  1E3A               	comf	(dtoa@n+3)^0,f,c
  4606  001F60  1E39               	comf	(dtoa@n+2)^0,f,c
  4607  001F62  1E38               	comf	(dtoa@n+1)^0,f,c
  4608  001F64  6C37               	negf	dtoa@n^0,c
  4609  001F66  0E00               	movlw	0
  4610  001F68  2238               	addwfc	(dtoa@n+1)^0,f,c
  4611  001F6A  2239               	addwfc	(dtoa@n+2)^0,f,c
  4612  001F6C  223A               	addwfc	(dtoa@n+3)^0,f,c
  4613  001F6E  223B               	addwfc	(dtoa@n+4)^0,f,c
  4614  001F70  223C               	addwfc	(dtoa@n+5)^0,f,c
  4615  001F72  223D               	addwfc	(dtoa@n+6)^0,f,c
  4616  001F74  223E               	addwfc	(dtoa@n+7)^0,f,c
  4617  001F76                     l4279:
  4618                           
  4619                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  4620  001F76  0100               	movlb	0	; () banked
  4621  001F78  BFD6               	btfsc	(_prec+1)& (0+255),7,b
  4622  001F7A  EFC1  F00F         	goto	u4131
  4623  001F7E  EFC3  F00F         	goto	u4130
  4624  001F82                     u4131:
  4625  001F82  EFC4  F00F         	goto	l4283
  4626  001F86                     u4130:
  4627  001F86                     
  4628                           ; BSR set to: 0
  4629                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  4630  001F86  925B               	bcf	_flags^0,1,c
  4631  001F88                     l4283:
  4632                           
  4633                           ; BSR set to: 0
  4634                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  4635  001F88  BFD6               	btfsc	(_prec+1)& (0+255),7,b
  4636  001F8A  EFD1  F00F         	goto	u4140
  4637  001F8E  51D6               	movf	(_prec+1)& (0+255),w,b
  4638  001F90  E106               	bnz	u4141
  4639  001F92  05D5               	decf	_prec& (0+255),w,b
  4640  001F94  B0D8               	btfsc	status,0,c
  4641  001F96  EFCF  F00F         	goto	u4141
  4642  001F9A  EFD1  F00F         	goto	u4140
  4643  001F9E                     u4141:
  4644  001F9E  EFD7  F00F         	goto	l527
  4645  001FA2                     u4140:
  4646  001FA2                     
  4647                           ; BSR set to: 0
  4648  001FA2  0E00               	movlw	0
  4649  001FA4  6E32               	movwf	(dtoa@p+1)^0,c
  4650  001FA6  0E01               	movlw	1
  4651  001FA8  6E31               	movwf	dtoa@p^0,c
  4652  001FAA  EFDB  F00F         	goto	l529
  4653  001FAE                     l527:
  4654                           
  4655                           ; BSR set to: 0
  4656  001FAE  C0D5  F031         	movff	_prec,dtoa@p
  4657  001FB2  C0D6  F032         	movff	_prec+1,dtoa@p+1
  4658  001FB6                     l529:
  4659                           
  4660                           ; BSR set to: 0
  4661                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  4662  001FB6  C0D3  F033         	movff	_width,dtoa@w
  4663  001FBA  C0D4  F034         	movff	_width+1,dtoa@w+1
  4664  001FBE                     
  4665                           ; BSR set to: 0
  4666                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  4667  001FBE  5035               	movf	dtoa@s^0,w,c
  4668  001FC0  1036               	iorwf	(dtoa@s+1)^0,w,c
  4669  001FC2  A4D8               	btfss	status,2,c
  4670  001FC4  EFE6  F00F         	goto	u4151
  4671  001FC8  EFE8  F00F         	goto	u4150
  4672  001FCC                     u4151:
  4673  001FCC  EFEF  F00F         	goto	l4291
  4674  001FD0                     u4150:
  4675  001FD0                     
  4676                           ; BSR set to: 0
  4677  001FD0  A45B               	btfss	_flags^0,2,c
  4678  001FD2  EFED  F00F         	goto	u4161
  4679  001FD6  EFEF  F00F         	goto	u4160
  4680  001FDA                     u4161:
  4681  001FDA  EFF2  F00F         	goto	l4293
  4682  001FDE                     u4160:
  4683  001FDE                     l4291:
  4684                           
  4685                           ; BSR set to: 0
  4686                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  4687  001FDE  0633               	decf	dtoa@w^0,f,c
  4688  001FE0  A0D8               	btfss	status,0,c
  4689  001FE2  0634               	decf	(dtoa@w+1)^0,f,c
  4690  001FE4                     l4293:
  4691                           
  4692                           ; BSR set to: 0
  4693                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  4694  001FE4  0E00               	movlw	0
  4695  001FE6  6E40               	movwf	(dtoa@i+1)^0,c
  4696  001FE8  0E1F               	movlw	31
  4697  001FEA  6E3F               	movwf	dtoa@i^0,c
  4698  001FEC                     
  4699                           ; BSR set to: 0
  4700                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  4701  001FEC  0E00               	movlw	0
  4702  001FEE  6FF8               	movwf	(_dbuf+31)& (0+255),b
  4703                           
  4704                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4705  001FF0  EF76  F010         	goto	l4307
  4706  001FF4                     l4297:
  4707                           
  4708                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  4709  001FF4  063F               	decf	dtoa@i^0,f,c
  4710  001FF6  A0D8               	btfss	status,0,c
  4711  001FF8  0640               	decf	(dtoa@i+1)^0,f,c
  4712  001FFA                     
  4713                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  4714  001FFA  0ED9               	movlw	low _dbuf
  4715  001FFC  243F               	addwf	dtoa@i^0,w,c
  4716  001FFE  6ED9               	movwf	fsr2l,c
  4717  002000  0E00               	movlw	high _dbuf
  4718  002002  2040               	addwfc	(dtoa@i+1)^0,w,c
  4719  002004  6EDA               	movwf	fsr2h,c
  4720  002006  C037  F002         	movff	dtoa@n,___aomod@dividend
  4721  00200A  C038  F003         	movff	dtoa@n+1,___aomod@dividend+1
  4722  00200E  C039  F004         	movff	dtoa@n+2,___aomod@dividend+2
  4723  002012  C03A  F005         	movff	dtoa@n+3,___aomod@dividend+3
  4724  002016  C03B  F006         	movff	dtoa@n+4,___aomod@dividend+4
  4725  00201A  C03C  F007         	movff	dtoa@n+5,___aomod@dividend+5
  4726  00201E  C03D  F008         	movff	dtoa@n+6,___aomod@dividend+6
  4727  002022  C03E  F009         	movff	dtoa@n+7,___aomod@dividend+7
  4728  002026  0E0A               	movlw	10
  4729  002028  6E0A               	movwf	___aomod@divisor^0,c
  4730  00202A  0E00               	movlw	0
  4731  00202C  6E0B               	movwf	(___aomod@divisor+1)^0,c
  4732  00202E  0E00               	movlw	0
  4733  002030  6E0C               	movwf	(___aomod@divisor+2)^0,c
  4734  002032  0E00               	movlw	0
  4735  002034  6E0D               	movwf	(___aomod@divisor+3)^0,c
  4736  002036  0E00               	movlw	0
  4737  002038  6E0E               	movwf	(___aomod@divisor+4)^0,c
  4738  00203A  0E00               	movlw	0
  4739  00203C  6E0F               	movwf	(___aomod@divisor+5)^0,c
  4740  00203E  0E00               	movlw	0
  4741  002040  6E10               	movwf	(___aomod@divisor+6)^0,c
  4742  002042  0E00               	movlw	0
  4743  002044  6E11               	movwf	(___aomod@divisor+7)^0,c
  4744  002046  ECBA  F012         	call	___aomod	;wreg free
  4745  00204A  C002  F027         	movff	?___aomod,??_dtoa
  4746  00204E  C003  F028         	movff	?___aomod+1,??_dtoa+1
  4747  002052  C004  F029         	movff	?___aomod+2,??_dtoa+2
  4748  002056  C005  F02A         	movff	?___aomod+3,??_dtoa+3
  4749  00205A  C006  F02B         	movff	?___aomod+4,??_dtoa+4
  4750  00205E  C007  F02C         	movff	?___aomod+5,??_dtoa+5
  4751  002062  C008  F02D         	movff	?___aomod+6,??_dtoa+6
  4752  002066  C009  F02E         	movff	?___aomod+7,??_dtoa+7
  4753  00206A  C027  F014         	movff	??_dtoa,abs@a
  4754  00206E  C029  F015         	movff	??_dtoa+2,abs@a+1
  4755  002072  ECDB  F01A         	call	_abs	;wreg free
  4756  002076  5014               	movf	?_abs^0,w,c
  4757  002078  0F30               	addlw	48
  4758  00207A  6EDF               	movwf	indf2,c
  4759  00207C                     
  4760                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  4761  00207C  0631               	decf	dtoa@p^0,f,c
  4762  00207E  A0D8               	btfss	status,0,c
  4763  002080  0632               	decf	(dtoa@p+1)^0,f,c
  4764  002082                     
  4765                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  4766  002082  0633               	decf	dtoa@w^0,f,c
  4767  002084  A0D8               	btfss	status,0,c
  4768  002086  0634               	decf	(dtoa@w+1)^0,f,c
  4769  002088                     
  4770                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  4771  002088  C037  F002         	movff	dtoa@n,___aodiv@dividend
  4772  00208C  C038  F003         	movff	dtoa@n+1,___aodiv@dividend+1
  4773  002090  C039  F004         	movff	dtoa@n+2,___aodiv@dividend+2
  4774  002094  C03A  F005         	movff	dtoa@n+3,___aodiv@dividend+3
  4775  002098  C03B  F006         	movff	dtoa@n+4,___aodiv@dividend+4
  4776  00209C  C03C  F007         	movff	dtoa@n+5,___aodiv@dividend+5
  4777  0020A0  C03D  F008         	movff	dtoa@n+6,___aodiv@dividend+6
  4778  0020A4  C03E  F009         	movff	dtoa@n+7,___aodiv@dividend+7
  4779  0020A8  0E0A               	movlw	10
  4780  0020AA  6E0A               	movwf	___aodiv@divisor^0,c
  4781  0020AC  0E00               	movlw	0
  4782  0020AE  6E0B               	movwf	(___aodiv@divisor+1)^0,c
  4783  0020B0  0E00               	movlw	0
  4784  0020B2  6E0C               	movwf	(___aodiv@divisor+2)^0,c
  4785  0020B4  0E00               	movlw	0
  4786  0020B6  6E0D               	movwf	(___aodiv@divisor+3)^0,c
  4787  0020B8  0E00               	movlw	0
  4788  0020BA  6E0E               	movwf	(___aodiv@divisor+4)^0,c
  4789  0020BC  0E00               	movlw	0
  4790  0020BE  6E0F               	movwf	(___aodiv@divisor+5)^0,c
  4791  0020C0  0E00               	movlw	0
  4792  0020C2  6E10               	movwf	(___aodiv@divisor+6)^0,c
  4793  0020C4  0E00               	movlw	0
  4794  0020C6  6E11               	movwf	(___aodiv@divisor+7)^0,c
  4795  0020C8  ECF6  F011         	call	___aodiv	;wreg free
  4796  0020CC  C002  F037         	movff	?___aodiv,dtoa@n
  4797  0020D0  C003  F038         	movff	?___aodiv+1,dtoa@n+1
  4798  0020D4  C004  F039         	movff	?___aodiv+2,dtoa@n+2
  4799  0020D8  C005  F03A         	movff	?___aodiv+3,dtoa@n+3
  4800  0020DC  C006  F03B         	movff	?___aodiv+4,dtoa@n+4
  4801  0020E0  C007  F03C         	movff	?___aodiv+5,dtoa@n+5
  4802  0020E4  C008  F03D         	movff	?___aodiv+6,dtoa@n+6
  4803  0020E8  C009  F03E         	movff	?___aodiv+7,dtoa@n+7
  4804  0020EC                     l4307:
  4805                           
  4806                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4807  0020EC  BE40               	btfsc	(dtoa@i+1)^0,7,c
  4808  0020EE  EF81  F010         	goto	u4171
  4809  0020F2  5040               	movf	(dtoa@i+1)^0,w,c
  4810  0020F4  E108               	bnz	u4170
  4811  0020F6  043F               	decf	dtoa@i^0,w,c
  4812  0020F8  A0D8               	btfss	status,0,c
  4813  0020FA  EF81  F010         	goto	u4171
  4814  0020FE  EF83  F010         	goto	u4170
  4815  002102                     u4171:
  4816  002102  EFB3  F010         	goto	l4317
  4817  002106                     u4170:
  4818  002106  5037               	movf	dtoa@n^0,w,c
  4819  002108  1038               	iorwf	(dtoa@n+1)^0,w,c
  4820  00210A  1039               	iorwf	(dtoa@n+2)^0,w,c
  4821  00210C  103A               	iorwf	(dtoa@n+3)^0,w,c
  4822  00210E  103B               	iorwf	(dtoa@n+4)^0,w,c
  4823  002110  103C               	iorwf	(dtoa@n+5)^0,w,c
  4824  002112  103D               	iorwf	(dtoa@n+6)^0,w,c
  4825  002114  103E               	iorwf	(dtoa@n+7)^0,w,c
  4826  002116  A4D8               	btfss	status,2,c
  4827  002118  EF90  F010         	goto	u4181
  4828  00211C  EF92  F010         	goto	u4180
  4829  002120                     u4181:
  4830  002120  EFFA  F00F         	goto	l4297
  4831  002124                     u4180:
  4832  002124  BE32               	btfsc	(dtoa@p+1)^0,7,c
  4833  002126  EF9F  F010         	goto	u4190
  4834  00212A  5032               	movf	(dtoa@p+1)^0,w,c
  4835  00212C  E106               	bnz	u4191
  4836  00212E  0431               	decf	dtoa@p^0,w,c
  4837  002130  B0D8               	btfsc	status,0,c
  4838  002132  EF9D  F010         	goto	u4191
  4839  002136  EF9F  F010         	goto	u4190
  4840  00213A                     u4191:
  4841  00213A  EFFA  F00F         	goto	l4297
  4842  00213E                     u4190:
  4843  00213E  BE34               	btfsc	(dtoa@w+1)^0,7,c
  4844  002140  EFAA  F010         	goto	u4201
  4845  002144  5034               	movf	(dtoa@w+1)^0,w,c
  4846  002146  E108               	bnz	u4200
  4847  002148  0433               	decf	dtoa@w^0,w,c
  4848  00214A  A0D8               	btfss	status,0,c
  4849  00214C  EFAA  F010         	goto	u4201
  4850  002150  EFAC  F010         	goto	u4200
  4851  002154                     u4201:
  4852  002154  EFB3  F010         	goto	l4317
  4853  002158                     u4200:
  4854  002158  B25B               	btfsc	_flags^0,1,c
  4855  00215A  EFB1  F010         	goto	u4211
  4856  00215E  EFB3  F010         	goto	u4210
  4857  002162                     u4211:
  4858  002162  EFFA  F00F         	goto	l4297
  4859  002166                     u4210:
  4860  002166                     l4317:
  4861                           
  4862                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  4863  002166  5035               	movf	dtoa@s^0,w,c
  4864  002168  1036               	iorwf	(dtoa@s+1)^0,w,c
  4865  00216A  A4D8               	btfss	status,2,c
  4866  00216C  EFBA  F010         	goto	u4221
  4867  002170  EFBC  F010         	goto	u4220
  4868  002174                     u4221:
  4869  002174  EFC3  F010         	goto	l4321
  4870  002178                     u4220:
  4871  002178  A45B               	btfss	_flags^0,2,c
  4872  00217A  EFC1  F010         	goto	u4231
  4873  00217E  EFC3  F010         	goto	u4230
  4874  002182                     u4231:
  4875  002182  EFE1  F010         	goto	l4331
  4876  002186                     u4230:
  4877  002186                     l4321:
  4878                           
  4879                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  4880  002186  063F               	decf	dtoa@i^0,f,c
  4881  002188  A0D8               	btfss	status,0,c
  4882  00218A  0640               	decf	(dtoa@i+1)^0,f,c
  4883  00218C                     
  4884                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  4885  00218C  5035               	movf	dtoa@s^0,w,c
  4886  00218E  1036               	iorwf	(dtoa@s+1)^0,w,c
  4887  002190  A4D8               	btfss	status,2,c
  4888  002192  EFCD  F010         	goto	u4241
  4889  002196  EFCF  F010         	goto	u4240
  4890  00219A                     u4241:
  4891  00219A  EFD5  F010         	goto	l4327
  4892  00219E                     u4240:
  4893  00219E  0E00               	movlw	0
  4894  0021A0  6E30               	movwf	(_dtoa$1701+1)^0,c
  4895  0021A2  0E2B               	movlw	43
  4896  0021A4  6E2F               	movwf	_dtoa$1701^0,c
  4897  0021A6  EFD9  F010         	goto	l4329
  4898  0021AA                     l4327:
  4899  0021AA  0E00               	movlw	0
  4900  0021AC  6E30               	movwf	(_dtoa$1701+1)^0,c
  4901  0021AE  0E2D               	movlw	45
  4902  0021B0  6E2F               	movwf	_dtoa$1701^0,c
  4903  0021B2                     l4329:
  4904  0021B2  0ED9               	movlw	low _dbuf
  4905  0021B4  243F               	addwf	dtoa@i^0,w,c
  4906  0021B6  6ED9               	movwf	fsr2l,c
  4907  0021B8  0E00               	movlw	high _dbuf
  4908  0021BA  2040               	addwfc	(dtoa@i+1)^0,w,c
  4909  0021BC  6EDA               	movwf	fsr2h,c
  4910  0021BE  C02F  FFDF         	movff	_dtoa$1701,indf2
  4911  0021C2                     l4331:
  4912                           
  4913                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  4914  0021C2  C01D  F012         	movff	dtoa@fp,pad@fp
  4915  0021C6  C01E  F013         	movff	dtoa@fp+1,pad@fp+1
  4916  0021CA  0ED9               	movlw	low _dbuf
  4917  0021CC  243F               	addwf	dtoa@i^0,w,c
  4918  0021CE  6E14               	movwf	pad@buf^0,c
  4919  0021D0  0E00               	movlw	high _dbuf
  4920  0021D2  2040               	addwfc	(dtoa@i+1)^0,w,c
  4921  0021D4  6E15               	movwf	(pad@buf+1)^0,c
  4922  0021D6  C033  F016         	movff	dtoa@w,pad@p
  4923  0021DA  C034  F017         	movff	dtoa@w+1,pad@p+1
  4924  0021DE  EC94  F016         	call	_pad	;wreg free
  4925  0021E2  C012  F01D         	movff	?_pad,?_dtoa
  4926  0021E6  C013  F01E         	movff	?_pad+1,?_dtoa+1
  4927  0021EA  0012               	return		;funcret
  4928  0021EC                     __end_of_dtoa:
  4929                           	opt callstack 0
  4930                           
  4931 ;; *************** function _pad *****************
  4932 ;; Defined at:
  4933 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  4934 ;; Parameters:    Size  Location     Type
  4935 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  4936 ;;		 -> sprintf@f(6), 
  4937 ;;  buf             2   19[COMRAM] PTR unsigned char 
  4938 ;;		 -> dbuf(32), 
  4939 ;;  p               2   21[COMRAM] int 
  4940 ;; Auto vars:     Size  Location     Type
  4941 ;;  w               2   26[COMRAM] int 
  4942 ;;  i               2   24[COMRAM] int 
  4943 ;; Return value:  Size  Location     Type
  4944 ;;                  2   17[COMRAM] int 
  4945 ;; Registers used:
  4946 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4947 ;; Tracked objects:
  4948 ;;		On entry : 0/0
  4949 ;;		On exit  : 0/0
  4950 ;;		Unchanged: 0/0
  4951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4952 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4953 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4954 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4955 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4956 ;;Total ram usage:       11 bytes
  4957 ;; Hardware stack levels used:    1
  4958 ;; Hardware stack levels required when called:    4
  4959 ;; This function calls:
  4960 ;;		_fputc
  4961 ;;		_fputs
  4962 ;;		_strlen
  4963 ;; This function is called by:
  4964 ;;		_dtoa
  4965 ;;		_utoa
  4966 ;; This function uses a non-reentrant model
  4967 ;;
  4968                           
  4969                           	psect	text9
  4970  002D28                     __ptext9:
  4971                           	opt callstack 0
  4972  002D28                     _pad:
  4973                           	opt callstack 22
  4974  002D28                     
  4975                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  4976  002D28  A05B               	btfss	_flags^0,0,c
  4977  002D2A  EF99  F016         	goto	u3851
  4978  002D2E  EF9B  F016         	goto	u3850
  4979  002D32                     u3851:
  4980  002D32  EFA5  F016         	goto	l4133
  4981  002D36                     u3850:
  4982  002D36                     
  4983                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  4984  002D36  C014  F00B         	movff	pad@buf,fputs@s
  4985  002D3A  C015  F00C         	movff	pad@buf+1,fputs@s+1
  4986  002D3E  C012  F00D         	movff	pad@fp,fputs@fp
  4987  002D42  C013  F00E         	movff	pad@fp+1,fputs@fp+1
  4988  002D46  EC97  F01A         	call	_fputs	;wreg free
  4989  002D4A                     l4133:
  4990                           
  4991                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  4992  002D4A  BE17               	btfsc	(pad@p+1)^0,7,c
  4993  002D4C  EFAA  F016         	goto	u3861
  4994  002D50  EFAC  F016         	goto	u3860
  4995  002D54                     u3861:
  4996  002D54  EFB2  F016         	goto	l4137
  4997  002D58                     u3860:
  4998  002D58  C016  F01B         	movff	pad@p,pad@w
  4999  002D5C  C017  F01C         	movff	pad@p+1,pad@w+1
  5000  002D60  EFB6  F016         	goto	l516
  5001  002D64                     l4137:
  5002  002D64  0E00               	movlw	0
  5003  002D66  6E1C               	movwf	(pad@w+1)^0,c
  5004  002D68  0E00               	movlw	0
  5005  002D6A  6E1B               	movwf	pad@w^0,c
  5006  002D6C                     l516:
  5007                           
  5008                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  5009  002D6C  0E00               	movlw	0
  5010  002D6E  6E1A               	movwf	(pad@i+1)^0,c
  5011  002D70  0E00               	movlw	0
  5012  002D72  6E19               	movwf	pad@i^0,c
  5013                           
  5014                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  5015  002D74  EFC8  F016         	goto	l4143
  5016  002D78                     l4139:
  5017                           
  5018                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  5019  002D78  0E00               	movlw	0
  5020  002D7A  6E03               	movwf	(fputc@c+1)^0,c
  5021  002D7C  0E20               	movlw	32
  5022  002D7E  6E02               	movwf	fputc@c^0,c
  5023  002D80  C012  F004         	movff	pad@fp,fputc@fp
  5024  002D84  C013  F005         	movff	pad@fp+1,fputc@fp+1
  5025  002D88  EC6B  F015         	call	_fputc	;wreg free
  5026  002D8C                     
  5027                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  5028  002D8C  4A19               	infsnz	pad@i^0,f,c
  5029  002D8E  2A1A               	incf	(pad@i+1)^0,f,c
  5030  002D90                     l4143:
  5031                           
  5032                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  5033  002D90  501B               	movf	pad@w^0,w,c
  5034  002D92  5C19               	subwf	pad@i^0,w,c
  5035  002D94  501A               	movf	(pad@i+1)^0,w,c
  5036  002D96  0A80               	xorlw	128
  5037  002D98  6E18               	movwf	??_pad^0,c
  5038  002D9A  501C               	movf	(pad@w+1)^0,w,c
  5039  002D9C  0A80               	xorlw	128
  5040  002D9E  5818               	subwfb	??_pad^0,w,c
  5041  002DA0  A0D8               	btfss	status,0,c
  5042  002DA2  EFD5  F016         	goto	u3871
  5043  002DA6  EFD7  F016         	goto	u3870
  5044  002DAA                     u3871:
  5045  002DAA  EFBC  F016         	goto	l4139
  5046  002DAE                     u3870:
  5047  002DAE                     
  5048                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  5049  002DAE  B05B               	btfsc	_flags^0,0,c
  5050  002DB0  EFDC  F016         	goto	u3881
  5051  002DB4  EFDE  F016         	goto	u3880
  5052  002DB8                     u3881:
  5053  002DB8  EFE8  F016         	goto	l4147
  5054  002DBC                     u3880:
  5055  002DBC                     
  5056                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  5057  002DBC  C014  F00B         	movff	pad@buf,fputs@s
  5058  002DC0  C015  F00C         	movff	pad@buf+1,fputs@s+1
  5059  002DC4  C012  F00D         	movff	pad@fp,fputs@fp
  5060  002DC8  C013  F00E         	movff	pad@fp+1,fputs@fp+1
  5061  002DCC  EC97  F01A         	call	_fputs	;wreg free
  5062  002DD0                     l4147:
  5063                           
  5064                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  5065  002DD0  C014  F002         	movff	pad@buf,strlen@s
  5066  002DD4  C015  F003         	movff	pad@buf+1,strlen@s+1
  5067  002DD8  EC39  F01B         	call	_strlen	;wreg free
  5068  002DDC  501B               	movf	pad@w^0,w,c
  5069  002DDE  2402               	addwf	?_strlen^0,w,c
  5070  002DE0  6E12               	movwf	?_pad^0,c
  5071  002DE2  501C               	movf	(pad@w+1)^0,w,c
  5072  002DE4  2003               	addwfc	(?_strlen+1)^0,w,c
  5073  002DE6  6E13               	movwf	(?_pad+1)^0,c
  5074  002DE8  0012               	return		;funcret
  5075  002DEA                     __end_of_pad:
  5076                           	opt callstack 0
  5077                           
  5078 ;; *************** function _strlen *****************
  5079 ;; Defined at:
  5080 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  5081 ;; Parameters:    Size  Location     Type
  5082 ;;  s               2    1[COMRAM] PTR const unsigned char 
  5083 ;;		 -> dbuf(32), 
  5084 ;; Auto vars:     Size  Location     Type
  5085 ;;  a               2    3[COMRAM] PTR const unsigned char 
  5086 ;;		 -> dbuf(32), 
  5087 ;; Return value:  Size  Location     Type
  5088 ;;                  2    1[COMRAM] unsigned int 
  5089 ;; Registers used:
  5090 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5091 ;; Tracked objects:
  5092 ;;		On entry : 0/0
  5093 ;;		On exit  : 0/0
  5094 ;;		Unchanged: 0/0
  5095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5096 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5097 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5099 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5100 ;;Total ram usage:        4 bytes
  5101 ;; Hardware stack levels used:    1
  5102 ;; Hardware stack levels required when called:    1
  5103 ;; This function calls:
  5104 ;;		Nothing
  5105 ;; This function is called by:
  5106 ;;		_pad
  5107 ;; This function uses a non-reentrant model
  5108 ;;
  5109                           
  5110                           	psect	text10
  5111  003672                     __ptext10:
  5112                           	opt callstack 0
  5113  003672                     _strlen:
  5114                           	opt callstack 24
  5115  003672  C002  F004         	movff	strlen@s,strlen@a
  5116  003676  C003  F005         	movff	strlen@s+1,strlen@a+1
  5117  00367A  EF41  F01B         	goto	l4123
  5118  00367E                     l4121:
  5119  00367E  4A02               	infsnz	strlen@s^0,f,c
  5120  003680  2A03               	incf	(strlen@s+1)^0,f,c
  5121  003682                     l4123:
  5122  003682  C002  FFD9         	movff	strlen@s,fsr2l
  5123  003686  C003  FFDA         	movff	strlen@s+1,fsr2h
  5124  00368A  50DF               	movf	indf2,w,c
  5125  00368C  A4D8               	btfss	status,2,c
  5126  00368E  EF4B  F01B         	goto	u3841
  5127  003692  EF4D  F01B         	goto	u3840
  5128  003696                     u3841:
  5129  003696  EF3F  F01B         	goto	l4121
  5130  00369A                     u3840:
  5131  00369A  5004               	movf	strlen@a^0,w,c
  5132  00369C  5C02               	subwf	strlen@s^0,w,c
  5133  00369E  6E02               	movwf	?_strlen^0,c
  5134  0036A0  5005               	movf	(strlen@a+1)^0,w,c
  5135  0036A2  5803               	subwfb	(strlen@s+1)^0,w,c
  5136  0036A4  6E03               	movwf	(?_strlen+1)^0,c
  5137  0036A6  0012               	return		;funcret
  5138  0036A8                     __end_of_strlen:
  5139                           	opt callstack 0
  5140                           
  5141 ;; *************** function _fputs *****************
  5142 ;; Defined at:
  5143 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  5144 ;; Parameters:    Size  Location     Type
  5145 ;;  s               2   10[COMRAM] PTR const unsigned char 
  5146 ;;		 -> dbuf(32), 
  5147 ;;  fp              2   12[COMRAM] PTR struct _IO_FILE
  5148 ;;		 -> sprintf@f(6), 
  5149 ;; Auto vars:     Size  Location     Type
  5150 ;;  i               2   15[COMRAM] int 
  5151 ;;  c               1   14[COMRAM] unsigned char 
  5152 ;; Return value:  Size  Location     Type
  5153 ;;                  2   10[COMRAM] int 
  5154 ;; Registers used:
  5155 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5156 ;; Tracked objects:
  5157 ;;		On entry : 0/0
  5158 ;;		On exit  : 0/0
  5159 ;;		Unchanged: 0/0
  5160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5161 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5162 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5164 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5165 ;;Total ram usage:        7 bytes
  5166 ;; Hardware stack levels used:    1
  5167 ;; Hardware stack levels required when called:    3
  5168 ;; This function calls:
  5169 ;;		_fputc
  5170 ;; This function is called by:
  5171 ;;		_pad
  5172 ;; This function uses a non-reentrant model
  5173 ;;
  5174                           
  5175                           	psect	text11
  5176  00352E                     __ptext11:
  5177                           	opt callstack 0
  5178  00352E                     _fputs:
  5179                           	opt callstack 22
  5180  00352E  0E00               	movlw	0
  5181  003530  6E11               	movwf	(fputs@i+1)^0,c
  5182  003532  0E00               	movlw	0
  5183  003534  6E10               	movwf	fputs@i^0,c
  5184  003536  EFA8  F01A         	goto	l4117
  5185  00353A                     l4113:
  5186  00353A  C00F  F002         	movff	fputs@c,fputc@c
  5187  00353E  6A03               	clrf	(fputc@c+1)^0,c
  5188  003540  C00D  F004         	movff	fputs@fp,fputc@fp
  5189  003544  C00E  F005         	movff	fputs@fp+1,fputc@fp+1
  5190  003548  EC6B  F015         	call	_fputc	;wreg free
  5191  00354C  4A10               	infsnz	fputs@i^0,f,c
  5192  00354E  2A11               	incf	(fputs@i+1)^0,f,c
  5193  003550                     l4117:
  5194  003550  5010               	movf	fputs@i^0,w,c
  5195  003552  240B               	addwf	fputs@s^0,w,c
  5196  003554  6ED9               	movwf	fsr2l,c
  5197  003556  5011               	movf	(fputs@i+1)^0,w,c
  5198  003558  200C               	addwfc	(fputs@s+1)^0,w,c
  5199  00355A  6EDA               	movwf	fsr2h,c
  5200  00355C  50DF               	movf	indf2,w,c
  5201  00355E  6E0F               	movwf	fputs@c^0,c
  5202  003560  500F               	movf	fputs@c^0,w,c
  5203  003562  A4D8               	btfss	status,2,c
  5204  003564  EFB6  F01A         	goto	u3831
  5205  003568  EFB8  F01A         	goto	u3830
  5206  00356C                     u3831:
  5207  00356C  EF9D  F01A         	goto	l4113
  5208  003570                     u3830:
  5209  003570  0012               	return		;funcret
  5210  003572                     __end_of_fputs:
  5211                           	opt callstack 0
  5212                           
  5213 ;; *************** function _fputc *****************
  5214 ;; Defined at:
  5215 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  5216 ;; Parameters:    Size  Location     Type
  5217 ;;  c               2    1[COMRAM] int 
  5218 ;;  fp              2    3[COMRAM] PTR struct _IO_FILE
  5219 ;;		 -> sprintf@f(6), 
  5220 ;; Auto vars:     Size  Location     Type
  5221 ;;		None
  5222 ;; Return value:  Size  Location     Type
  5223 ;;                  2    1[COMRAM] int 
  5224 ;; Registers used:
  5225 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5226 ;; Tracked objects:
  5227 ;;		On entry : 0/0
  5228 ;;		On exit  : 0/0
  5229 ;;		Unchanged: 0/0
  5230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5231 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5233 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5234 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5235 ;;Total ram usage:        9 bytes
  5236 ;; Hardware stack levels used:    1
  5237 ;; Hardware stack levels required when called:    2
  5238 ;; This function calls:
  5239 ;;		_putch
  5240 ;; This function is called by:
  5241 ;;		_pad
  5242 ;;		_vfpfcnvrt
  5243 ;;		_fputs
  5244 ;; This function uses a non-reentrant model
  5245 ;;
  5246                           
  5247                           	psect	text12
  5248  002AD6                     __ptext12:
  5249                           	opt callstack 0
  5250  002AD6                     _fputc:
  5251                           	opt callstack 22
  5252  002AD6  5004               	movf	fputc@fp^0,w,c
  5253  002AD8  1005               	iorwf	(fputc@fp+1)^0,w,c
  5254  002ADA  B4D8               	btfsc	status,2,c
  5255  002ADC  EF72  F015         	goto	u3791
  5256  002AE0  EF74  F015         	goto	u3790
  5257  002AE4                     u3791:
  5258  002AE4  EF7D  F015         	goto	l4101
  5259  002AE8                     u3790:
  5260  002AE8  5004               	movf	fputc@fp^0,w,c
  5261  002AEA  1005               	iorwf	(fputc@fp+1)^0,w,c
  5262  002AEC  A4D8               	btfss	status,2,c
  5263  002AEE  EF7B  F015         	goto	u3801
  5264  002AF2  EF7D  F015         	goto	u3800
  5265  002AF6                     u3801:
  5266  002AF6  EF82  F015         	goto	l4103
  5267  002AFA                     u3800:
  5268  002AFA                     l4101:
  5269  002AFA  5002               	movf	fputc@c^0,w,c
  5270  002AFC  ECF7  F01B         	call	_putch
  5271  002B00  EFCF  F015         	goto	l1274
  5272  002B04                     l4103:
  5273  002B04  EE20 F004          	lfsr	2,4
  5274  002B08  5004               	movf	fputc@fp^0,w,c
  5275  002B0A  26D9               	addwf	fsr2l,f,c
  5276  002B0C  5005               	movf	(fputc@fp+1)^0,w,c
  5277  002B0E  22DA               	addwfc	fsr2h,f,c
  5278  002B10  50DE               	movf	postinc2,w,c
  5279  002B12  10DE               	iorwf	postinc2,w,c
  5280  002B14  B4D8               	btfsc	status,2,c
  5281  002B16  EF8F  F015         	goto	u3811
  5282  002B1A  EF91  F015         	goto	u3810
  5283  002B1E                     u3811:
  5284  002B1E  EFAC  F015         	goto	l4107
  5285  002B22                     u3810:
  5286  002B22  EE20 F004          	lfsr	2,4
  5287  002B26  5004               	movf	fputc@fp^0,w,c
  5288  002B28  26D9               	addwf	fsr2l,f,c
  5289  002B2A  5005               	movf	(fputc@fp+1)^0,w,c
  5290  002B2C  22DA               	addwfc	fsr2h,f,c
  5291  002B2E  EE10 F002          	lfsr	1,2
  5292  002B32  5004               	movf	fputc@fp^0,w,c
  5293  002B34  26E1               	addwf	fsr1l,f,c
  5294  002B36  5005               	movf	(fputc@fp+1)^0,w,c
  5295  002B38  22E2               	addwfc	fsr1h,f,c
  5296  002B3A  50DE               	movf	postinc2,w,c
  5297  002B3C  5CE6               	subwf	postinc1,w,c
  5298  002B3E  50E6               	movf	postinc1,w,c
  5299  002B40  0A80               	xorlw	128
  5300  002B42  6E0A               	movwf	(??_fputc+4)^0,c
  5301  002B44  50DE               	movf	postinc2,w,c
  5302  002B46  0A80               	xorlw	128
  5303  002B48  580A               	subwfb	(??_fputc+4)^0,w,c
  5304  002B4A  B0D8               	btfsc	status,0,c
  5305  002B4C  EFAA  F015         	goto	u3821
  5306  002B50  EFAC  F015         	goto	u3820
  5307  002B54                     u3821:
  5308  002B54  EFCF  F015         	goto	l1274
  5309  002B58                     u3820:
  5310  002B58                     l4107:
  5311  002B58  EE20 F002          	lfsr	2,2
  5312  002B5C  5004               	movf	fputc@fp^0,w,c
  5313  002B5E  26D9               	addwf	fsr2l,f,c
  5314  002B60  5005               	movf	(fputc@fp+1)^0,w,c
  5315  002B62  22DA               	addwfc	fsr2h,f,c
  5316  002B64  CFDE F006          	movff	postinc2,??_fputc
  5317  002B68  CFDD F007          	movff	postdec2,??_fputc+1
  5318  002B6C  C004  FFD9         	movff	fputc@fp,fsr2l
  5319  002B70  C005  FFDA         	movff	fputc@fp+1,fsr2h
  5320  002B74  CFDE F008          	movff	postinc2,??_fputc+2
  5321  002B78  CFDD F009          	movff	postdec2,??_fputc+3
  5322  002B7C  5006               	movf	??_fputc^0,w,c
  5323  002B7E  2408               	addwf	(??_fputc+2)^0,w,c
  5324  002B80  6ED9               	movwf	fsr2l,c
  5325  002B82  5007               	movf	(??_fputc+1)^0,w,c
  5326  002B84  2009               	addwfc	(??_fputc+3)^0,w,c
  5327  002B86  6EDA               	movwf	fsr2h,c
  5328  002B88  C002  FFDF         	movff	fputc@c,indf2
  5329  002B8C  EE20 F002          	lfsr	2,2
  5330  002B90  5004               	movf	fputc@fp^0,w,c
  5331  002B92  26D9               	addwf	fsr2l,f,c
  5332  002B94  5005               	movf	(fputc@fp+1)^0,w,c
  5333  002B96  22DA               	addwfc	fsr2h,f,c
  5334  002B98  2ADE               	incf	postinc2,f,c
  5335  002B9A  0E00               	movlw	0
  5336  002B9C  22DD               	addwfc	postdec2,f,c
  5337  002B9E                     l1274:
  5338  002B9E  0012               	return		;funcret
  5339  002BA0                     __end_of_fputc:
  5340                           	opt callstack 0
  5341                           
  5342 ;; *************** function _putch *****************
  5343 ;; Defined at:
  5344 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
  5345 ;; Parameters:    Size  Location     Type
  5346 ;;  c               1    wreg     unsigned char 
  5347 ;; Auto vars:     Size  Location     Type
  5348 ;;  c               1    0[COMRAM] unsigned char 
  5349 ;; Return value:  Size  Location     Type
  5350 ;;                  1    wreg      void 
  5351 ;; Registers used:
  5352 ;;		wreg
  5353 ;; Tracked objects:
  5354 ;;		On entry : 0/0
  5355 ;;		On exit  : 0/0
  5356 ;;		Unchanged: 0/0
  5357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5361 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5362 ;;Total ram usage:        0 bytes
  5363 ;; Hardware stack levels used:    1
  5364 ;; Hardware stack levels required when called:    1
  5365 ;; This function calls:
  5366 ;;		Nothing
  5367 ;; This function is called by:
  5368 ;;		_fputc
  5369 ;; This function uses a non-reentrant model
  5370 ;;
  5371                           
  5372                           	psect	text13
  5373  0037EE                     __ptext13:
  5374                           	opt callstack 0
  5375  0037EE                     _putch:
  5376                           	opt callstack 22
  5377  0037EE  0012               	return		;funcret
  5378  0037F0                     __end_of_putch:
  5379                           	opt callstack 0
  5380                           
  5381 ;; *************** function _abs *****************
  5382 ;; Defined at:
  5383 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
  5384 ;; Parameters:    Size  Location     Type
  5385 ;;  a               2   19[COMRAM] int 
  5386 ;; Auto vars:     Size  Location     Type
  5387 ;;		None
  5388 ;; Return value:  Size  Location     Type
  5389 ;;                  2   19[COMRAM] int 
  5390 ;; Registers used:
  5391 ;;		wreg, status,2, status,0
  5392 ;; Tracked objects:
  5393 ;;		On entry : 0/0
  5394 ;;		On exit  : 0/0
  5395 ;;		Unchanged: 0/0
  5396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5397 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5399 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5400 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5401 ;;Total ram usage:        4 bytes
  5402 ;; Hardware stack levels used:    1
  5403 ;; Hardware stack levels required when called:    1
  5404 ;; This function calls:
  5405 ;;		Nothing
  5406 ;; This function is called by:
  5407 ;;		_dtoa
  5408 ;; This function uses a non-reentrant model
  5409 ;;
  5410                           
  5411                           	psect	text14
  5412  0035B6                     __ptext14:
  5413                           	opt callstack 0
  5414  0035B6                     _abs:
  5415                           	opt callstack 25
  5416  0035B6  BE15               	btfsc	(abs@a+1)^0,7,c
  5417  0035B8  EFE8  F01A         	goto	u3890
  5418  0035BC  5015               	movf	(abs@a+1)^0,w,c
  5419  0035BE  E106               	bnz	u3891
  5420  0035C0  0414               	decf	abs@a^0,w,c
  5421  0035C2  B0D8               	btfsc	status,0,c
  5422  0035C4  EFE6  F01A         	goto	u3891
  5423  0035C8  EFE8  F01A         	goto	u3890
  5424  0035CC                     u3891:
  5425  0035CC  EFF6  F01A         	goto	l1259
  5426  0035D0                     u3890:
  5427  0035D0  C014  F016         	movff	abs@a,??_abs
  5428  0035D4  C015  F017         	movff	abs@a+1,??_abs+1
  5429  0035D8  1E16               	comf	??_abs^0,f,c
  5430  0035DA  1E17               	comf	(??_abs+1)^0,f,c
  5431  0035DC  4A16               	infsnz	??_abs^0,f,c
  5432  0035DE  2A17               	incf	(??_abs+1)^0,f,c
  5433  0035E0  C016  F014         	movff	??_abs,?_abs
  5434  0035E4  C017  F015         	movff	??_abs+1,?_abs+1
  5435  0035E8  EFFA  F01A         	goto	l1262
  5436  0035EC                     l1259:
  5437  0035EC  C014  F014         	movff	abs@a,?_abs
  5438  0035F0  C015  F015         	movff	abs@a+1,?_abs+1
  5439  0035F4                     l1262:
  5440  0035F4  0012               	return		;funcret
  5441  0035F6                     __end_of_abs:
  5442                           	opt callstack 0
  5443                           
  5444 ;; *************** function ___aomod *****************
  5445 ;; Defined at:
  5446 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
  5447 ;; Parameters:    Size  Location     Type
  5448 ;;  dividend        8    1[COMRAM] long long 
  5449 ;;  divisor         8    9[COMRAM] long long 
  5450 ;; Auto vars:     Size  Location     Type
  5451 ;;  sign            1   18[COMRAM] unsigned char 
  5452 ;;  counter         1   17[COMRAM] unsigned char 
  5453 ;; Return value:  Size  Location     Type
  5454 ;;                  8    1[COMRAM] long long 
  5455 ;; Registers used:
  5456 ;;		wreg, status,2, status,0
  5457 ;; Tracked objects:
  5458 ;;		On entry : 0/0
  5459 ;;		On exit  : 0/0
  5460 ;;		Unchanged: 0/0
  5461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5462 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5463 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5465 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5466 ;;Total ram usage:       18 bytes
  5467 ;; Hardware stack levels used:    1
  5468 ;; Hardware stack levels required when called:    1
  5469 ;; This function calls:
  5470 ;;		Nothing
  5471 ;; This function is called by:
  5472 ;;		_dtoa
  5473 ;; This function uses a non-reentrant model
  5474 ;;
  5475                           
  5476                           	psect	text15
  5477  002574                     __ptext15:
  5478                           	opt callstack 0
  5479  002574                     ___aomod:
  5480                           	opt callstack 25
  5481  002574  0E00               	movlw	0
  5482  002576  6E13               	movwf	___aomod@sign^0,c
  5483  002578  BE09               	btfsc	(___aomod@dividend+7)^0,7,c
  5484  00257A  EFC3  F012         	goto	u3970
  5485  00257E  EFC1  F012         	goto	u3971
  5486  002582                     u3971:
  5487  002582  EFD5  F012         	goto	l4207
  5488  002586                     u3970:
  5489  002586  1E09               	comf	(___aomod@dividend+7)^0,f,c
  5490  002588  1E08               	comf	(___aomod@dividend+6)^0,f,c
  5491  00258A  1E07               	comf	(___aomod@dividend+5)^0,f,c
  5492  00258C  1E06               	comf	(___aomod@dividend+4)^0,f,c
  5493  00258E  1E05               	comf	(___aomod@dividend+3)^0,f,c
  5494  002590  1E04               	comf	(___aomod@dividend+2)^0,f,c
  5495  002592  1E03               	comf	(___aomod@dividend+1)^0,f,c
  5496  002594  6C02               	negf	___aomod@dividend^0,c
  5497  002596  0E00               	movlw	0
  5498  002598  2203               	addwfc	(___aomod@dividend+1)^0,f,c
  5499  00259A  2204               	addwfc	(___aomod@dividend+2)^0,f,c
  5500  00259C  2205               	addwfc	(___aomod@dividend+3)^0,f,c
  5501  00259E  2206               	addwfc	(___aomod@dividend+4)^0,f,c
  5502  0025A0  2207               	addwfc	(___aomod@dividend+5)^0,f,c
  5503  0025A2  2208               	addwfc	(___aomod@dividend+6)^0,f,c
  5504  0025A4  2209               	addwfc	(___aomod@dividend+7)^0,f,c
  5505  0025A6  0E01               	movlw	1
  5506  0025A8  6E13               	movwf	___aomod@sign^0,c
  5507  0025AA                     l4207:
  5508  0025AA  BE11               	btfsc	(___aomod@divisor+7)^0,7,c
  5509  0025AC  EFDC  F012         	goto	u3980
  5510  0025B0  EFDA  F012         	goto	u3981
  5511  0025B4                     u3981:
  5512  0025B4  EFEC  F012         	goto	l4211
  5513  0025B8                     u3980:
  5514  0025B8  1E11               	comf	(___aomod@divisor+7)^0,f,c
  5515  0025BA  1E10               	comf	(___aomod@divisor+6)^0,f,c
  5516  0025BC  1E0F               	comf	(___aomod@divisor+5)^0,f,c
  5517  0025BE  1E0E               	comf	(___aomod@divisor+4)^0,f,c
  5518  0025C0  1E0D               	comf	(___aomod@divisor+3)^0,f,c
  5519  0025C2  1E0C               	comf	(___aomod@divisor+2)^0,f,c
  5520  0025C4  1E0B               	comf	(___aomod@divisor+1)^0,f,c
  5521  0025C6  6C0A               	negf	___aomod@divisor^0,c
  5522  0025C8  0E00               	movlw	0
  5523  0025CA  220B               	addwfc	(___aomod@divisor+1)^0,f,c
  5524  0025CC  220C               	addwfc	(___aomod@divisor+2)^0,f,c
  5525  0025CE  220D               	addwfc	(___aomod@divisor+3)^0,f,c
  5526  0025D0  220E               	addwfc	(___aomod@divisor+4)^0,f,c
  5527  0025D2  220F               	addwfc	(___aomod@divisor+5)^0,f,c
  5528  0025D4  2210               	addwfc	(___aomod@divisor+6)^0,f,c
  5529  0025D6  2211               	addwfc	(___aomod@divisor+7)^0,f,c
  5530  0025D8                     l4211:
  5531  0025D8  500A               	movf	___aomod@divisor^0,w,c
  5532  0025DA  100B               	iorwf	(___aomod@divisor+1)^0,w,c
  5533  0025DC  100C               	iorwf	(___aomod@divisor+2)^0,w,c
  5534  0025DE  100D               	iorwf	(___aomod@divisor+3)^0,w,c
  5535  0025E0  100E               	iorwf	(___aomod@divisor+4)^0,w,c
  5536  0025E2  100F               	iorwf	(___aomod@divisor+5)^0,w,c
  5537  0025E4  1010               	iorwf	(___aomod@divisor+6)^0,w,c
  5538  0025E6  1011               	iorwf	(___aomod@divisor+7)^0,w,c
  5539  0025E8  B4D8               	btfsc	status,2,c
  5540  0025EA  EFF9  F012         	goto	u3991
  5541  0025EE  EFFB  F012         	goto	u3990
  5542  0025F2                     u3991:
  5543  0025F2  EF43  F013         	goto	l4227
  5544  0025F6                     u3990:
  5545  0025F6  0E01               	movlw	1
  5546  0025F8  6E12               	movwf	___aomod@counter^0,c
  5547  0025FA  EF09  F013         	goto	l4217
  5548  0025FE                     l4215:
  5549  0025FE  90D8               	bcf	status,0,c
  5550  002600  360A               	rlcf	___aomod@divisor^0,f,c
  5551  002602  360B               	rlcf	(___aomod@divisor+1)^0,f,c
  5552  002604  360C               	rlcf	(___aomod@divisor+2)^0,f,c
  5553  002606  360D               	rlcf	(___aomod@divisor+3)^0,f,c
  5554  002608  360E               	rlcf	(___aomod@divisor+4)^0,f,c
  5555  00260A  360F               	rlcf	(___aomod@divisor+5)^0,f,c
  5556  00260C  3610               	rlcf	(___aomod@divisor+6)^0,f,c
  5557  00260E  3611               	rlcf	(___aomod@divisor+7)^0,f,c
  5558  002610  2A12               	incf	___aomod@counter^0,f,c
  5559  002612                     l4217:
  5560  002612  AE11               	btfss	(___aomod@divisor+7)^0,7,c
  5561  002614  EF0E  F013         	goto	u4001
  5562  002618  EF10  F013         	goto	u4000
  5563  00261C                     u4001:
  5564  00261C  EFFF  F012         	goto	l4215
  5565  002620                     u4000:
  5566  002620                     l4219:
  5567  002620  500A               	movf	___aomod@divisor^0,w,c
  5568  002622  5C02               	subwf	___aomod@dividend^0,w,c
  5569  002624  500B               	movf	(___aomod@divisor+1)^0,w,c
  5570  002626  5803               	subwfb	(___aomod@dividend+1)^0,w,c
  5571  002628  500C               	movf	(___aomod@divisor+2)^0,w,c
  5572  00262A  5804               	subwfb	(___aomod@dividend+2)^0,w,c
  5573  00262C  500D               	movf	(___aomod@divisor+3)^0,w,c
  5574  00262E  5805               	subwfb	(___aomod@dividend+3)^0,w,c
  5575  002630  500E               	movf	(___aomod@divisor+4)^0,w,c
  5576  002632  5806               	subwfb	(___aomod@dividend+4)^0,w,c
  5577  002634  500F               	movf	(___aomod@divisor+5)^0,w,c
  5578  002636  5807               	subwfb	(___aomod@dividend+5)^0,w,c
  5579  002638  5010               	movf	(___aomod@divisor+6)^0,w,c
  5580  00263A  5808               	subwfb	(___aomod@dividend+6)^0,w,c
  5581  00263C  5011               	movf	(___aomod@divisor+7)^0,w,c
  5582  00263E  5809               	subwfb	(___aomod@dividend+7)^0,w,c
  5583  002640  A0D8               	btfss	status,0,c
  5584  002642  EF25  F013         	goto	u4011
  5585  002646  EF27  F013         	goto	u4010
  5586  00264A                     u4011:
  5587  00264A  EF37  F013         	goto	l4223
  5588  00264E                     u4010:
  5589  00264E  500A               	movf	___aomod@divisor^0,w,c
  5590  002650  5E02               	subwf	___aomod@dividend^0,f,c
  5591  002652  500B               	movf	(___aomod@divisor+1)^0,w,c
  5592  002654  5A03               	subwfb	(___aomod@dividend+1)^0,f,c
  5593  002656  500C               	movf	(___aomod@divisor+2)^0,w,c
  5594  002658  5A04               	subwfb	(___aomod@dividend+2)^0,f,c
  5595  00265A  500D               	movf	(___aomod@divisor+3)^0,w,c
  5596  00265C  5A05               	subwfb	(___aomod@dividend+3)^0,f,c
  5597  00265E  500E               	movf	(___aomod@divisor+4)^0,w,c
  5598  002660  5A06               	subwfb	(___aomod@dividend+4)^0,f,c
  5599  002662  500F               	movf	(___aomod@divisor+5)^0,w,c
  5600  002664  5A07               	subwfb	(___aomod@dividend+5)^0,f,c
  5601  002666  5010               	movf	(___aomod@divisor+6)^0,w,c
  5602  002668  5A08               	subwfb	(___aomod@dividend+6)^0,f,c
  5603  00266A  5011               	movf	(___aomod@divisor+7)^0,w,c
  5604  00266C  5A09               	subwfb	(___aomod@dividend+7)^0,f,c
  5605  00266E                     l4223:
  5606  00266E  90D8               	bcf	status,0,c
  5607  002670  3211               	rrcf	(___aomod@divisor+7)^0,f,c
  5608  002672  3210               	rrcf	(___aomod@divisor+6)^0,f,c
  5609  002674  320F               	rrcf	(___aomod@divisor+5)^0,f,c
  5610  002676  320E               	rrcf	(___aomod@divisor+4)^0,f,c
  5611  002678  320D               	rrcf	(___aomod@divisor+3)^0,f,c
  5612  00267A  320C               	rrcf	(___aomod@divisor+2)^0,f,c
  5613  00267C  320B               	rrcf	(___aomod@divisor+1)^0,f,c
  5614  00267E  320A               	rrcf	___aomod@divisor^0,f,c
  5615  002680  2E12               	decfsz	___aomod@counter^0,f,c
  5616  002682  EF10  F013         	goto	l4219
  5617  002686                     l4227:
  5618  002686  5013               	movf	___aomod@sign^0,w,c
  5619  002688  B4D8               	btfsc	status,2,c
  5620  00268A  EF49  F013         	goto	u4021
  5621  00268E  EF4B  F013         	goto	u4020
  5622  002692                     u4021:
  5623  002692  EF5B  F013         	goto	l4231
  5624  002696                     u4020:
  5625  002696  1E09               	comf	(___aomod@dividend+7)^0,f,c
  5626  002698  1E08               	comf	(___aomod@dividend+6)^0,f,c
  5627  00269A  1E07               	comf	(___aomod@dividend+5)^0,f,c
  5628  00269C  1E06               	comf	(___aomod@dividend+4)^0,f,c
  5629  00269E  1E05               	comf	(___aomod@dividend+3)^0,f,c
  5630  0026A0  1E04               	comf	(___aomod@dividend+2)^0,f,c
  5631  0026A2  1E03               	comf	(___aomod@dividend+1)^0,f,c
  5632  0026A4  6C02               	negf	___aomod@dividend^0,c
  5633  0026A6  0E00               	movlw	0
  5634  0026A8  2203               	addwfc	(___aomod@dividend+1)^0,f,c
  5635  0026AA  2204               	addwfc	(___aomod@dividend+2)^0,f,c
  5636  0026AC  2205               	addwfc	(___aomod@dividend+3)^0,f,c
  5637  0026AE  2206               	addwfc	(___aomod@dividend+4)^0,f,c
  5638  0026B0  2207               	addwfc	(___aomod@dividend+5)^0,f,c
  5639  0026B2  2208               	addwfc	(___aomod@dividend+6)^0,f,c
  5640  0026B4  2209               	addwfc	(___aomod@dividend+7)^0,f,c
  5641  0026B6                     l4231:
  5642  0026B6  C002  F002         	movff	___aomod@dividend,?___aomod
  5643  0026BA  C003  F003         	movff	___aomod@dividend+1,?___aomod+1
  5644  0026BE  C004  F004         	movff	___aomod@dividend+2,?___aomod+2
  5645  0026C2  C005  F005         	movff	___aomod@dividend+3,?___aomod+3
  5646  0026C6  C006  F006         	movff	___aomod@dividend+4,?___aomod+4
  5647  0026CA  C007  F007         	movff	___aomod@dividend+5,?___aomod+5
  5648  0026CE  C008  F008         	movff	___aomod@dividend+6,?___aomod+6
  5649  0026D2  C009  F009         	movff	___aomod@dividend+7,?___aomod+7
  5650  0026D6  0012               	return		;funcret
  5651  0026D8                     __end_of___aomod:
  5652                           	opt callstack 0
  5653                           
  5654 ;; *************** function ___aodiv *****************
  5655 ;; Defined at:
  5656 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
  5657 ;; Parameters:    Size  Location     Type
  5658 ;;  dividend        8    1[COMRAM] long long 
  5659 ;;  divisor         8    9[COMRAM] long long 
  5660 ;; Auto vars:     Size  Location     Type
  5661 ;;  quotient        8   19[COMRAM] long long 
  5662 ;;  sign            1   18[COMRAM] unsigned char 
  5663 ;;  counter         1   17[COMRAM] unsigned char 
  5664 ;; Return value:  Size  Location     Type
  5665 ;;                  8    1[COMRAM] long long 
  5666 ;; Registers used:
  5667 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5668 ;; Tracked objects:
  5669 ;;		On entry : 0/0
  5670 ;;		On exit  : 0/0
  5671 ;;		Unchanged: 0/0
  5672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5673 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5674 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5676 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5677 ;;Total ram usage:       26 bytes
  5678 ;; Hardware stack levels used:    1
  5679 ;; Hardware stack levels required when called:    1
  5680 ;; This function calls:
  5681 ;;		Nothing
  5682 ;; This function is called by:
  5683 ;;		_dtoa
  5684 ;; This function uses a non-reentrant model
  5685 ;;
  5686                           
  5687                           	psect	text16
  5688  0023EC                     __ptext16:
  5689                           	opt callstack 0
  5690  0023EC                     ___aodiv:
  5691                           	opt callstack 25
  5692  0023EC  0E00               	movlw	0
  5693  0023EE  6E13               	movwf	___aodiv@sign^0,c
  5694  0023F0  BE11               	btfsc	(___aodiv@divisor+7)^0,7,c
  5695  0023F2  EFFF  F011         	goto	u3900
  5696  0023F6  EFFD  F011         	goto	u3901
  5697  0023FA                     u3901:
  5698  0023FA  EF11  F012         	goto	l4163
  5699  0023FE                     u3900:
  5700  0023FE  1E11               	comf	(___aodiv@divisor+7)^0,f,c
  5701  002400  1E10               	comf	(___aodiv@divisor+6)^0,f,c
  5702  002402  1E0F               	comf	(___aodiv@divisor+5)^0,f,c
  5703  002404  1E0E               	comf	(___aodiv@divisor+4)^0,f,c
  5704  002406  1E0D               	comf	(___aodiv@divisor+3)^0,f,c
  5705  002408  1E0C               	comf	(___aodiv@divisor+2)^0,f,c
  5706  00240A  1E0B               	comf	(___aodiv@divisor+1)^0,f,c
  5707  00240C  6C0A               	negf	___aodiv@divisor^0,c
  5708  00240E  0E00               	movlw	0
  5709  002410  220B               	addwfc	(___aodiv@divisor+1)^0,f,c
  5710  002412  220C               	addwfc	(___aodiv@divisor+2)^0,f,c
  5711  002414  220D               	addwfc	(___aodiv@divisor+3)^0,f,c
  5712  002416  220E               	addwfc	(___aodiv@divisor+4)^0,f,c
  5713  002418  220F               	addwfc	(___aodiv@divisor+5)^0,f,c
  5714  00241A  2210               	addwfc	(___aodiv@divisor+6)^0,f,c
  5715  00241C  2211               	addwfc	(___aodiv@divisor+7)^0,f,c
  5716  00241E  0E01               	movlw	1
  5717  002420  6E13               	movwf	___aodiv@sign^0,c
  5718  002422                     l4163:
  5719  002422  BE09               	btfsc	(___aodiv@dividend+7)^0,7,c
  5720  002424  EF18  F012         	goto	u3910
  5721  002428  EF16  F012         	goto	u3911
  5722  00242C                     u3911:
  5723  00242C  EF2A  F012         	goto	l4169
  5724  002430                     u3910:
  5725  002430  1E09               	comf	(___aodiv@dividend+7)^0,f,c
  5726  002432  1E08               	comf	(___aodiv@dividend+6)^0,f,c
  5727  002434  1E07               	comf	(___aodiv@dividend+5)^0,f,c
  5728  002436  1E06               	comf	(___aodiv@dividend+4)^0,f,c
  5729  002438  1E05               	comf	(___aodiv@dividend+3)^0,f,c
  5730  00243A  1E04               	comf	(___aodiv@dividend+2)^0,f,c
  5731  00243C  1E03               	comf	(___aodiv@dividend+1)^0,f,c
  5732  00243E  6C02               	negf	___aodiv@dividend^0,c
  5733  002440  0E00               	movlw	0
  5734  002442  2203               	addwfc	(___aodiv@dividend+1)^0,f,c
  5735  002444  2204               	addwfc	(___aodiv@dividend+2)^0,f,c
  5736  002446  2205               	addwfc	(___aodiv@dividend+3)^0,f,c
  5737  002448  2206               	addwfc	(___aodiv@dividend+4)^0,f,c
  5738  00244A  2207               	addwfc	(___aodiv@dividend+5)^0,f,c
  5739  00244C  2208               	addwfc	(___aodiv@dividend+6)^0,f,c
  5740  00244E  2209               	addwfc	(___aodiv@dividend+7)^0,f,c
  5741  002450  0E01               	movlw	1
  5742  002452  1A13               	xorwf	___aodiv@sign^0,f,c
  5743  002454                     l4169:
  5744  002454  EE20  F014         	lfsr	2,___aodiv@quotient
  5745  002458  0E07               	movlw	7
  5746  00245A                     u3921:
  5747  00245A  6ADE               	clrf	postinc2,c
  5748  00245C  06E8               	decf	wreg,f,c
  5749  00245E  E2FD               	bc	u3921
  5750  002460  500A               	movf	___aodiv@divisor^0,w,c
  5751  002462  100B               	iorwf	(___aodiv@divisor+1)^0,w,c
  5752  002464  100C               	iorwf	(___aodiv@divisor+2)^0,w,c
  5753  002466  100D               	iorwf	(___aodiv@divisor+3)^0,w,c
  5754  002468  100E               	iorwf	(___aodiv@divisor+4)^0,w,c
  5755  00246A  100F               	iorwf	(___aodiv@divisor+5)^0,w,c
  5756  00246C  1010               	iorwf	(___aodiv@divisor+6)^0,w,c
  5757  00246E  1011               	iorwf	(___aodiv@divisor+7)^0,w,c
  5758  002470  B4D8               	btfsc	status,2,c
  5759  002472  EF3D  F012         	goto	u3931
  5760  002476  EF3F  F012         	goto	u3930
  5761  00247A                     u3931:
  5762  00247A  EF91  F012         	goto	l4191
  5763  00247E                     u3930:
  5764  00247E  0E01               	movlw	1
  5765  002480  6E12               	movwf	___aodiv@counter^0,c
  5766  002482  EF4D  F012         	goto	l4177
  5767  002486                     l4175:
  5768  002486  90D8               	bcf	status,0,c
  5769  002488  360A               	rlcf	___aodiv@divisor^0,f,c
  5770  00248A  360B               	rlcf	(___aodiv@divisor+1)^0,f,c
  5771  00248C  360C               	rlcf	(___aodiv@divisor+2)^0,f,c
  5772  00248E  360D               	rlcf	(___aodiv@divisor+3)^0,f,c
  5773  002490  360E               	rlcf	(___aodiv@divisor+4)^0,f,c
  5774  002492  360F               	rlcf	(___aodiv@divisor+5)^0,f,c
  5775  002494  3610               	rlcf	(___aodiv@divisor+6)^0,f,c
  5776  002496  3611               	rlcf	(___aodiv@divisor+7)^0,f,c
  5777  002498  2A12               	incf	___aodiv@counter^0,f,c
  5778  00249A                     l4177:
  5779  00249A  AE11               	btfss	(___aodiv@divisor+7)^0,7,c
  5780  00249C  EF52  F012         	goto	u3941
  5781  0024A0  EF54  F012         	goto	u3940
  5782  0024A4                     u3941:
  5783  0024A4  EF43  F012         	goto	l4175
  5784  0024A8                     u3940:
  5785  0024A8                     l4179:
  5786  0024A8  90D8               	bcf	status,0,c
  5787  0024AA  3614               	rlcf	___aodiv@quotient^0,f,c
  5788  0024AC  3615               	rlcf	(___aodiv@quotient+1)^0,f,c
  5789  0024AE  3616               	rlcf	(___aodiv@quotient+2)^0,f,c
  5790  0024B0  3617               	rlcf	(___aodiv@quotient+3)^0,f,c
  5791  0024B2  3618               	rlcf	(___aodiv@quotient+4)^0,f,c
  5792  0024B4  3619               	rlcf	(___aodiv@quotient+5)^0,f,c
  5793  0024B6  361A               	rlcf	(___aodiv@quotient+6)^0,f,c
  5794  0024B8  361B               	rlcf	(___aodiv@quotient+7)^0,f,c
  5795  0024BA  500A               	movf	___aodiv@divisor^0,w,c
  5796  0024BC  5C02               	subwf	___aodiv@dividend^0,w,c
  5797  0024BE  500B               	movf	(___aodiv@divisor+1)^0,w,c
  5798  0024C0  5803               	subwfb	(___aodiv@dividend+1)^0,w,c
  5799  0024C2  500C               	movf	(___aodiv@divisor+2)^0,w,c
  5800  0024C4  5804               	subwfb	(___aodiv@dividend+2)^0,w,c
  5801  0024C6  500D               	movf	(___aodiv@divisor+3)^0,w,c
  5802  0024C8  5805               	subwfb	(___aodiv@dividend+3)^0,w,c
  5803  0024CA  500E               	movf	(___aodiv@divisor+4)^0,w,c
  5804  0024CC  5806               	subwfb	(___aodiv@dividend+4)^0,w,c
  5805  0024CE  500F               	movf	(___aodiv@divisor+5)^0,w,c
  5806  0024D0  5807               	subwfb	(___aodiv@dividend+5)^0,w,c
  5807  0024D2  5010               	movf	(___aodiv@divisor+6)^0,w,c
  5808  0024D4  5808               	subwfb	(___aodiv@dividend+6)^0,w,c
  5809  0024D6  5011               	movf	(___aodiv@divisor+7)^0,w,c
  5810  0024D8  5809               	subwfb	(___aodiv@dividend+7)^0,w,c
  5811  0024DA  A0D8               	btfss	status,0,c
  5812  0024DC  EF72  F012         	goto	u3951
  5813  0024E0  EF74  F012         	goto	u3950
  5814  0024E4                     u3951:
  5815  0024E4  EF85  F012         	goto	l4187
  5816  0024E8                     u3950:
  5817  0024E8  500A               	movf	___aodiv@divisor^0,w,c
  5818  0024EA  5E02               	subwf	___aodiv@dividend^0,f,c
  5819  0024EC  500B               	movf	(___aodiv@divisor+1)^0,w,c
  5820  0024EE  5A03               	subwfb	(___aodiv@dividend+1)^0,f,c
  5821  0024F0  500C               	movf	(___aodiv@divisor+2)^0,w,c
  5822  0024F2  5A04               	subwfb	(___aodiv@dividend+2)^0,f,c
  5823  0024F4  500D               	movf	(___aodiv@divisor+3)^0,w,c
  5824  0024F6  5A05               	subwfb	(___aodiv@dividend+3)^0,f,c
  5825  0024F8  500E               	movf	(___aodiv@divisor+4)^0,w,c
  5826  0024FA  5A06               	subwfb	(___aodiv@dividend+4)^0,f,c
  5827  0024FC  500F               	movf	(___aodiv@divisor+5)^0,w,c
  5828  0024FE  5A07               	subwfb	(___aodiv@dividend+5)^0,f,c
  5829  002500  5010               	movf	(___aodiv@divisor+6)^0,w,c
  5830  002502  5A08               	subwfb	(___aodiv@dividend+6)^0,f,c
  5831  002504  5011               	movf	(___aodiv@divisor+7)^0,w,c
  5832  002506  5A09               	subwfb	(___aodiv@dividend+7)^0,f,c
  5833  002508  8014               	bsf	___aodiv@quotient^0,0,c
  5834  00250A                     l4187:
  5835  00250A  90D8               	bcf	status,0,c
  5836  00250C  3211               	rrcf	(___aodiv@divisor+7)^0,f,c
  5837  00250E  3210               	rrcf	(___aodiv@divisor+6)^0,f,c
  5838  002510  320F               	rrcf	(___aodiv@divisor+5)^0,f,c
  5839  002512  320E               	rrcf	(___aodiv@divisor+4)^0,f,c
  5840  002514  320D               	rrcf	(___aodiv@divisor+3)^0,f,c
  5841  002516  320C               	rrcf	(___aodiv@divisor+2)^0,f,c
  5842  002518  320B               	rrcf	(___aodiv@divisor+1)^0,f,c
  5843  00251A  320A               	rrcf	___aodiv@divisor^0,f,c
  5844  00251C  2E12               	decfsz	___aodiv@counter^0,f,c
  5845  00251E  EF54  F012         	goto	l4179
  5846  002522                     l4191:
  5847  002522  5013               	movf	___aodiv@sign^0,w,c
  5848  002524  B4D8               	btfsc	status,2,c
  5849  002526  EF97  F012         	goto	u3961
  5850  00252A  EF99  F012         	goto	u3960
  5851  00252E                     u3961:
  5852  00252E  EFA9  F012         	goto	l4195
  5853  002532                     u3960:
  5854  002532  1E1B               	comf	(___aodiv@quotient+7)^0,f,c
  5855  002534  1E1A               	comf	(___aodiv@quotient+6)^0,f,c
  5856  002536  1E19               	comf	(___aodiv@quotient+5)^0,f,c
  5857  002538  1E18               	comf	(___aodiv@quotient+4)^0,f,c
  5858  00253A  1E17               	comf	(___aodiv@quotient+3)^0,f,c
  5859  00253C  1E16               	comf	(___aodiv@quotient+2)^0,f,c
  5860  00253E  1E15               	comf	(___aodiv@quotient+1)^0,f,c
  5861  002540  6C14               	negf	___aodiv@quotient^0,c
  5862  002542  0E00               	movlw	0
  5863  002544  2215               	addwfc	(___aodiv@quotient+1)^0,f,c
  5864  002546  2216               	addwfc	(___aodiv@quotient+2)^0,f,c
  5865  002548  2217               	addwfc	(___aodiv@quotient+3)^0,f,c
  5866  00254A  2218               	addwfc	(___aodiv@quotient+4)^0,f,c
  5867  00254C  2219               	addwfc	(___aodiv@quotient+5)^0,f,c
  5868  00254E  221A               	addwfc	(___aodiv@quotient+6)^0,f,c
  5869  002550  221B               	addwfc	(___aodiv@quotient+7)^0,f,c
  5870  002552                     l4195:
  5871  002552  C014  F002         	movff	___aodiv@quotient,?___aodiv
  5872  002556  C015  F003         	movff	___aodiv@quotient+1,?___aodiv+1
  5873  00255A  C016  F004         	movff	___aodiv@quotient+2,?___aodiv+2
  5874  00255E  C017  F005         	movff	___aodiv@quotient+3,?___aodiv+3
  5875  002562  C018  F006         	movff	___aodiv@quotient+4,?___aodiv+4
  5876  002566  C019  F007         	movff	___aodiv@quotient+5,?___aodiv+5
  5877  00256A  C01A  F008         	movff	___aodiv@quotient+6,?___aodiv+6
  5878  00256E  C01B  F009         	movff	___aodiv@quotient+7,?___aodiv+7
  5879  002572  0012               	return		;funcret
  5880  002574                     __end_of___aodiv:
  5881                           	opt callstack 0
  5882                           
  5883 ;; *************** function _spi_write *****************
  5884 ;; Defined at:
  5885 ;;		line 33 in file "dac.c"
  5886 ;; Parameters:    Size  Location     Type
  5887 ;;  data            1    wreg     unsigned char 
  5888 ;; Auto vars:     Size  Location     Type
  5889 ;;  data            1    3[COMRAM] unsigned char 
  5890 ;;  full            2    5[COMRAM] unsigned short 
  5891 ;;  bound           1    4[COMRAM] unsigned char 
  5892 ;; Return value:  Size  Location     Type
  5893 ;;                  1    wreg      void 
  5894 ;; Registers used:
  5895 ;;		wreg, status,2, status,0
  5896 ;; Tracked objects:
  5897 ;;		On entry : 0/0
  5898 ;;		On exit  : 0/0
  5899 ;;		Unchanged: 0/0
  5900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5902 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5903 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5904 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5905 ;;Total ram usage:        6 bytes
  5906 ;; Hardware stack levels used:    1
  5907 ;; Hardware stack levels required when called:    1
  5908 ;; This function calls:
  5909 ;;		Nothing
  5910 ;; This function is called by:
  5911 ;;		_main
  5912 ;; This function uses a non-reentrant model
  5913 ;;
  5914                           
  5915                           	psect	text17
  5916  003306                     __ptext17:
  5917                           	opt callstack 0
  5918  003306                     _spi_write:
  5919                           	opt callstack 29
  5920                           
  5921                           ;incstack = 0
  5922                           ;spi_write@data stored from wreg
  5923  003306  6E04               	movwf	spi_write@data^0,c
  5924  003308                     
  5925                           ;dac.c: 34:     LATBbits.LATB0 = 0;
  5926  003308  9084               	bcf	132,0,c	;volatile
  5927  00330A                     
  5928                           ;dac.c: 36:     uint16_t full = 0xF000;
  5929  00330A  0EF0               	movlw	240
  5930  00330C  6E07               	movwf	(spi_write@full+1)^0,c
  5931  00330E  0E00               	movlw	0
  5932  003310  6E06               	movwf	spi_write@full^0,c
  5933  003312                     
  5934                           ;dac.c: 37:     full = full | (data << 4);
  5935  003312  5004               	movf	spi_write@data^0,w,c
  5936  003314  6E02               	movwf	??_spi_write^0,c
  5937  003316  6A03               	clrf	(??_spi_write+1)^0,c
  5938  003318  3A02               	swapf	??_spi_write^0,f,c
  5939  00331A  3A03               	swapf	(??_spi_write+1)^0,f,c
  5940  00331C  0EF0               	movlw	240
  5941  00331E  1603               	andwf	(??_spi_write+1)^0,f,c
  5942  003320  5002               	movf	??_spi_write^0,w,c
  5943  003322  0B0F               	andlw	15
  5944  003324  1203               	iorwf	(??_spi_write+1)^0,f,c
  5945  003326  0EF0               	movlw	240
  5946  003328  1602               	andwf	??_spi_write^0,f,c
  5947  00332A  5006               	movf	spi_write@full^0,w,c
  5948  00332C  1002               	iorwf	??_spi_write^0,w,c
  5949  00332E  6E06               	movwf	spi_write@full^0,c
  5950  003330  5007               	movf	(spi_write@full+1)^0,w,c
  5951  003332  1003               	iorwf	(??_spi_write+1)^0,w,c
  5952  003334  6E07               	movwf	(spi_write@full+1)^0,c
  5953  003336                     
  5954                           ;dac.c: 39:     uint8_t bound = (full >> 8);
  5955  003336  5007               	movf	(spi_write@full+1)^0,w,c
  5956  003338  6E05               	movwf	spi_write@bound^0,c
  5957  00333A                     
  5958                           ;dac.c: 41:     SSP2BUF;
  5959  00333A  010E               	movlb	14	; () banked
  5960  00333C  5192               	movf	146,w,b	;volatile
  5961  00333E                     
  5962                           ; BSR set to: 14
  5963                           ;dac.c: 42:     SSP2BUF = bound;
  5964  00333E  C005  FE92         	movff	spi_write@bound,3730	;volatile
  5965  003342                     l421:
  5966                           
  5967                           ; BSR set to: 14
  5968  003342  A195               	btfss	149,0,b	;volatile
  5969  003344  EFA6  F019         	goto	u3071
  5970  003348  EFA8  F019         	goto	u3070
  5971  00334C                     u3071:
  5972  00334C  EFA1  F019         	goto	l421
  5973  003350                     u3070:
  5974  003350                     
  5975                           ; BSR set to: 14
  5976                           ;dac.c: 45:     SSP2STATbits.BF = 0;
  5977  003350  9195               	bcf	149,0,b	;volatile
  5978                           
  5979                           ;dac.c: 47:     bound = full;
  5980  003352  C006  F005         	movff	spi_write@full,spi_write@bound
  5981  003356                     
  5982                           ; BSR set to: 14
  5983                           ;dac.c: 48:     SSP2BUF;
  5984  003356  5192               	movf	146,w,b	;volatile
  5985  003358                     
  5986                           ; BSR set to: 14
  5987                           ;dac.c: 49:     SSP2BUF = bound;
  5988  003358  C005  FE92         	movff	spi_write@bound,3730	;volatile
  5989  00335C                     l424:
  5990                           
  5991                           ; BSR set to: 14
  5992  00335C  A195               	btfss	149,0,b	;volatile
  5993  00335E  EFB3  F019         	goto	u3081
  5994  003362  EFB5  F019         	goto	u3080
  5995  003366                     u3081:
  5996  003366  EFAE  F019         	goto	l424
  5997  00336A                     u3080:
  5998  00336A                     
  5999                           ; BSR set to: 14
  6000                           ;dac.c: 52:     LATBbits.LATB0 = 1;
  6001  00336A  8084               	bsf	132,0,c	;volatile
  6002  00336C                     
  6003                           ; BSR set to: 14
  6004  00336C  0012               	return		;funcret
  6005  00336E                     __end_of_spi_write:
  6006                           	opt callstack 0
  6007                           
  6008 ;; *************** function _spi_init *****************
  6009 ;; Defined at:
  6010 ;;		line 11 in file "dac.c"
  6011 ;; Parameters:    Size  Location     Type
  6012 ;;		None
  6013 ;; Auto vars:     Size  Location     Type
  6014 ;;		None
  6015 ;; Return value:  Size  Location     Type
  6016 ;;                  1    wreg      void 
  6017 ;; Registers used:
  6018 ;;		wreg, status,2
  6019 ;; Tracked objects:
  6020 ;;		On entry : 0/0
  6021 ;;		On exit  : 0/0
  6022 ;;		Unchanged: 0/0
  6023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6027 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6028 ;;Total ram usage:        0 bytes
  6029 ;; Hardware stack levels used:    1
  6030 ;; Hardware stack levels required when called:    1
  6031 ;; This function calls:
  6032 ;;		Nothing
  6033 ;; This function is called by:
  6034 ;;		_main
  6035 ;; This function uses a non-reentrant model
  6036 ;;
  6037                           
  6038                           	psect	text18
  6039  00375A                     __ptext18:
  6040                           	opt callstack 0
  6041  00375A                     _spi_init:
  6042                           	opt callstack 29
  6043  00375A                     
  6044                           ;dac.c: 13:     SSP2STATbits.SMP = 1;
  6045  00375A  010E               	movlb	14	; () banked
  6046  00375C  8F95               	bsf	149,7,b	;volatile
  6047                           
  6048                           ;dac.c: 15:     SSP2STATbits.CKE = 1;
  6049  00375E  8D95               	bsf	149,6,b	;volatile
  6050                           
  6051                           ;dac.c: 17:     SSP2CON1bits.SSPEN = 1;
  6052  003760  8B96               	bsf	150,5,b	;volatile
  6053  003762                     
  6054                           ; BSR set to: 14
  6055                           ;dac.c: 19:     SSP2CON1bits.SSPM = 2;
  6056  003762  5196               	movf	150,w,b	;volatile
  6057  003764  0BF0               	andlw	-16
  6058  003766  0902               	iorlw	2
  6059  003768  6F96               	movwf	150,b	;volatile
  6060  00376A                     
  6061                           ; BSR set to: 14
  6062                           ;dac.c: 21:     TRISBbits.TRISB0 = 0;
  6063  00376A  9089               	bcf	137,0,c	;volatile
  6064  00376C                     
  6065                           ; BSR set to: 14
  6066                           ;dac.c: 22:     TRISBbits.TRISB3 = 0;
  6067  00376C  9689               	bcf	137,3,c	;volatile
  6068  00376E                     
  6069                           ; BSR set to: 14
  6070                           ;dac.c: 23:     TRISBbits.TRISB1 = 0;
  6071  00376E  9289               	bcf	137,1,c	;volatile
  6072                           
  6073                           ;dac.c: 26:     RB1PPS = 0x12;
  6074  003770  0E12               	movlw	18
  6075  003772  6FF0               	movwf	240,b	;volatile
  6076                           
  6077                           ;dac.c: 27:     RB3PPS = 0x11;
  6078  003774  0E11               	movlw	17
  6079  003776  6FF2               	movwf	242,b	;volatile
  6080  003778                     
  6081                           ; BSR set to: 14
  6082  003778  0012               	return		;funcret
  6083  00377A                     __end_of_spi_init:
  6084                           	opt callstack 0
  6085                           
  6086 ;; *************** function _set_seconds *****************
  6087 ;; Defined at:
  6088 ;;		line 47 in file "timer.c"
  6089 ;; Parameters:    Size  Location     Type
  6090 ;;  sec             1    wreg     unsigned char 
  6091 ;; Auto vars:     Size  Location     Type
  6092 ;;  sec             1   12[COMRAM] unsigned char 
  6093 ;;  curr_sec        1   11[COMRAM] unsigned char 
  6094 ;; Return value:  Size  Location     Type
  6095 ;;                  1    wreg      void 
  6096 ;; Registers used:
  6097 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6098 ;; Tracked objects:
  6099 ;;		On entry : 0/0
  6100 ;;		On exit  : 0/0
  6101 ;;		Unchanged: 0/0
  6102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6104 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6105 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6106 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6107 ;;Total ram usage:        4 bytes
  6108 ;; Hardware stack levels used:    1
  6109 ;; Hardware stack levels required when called:    2
  6110 ;; This function calls:
  6111 ;;		___awdiv
  6112 ;;		___awmod
  6113 ;;		_i2c_read
  6114 ;;		_i2c_write
  6115 ;; This function is called by:
  6116 ;;		_main
  6117 ;; This function uses a non-reentrant model
  6118 ;;
  6119                           
  6120                           	psect	text19
  6121  0031C8                     __ptext19:
  6122                           	opt callstack 0
  6123  0031C8                     _set_seconds:
  6124                           	opt callstack 28
  6125                           
  6126                           ; BSR set to: 14
  6127                           ;incstack = 0
  6128                           ;set_seconds@sec stored from wreg
  6129  0031C8  6E0D               	movwf	set_seconds@sec^0,c
  6130  0031CA                     
  6131                           ;timer.c: 49:  if (sec<60) {
  6132  0031CA  0E3C               	movlw	60
  6133  0031CC  600D               	cpfslt	set_seconds@sec^0,c
  6134  0031CE  EFEB  F018         	goto	u3031
  6135  0031D2  EFED  F018         	goto	u3030
  6136  0031D6                     u3031:
  6137  0031D6  EF18  F019         	goto	l332
  6138  0031DA                     u3030:
  6139  0031DA                     
  6140                           ;timer.c: 51:   sec=((sec/10)<<4)+(sec%10);
  6141  0031DA  C00D  F002         	movff	set_seconds@sec,___awmod@dividend
  6142  0031DE  6A03               	clrf	(___awmod@dividend+1)^0,c
  6143  0031E0  0E00               	movlw	0
  6144  0031E2  6E05               	movwf	(___awmod@divisor+1)^0,c
  6145  0031E4  0E0A               	movlw	10
  6146  0031E6  6E04               	movwf	___awmod@divisor^0,c
  6147  0031E8  ECAF  F017         	call	___awmod	;wreg free
  6148  0031EC  C002  F00A         	movff	?___awmod,??_set_seconds
  6149  0031F0  C003  F00B         	movff	?___awmod+1,??_set_seconds+1
  6150  0031F4  C00D  F002         	movff	set_seconds@sec,___awdiv@dividend
  6151  0031F8  6A03               	clrf	(___awdiv@dividend+1)^0,c
  6152  0031FA  0E00               	movlw	0
  6153  0031FC  6E05               	movwf	(___awdiv@divisor+1)^0,c
  6154  0031FE  0E0A               	movlw	10
  6155  003200  6E04               	movwf	___awdiv@divisor^0,c
  6156  003202  ECD0  F015         	call	___awdiv	;wreg free
  6157  003206  5002               	movf	?___awdiv^0,w,c
  6158  003208  0D10               	mullw	16
  6159  00320A  50F3               	movf	243,w,c
  6160  00320C  240A               	addwf	??_set_seconds^0,w,c
  6161  00320E  6E0D               	movwf	set_seconds@sec^0,c
  6162  003210                     
  6163                           ;timer.c: 54:   unsigned char curr_sec = i2c_read(104, 0x00);
  6164  003210  0E00               	movlw	0
  6165  003212  6E02               	movwf	i2c_read@registers^0,c
  6166  003214  0E68               	movlw	104
  6167  003216  EC6C  F013         	call	_i2c_read
  6168  00321A  6E0C               	movwf	set_seconds@curr_sec^0,c
  6169  00321C                     
  6170                           ;timer.c: 57:   curr_sec &= 0x80;
  6171  00321C  0E80               	movlw	128
  6172  00321E  160C               	andwf	set_seconds@curr_sec^0,f,c
  6173  003220                     
  6174                           ;timer.c: 60:   i2c_write(104, 0x00, curr_sec | sec);
  6175  003220  0E00               	movlw	0
  6176  003222  6E02               	movwf	i2c_write@registers^0,c
  6177  003224  500C               	movf	set_seconds@curr_sec^0,w,c
  6178  003226  100D               	iorwf	set_seconds@sec^0,w,c
  6179  003228  6E03               	movwf	i2c_write@data^0,c
  6180  00322A  0E68               	movlw	104
  6181  00322C  EC32  F016         	call	_i2c_write
  6182  003230                     l332:
  6183  003230  0012               	return		;funcret
  6184  003232                     __end_of_set_seconds:
  6185                           	opt callstack 0
  6186                           
  6187 ;; *************** function _set_minutes *****************
  6188 ;; Defined at:
  6189 ;;		line 77 in file "timer.c"
  6190 ;; Parameters:    Size  Location     Type
  6191 ;;  min             1    wreg     unsigned char 
  6192 ;; Auto vars:     Size  Location     Type
  6193 ;;  min             1   11[COMRAM] unsigned char 
  6194 ;; Return value:  Size  Location     Type
  6195 ;;                  1    wreg      void 
  6196 ;; Registers used:
  6197 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6198 ;; Tracked objects:
  6199 ;;		On entry : 0/0
  6200 ;;		On exit  : 0/0
  6201 ;;		Unchanged: 0/0
  6202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6204 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6205 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6206 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6207 ;;Total ram usage:        3 bytes
  6208 ;; Hardware stack levels used:    1
  6209 ;; Hardware stack levels required when called:    2
  6210 ;; This function calls:
  6211 ;;		___awdiv
  6212 ;;		___awmod
  6213 ;;		_i2c_write
  6214 ;; This function is called by:
  6215 ;;		_main
  6216 ;; This function uses a non-reentrant model
  6217 ;;
  6218                           
  6219                           	psect	text20
  6220  0033D4                     __ptext20:
  6221                           	opt callstack 0
  6222  0033D4                     _set_minutes:
  6223                           	opt callstack 28
  6224                           
  6225                           ;incstack = 0
  6226                           ;set_minutes@min stored from wreg
  6227  0033D4  6E0C               	movwf	set_minutes@min^0,c
  6228  0033D6                     
  6229                           ;timer.c: 79:  if (min<60) {
  6230  0033D6  0E3C               	movlw	60
  6231  0033D8  600C               	cpfslt	set_minutes@min^0,c
  6232  0033DA  EFF1  F019         	goto	u3021
  6233  0033DE  EFF3  F019         	goto	u3020
  6234  0033E2                     u3021:
  6235  0033E2  EF15  F01A         	goto	l339
  6236  0033E6                     u3020:
  6237  0033E6                     
  6238                           ;timer.c: 81:      min = ((min/10)<<4)+(min%10);
  6239  0033E6  C00C  F002         	movff	set_minutes@min,___awmod@dividend
  6240  0033EA  6A03               	clrf	(___awmod@dividend+1)^0,c
  6241  0033EC  0E00               	movlw	0
  6242  0033EE  6E05               	movwf	(___awmod@divisor+1)^0,c
  6243  0033F0  0E0A               	movlw	10
  6244  0033F2  6E04               	movwf	___awmod@divisor^0,c
  6245  0033F4  ECAF  F017         	call	___awmod	;wreg free
  6246  0033F8  C002  F00A         	movff	?___awmod,??_set_minutes
  6247  0033FC  C003  F00B         	movff	?___awmod+1,??_set_minutes+1
  6248  003400  C00C  F002         	movff	set_minutes@min,___awdiv@dividend
  6249  003404  6A03               	clrf	(___awdiv@dividend+1)^0,c
  6250  003406  0E00               	movlw	0
  6251  003408  6E05               	movwf	(___awdiv@divisor+1)^0,c
  6252  00340A  0E0A               	movlw	10
  6253  00340C  6E04               	movwf	___awdiv@divisor^0,c
  6254  00340E  ECD0  F015         	call	___awdiv	;wreg free
  6255  003412  5002               	movf	?___awdiv^0,w,c
  6256  003414  0D10               	mullw	16
  6257  003416  50F3               	movf	243,w,c
  6258  003418  240A               	addwf	??_set_minutes^0,w,c
  6259  00341A  6E0C               	movwf	set_minutes@min^0,c
  6260  00341C                     
  6261                           ;timer.c: 84:   i2c_write(104, 0x01, min);
  6262  00341C  0E01               	movlw	1
  6263  00341E  6E02               	movwf	i2c_write@registers^0,c
  6264  003420  C00C  F003         	movff	set_minutes@min,i2c_write@data
  6265  003424  0E68               	movlw	104
  6266  003426  EC32  F016         	call	_i2c_write
  6267  00342A                     l339:
  6268  00342A  0012               	return		;funcret
  6269  00342C                     __end_of_set_minutes:
  6270                           	opt callstack 0
  6271                           
  6272 ;; *************** function _set_hours *****************
  6273 ;; Defined at:
  6274 ;;		line 101 in file "timer.c"
  6275 ;; Parameters:    Size  Location     Type
  6276 ;;  hour            1    wreg     unsigned char 
  6277 ;; Auto vars:     Size  Location     Type
  6278 ;;  hour            1   12[COMRAM] unsigned char 
  6279 ;;  curr_hour       1   11[COMRAM] unsigned char 
  6280 ;; Return value:  Size  Location     Type
  6281 ;;                  1    wreg      void 
  6282 ;; Registers used:
  6283 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6284 ;; Tracked objects:
  6285 ;;		On entry : 0/0
  6286 ;;		On exit  : 0/0
  6287 ;;		Unchanged: 0/0
  6288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6290 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6291 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6292 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6293 ;;Total ram usage:        4 bytes
  6294 ;; Hardware stack levels used:    1
  6295 ;; Hardware stack levels required when called:    2
  6296 ;; This function calls:
  6297 ;;		___awdiv
  6298 ;;		___awmod
  6299 ;;		_i2c_read
  6300 ;;		_i2c_write
  6301 ;; This function is called by:
  6302 ;;		_main
  6303 ;; This function uses a non-reentrant model
  6304 ;;
  6305                           
  6306                           	psect	text21
  6307  003232                     __ptext21:
  6308                           	opt callstack 0
  6309  003232                     _set_hours:
  6310                           	opt callstack 28
  6311                           
  6312                           ;incstack = 0
  6313                           ;set_hours@hour stored from wreg
  6314  003232  6E0D               	movwf	set_hours@hour^0,c
  6315  003234                     
  6316                           ;timer.c: 103:  if (hour<24) {
  6317  003234  0E18               	movlw	24
  6318  003236  600D               	cpfslt	set_hours@hour^0,c
  6319  003238  EF20  F019         	goto	u3011
  6320  00323C  EF22  F019         	goto	u3010
  6321  003240                     u3011:
  6322  003240  EF4D  F019         	goto	l346
  6323  003244                     u3010:
  6324  003244                     
  6325                           ;timer.c: 105:      hour=((hour/10)<<4)+(hour%10);
  6326  003244  C00D  F002         	movff	set_hours@hour,___awmod@dividend
  6327  003248  6A03               	clrf	(___awmod@dividend+1)^0,c
  6328  00324A  0E00               	movlw	0
  6329  00324C  6E05               	movwf	(___awmod@divisor+1)^0,c
  6330  00324E  0E0A               	movlw	10
  6331  003250  6E04               	movwf	___awmod@divisor^0,c
  6332  003252  ECAF  F017         	call	___awmod	;wreg free
  6333  003256  C002  F00A         	movff	?___awmod,??_set_hours
  6334  00325A  C003  F00B         	movff	?___awmod+1,??_set_hours+1
  6335  00325E  C00D  F002         	movff	set_hours@hour,___awdiv@dividend
  6336  003262  6A03               	clrf	(___awdiv@dividend+1)^0,c
  6337  003264  0E00               	movlw	0
  6338  003266  6E05               	movwf	(___awdiv@divisor+1)^0,c
  6339  003268  0E0A               	movlw	10
  6340  00326A  6E04               	movwf	___awdiv@divisor^0,c
  6341  00326C  ECD0  F015         	call	___awdiv	;wreg free
  6342  003270  5002               	movf	?___awdiv^0,w,c
  6343  003272  0D10               	mullw	16
  6344  003274  50F3               	movf	243,w,c
  6345  003276  240A               	addwf	??_set_hours^0,w,c
  6346  003278  6E0D               	movwf	set_hours@hour^0,c
  6347  00327A                     
  6348                           ;timer.c: 108:   unsigned char curr_hour= i2c_read(104, 0x02);
  6349  00327A  0E02               	movlw	2
  6350  00327C  6E02               	movwf	i2c_read@registers^0,c
  6351  00327E  0E68               	movlw	104
  6352  003280  EC6C  F013         	call	_i2c_read
  6353  003284  6E0C               	movwf	set_hours@curr_hour^0,c
  6354  003286                     
  6355                           ;timer.c: 111:   curr_hour &= 0x40;
  6356  003286  0E40               	movlw	64
  6357  003288  160C               	andwf	set_hours@curr_hour^0,f,c
  6358  00328A                     
  6359                           ;timer.c: 114:   i2c_write(104, 0x02, curr_hour | hour);
  6360  00328A  0E02               	movlw	2
  6361  00328C  6E02               	movwf	i2c_write@registers^0,c
  6362  00328E  500C               	movf	set_hours@curr_hour^0,w,c
  6363  003290  100D               	iorwf	set_hours@hour^0,w,c
  6364  003292  6E03               	movwf	i2c_write@data^0,c
  6365  003294  0E68               	movlw	104
  6366  003296  EC32  F016         	call	_i2c_write
  6367  00329A                     l346:
  6368  00329A  0012               	return		;funcret
  6369  00329C                     __end_of_set_hours:
  6370                           	opt callstack 0
  6371                           
  6372 ;; *************** function _set_Aseconds *****************
  6373 ;; Defined at:
  6374 ;;		line 223 in file "timer.c"
  6375 ;; Parameters:    Size  Location     Type
  6376 ;;  Asec            1    wreg     unsigned char 
  6377 ;; Auto vars:     Size  Location     Type
  6378 ;;  Asec            1   11[COMRAM] unsigned char 
  6379 ;; Return value:  Size  Location     Type
  6380 ;;                  1    wreg      void 
  6381 ;; Registers used:
  6382 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6383 ;; Tracked objects:
  6384 ;;		On entry : 0/0
  6385 ;;		On exit  : 0/0
  6386 ;;		Unchanged: 0/0
  6387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6389 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6390 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6391 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6392 ;;Total ram usage:        3 bytes
  6393 ;; Hardware stack levels used:    1
  6394 ;; Hardware stack levels required when called:    2
  6395 ;; This function calls:
  6396 ;;		___awdiv
  6397 ;;		___awmod
  6398 ;;		_i2c_write
  6399 ;; This function is called by:
  6400 ;;		_main
  6401 ;; This function uses a non-reentrant model
  6402 ;;
  6403                           
  6404                           	psect	text22
  6405  00342C                     __ptext22:
  6406                           	opt callstack 0
  6407  00342C                     _set_Aseconds:
  6408                           	opt callstack 28
  6409                           
  6410                           ;incstack = 0
  6411                           ;set_Aseconds@Asec stored from wreg
  6412  00342C  6E0C               	movwf	set_Aseconds@Asec^0,c
  6413  00342E                     
  6414                           ;timer.c: 225:  if (Asec<60) {
  6415  00342E  0E3C               	movlw	60
  6416  003430  600C               	cpfslt	set_Aseconds@Asec^0,c
  6417  003432  EF1D  F01A         	goto	u3061
  6418  003436  EF1F  F01A         	goto	u3060
  6419  00343A                     u3061:
  6420  00343A  EF41  F01A         	goto	l381
  6421  00343E                     u3060:
  6422  00343E                     
  6423                           ;timer.c: 227:   Asec=((Asec/10)<<4)+(Asec%10);
  6424  00343E  C00C  F002         	movff	set_Aseconds@Asec,___awmod@dividend
  6425  003442  6A03               	clrf	(___awmod@dividend+1)^0,c
  6426  003444  0E00               	movlw	0
  6427  003446  6E05               	movwf	(___awmod@divisor+1)^0,c
  6428  003448  0E0A               	movlw	10
  6429  00344A  6E04               	movwf	___awmod@divisor^0,c
  6430  00344C  ECAF  F017         	call	___awmod	;wreg free
  6431  003450  C002  F00A         	movff	?___awmod,??_set_Aseconds
  6432  003454  C003  F00B         	movff	?___awmod+1,??_set_Aseconds+1
  6433  003458  C00C  F002         	movff	set_Aseconds@Asec,___awdiv@dividend
  6434  00345C  6A03               	clrf	(___awdiv@dividend+1)^0,c
  6435  00345E  0E00               	movlw	0
  6436  003460  6E05               	movwf	(___awdiv@divisor+1)^0,c
  6437  003462  0E0A               	movlw	10
  6438  003464  6E04               	movwf	___awdiv@divisor^0,c
  6439  003466  ECD0  F015         	call	___awdiv	;wreg free
  6440  00346A  5002               	movf	?___awdiv^0,w,c
  6441  00346C  0D10               	mullw	16
  6442  00346E  50F3               	movf	243,w,c
  6443  003470  240A               	addwf	??_set_Aseconds^0,w,c
  6444  003472  6E0C               	movwf	set_Aseconds@Asec^0,c
  6445  003474                     
  6446                           ;timer.c: 230:   i2c_write(104, 0x07, Asec);
  6447  003474  0E07               	movlw	7
  6448  003476  6E02               	movwf	i2c_write@registers^0,c
  6449  003478  C00C  F003         	movff	set_Aseconds@Asec,i2c_write@data
  6450  00347C  0E68               	movlw	104
  6451  00347E  EC32  F016         	call	_i2c_write
  6452  003482                     l381:
  6453  003482  0012               	return		;funcret
  6454  003484                     __end_of_set_Aseconds:
  6455                           	opt callstack 0
  6456                           
  6457 ;; *************** function _set_Aminutes *****************
  6458 ;; Defined at:
  6459 ;;		line 247 in file "timer.c"
  6460 ;; Parameters:    Size  Location     Type
  6461 ;;  Amin            1    wreg     unsigned char 
  6462 ;; Auto vars:     Size  Location     Type
  6463 ;;  Amin            1   11[COMRAM] unsigned char 
  6464 ;; Return value:  Size  Location     Type
  6465 ;;                  1    wreg      void 
  6466 ;; Registers used:
  6467 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6468 ;; Tracked objects:
  6469 ;;		On entry : 0/0
  6470 ;;		On exit  : 0/0
  6471 ;;		Unchanged: 0/0
  6472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6474 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6475 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6476 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6477 ;;Total ram usage:        3 bytes
  6478 ;; Hardware stack levels used:    1
  6479 ;; Hardware stack levels required when called:    2
  6480 ;; This function calls:
  6481 ;;		___awdiv
  6482 ;;		___awmod
  6483 ;;		_i2c_write
  6484 ;; This function is called by:
  6485 ;;		_main
  6486 ;; This function uses a non-reentrant model
  6487 ;;
  6488                           
  6489                           	psect	text23
  6490  003484                     __ptext23:
  6491                           	opt callstack 0
  6492  003484                     _set_Aminutes:
  6493                           	opt callstack 28
  6494                           
  6495                           ;incstack = 0
  6496                           ;set_Aminutes@Amin stored from wreg
  6497  003484  6E0C               	movwf	set_Aminutes@Amin^0,c
  6498  003486                     
  6499                           ;timer.c: 249:  if (Amin<60) {
  6500  003486  0E3C               	movlw	60
  6501  003488  600C               	cpfslt	set_Aminutes@Amin^0,c
  6502  00348A  EF49  F01A         	goto	u3051
  6503  00348E  EF4B  F01A         	goto	u3050
  6504  003492                     u3051:
  6505  003492  EF6D  F01A         	goto	l388
  6506  003496                     u3050:
  6507  003496                     
  6508                           ;timer.c: 251:      Amin = ((Amin/10)<<4)+(Amin%10);
  6509  003496  C00C  F002         	movff	set_Aminutes@Amin,___awmod@dividend
  6510  00349A  6A03               	clrf	(___awmod@dividend+1)^0,c
  6511  00349C  0E00               	movlw	0
  6512  00349E  6E05               	movwf	(___awmod@divisor+1)^0,c
  6513  0034A0  0E0A               	movlw	10
  6514  0034A2  6E04               	movwf	___awmod@divisor^0,c
  6515  0034A4  ECAF  F017         	call	___awmod	;wreg free
  6516  0034A8  C002  F00A         	movff	?___awmod,??_set_Aminutes
  6517  0034AC  C003  F00B         	movff	?___awmod+1,??_set_Aminutes+1
  6518  0034B0  C00C  F002         	movff	set_Aminutes@Amin,___awdiv@dividend
  6519  0034B4  6A03               	clrf	(___awdiv@dividend+1)^0,c
  6520  0034B6  0E00               	movlw	0
  6521  0034B8  6E05               	movwf	(___awdiv@divisor+1)^0,c
  6522  0034BA  0E0A               	movlw	10
  6523  0034BC  6E04               	movwf	___awdiv@divisor^0,c
  6524  0034BE  ECD0  F015         	call	___awdiv	;wreg free
  6525  0034C2  5002               	movf	?___awdiv^0,w,c
  6526  0034C4  0D10               	mullw	16
  6527  0034C6  50F3               	movf	243,w,c
  6528  0034C8  240A               	addwf	??_set_Aminutes^0,w,c
  6529  0034CA  6E0C               	movwf	set_Aminutes@Amin^0,c
  6530  0034CC                     
  6531                           ;timer.c: 254:   i2c_write(104, 0x08, Amin);
  6532  0034CC  0E08               	movlw	8
  6533  0034CE  6E02               	movwf	i2c_write@registers^0,c
  6534  0034D0  C00C  F003         	movff	set_Aminutes@Amin,i2c_write@data
  6535  0034D4  0E68               	movlw	104
  6536  0034D6  EC32  F016         	call	_i2c_write
  6537  0034DA                     l388:
  6538  0034DA  0012               	return		;funcret
  6539  0034DC                     __end_of_set_Aminutes:
  6540                           	opt callstack 0
  6541                           
  6542 ;; *************** function _set_Ahours *****************
  6543 ;; Defined at:
  6544 ;;		line 271 in file "timer.c"
  6545 ;; Parameters:    Size  Location     Type
  6546 ;;  Ahour           1    wreg     unsigned char 
  6547 ;; Auto vars:     Size  Location     Type
  6548 ;;  Ahour           1   12[COMRAM] unsigned char 
  6549 ;;  Acurr_hour      1   11[COMRAM] unsigned char 
  6550 ;; Return value:  Size  Location     Type
  6551 ;;                  1    wreg      void 
  6552 ;; Registers used:
  6553 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6554 ;; Tracked objects:
  6555 ;;		On entry : 0/0
  6556 ;;		On exit  : 0/0
  6557 ;;		Unchanged: 0/0
  6558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6560 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6561 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6562 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6563 ;;Total ram usage:        4 bytes
  6564 ;; Hardware stack levels used:    1
  6565 ;; Hardware stack levels required when called:    2
  6566 ;; This function calls:
  6567 ;;		___awdiv
  6568 ;;		___awmod
  6569 ;;		_i2c_read
  6570 ;;		_i2c_write
  6571 ;; This function is called by:
  6572 ;;		_main
  6573 ;; This function uses a non-reentrant model
  6574 ;;
  6575                           
  6576                           	psect	text24
  6577  00329C                     __ptext24:
  6578                           	opt callstack 0
  6579  00329C                     _set_Ahours:
  6580                           	opt callstack 28
  6581                           
  6582                           ;incstack = 0
  6583                           ;set_Ahours@Ahour stored from wreg
  6584  00329C  6E0D               	movwf	set_Ahours@Ahour^0,c
  6585  00329E                     
  6586                           ;timer.c: 273:  if (Ahour<24) {
  6587  00329E  0E18               	movlw	24
  6588  0032A0  600D               	cpfslt	set_Ahours@Ahour^0,c
  6589  0032A2  EF55  F019         	goto	u3041
  6590  0032A6  EF57  F019         	goto	u3040
  6591  0032AA                     u3041:
  6592  0032AA  EF82  F019         	goto	l395
  6593  0032AE                     u3040:
  6594  0032AE                     
  6595                           ;timer.c: 275:      Ahour=((Ahour/10)<<4)+(Ahour%10);
  6596  0032AE  C00D  F002         	movff	set_Ahours@Ahour,___awmod@dividend
  6597  0032B2  6A03               	clrf	(___awmod@dividend+1)^0,c
  6598  0032B4  0E00               	movlw	0
  6599  0032B6  6E05               	movwf	(___awmod@divisor+1)^0,c
  6600  0032B8  0E0A               	movlw	10
  6601  0032BA  6E04               	movwf	___awmod@divisor^0,c
  6602  0032BC  ECAF  F017         	call	___awmod	;wreg free
  6603  0032C0  C002  F00A         	movff	?___awmod,??_set_Ahours
  6604  0032C4  C003  F00B         	movff	?___awmod+1,??_set_Ahours+1
  6605  0032C8  C00D  F002         	movff	set_Ahours@Ahour,___awdiv@dividend
  6606  0032CC  6A03               	clrf	(___awdiv@dividend+1)^0,c
  6607  0032CE  0E00               	movlw	0
  6608  0032D0  6E05               	movwf	(___awdiv@divisor+1)^0,c
  6609  0032D2  0E0A               	movlw	10
  6610  0032D4  6E04               	movwf	___awdiv@divisor^0,c
  6611  0032D6  ECD0  F015         	call	___awdiv	;wreg free
  6612  0032DA  5002               	movf	?___awdiv^0,w,c
  6613  0032DC  0D10               	mullw	16
  6614  0032DE  50F3               	movf	243,w,c
  6615  0032E0  240A               	addwf	??_set_Ahours^0,w,c
  6616  0032E2  6E0D               	movwf	set_Ahours@Ahour^0,c
  6617  0032E4                     
  6618                           ;timer.c: 278:   unsigned char Acurr_hour= i2c_read(104, 0x09);
  6619  0032E4  0E09               	movlw	9
  6620  0032E6  6E02               	movwf	i2c_read@registers^0,c
  6621  0032E8  0E68               	movlw	104
  6622  0032EA  EC6C  F013         	call	_i2c_read
  6623  0032EE  6E0C               	movwf	set_Ahours@Acurr_hour^0,c
  6624  0032F0                     
  6625                           ;timer.c: 281:   Acurr_hour &= 0x40;
  6626  0032F0  0E40               	movlw	64
  6627  0032F2  160C               	andwf	set_Ahours@Acurr_hour^0,f,c
  6628  0032F4                     
  6629                           ;timer.c: 284:   i2c_write(104, 0x09, Acurr_hour | Ahour);
  6630  0032F4  0E09               	movlw	9
  6631  0032F6  6E02               	movwf	i2c_write@registers^0,c
  6632  0032F8  500C               	movf	set_Ahours@Acurr_hour^0,w,c
  6633  0032FA  100D               	iorwf	set_Ahours@Ahour^0,w,c
  6634  0032FC  6E03               	movwf	i2c_write@data^0,c
  6635  0032FE  0E68               	movlw	104
  6636  003300  EC32  F016         	call	_i2c_write
  6637  003304                     l395:
  6638  003304  0012               	return		;funcret
  6639  003306                     __end_of_set_Ahours:
  6640                           	opt callstack 0
  6641                           
  6642 ;; *************** function ___awmod *****************
  6643 ;; Defined at:
  6644 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  6645 ;; Parameters:    Size  Location     Type
  6646 ;;  dividend        2    1[COMRAM] int 
  6647 ;;  divisor         2    3[COMRAM] int 
  6648 ;; Auto vars:     Size  Location     Type
  6649 ;;  sign            1    6[COMRAM] unsigned char 
  6650 ;;  counter         1    5[COMRAM] unsigned char 
  6651 ;; Return value:  Size  Location     Type
  6652 ;;                  2    1[COMRAM] int 
  6653 ;; Registers used:
  6654 ;;		wreg, status,2, status,0
  6655 ;; Tracked objects:
  6656 ;;		On entry : 0/0
  6657 ;;		On exit  : 0/0
  6658 ;;		Unchanged: 0/0
  6659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6660 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6661 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6663 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6664 ;;Total ram usage:        6 bytes
  6665 ;; Hardware stack levels used:    1
  6666 ;; Hardware stack levels required when called:    1
  6667 ;; This function calls:
  6668 ;;		Nothing
  6669 ;; This function is called by:
  6670 ;;		_set_seconds
  6671 ;;		_set_minutes
  6672 ;;		_set_hours
  6673 ;;		_set_Aseconds
  6674 ;;		_set_Aminutes
  6675 ;;		_set_Ahours
  6676 ;;		_set_months
  6677 ;;		_set_days
  6678 ;;		_set_years
  6679 ;; This function uses a non-reentrant model
  6680 ;;
  6681                           
  6682                           	psect	text25
  6683  002F5E                     __ptext25:
  6684                           	opt callstack 0
  6685  002F5E                     ___awmod:
  6686                           	opt callstack 28
  6687  002F5E  0E00               	movlw	0
  6688  002F60  6E07               	movwf	___awmod@sign^0,c
  6689  002F62  BE03               	btfsc	(___awmod@dividend+1)^0,7,c
  6690  002F64  EFB8  F017         	goto	u2900
  6691  002F68  EFB6  F017         	goto	u2901
  6692  002F6C                     u2901:
  6693  002F6C  EFBE  F017         	goto	l3217
  6694  002F70                     u2900:
  6695  002F70  6C02               	negf	___awmod@dividend^0,c
  6696  002F72  1E03               	comf	(___awmod@dividend+1)^0,f,c
  6697  002F74  B0D8               	btfsc	status,0,c
  6698  002F76  2A03               	incf	(___awmod@dividend+1)^0,f,c
  6699  002F78  0E01               	movlw	1
  6700  002F7A  6E07               	movwf	___awmod@sign^0,c
  6701  002F7C                     l3217:
  6702  002F7C  BE05               	btfsc	(___awmod@divisor+1)^0,7,c
  6703  002F7E  EFC5  F017         	goto	u2910
  6704  002F82  EFC3  F017         	goto	u2911
  6705  002F86                     u2911:
  6706  002F86  EFC9  F017         	goto	l3221
  6707  002F8A                     u2910:
  6708  002F8A  6C04               	negf	___awmod@divisor^0,c
  6709  002F8C  1E05               	comf	(___awmod@divisor+1)^0,f,c
  6710  002F8E  B0D8               	btfsc	status,0,c
  6711  002F90  2A05               	incf	(___awmod@divisor+1)^0,f,c
  6712  002F92                     l3221:
  6713  002F92  5004               	movf	___awmod@divisor^0,w,c
  6714  002F94  1005               	iorwf	(___awmod@divisor+1)^0,w,c
  6715  002F96  B4D8               	btfsc	status,2,c
  6716  002F98  EFD0  F017         	goto	u2921
  6717  002F9C  EFD2  F017         	goto	u2920
  6718  002FA0                     u2921:
  6719  002FA0  EFF6  F017         	goto	l3237
  6720  002FA4                     u2920:
  6721  002FA4  0E01               	movlw	1
  6722  002FA6  6E06               	movwf	___awmod@counter^0,c
  6723  002FA8  EFDA  F017         	goto	l3227
  6724  002FAC                     l3225:
  6725  002FAC  90D8               	bcf	status,0,c
  6726  002FAE  3604               	rlcf	___awmod@divisor^0,f,c
  6727  002FB0  3605               	rlcf	(___awmod@divisor+1)^0,f,c
  6728  002FB2  2A06               	incf	___awmod@counter^0,f,c
  6729  002FB4                     l3227:
  6730  002FB4  AE05               	btfss	(___awmod@divisor+1)^0,7,c
  6731  002FB6  EFDF  F017         	goto	u2931
  6732  002FBA  EFE1  F017         	goto	u2930
  6733  002FBE                     u2931:
  6734  002FBE  EFD6  F017         	goto	l3225
  6735  002FC2                     u2930:
  6736  002FC2                     l3229:
  6737  002FC2  5004               	movf	___awmod@divisor^0,w,c
  6738  002FC4  5C02               	subwf	___awmod@dividend^0,w,c
  6739  002FC6  5005               	movf	(___awmod@divisor+1)^0,w,c
  6740  002FC8  5803               	subwfb	(___awmod@dividend+1)^0,w,c
  6741  002FCA  A0D8               	btfss	status,0,c
  6742  002FCC  EFEA  F017         	goto	u2941
  6743  002FD0  EFEC  F017         	goto	u2940
  6744  002FD4                     u2941:
  6745  002FD4  EFF0  F017         	goto	l3233
  6746  002FD8                     u2940:
  6747  002FD8  5004               	movf	___awmod@divisor^0,w,c
  6748  002FDA  5E02               	subwf	___awmod@dividend^0,f,c
  6749  002FDC  5005               	movf	(___awmod@divisor+1)^0,w,c
  6750  002FDE  5A03               	subwfb	(___awmod@dividend+1)^0,f,c
  6751  002FE0                     l3233:
  6752  002FE0  90D8               	bcf	status,0,c
  6753  002FE2  3205               	rrcf	(___awmod@divisor+1)^0,f,c
  6754  002FE4  3204               	rrcf	___awmod@divisor^0,f,c
  6755  002FE6  2E06               	decfsz	___awmod@counter^0,f,c
  6756  002FE8  EFE1  F017         	goto	l3229
  6757  002FEC                     l3237:
  6758  002FEC  5007               	movf	___awmod@sign^0,w,c
  6759  002FEE  B4D8               	btfsc	status,2,c
  6760  002FF0  EFFC  F017         	goto	u2951
  6761  002FF4  EFFE  F017         	goto	u2950
  6762  002FF8                     u2951:
  6763  002FF8  EF02  F018         	goto	l3241
  6764  002FFC                     u2950:
  6765  002FFC  6C02               	negf	___awmod@dividend^0,c
  6766  002FFE  1E03               	comf	(___awmod@dividend+1)^0,f,c
  6767  003000  B0D8               	btfsc	status,0,c
  6768  003002  2A03               	incf	(___awmod@dividend+1)^0,f,c
  6769  003004                     l3241:
  6770  003004  C002  F002         	movff	___awmod@dividend,?___awmod
  6771  003008  C003  F003         	movff	___awmod@dividend+1,?___awmod+1
  6772  00300C  0012               	return		;funcret
  6773  00300E                     __end_of___awmod:
  6774                           	opt callstack 0
  6775                           
  6776 ;; *************** function ___awdiv *****************
  6777 ;; Defined at:
  6778 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
  6779 ;; Parameters:    Size  Location     Type
  6780 ;;  dividend        2    1[COMRAM] int 
  6781 ;;  divisor         2    3[COMRAM] int 
  6782 ;; Auto vars:     Size  Location     Type
  6783 ;;  quotient        2    7[COMRAM] int 
  6784 ;;  sign            1    6[COMRAM] unsigned char 
  6785 ;;  counter         1    5[COMRAM] unsigned char 
  6786 ;; Return value:  Size  Location     Type
  6787 ;;                  2    1[COMRAM] int 
  6788 ;; Registers used:
  6789 ;;		wreg, status,2, status,0
  6790 ;; Tracked objects:
  6791 ;;		On entry : 0/0
  6792 ;;		On exit  : 0/0
  6793 ;;		Unchanged: 0/0
  6794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6795 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6796 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6798 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6799 ;;Total ram usage:        8 bytes
  6800 ;; Hardware stack levels used:    1
  6801 ;; Hardware stack levels required when called:    1
  6802 ;; This function calls:
  6803 ;;		Nothing
  6804 ;; This function is called by:
  6805 ;;		_set_seconds
  6806 ;;		_set_minutes
  6807 ;;		_set_hours
  6808 ;;		_set_Aseconds
  6809 ;;		_set_Aminutes
  6810 ;;		_set_Ahours
  6811 ;;		_set_months
  6812 ;;		_set_days
  6813 ;;		_set_years
  6814 ;; This function uses a non-reentrant model
  6815 ;;
  6816                           
  6817                           	psect	text26
  6818  002BA0                     __ptext26:
  6819                           	opt callstack 0
  6820  002BA0                     ___awdiv:
  6821                           	opt callstack 28
  6822  002BA0  0E00               	movlw	0
  6823  002BA2  6E07               	movwf	___awdiv@sign^0,c
  6824  002BA4  BE05               	btfsc	(___awdiv@divisor+1)^0,7,c
  6825  002BA6  EFD9  F015         	goto	u2840
  6826  002BAA  EFD7  F015         	goto	u2841
  6827  002BAE                     u2841:
  6828  002BAE  EFDF  F015         	goto	l3173
  6829  002BB2                     u2840:
  6830  002BB2  6C04               	negf	___awdiv@divisor^0,c
  6831  002BB4  1E05               	comf	(___awdiv@divisor+1)^0,f,c
  6832  002BB6  B0D8               	btfsc	status,0,c
  6833  002BB8  2A05               	incf	(___awdiv@divisor+1)^0,f,c
  6834  002BBA  0E01               	movlw	1
  6835  002BBC  6E07               	movwf	___awdiv@sign^0,c
  6836  002BBE                     l3173:
  6837  002BBE  BE03               	btfsc	(___awdiv@dividend+1)^0,7,c
  6838  002BC0  EFE6  F015         	goto	u2850
  6839  002BC4  EFE4  F015         	goto	u2851
  6840  002BC8                     u2851:
  6841  002BC8  EFEC  F015         	goto	l3179
  6842  002BCC                     u2850:
  6843  002BCC  6C02               	negf	___awdiv@dividend^0,c
  6844  002BCE  1E03               	comf	(___awdiv@dividend+1)^0,f,c
  6845  002BD0  B0D8               	btfsc	status,0,c
  6846  002BD2  2A03               	incf	(___awdiv@dividend+1)^0,f,c
  6847  002BD4  0E01               	movlw	1
  6848  002BD6  1A07               	xorwf	___awdiv@sign^0,f,c
  6849  002BD8                     l3179:
  6850  002BD8  0E00               	movlw	0
  6851  002BDA  6E09               	movwf	(___awdiv@quotient+1)^0,c
  6852  002BDC  0E00               	movlw	0
  6853  002BDE  6E08               	movwf	___awdiv@quotient^0,c
  6854  002BE0  5004               	movf	___awdiv@divisor^0,w,c
  6855  002BE2  1005               	iorwf	(___awdiv@divisor+1)^0,w,c
  6856  002BE4  B4D8               	btfsc	status,2,c
  6857  002BE6  EFF7  F015         	goto	u2861
  6858  002BEA  EFF9  F015         	goto	u2860
  6859  002BEE                     u2861:
  6860  002BEE  EF21  F016         	goto	l3201
  6861  002BF2                     u2860:
  6862  002BF2  0E01               	movlw	1
  6863  002BF4  6E06               	movwf	___awdiv@counter^0,c
  6864  002BF6  EF01  F016         	goto	l3187
  6865  002BFA                     l3185:
  6866  002BFA  90D8               	bcf	status,0,c
  6867  002BFC  3604               	rlcf	___awdiv@divisor^0,f,c
  6868  002BFE  3605               	rlcf	(___awdiv@divisor+1)^0,f,c
  6869  002C00  2A06               	incf	___awdiv@counter^0,f,c
  6870  002C02                     l3187:
  6871  002C02  AE05               	btfss	(___awdiv@divisor+1)^0,7,c
  6872  002C04  EF06  F016         	goto	u2871
  6873  002C08  EF08  F016         	goto	u2870
  6874  002C0C                     u2871:
  6875  002C0C  EFFD  F015         	goto	l3185
  6876  002C10                     u2870:
  6877  002C10                     l3189:
  6878  002C10  90D8               	bcf	status,0,c
  6879  002C12  3608               	rlcf	___awdiv@quotient^0,f,c
  6880  002C14  3609               	rlcf	(___awdiv@quotient+1)^0,f,c
  6881  002C16  5004               	movf	___awdiv@divisor^0,w,c
  6882  002C18  5C02               	subwf	___awdiv@dividend^0,w,c
  6883  002C1A  5005               	movf	(___awdiv@divisor+1)^0,w,c
  6884  002C1C  5803               	subwfb	(___awdiv@dividend+1)^0,w,c
  6885  002C1E  A0D8               	btfss	status,0,c
  6886  002C20  EF14  F016         	goto	u2881
  6887  002C24  EF16  F016         	goto	u2880
  6888  002C28                     u2881:
  6889  002C28  EF1B  F016         	goto	l3197
  6890  002C2C                     u2880:
  6891  002C2C  5004               	movf	___awdiv@divisor^0,w,c
  6892  002C2E  5E02               	subwf	___awdiv@dividend^0,f,c
  6893  002C30  5005               	movf	(___awdiv@divisor+1)^0,w,c
  6894  002C32  5A03               	subwfb	(___awdiv@dividend+1)^0,f,c
  6895  002C34  8008               	bsf	___awdiv@quotient^0,0,c
  6896  002C36                     l3197:
  6897  002C36  90D8               	bcf	status,0,c
  6898  002C38  3205               	rrcf	(___awdiv@divisor+1)^0,f,c
  6899  002C3A  3204               	rrcf	___awdiv@divisor^0,f,c
  6900  002C3C  2E06               	decfsz	___awdiv@counter^0,f,c
  6901  002C3E  EF08  F016         	goto	l3189
  6902  002C42                     l3201:
  6903  002C42  5007               	movf	___awdiv@sign^0,w,c
  6904  002C44  B4D8               	btfsc	status,2,c
  6905  002C46  EF27  F016         	goto	u2891
  6906  002C4A  EF29  F016         	goto	u2890
  6907  002C4E                     u2891:
  6908  002C4E  EF2D  F016         	goto	l3205
  6909  002C52                     u2890:
  6910  002C52  6C08               	negf	___awdiv@quotient^0,c
  6911  002C54  1E09               	comf	(___awdiv@quotient+1)^0,f,c
  6912  002C56  B0D8               	btfsc	status,0,c
  6913  002C58  2A09               	incf	(___awdiv@quotient+1)^0,f,c
  6914  002C5A                     l3205:
  6915  002C5A  C008  F002         	movff	___awdiv@quotient,?___awdiv
  6916  002C5E  C009  F003         	movff	___awdiv@quotient+1,?___awdiv+1
  6917  002C62  0012               	return		;funcret
  6918  002C64                     __end_of___awdiv:
  6919                           	opt callstack 0
  6920                           
  6921 ;; *************** function _rtc_init *****************
  6922 ;; Defined at:
  6923 ;;		line 12 in file "timer.c"
  6924 ;; Parameters:    Size  Location     Type
  6925 ;;		None
  6926 ;; Auto vars:     Size  Location     Type
  6927 ;;  i               2    8[COMRAM] unsigned int 
  6928 ;;  hour            1   11[COMRAM] unsigned char 
  6929 ;;  sec             1   10[COMRAM] unsigned char 
  6930 ;; Return value:  Size  Location     Type
  6931 ;;                  1    wreg      void 
  6932 ;; Registers used:
  6933 ;;		wreg, status,2, status,0, cstack
  6934 ;; Tracked objects:
  6935 ;;		On entry : 0/0
  6936 ;;		On exit  : 0/0
  6937 ;;		Unchanged: 0/0
  6938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6940 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6942 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6943 ;;Total ram usage:        4 bytes
  6944 ;; Hardware stack levels used:    1
  6945 ;; Hardware stack levels required when called:    2
  6946 ;; This function calls:
  6947 ;;		_i2c_read
  6948 ;;		_i2c_write
  6949 ;; This function is called by:
  6950 ;;		_main
  6951 ;; This function uses a non-reentrant model
  6952 ;;
  6953                           
  6954                           	psect	text27
  6955  003148                     __ptext27:
  6956                           	opt callstack 0
  6957  003148                     _rtc_init:
  6958                           	opt callstack 28
  6959  003148                     
  6960                           ;timer.c: 14:  unsigned char sec = i2c_read(104, 0x00);
  6961  003148  0E00               	movlw	0
  6962  00314A  6E02               	movwf	i2c_read@registers^0,c
  6963  00314C  0E68               	movlw	104
  6964  00314E  EC6C  F013         	call	_i2c_read
  6965  003152  6E0B               	movwf	rtc_init@sec^0,c
  6966  003154                     
  6967                           ;timer.c: 17:  if ((sec&0x80)!= 0) {
  6968  003154  AE0B               	btfss	rtc_init@sec^0,7,c
  6969  003156  EFAF  F018         	goto	u2961
  6970  00315A  EFB1  F018         	goto	u2960
  6971  00315E                     u2961:
  6972  00315E  EFCE  F018         	goto	l3277
  6973  003162                     u2960:
  6974  003162                     
  6975                           ;timer.c: 18:   i2c_write(104, 0x00, sec & 0x7f);
  6976  003162  0E00               	movlw	0
  6977  003164  6E02               	movwf	i2c_write@registers^0,c
  6978  003166  500B               	movf	rtc_init@sec^0,w,c
  6979  003168  0B7F               	andlw	127
  6980  00316A  6E03               	movwf	i2c_write@data^0,c
  6981  00316C  0E68               	movlw	104
  6982  00316E  EC32  F016         	call	_i2c_write
  6983  003172                     
  6984                           ;timer.c: 20:   for (unsigned int i = 0; i < 500; i++) {
  6985  003172  0E00               	movlw	0
  6986  003174  6E0A               	movwf	(rtc_init@i+1)^0,c
  6987  003176  0E00               	movlw	0
  6988  003178  6E09               	movwf	rtc_init@i^0,c
  6989  00317A                     l3273:
  6990                           
  6991                           ;timer.c: 21:    _delay((unsigned long)((1)*(4000000/4000.0)));
  6992  00317A  0EC8               	movlw	200
  6993  00317C                     u5067:
  6994  00317C  D000               	nop2	
  6995  00317E  2EE8               	decfsz	wreg,f,c
  6996  003180  D7FD               	bra	u5067
  6997  003182                     
  6998                           ;timer.c: 22:   }
  6999  003182  4A09               	infsnz	rtc_init@i^0,f,c
  7000  003184  2A0A               	incf	(rtc_init@i+1)^0,f,c
  7001  003186  0EF4               	movlw	244
  7002  003188  5C09               	subwf	rtc_init@i^0,w,c
  7003  00318A  0E01               	movlw	1
  7004  00318C  580A               	subwfb	(rtc_init@i+1)^0,w,c
  7005  00318E  A0D8               	btfss	status,0,c
  7006  003190  EFCC  F018         	goto	u2971
  7007  003194  EFCE  F018         	goto	u2970
  7008  003198                     u2971:
  7009  003198  EFBD  F018         	goto	l3273
  7010  00319C                     u2970:
  7011  00319C                     l3277:
  7012                           
  7013                           ;timer.c: 26:  unsigned char hour = i2c_read(104, 0x02);
  7014  00319C  0E02               	movlw	2
  7015  00319E  6E02               	movwf	i2c_read@registers^0,c
  7016  0031A0  0E68               	movlw	104
  7017  0031A2  EC6C  F013         	call	_i2c_read
  7018  0031A6  6E0C               	movwf	rtc_init@hour^0,c
  7019  0031A8                     
  7020                           ;timer.c: 29:  if ((hour & 0x40) != 0) {
  7021  0031A8  AC0C               	btfss	rtc_init@hour^0,6,c
  7022  0031AA  EFD9  F018         	goto	u2981
  7023  0031AE  EFDB  F018         	goto	u2980
  7024  0031B2                     u2981:
  7025  0031B2  EFE3  F018         	goto	l325
  7026  0031B6                     u2980:
  7027  0031B6                     
  7028                           ;timer.c: 30:   i2c_write(104, 0x02, hour & 0xbf);
  7029  0031B6  0E02               	movlw	2
  7030  0031B8  6E02               	movwf	i2c_write@registers^0,c
  7031  0031BA  500C               	movf	rtc_init@hour^0,w,c
  7032  0031BC  0BBF               	andlw	191
  7033  0031BE  6E03               	movwf	i2c_write@data^0,c
  7034  0031C0  0E68               	movlw	104
  7035  0031C2  EC32  F016         	call	_i2c_write
  7036  0031C6                     l325:
  7037  0031C6  0012               	return		;funcret
  7038  0031C8                     __end_of_rtc_init:
  7039                           	opt callstack 0
  7040                           
  7041 ;; *************** function _i2c_write *****************
  7042 ;; Defined at:
  7043 ;;		line 103 in file "../timer.X/i2c.c"
  7044 ;; Parameters:    Size  Location     Type
  7045 ;;  address         1    wreg     unsigned char 
  7046 ;;  registers       1    1[COMRAM] unsigned char 
  7047 ;;  data            1    2[COMRAM] unsigned char 
  7048 ;; Auto vars:     Size  Location     Type
  7049 ;;  address         1    3[COMRAM] unsigned char 
  7050 ;; Return value:  Size  Location     Type
  7051 ;;                  1    wreg      void 
  7052 ;; Registers used:
  7053 ;;		wreg, status,2, status,0
  7054 ;; Tracked objects:
  7055 ;;		On entry : 0/0
  7056 ;;		On exit  : 0/0
  7057 ;;		Unchanged: 0/0
  7058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7059 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7060 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7062 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7063 ;;Total ram usage:        3 bytes
  7064 ;; Hardware stack levels used:    1
  7065 ;; Hardware stack levels required when called:    1
  7066 ;; This function calls:
  7067 ;;		Nothing
  7068 ;; This function is called by:
  7069 ;;		_main
  7070 ;;		_rtc_init
  7071 ;;		_set_seconds
  7072 ;;		_set_minutes
  7073 ;;		_set_hours
  7074 ;;		_set_Aseconds
  7075 ;;		_set_Aminutes
  7076 ;;		_set_Ahours
  7077 ;;		_set_dayname
  7078 ;;		_set_months
  7079 ;;		_set_days
  7080 ;;		_set_years
  7081 ;; This function uses a non-reentrant model
  7082 ;;
  7083                           
  7084                           	psect	text28
  7085  002C64                     __ptext28:
  7086                           	opt callstack 0
  7087  002C64                     _i2c_write:
  7088                           	opt callstack 28
  7089                           
  7090                           ;incstack = 0
  7091                           ;i2c_write@address stored from wreg
  7092  002C64  6E04               	movwf	i2c_write@address^0,c
  7093  002C66                     
  7094                           ;../timer.X/i2c.c: 104:  SSP1CON2bits.SEN = 1;
  7095  002C66  8097               	bsf	151,0,c	;volatile
  7096  002C68                     l270:
  7097  002C68  B097               	btfsc	151,0,c	;volatile
  7098  002C6A  EF39  F016         	goto	u2721
  7099  002C6E  EF3B  F016         	goto	u2720
  7100  002C72                     u2721:
  7101  002C72  EF34  F016         	goto	l270
  7102  002C76                     u2720:
  7103  002C76                     
  7104                           ;../timer.X/i2c.c: 107:  SSP1BUF = (address << 1) & 0xfe;
  7105  002C76  5004               	movf	i2c_write@address^0,w,c
  7106  002C78  2404               	addwf	i2c_write@address^0,w,c
  7107  002C7A  0BFE               	andlw	254
  7108  002C7C  6E92               	movwf	146,c	;volatile
  7109  002C7E                     l273:
  7110  002C7E  B495               	btfsc	149,2,c	;volatile
  7111  002C80  EF44  F016         	goto	u2731
  7112  002C84  EF46  F016         	goto	u2730
  7113  002C88                     u2731:
  7114  002C88  EF3F  F016         	goto	l273
  7115  002C8C                     u2730:
  7116  002C8C                     
  7117                           ;../timer.X/i2c.c: 112:  if (SSP1CON2bits.ACKSTAT == 1) {
  7118  002C8C  AC97               	btfss	151,6,c	;volatile
  7119  002C8E  EF4B  F016         	goto	u2741
  7120  002C92  EF4D  F016         	goto	u2740
  7121  002C96                     u2741:
  7122  002C96  EF57  F016         	goto	l276
  7123  002C9A                     u2740:
  7124  002C9A                     
  7125                           ;../timer.X/i2c.c: 113:   SSP1CON2bits.PEN = 1;
  7126  002C9A  8497               	bsf	151,2,c	;volatile
  7127  002C9C                     l277:
  7128  002C9C  B497               	btfsc	151,2,c	;volatile
  7129  002C9E  EF53  F016         	goto	u2751
  7130  002CA2  EF55  F016         	goto	u2750
  7131  002CA6                     u2751:
  7132  002CA6  EF4E  F016         	goto	l277
  7133  002CAA                     u2750:
  7134  002CAA  EF93  F016         	goto	l280
  7135  002CAE                     l276:
  7136                           
  7137                           ;../timer.X/i2c.c: 118:  SSP1BUF = registers;
  7138  002CAE  C002  FF92         	movff	i2c_write@registers,3986	;volatile
  7139  002CB2                     l281:
  7140  002CB2  B495               	btfsc	149,2,c	;volatile
  7141  002CB4  EF5E  F016         	goto	u2761
  7142  002CB8  EF60  F016         	goto	u2760
  7143  002CBC                     u2761:
  7144  002CBC  EF59  F016         	goto	l281
  7145  002CC0                     u2760:
  7146  002CC0                     
  7147                           ;../timer.X/i2c.c: 123:  if (SSP1CON2bits.ACKSTAT == 1) {
  7148  002CC0  AC97               	btfss	151,6,c	;volatile
  7149  002CC2  EF65  F016         	goto	u2771
  7150  002CC6  EF67  F016         	goto	u2770
  7151  002CCA                     u2771:
  7152  002CCA  EF71  F016         	goto	l284
  7153  002CCE                     u2770:
  7154  002CCE                     
  7155                           ;../timer.X/i2c.c: 124:   SSP1CON2bits.PEN = 1;
  7156  002CCE  8497               	bsf	151,2,c	;volatile
  7157  002CD0                     l285:
  7158  002CD0  B497               	btfsc	151,2,c	;volatile
  7159  002CD2  EF6D  F016         	goto	u2781
  7160  002CD6  EF6F  F016         	goto	u2780
  7161  002CDA                     u2781:
  7162  002CDA  EF68  F016         	goto	l285
  7163  002CDE                     u2780:
  7164  002CDE  EF93  F016         	goto	l280
  7165  002CE2                     l284:
  7166                           
  7167                           ;../timer.X/i2c.c: 129:  SSP1BUF = data;
  7168  002CE2  C003  FF92         	movff	i2c_write@data,3986	;volatile
  7169  002CE6                     l288:
  7170  002CE6  B495               	btfsc	149,2,c	;volatile
  7171  002CE8  EF78  F016         	goto	u2791
  7172  002CEC  EF7A  F016         	goto	u2790
  7173  002CF0                     u2791:
  7174  002CF0  EF73  F016         	goto	l288
  7175  002CF4                     u2790:
  7176  002CF4                     
  7177                           ;../timer.X/i2c.c: 133:  if (SSP1CON2bits.ACKSTAT == 1) {
  7178  002CF4  AC97               	btfss	151,6,c	;volatile
  7179  002CF6  EF7F  F016         	goto	u2801
  7180  002CFA  EF81  F016         	goto	u2800
  7181  002CFE                     u2801:
  7182  002CFE  EF8B  F016         	goto	l291
  7183  002D02                     u2800:
  7184  002D02                     
  7185                           ;../timer.X/i2c.c: 134:   SSP1CON2bits.PEN = 1;
  7186  002D02  8497               	bsf	151,2,c	;volatile
  7187  002D04                     l292:
  7188  002D04  B497               	btfsc	151,2,c	;volatile
  7189  002D06  EF87  F016         	goto	u2811
  7190  002D0A  EF89  F016         	goto	u2810
  7191  002D0E                     u2811:
  7192  002D0E  EF82  F016         	goto	l292
  7193  002D12                     u2810:
  7194  002D12  EF93  F016         	goto	l280
  7195  002D16                     l291:
  7196                           
  7197                           ;../timer.X/i2c.c: 139:     SSP1CON2bits.PEN = 1;
  7198  002D16  8497               	bsf	151,2,c	;volatile
  7199  002D18                     l295:
  7200  002D18  B497               	btfsc	151,2,c	;volatile
  7201  002D1A  EF91  F016         	goto	u2821
  7202  002D1E  EF93  F016         	goto	u2820
  7203  002D22                     u2821:
  7204  002D22  EF8C  F016         	goto	l295
  7205  002D26                     u2820:
  7206  002D26                     l280:
  7207  002D26  0012               	return		;funcret
  7208  002D28                     __end_of_i2c_write:
  7209                           	opt callstack 0
  7210                           
  7211 ;; *************** function _lcd_init *****************
  7212 ;; Defined at:
  7213 ;;		line 61 in file "../timer.X/lcd.c"
  7214 ;; Parameters:    Size  Location     Type
  7215 ;;		None
  7216 ;; Auto vars:     Size  Location     Type
  7217 ;;		None
  7218 ;; Return value:  Size  Location     Type
  7219 ;;                  1    wreg      void 
  7220 ;; Registers used:
  7221 ;;		wreg, status,2, status,0, cstack
  7222 ;; Tracked objects:
  7223 ;;		On entry : 0/0
  7224 ;;		On exit  : 0/0
  7225 ;;		Unchanged: 0/0
  7226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7230 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7231 ;;Total ram usage:        0 bytes
  7232 ;; Hardware stack levels used:    1
  7233 ;; Hardware stack levels required when called:    2
  7234 ;; This function calls:
  7235 ;;		_lcd_command
  7236 ;; This function is called by:
  7237 ;;		_main
  7238 ;; This function uses a non-reentrant model
  7239 ;;
  7240                           
  7241                           	psect	text29
  7242  00377A                     __ptext29:
  7243                           	opt callstack 0
  7244  00377A                     _lcd_init:
  7245                           	opt callstack 28
  7246  00377A                     
  7247                           ;../timer.X/lcd.c: 62:  lcd_command(0x33);
  7248  00377A  0E33               	movlw	51
  7249  00377C  ECF5  F016         	call	_lcd_command
  7250                           
  7251                           ;../timer.X/lcd.c: 63:  lcd_command(0x32);
  7252  003780  0E32               	movlw	50
  7253  003782  ECF5  F016         	call	_lcd_command
  7254                           
  7255                           ;../timer.X/lcd.c: 64:  lcd_command(0x2C);
  7256  003786  0E2C               	movlw	44
  7257  003788  ECF5  F016         	call	_lcd_command
  7258                           
  7259                           ;../timer.X/lcd.c: 65:  lcd_command(0x0C);
  7260  00378C  0E0C               	movlw	12
  7261  00378E  ECF5  F016         	call	_lcd_command
  7262                           
  7263                           ;../timer.X/lcd.c: 66:  lcd_command(0x01);
  7264  003792  0E01               	movlw	1
  7265  003794  ECF5  F016         	call	_lcd_command
  7266  003798  0012               	return		;funcret
  7267  00379A                     __end_of_lcd_init:
  7268                           	opt callstack 0
  7269                           
  7270 ;; *************** function _lcd_command *****************
  7271 ;; Defined at:
  7272 ;;		line 13 in file "../timer.X/lcd.c"
  7273 ;; Parameters:    Size  Location     Type
  7274 ;;  x               1    wreg     unsigned char 
  7275 ;; Auto vars:     Size  Location     Type
  7276 ;;  x               1    3[COMRAM] unsigned char 
  7277 ;;  temp            1    2[COMRAM] unsigned char 
  7278 ;; Return value:  Size  Location     Type
  7279 ;;                  1    wreg      void 
  7280 ;; Registers used:
  7281 ;;		wreg, status,2, status,0, cstack
  7282 ;; Tracked objects:
  7283 ;;		On entry : 0/0
  7284 ;;		On exit  : 0/0
  7285 ;;		Unchanged: 0/0
  7286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7288 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7289 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7290 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7291 ;;Total ram usage:        3 bytes
  7292 ;; Hardware stack levels used:    1
  7293 ;; Hardware stack levels required when called:    1
  7294 ;; This function calls:
  7295 ;;		Nothing
  7296 ;; This function is called by:
  7297 ;;		_main
  7298 ;;		_lcd_init
  7299 ;; This function uses a non-reentrant model
  7300 ;;
  7301                           
  7302                           	psect	text30
  7303  002DEA                     __ptext30:
  7304                           	opt callstack 0
  7305  002DEA                     _lcd_command:
  7306                           	opt callstack 28
  7307                           
  7308                           ;incstack = 0
  7309                           ;lcd_command@x stored from wreg
  7310  002DEA  6E04               	movwf	lcd_command@x^0,c
  7311  002DEC                     
  7312                           ;../timer.X/lcd.c: 14:  char temp;;../timer.X/lcd.c: 17:  TRISDbits.TRISD0 = 0;
  7313  002DEC  908B               	bcf	139,0,c	;volatile
  7314                           
  7315                           ;../timer.X/lcd.c: 18:  TRISDbits.TRISD1 = 0;
  7316  002DEE  928B               	bcf	139,1,c	;volatile
  7317                           
  7318                           ;../timer.X/lcd.c: 19:  TRISDbits.TRISD2 = 0;
  7319  002DF0  948B               	bcf	139,2,c	;volatile
  7320                           
  7321                           ;../timer.X/lcd.c: 20:  TRISDbits.TRISD3 = 0;
  7322  002DF2  968B               	bcf	139,3,c	;volatile
  7323                           
  7324                           ;../timer.X/lcd.c: 21:  TRISDbits.TRISD4 = 0;
  7325  002DF4  988B               	bcf	139,4,c	;volatile
  7326                           
  7327                           ;../timer.X/lcd.c: 22:  TRISDbits.TRISD7 = 0;
  7328  002DF6  9E8B               	bcf	139,7,c	;volatile
  7329  002DF8                     
  7330                           ;../timer.X/lcd.c: 24:  temp = x;
  7331  002DF8  C004  F003         	movff	lcd_command@x,lcd_command@temp
  7332  002DFC                     
  7333                           ;../timer.X/lcd.c: 27:     PORTD = 0;
  7334  002DFC  0E00               	movlw	0
  7335  002DFE  6E90               	movwf	144,c	;volatile
  7336  002E00                     
  7337                           ;../timer.X/lcd.c: 28:     _delay((unsigned long)((5)*(4000000/4000.0)));
  7338  002E00  0E07               	movlw	7
  7339  002E02  6E02               	movwf	??_lcd_command^0,c
  7340  002E04  0E7D               	movlw	125
  7341  002E06                     u5077:
  7342  002E06  2EE8               	decfsz	wreg,f,c
  7343  002E08  D7FE               	bra	u5077
  7344  002E0A  2E02               	decfsz	??_lcd_command^0,f,c
  7345  002E0C  D7FC               	bra	u5077
  7346  002E0E  F000               	nop	
  7347  002E10                     
  7348                           ;../timer.X/lcd.c: 30:  x = x >>4;
  7349  002E10  3804               	swapf	lcd_command@x^0,w,c
  7350  002E12  0B0F               	andlw	15
  7351  002E14  6E04               	movwf	lcd_command@x^0,c
  7352  002E16                     
  7353                           ;../timer.X/lcd.c: 31:  x = x & 0xF;
  7354  002E16  5004               	movf	lcd_command@x^0,w,c
  7355  002E18  0B0F               	andlw	15
  7356  002E1A  6E04               	movwf	lcd_command@x^0,c
  7357  002E1C                     
  7358                           ;../timer.X/lcd.c: 32:  x = x | 0x80;
  7359  002E1C  5004               	movf	lcd_command@x^0,w,c
  7360  002E1E  0980               	iorlw	128
  7361  002E20  6E04               	movwf	lcd_command@x^0,c
  7362  002E22                     
  7363                           ;../timer.X/lcd.c: 33:  PORTD = x;
  7364  002E22  C004  FF90         	movff	lcd_command@x,3984	;volatile
  7365  002E26                     
  7366                           ;../timer.X/lcd.c: 34:  _delay((unsigned long)((5)*(4000000/4000.0)));
  7367  002E26  0E07               	movlw	7
  7368  002E28  6E02               	movwf	??_lcd_command^0,c
  7369  002E2A  0E7D               	movlw	125
  7370  002E2C                     u5087:
  7371  002E2C  2EE8               	decfsz	wreg,f,c
  7372  002E2E  D7FE               	bra	u5087
  7373  002E30  2E02               	decfsz	??_lcd_command^0,f,c
  7374  002E32  D7FC               	bra	u5087
  7375  002E34  F000               	nop	
  7376  002E36                     
  7377                           ;../timer.X/lcd.c: 36:  x = x & 0xF;
  7378  002E36  5004               	movf	lcd_command@x^0,w,c
  7379  002E38  0B0F               	andlw	15
  7380  002E3A  6E04               	movwf	lcd_command@x^0,c
  7381  002E3C                     
  7382                           ;../timer.X/lcd.c: 37:  PORTD = x;
  7383  002E3C  C004  FF90         	movff	lcd_command@x,3984	;volatile
  7384  002E40                     
  7385                           ;../timer.X/lcd.c: 38:  _delay((unsigned long)((5)*(4000000/4000.0)));
  7386  002E40  0E07               	movlw	7
  7387  002E42  6E02               	movwf	??_lcd_command^0,c
  7388  002E44  0E7D               	movlw	125
  7389  002E46                     u5097:
  7390  002E46  2EE8               	decfsz	wreg,f,c
  7391  002E48  D7FE               	bra	u5097
  7392  002E4A  2E02               	decfsz	??_lcd_command^0,f,c
  7393  002E4C  D7FC               	bra	u5097
  7394  002E4E  F000               	nop	
  7395  002E50                     
  7396                           ;../timer.X/lcd.c: 40:  PORTD = 0;
  7397  002E50  0E00               	movlw	0
  7398  002E52  6E90               	movwf	144,c	;volatile
  7399  002E54                     
  7400                           ;../timer.X/lcd.c: 41:  _delay((unsigned long)((5)*(4000000/4000.0)));
  7401  002E54  0E07               	movlw	7
  7402  002E56  6E02               	movwf	??_lcd_command^0,c
  7403  002E58  0E7D               	movlw	125
  7404  002E5A                     u5107:
  7405  002E5A  2EE8               	decfsz	wreg,f,c
  7406  002E5C  D7FE               	bra	u5107
  7407  002E5E  2E02               	decfsz	??_lcd_command^0,f,c
  7408  002E60  D7FC               	bra	u5107
  7409  002E62  F000               	nop	
  7410  002E64                     
  7411                           ;../timer.X/lcd.c: 44:  x = temp;
  7412  002E64  C003  F004         	movff	lcd_command@temp,lcd_command@x
  7413  002E68                     
  7414                           ;../timer.X/lcd.c: 45:  x = x & 0xF;
  7415  002E68  5004               	movf	lcd_command@x^0,w,c
  7416  002E6A  0B0F               	andlw	15
  7417  002E6C  6E04               	movwf	lcd_command@x^0,c
  7418  002E6E                     
  7419                           ;../timer.X/lcd.c: 46:  x = x | 0x80;
  7420  002E6E  5004               	movf	lcd_command@x^0,w,c
  7421  002E70  0980               	iorlw	128
  7422  002E72  6E04               	movwf	lcd_command@x^0,c
  7423  002E74                     
  7424                           ;../timer.X/lcd.c: 47:  PORTD = x;
  7425  002E74  C004  FF90         	movff	lcd_command@x,3984	;volatile
  7426  002E78                     
  7427                           ;../timer.X/lcd.c: 48:  _delay((unsigned long)((5)*(4000000/4000.0)));
  7428  002E78  0E07               	movlw	7
  7429  002E7A  6E02               	movwf	??_lcd_command^0,c
  7430  002E7C  0E7D               	movlw	125
  7431  002E7E                     u5117:
  7432  002E7E  2EE8               	decfsz	wreg,f,c
  7433  002E80  D7FE               	bra	u5117
  7434  002E82  2E02               	decfsz	??_lcd_command^0,f,c
  7435  002E84  D7FC               	bra	u5117
  7436  002E86  F000               	nop	
  7437  002E88                     
  7438                           ;../timer.X/lcd.c: 50:  x = x & 0xF;
  7439  002E88  5004               	movf	lcd_command@x^0,w,c
  7440  002E8A  0B0F               	andlw	15
  7441  002E8C  6E04               	movwf	lcd_command@x^0,c
  7442  002E8E                     
  7443                           ;../timer.X/lcd.c: 51:  PORTD = x;
  7444  002E8E  C004  FF90         	movff	lcd_command@x,3984	;volatile
  7445  002E92                     
  7446                           ;../timer.X/lcd.c: 52:  _delay((unsigned long)((5)*(4000000/4000.0)));
  7447  002E92  0E07               	movlw	7
  7448  002E94  6E02               	movwf	??_lcd_command^0,c
  7449  002E96  0E7D               	movlw	125
  7450  002E98                     u5127:
  7451  002E98  2EE8               	decfsz	wreg,f,c
  7452  002E9A  D7FE               	bra	u5127
  7453  002E9C  2E02               	decfsz	??_lcd_command^0,f,c
  7454  002E9E  D7FC               	bra	u5127
  7455  002EA0  F000               	nop	
  7456  002EA2  0012               	return		;funcret
  7457  002EA4                     __end_of_lcd_command:
  7458                           	opt callstack 0
  7459                           
  7460 ;; *************** function _lcd_char *****************
  7461 ;; Defined at:
  7462 ;;		line 75 in file "../timer.X/lcd.c"
  7463 ;; Parameters:    Size  Location     Type
  7464 ;;  x               1    wreg     unsigned char 
  7465 ;; Auto vars:     Size  Location     Type
  7466 ;;  x               1    3[COMRAM] unsigned char 
  7467 ;;  temp            1    2[COMRAM] unsigned char 
  7468 ;; Return value:  Size  Location     Type
  7469 ;;                  1    wreg      void 
  7470 ;; Registers used:
  7471 ;;		wreg, status,2, status,0, cstack
  7472 ;; Tracked objects:
  7473 ;;		On entry : 0/0
  7474 ;;		On exit  : 0/0
  7475 ;;		Unchanged: 0/0
  7476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7478 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7479 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7480 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7481 ;;Total ram usage:        3 bytes
  7482 ;; Hardware stack levels used:    1
  7483 ;; Hardware stack levels required when called:    1
  7484 ;; This function calls:
  7485 ;;		Nothing
  7486 ;; This function is called by:
  7487 ;;		_main
  7488 ;; This function uses a non-reentrant model
  7489 ;;
  7490                           
  7491                           	psect	text31
  7492  002EA4                     __ptext31:
  7493                           	opt callstack 0
  7494  002EA4                     _lcd_char:
  7495                           	opt callstack 29
  7496                           
  7497                           ;incstack = 0
  7498                           ;lcd_char@x stored from wreg
  7499  002EA4  6E04               	movwf	lcd_char@x^0,c
  7500  002EA6                     
  7501                           ;../timer.X/lcd.c: 76:  char temp;;../timer.X/lcd.c: 79:  TRISDbits.TRISD0 = 0;
  7502  002EA6  908B               	bcf	139,0,c	;volatile
  7503                           
  7504                           ;../timer.X/lcd.c: 80:  TRISDbits.TRISD1 = 0;
  7505  002EA8  928B               	bcf	139,1,c	;volatile
  7506                           
  7507                           ;../timer.X/lcd.c: 81:  TRISDbits.TRISD2 = 0;
  7508  002EAA  948B               	bcf	139,2,c	;volatile
  7509                           
  7510                           ;../timer.X/lcd.c: 82:  TRISDbits.TRISD3 = 0;
  7511  002EAC  968B               	bcf	139,3,c	;volatile
  7512                           
  7513                           ;../timer.X/lcd.c: 83:  TRISDbits.TRISD4 = 0;
  7514  002EAE  988B               	bcf	139,4,c	;volatile
  7515                           
  7516                           ;../timer.X/lcd.c: 84:  TRISDbits.TRISD7 = 0;
  7517  002EB0  9E8B               	bcf	139,7,c	;volatile
  7518  002EB2                     
  7519                           ;../timer.X/lcd.c: 86:  temp = x;
  7520  002EB2  C004  F003         	movff	lcd_char@x,lcd_char@temp
  7521  002EB6                     
  7522                           ;../timer.X/lcd.c: 89:  PORTD = 0x10;
  7523  002EB6  0E10               	movlw	16
  7524  002EB8  6E90               	movwf	144,c	;volatile
  7525  002EBA                     
  7526                           ;../timer.X/lcd.c: 90:  _delay((unsigned long)((5)*(4000000/4000.0)));
  7527  002EBA  0E07               	movlw	7
  7528  002EBC  6E02               	movwf	??_lcd_char^0,c
  7529  002EBE  0E7D               	movlw	125
  7530  002EC0                     u5137:
  7531  002EC0  2EE8               	decfsz	wreg,f,c
  7532  002EC2  D7FE               	bra	u5137
  7533  002EC4  2E02               	decfsz	??_lcd_char^0,f,c
  7534  002EC6  D7FC               	bra	u5137
  7535  002EC8  F000               	nop	
  7536  002ECA                     
  7537                           ;../timer.X/lcd.c: 92:  x = x >>4;
  7538  002ECA  3804               	swapf	lcd_char@x^0,w,c
  7539  002ECC  0B0F               	andlw	15
  7540  002ECE  6E04               	movwf	lcd_char@x^0,c
  7541  002ED0                     
  7542                           ;../timer.X/lcd.c: 93:  x = x & 0xF;
  7543  002ED0  5004               	movf	lcd_char@x^0,w,c
  7544  002ED2  0B0F               	andlw	15
  7545  002ED4  6E04               	movwf	lcd_char@x^0,c
  7546  002ED6                     
  7547                           ;../timer.X/lcd.c: 94:  x = x | 0x90;
  7548  002ED6  5004               	movf	lcd_char@x^0,w,c
  7549  002ED8  0990               	iorlw	144
  7550  002EDA  6E04               	movwf	lcd_char@x^0,c
  7551  002EDC                     
  7552                           ;../timer.X/lcd.c: 95:  PORTD = x;
  7553  002EDC  C004  FF90         	movff	lcd_char@x,3984	;volatile
  7554  002EE0                     
  7555                           ;../timer.X/lcd.c: 96:  _delay((unsigned long)((5)*(4000000/4000.0)));
  7556  002EE0  0E07               	movlw	7
  7557  002EE2  6E02               	movwf	??_lcd_char^0,c
  7558  002EE4  0E7D               	movlw	125
  7559  002EE6                     u5147:
  7560  002EE6  2EE8               	decfsz	wreg,f,c
  7561  002EE8  D7FE               	bra	u5147
  7562  002EEA  2E02               	decfsz	??_lcd_char^0,f,c
  7563  002EEC  D7FC               	bra	u5147
  7564  002EEE  F000               	nop	
  7565  002EF0                     
  7566                           ;../timer.X/lcd.c: 98:  x = x & 0x1F;
  7567  002EF0  5004               	movf	lcd_char@x^0,w,c
  7568  002EF2  0B1F               	andlw	31
  7569  002EF4  6E04               	movwf	lcd_char@x^0,c
  7570  002EF6                     
  7571                           ;../timer.X/lcd.c: 99:  PORTD = x;
  7572  002EF6  C004  FF90         	movff	lcd_char@x,3984	;volatile
  7573  002EFA                     
  7574                           ;../timer.X/lcd.c: 100:  _delay((unsigned long)((5)*(4000000/4000.0)));
  7575  002EFA  0E07               	movlw	7
  7576  002EFC  6E02               	movwf	??_lcd_char^0,c
  7577  002EFE  0E7D               	movlw	125
  7578  002F00                     u5157:
  7579  002F00  2EE8               	decfsz	wreg,f,c
  7580  002F02  D7FE               	bra	u5157
  7581  002F04  2E02               	decfsz	??_lcd_char^0,f,c
  7582  002F06  D7FC               	bra	u5157
  7583  002F08  F000               	nop	
  7584  002F0A                     
  7585                           ;../timer.X/lcd.c: 102:  PORTD = 0x10;
  7586  002F0A  0E10               	movlw	16
  7587  002F0C  6E90               	movwf	144,c	;volatile
  7588  002F0E                     
  7589                           ;../timer.X/lcd.c: 103:  _delay((unsigned long)((5)*(4000000/4000.0)));
  7590  002F0E  0E07               	movlw	7
  7591  002F10  6E02               	movwf	??_lcd_char^0,c
  7592  002F12  0E7D               	movlw	125
  7593  002F14                     u5167:
  7594  002F14  2EE8               	decfsz	wreg,f,c
  7595  002F16  D7FE               	bra	u5167
  7596  002F18  2E02               	decfsz	??_lcd_char^0,f,c
  7597  002F1A  D7FC               	bra	u5167
  7598  002F1C  F000               	nop	
  7599  002F1E                     
  7600                           ;../timer.X/lcd.c: 106:  x = temp;
  7601  002F1E  C003  F004         	movff	lcd_char@temp,lcd_char@x
  7602  002F22                     
  7603                           ;../timer.X/lcd.c: 107:  x = x & 0xF;
  7604  002F22  5004               	movf	lcd_char@x^0,w,c
  7605  002F24  0B0F               	andlw	15
  7606  002F26  6E04               	movwf	lcd_char@x^0,c
  7607  002F28                     
  7608                           ;../timer.X/lcd.c: 108:  x = x | 0x90;
  7609  002F28  5004               	movf	lcd_char@x^0,w,c
  7610  002F2A  0990               	iorlw	144
  7611  002F2C  6E04               	movwf	lcd_char@x^0,c
  7612  002F2E                     
  7613                           ;../timer.X/lcd.c: 109:  PORTD = x;
  7614  002F2E  C004  FF90         	movff	lcd_char@x,3984	;volatile
  7615  002F32                     
  7616                           ;../timer.X/lcd.c: 110:  _delay((unsigned long)((5)*(4000000/4000.0)));
  7617  002F32  0E07               	movlw	7
  7618  002F34  6E02               	movwf	??_lcd_char^0,c
  7619  002F36  0E7D               	movlw	125
  7620  002F38                     u5177:
  7621  002F38  2EE8               	decfsz	wreg,f,c
  7622  002F3A  D7FE               	bra	u5177
  7623  002F3C  2E02               	decfsz	??_lcd_char^0,f,c
  7624  002F3E  D7FC               	bra	u5177
  7625  002F40  F000               	nop	
  7626  002F42                     
  7627                           ;../timer.X/lcd.c: 112:  x = x & 0x1F;
  7628  002F42  5004               	movf	lcd_char@x^0,w,c
  7629  002F44  0B1F               	andlw	31
  7630  002F46  6E04               	movwf	lcd_char@x^0,c
  7631  002F48                     
  7632                           ;../timer.X/lcd.c: 113:  PORTD = x;
  7633  002F48  C004  FF90         	movff	lcd_char@x,3984	;volatile
  7634  002F4C                     
  7635                           ;../timer.X/lcd.c: 114:  _delay((unsigned long)((5)*(4000000/4000.0)));
  7636  002F4C  0E07               	movlw	7
  7637  002F4E  6E02               	movwf	??_lcd_char^0,c
  7638  002F50  0E7D               	movlw	125
  7639  002F52                     u5187:
  7640  002F52  2EE8               	decfsz	wreg,f,c
  7641  002F54  D7FE               	bra	u5187
  7642  002F56  2E02               	decfsz	??_lcd_char^0,f,c
  7643  002F58  D7FC               	bra	u5187
  7644  002F5A  F000               	nop	
  7645  002F5C  0012               	return		;funcret
  7646  002F5E                     __end_of_lcd_char:
  7647                           	opt callstack 0
  7648                           
  7649 ;; *************** function _i2c_init *****************
  7650 ;; Defined at:
  7651 ;;		line 10 in file "../timer.X/i2c.c"
  7652 ;; Parameters:    Size  Location     Type
  7653 ;;		None
  7654 ;; Auto vars:     Size  Location     Type
  7655 ;;		None
  7656 ;; Return value:  Size  Location     Type
  7657 ;;                  1    wreg      void 
  7658 ;; Registers used:
  7659 ;;		wreg, status,2
  7660 ;; Tracked objects:
  7661 ;;		On entry : 0/0
  7662 ;;		On exit  : 0/0
  7663 ;;		Unchanged: 0/0
  7664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7668 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7669 ;;Total ram usage:        0 bytes
  7670 ;; Hardware stack levels used:    1
  7671 ;; Hardware stack levels required when called:    1
  7672 ;; This function calls:
  7673 ;;		Nothing
  7674 ;; This function is called by:
  7675 ;;		_main
  7676 ;; This function uses a non-reentrant model
  7677 ;;
  7678                           
  7679                           	psect	text32
  7680  0036A8                     __ptext32:
  7681                           	opt callstack 0
  7682  0036A8                     _i2c_init:
  7683                           	opt callstack 29
  7684  0036A8                     
  7685                           ;../timer.X/i2c.c: 12:     TRISCbits.TRISC3 = 1;
  7686  0036A8  868A               	bsf	138,3,c	;volatile
  7687                           
  7688                           ;../timer.X/i2c.c: 13:     TRISCbits.TRISC4 = 1;
  7689  0036AA  888A               	bsf	138,4,c	;volatile
  7690  0036AC                     
  7691                           ;../timer.X/i2c.c: 17:     SSP1CLKPPS = 0x13;
  7692  0036AC  0E13               	movlw	19
  7693  0036AE  010E               	movlb	14	; () banked
  7694  0036B0  6FB7               	movwf	183,b	;volatile
  7695                           
  7696                           ;../timer.X/i2c.c: 18:     SSP1DATPPS = 0x14;
  7697  0036B2  0E14               	movlw	20
  7698  0036B4  6FB8               	movwf	184,b	;volatile
  7699                           
  7700                           ;../timer.X/i2c.c: 20:     RC4PPS = 0x10;
  7701  0036B6  0E10               	movlw	16
  7702  0036B8  6FFB               	movwf	251,b	;volatile
  7703                           
  7704                           ;../timer.X/i2c.c: 21:     RC3PPS = 0x0F;
  7705  0036BA  0E0F               	movlw	15
  7706  0036BC  6FFA               	movwf	250,b	;volatile
  7707                           
  7708                           ;../timer.X/i2c.c: 24:     SSP1ADD = 12;
  7709  0036BE  0E0C               	movlw	12
  7710  0036C0  6E93               	movwf	147,c	;volatile
  7711                           
  7712                           ;../timer.X/i2c.c: 26:     SSP1CON1bits.SSPM = 8;
  7713  0036C2  5096               	movf	150,w,c	;volatile
  7714  0036C4  0BF0               	andlw	-16
  7715  0036C6  0908               	iorlw	8
  7716  0036C8  6E96               	movwf	150,c	;volatile
  7717  0036CA                     
  7718                           ; BSR set to: 14
  7719                           ;../timer.X/i2c.c: 28:     SSP1CON1bits.WCOL = 0;
  7720  0036CA  9E96               	bcf	150,7,c	;volatile
  7721  0036CC                     
  7722                           ; BSR set to: 14
  7723                           ;../timer.X/i2c.c: 29:     SSP1CON1bits.SSPOV = 0;
  7724  0036CC  9C96               	bcf	150,6,c	;volatile
  7725  0036CE                     
  7726                           ; BSR set to: 14
  7727                           ;../timer.X/i2c.c: 30:     SSP1CON1bits.SSPEN = 1;
  7728  0036CE  8A96               	bsf	150,5,c	;volatile
  7729  0036D0                     
  7730                           ; BSR set to: 14
  7731  0036D0  0012               	return		;funcret
  7732  0036D2                     __end_of_i2c_init:
  7733                           	opt callstack 0
  7734                           
  7735 ;; *************** function _getr *****************
  7736 ;; Defined at:
  7737 ;;		line 98 in file "ccp.c"
  7738 ;; Parameters:    Size  Location     Type
  7739 ;;		None
  7740 ;; Auto vars:     Size  Location     Type
  7741 ;;		None
  7742 ;; Return value:  Size  Location     Type
  7743 ;;                  2    1[COMRAM] int 
  7744 ;; Registers used:
  7745 ;;		None
  7746 ;; Tracked objects:
  7747 ;;		On entry : 0/0
  7748 ;;		On exit  : 0/0
  7749 ;;		Unchanged: 0/0
  7750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7751 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7754 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7755 ;;Total ram usage:        2 bytes
  7756 ;; Hardware stack levels used:    1
  7757 ;; Hardware stack levels required when called:    1
  7758 ;; This function calls:
  7759 ;;		Nothing
  7760 ;; This function is called by:
  7761 ;;		_main
  7762 ;; This function uses a non-reentrant model
  7763 ;;
  7764                           
  7765                           	psect	text33
  7766  0037DA                     __ptext33:
  7767                           	opt callstack 0
  7768  0037DA                     _getr:
  7769                           	opt callstack 29
  7770  0037DA                     
  7771                           ;ccp.c: 99:     return r;
  7772  0037DA  C0D7  F002         	movff	_r,?_getr
  7773  0037DE  C0D8  F003         	movff	_r+1,?_getr+1
  7774  0037E2  0012               	return		;funcret
  7775  0037E4                     __end_of_getr:
  7776                           	opt callstack 0
  7777                           
  7778 ;; *************** function _get_seconds *****************
  7779 ;; Defined at:
  7780 ;;		line 37 in file "timer.c"
  7781 ;; Parameters:    Size  Location     Type
  7782 ;;		None
  7783 ;; Auto vars:     Size  Location     Type
  7784 ;;  sec             1    9[COMRAM] unsigned char 
  7785 ;; Return value:  Size  Location     Type
  7786 ;;                  1    wreg      unsigned char 
  7787 ;; Registers used:
  7788 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7789 ;; Tracked objects:
  7790 ;;		On entry : 0/0
  7791 ;;		On exit  : 0/0
  7792 ;;		Unchanged: 0/0
  7793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7795 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7796 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7797 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7798 ;;Total ram usage:        2 bytes
  7799 ;; Hardware stack levels used:    1
  7800 ;; Hardware stack levels required when called:    2
  7801 ;; This function calls:
  7802 ;;		_i2c_read
  7803 ;; This function is called by:
  7804 ;;		_main
  7805 ;; This function uses a non-reentrant model
  7806 ;;
  7807                           
  7808                           	psect	text34
  7809  0036D2                     __ptext34:
  7810                           	opt callstack 0
  7811  0036D2                     _get_seconds:
  7812                           	opt callstack 28
  7813  0036D2                     
  7814                           ;timer.c: 38:  unsigned char sec = i2c_read(104, 0x00);
  7815  0036D2  0E00               	movlw	0
  7816  0036D4  6E02               	movwf	i2c_read@registers^0,c
  7817  0036D6  0E68               	movlw	104
  7818  0036D8  EC6C  F013         	call	_i2c_read
  7819  0036DC  6E0A               	movwf	get_seconds@sec^0,c
  7820  0036DE                     
  7821                           ;timer.c: 41:  return (sec&0x0f)+(((sec>>4)&0x07)*10);
  7822  0036DE  C00A  F009         	movff	get_seconds@sec,??_get_seconds
  7823  0036E2  0E0F               	movlw	15
  7824  0036E4  1609               	andwf	??_get_seconds^0,f,c
  7825  0036E6  380A               	swapf	get_seconds@sec^0,w,c
  7826  0036E8  0B0F               	andlw	15
  7827  0036EA  0B07               	andlw	7
  7828  0036EC  0D0A               	mullw	10
  7829  0036EE  50F3               	movf	243,w,c
  7830  0036F0  2409               	addwf	??_get_seconds^0,w,c
  7831  0036F2  0012               	return		;funcret
  7832  0036F4                     __end_of_get_seconds:
  7833                           	opt callstack 0
  7834                           
  7835 ;; *************** function _get_minutes *****************
  7836 ;; Defined at:
  7837 ;;		line 67 in file "timer.c"
  7838 ;; Parameters:    Size  Location     Type
  7839 ;;		None
  7840 ;; Auto vars:     Size  Location     Type
  7841 ;;  min             1    9[COMRAM] unsigned char 
  7842 ;; Return value:  Size  Location     Type
  7843 ;;                  1    wreg      unsigned char 
  7844 ;; Registers used:
  7845 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7846 ;; Tracked objects:
  7847 ;;		On entry : 0/0
  7848 ;;		On exit  : 0/0
  7849 ;;		Unchanged: 0/0
  7850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7852 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7853 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7854 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7855 ;;Total ram usage:        2 bytes
  7856 ;; Hardware stack levels used:    1
  7857 ;; Hardware stack levels required when called:    2
  7858 ;; This function calls:
  7859 ;;		_i2c_read
  7860 ;; This function is called by:
  7861 ;;		_main
  7862 ;; This function uses a non-reentrant model
  7863 ;;
  7864                           
  7865                           	psect	text35
  7866  00379A                     __ptext35:
  7867                           	opt callstack 0
  7868  00379A                     _get_minutes:
  7869                           	opt callstack 28
  7870  00379A                     
  7871                           ;timer.c: 68:  unsigned char min = i2c_read(104, 0x01);
  7872  00379A  0E01               	movlw	1
  7873  00379C  6E02               	movwf	i2c_read@registers^0,c
  7874  00379E  0E68               	movlw	104
  7875  0037A0  EC6C  F013         	call	_i2c_read
  7876  0037A4  6E0A               	movwf	get_minutes@min^0,c
  7877  0037A6                     
  7878                           ;timer.c: 71:  return (min&0x0f)+((min >> 4)*10);
  7879  0037A6  C00A  F009         	movff	get_minutes@min,??_get_minutes
  7880  0037AA  0E0F               	movlw	15
  7881  0037AC  1609               	andwf	??_get_minutes^0,f,c
  7882  0037AE  380A               	swapf	get_minutes@min^0,w,c
  7883  0037B0  0B0F               	andlw	15
  7884  0037B2  0D0A               	mullw	10
  7885  0037B4  50F3               	movf	243,w,c
  7886  0037B6  2409               	addwf	??_get_minutes^0,w,c
  7887  0037B8  0012               	return		;funcret
  7888  0037BA                     __end_of_get_minutes:
  7889                           	opt callstack 0
  7890                           
  7891 ;; *************** function _get_hours *****************
  7892 ;; Defined at:
  7893 ;;		line 91 in file "timer.c"
  7894 ;; Parameters:    Size  Location     Type
  7895 ;;		None
  7896 ;; Auto vars:     Size  Location     Type
  7897 ;;  hour            1    9[COMRAM] unsigned char 
  7898 ;; Return value:  Size  Location     Type
  7899 ;;                  1    wreg      unsigned char 
  7900 ;; Registers used:
  7901 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7902 ;; Tracked objects:
  7903 ;;		On entry : 0/0
  7904 ;;		On exit  : 0/0
  7905 ;;		Unchanged: 0/0
  7906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7908 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7909 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7910 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7911 ;;Total ram usage:        2 bytes
  7912 ;; Hardware stack levels used:    1
  7913 ;; Hardware stack levels required when called:    2
  7914 ;; This function calls:
  7915 ;;		_i2c_read
  7916 ;; This function is called by:
  7917 ;;		_main
  7918 ;; This function uses a non-reentrant model
  7919 ;;
  7920                           
  7921                           	psect	text36
  7922  0036F4                     __ptext36:
  7923                           	opt callstack 0
  7924  0036F4                     _get_hours:
  7925                           	opt callstack 28
  7926  0036F4                     
  7927                           ;timer.c: 92:  unsigned char hour = i2c_read(104, 0x02);
  7928  0036F4  0E02               	movlw	2
  7929  0036F6  6E02               	movwf	i2c_read@registers^0,c
  7930  0036F8  0E68               	movlw	104
  7931  0036FA  EC6C  F013         	call	_i2c_read
  7932  0036FE  6E0A               	movwf	get_hours@hour^0,c
  7933  003700                     
  7934                           ;timer.c: 95:  return (hour&0x0f)+(((hour >> 4)&0x03)*10);
  7935  003700  C00A  F009         	movff	get_hours@hour,??_get_hours
  7936  003704  0E0F               	movlw	15
  7937  003706  1609               	andwf	??_get_hours^0,f,c
  7938  003708  380A               	swapf	get_hours@hour^0,w,c
  7939  00370A  0B0F               	andlw	15
  7940  00370C  0B03               	andlw	3
  7941  00370E  0D0A               	mullw	10
  7942  003710  50F3               	movf	243,w,c
  7943  003712  2409               	addwf	??_get_hours^0,w,c
  7944  003714  0012               	return		;funcret
  7945  003716                     __end_of_get_hours:
  7946                           	opt callstack 0
  7947                           
  7948 ;; *************** function _get_Aseconds *****************
  7949 ;; Defined at:
  7950 ;;		line 213 in file "timer.c"
  7951 ;; Parameters:    Size  Location     Type
  7952 ;;		None
  7953 ;; Auto vars:     Size  Location     Type
  7954 ;;  Asec            1    9[COMRAM] unsigned char 
  7955 ;; Return value:  Size  Location     Type
  7956 ;;                  1    wreg      unsigned char 
  7957 ;; Registers used:
  7958 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7959 ;; Tracked objects:
  7960 ;;		On entry : 0/0
  7961 ;;		On exit  : 0/0
  7962 ;;		Unchanged: 0/0
  7963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7965 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7966 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7967 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7968 ;;Total ram usage:        2 bytes
  7969 ;; Hardware stack levels used:    1
  7970 ;; Hardware stack levels required when called:    2
  7971 ;; This function calls:
  7972 ;;		_i2c_read
  7973 ;; This function is called by:
  7974 ;;		_main
  7975 ;; This function uses a non-reentrant model
  7976 ;;
  7977                           
  7978                           	psect	text37
  7979  003716                     __ptext37:
  7980                           	opt callstack 0
  7981  003716                     _get_Aseconds:
  7982                           	opt callstack 28
  7983  003716                     
  7984                           ;timer.c: 214:  unsigned char Asec = i2c_read(104, 0x07);
  7985  003716  0E07               	movlw	7
  7986  003718  6E02               	movwf	i2c_read@registers^0,c
  7987  00371A  0E68               	movlw	104
  7988  00371C  EC6C  F013         	call	_i2c_read
  7989  003720  6E0A               	movwf	get_Aseconds@Asec^0,c
  7990  003722                     
  7991                           ;timer.c: 217:  return (Asec&0x0f)+(((Asec>>4)&0x07)*10);
  7992  003722  C00A  F009         	movff	get_Aseconds@Asec,??_get_Aseconds
  7993  003726  0E0F               	movlw	15
  7994  003728  1609               	andwf	??_get_Aseconds^0,f,c
  7995  00372A  380A               	swapf	get_Aseconds@Asec^0,w,c
  7996  00372C  0B0F               	andlw	15
  7997  00372E  0B07               	andlw	7
  7998  003730  0D0A               	mullw	10
  7999  003732  50F3               	movf	243,w,c
  8000  003734  2409               	addwf	??_get_Aseconds^0,w,c
  8001  003736  0012               	return		;funcret
  8002  003738                     __end_of_get_Aseconds:
  8003                           	opt callstack 0
  8004                           
  8005 ;; *************** function _get_Aminutes *****************
  8006 ;; Defined at:
  8007 ;;		line 237 in file "timer.c"
  8008 ;; Parameters:    Size  Location     Type
  8009 ;;		None
  8010 ;; Auto vars:     Size  Location     Type
  8011 ;;  Amin            1    9[COMRAM] unsigned char 
  8012 ;; Return value:  Size  Location     Type
  8013 ;;                  1    wreg      unsigned char 
  8014 ;; Registers used:
  8015 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8016 ;; Tracked objects:
  8017 ;;		On entry : 0/0
  8018 ;;		On exit  : 0/0
  8019 ;;		Unchanged: 0/0
  8020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8022 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8023 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8024 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8025 ;;Total ram usage:        2 bytes
  8026 ;; Hardware stack levels used:    1
  8027 ;; Hardware stack levels required when called:    2
  8028 ;; This function calls:
  8029 ;;		_i2c_read
  8030 ;; This function is called by:
  8031 ;;		_main
  8032 ;; This function uses a non-reentrant model
  8033 ;;
  8034                           
  8035                           	psect	text38
  8036  0037BA                     __ptext38:
  8037                           	opt callstack 0
  8038  0037BA                     _get_Aminutes:
  8039                           	opt callstack 28
  8040  0037BA                     
  8041                           ;timer.c: 238:  unsigned char Amin = i2c_read(104, 0x08);
  8042  0037BA  0E08               	movlw	8
  8043  0037BC  6E02               	movwf	i2c_read@registers^0,c
  8044  0037BE  0E68               	movlw	104
  8045  0037C0  EC6C  F013         	call	_i2c_read
  8046  0037C4  6E0A               	movwf	get_Aminutes@Amin^0,c
  8047  0037C6                     
  8048                           ;timer.c: 241:  return (Amin&0x0f)+((Amin >> 4)*10);
  8049  0037C6  C00A  F009         	movff	get_Aminutes@Amin,??_get_Aminutes
  8050  0037CA  0E0F               	movlw	15
  8051  0037CC  1609               	andwf	??_get_Aminutes^0,f,c
  8052  0037CE  380A               	swapf	get_Aminutes@Amin^0,w,c
  8053  0037D0  0B0F               	andlw	15
  8054  0037D2  0D0A               	mullw	10
  8055  0037D4  50F3               	movf	243,w,c
  8056  0037D6  2409               	addwf	??_get_Aminutes^0,w,c
  8057  0037D8  0012               	return		;funcret
  8058  0037DA                     __end_of_get_Aminutes:
  8059                           	opt callstack 0
  8060                           
  8061 ;; *************** function _get_Ahours *****************
  8062 ;; Defined at:
  8063 ;;		line 261 in file "timer.c"
  8064 ;; Parameters:    Size  Location     Type
  8065 ;;		None
  8066 ;; Auto vars:     Size  Location     Type
  8067 ;;  Ahour           1    9[COMRAM] unsigned char 
  8068 ;; Return value:  Size  Location     Type
  8069 ;;                  1    wreg      unsigned char 
  8070 ;; Registers used:
  8071 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8072 ;; Tracked objects:
  8073 ;;		On entry : 0/0
  8074 ;;		On exit  : 0/0
  8075 ;;		Unchanged: 0/0
  8076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8078 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8079 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8080 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8081 ;;Total ram usage:        2 bytes
  8082 ;; Hardware stack levels used:    1
  8083 ;; Hardware stack levels required when called:    2
  8084 ;; This function calls:
  8085 ;;		_i2c_read
  8086 ;; This function is called by:
  8087 ;;		_main
  8088 ;; This function uses a non-reentrant model
  8089 ;;
  8090                           
  8091                           	psect	text39
  8092  003738                     __ptext39:
  8093                           	opt callstack 0
  8094  003738                     _get_Ahours:
  8095                           	opt callstack 28
  8096  003738                     
  8097                           ;timer.c: 262:  unsigned char Ahour = i2c_read(104, 0x09);
  8098  003738  0E09               	movlw	9
  8099  00373A  6E02               	movwf	i2c_read@registers^0,c
  8100  00373C  0E68               	movlw	104
  8101  00373E  EC6C  F013         	call	_i2c_read
  8102  003742  6E0A               	movwf	get_Ahours@Ahour^0,c
  8103  003744                     
  8104                           ;timer.c: 265:  return (Ahour&0x0f)+(((Ahour >> 4)&0x03)*10);
  8105  003744  C00A  F009         	movff	get_Ahours@Ahour,??_get_Ahours
  8106  003748  0E0F               	movlw	15
  8107  00374A  1609               	andwf	??_get_Ahours^0,f,c
  8108  00374C  380A               	swapf	get_Ahours@Ahour^0,w,c
  8109  00374E  0B0F               	andlw	15
  8110  003750  0B03               	andlw	3
  8111  003752  0D0A               	mullw	10
  8112  003754  50F3               	movf	243,w,c
  8113  003756  2409               	addwf	??_get_Ahours^0,w,c
  8114  003758  0012               	return		;funcret
  8115  00375A                     __end_of_get_Ahours:
  8116                           	opt callstack 0
  8117                           
  8118 ;; *************** function _i2c_read *****************
  8119 ;; Defined at:
  8120 ;;		line 36 in file "../timer.X/i2c.c"
  8121 ;; Parameters:    Size  Location     Type
  8122 ;;  address         1    wreg     unsigned char 
  8123 ;;  registers       1    1[COMRAM] unsigned char 
  8124 ;; Auto vars:     Size  Location     Type
  8125 ;;  address         1    7[COMRAM] unsigned char 
  8126 ;;  num             4    2[COMRAM] unsigned long 
  8127 ;;  read            1    6[COMRAM] unsigned char 
  8128 ;; Return value:  Size  Location     Type
  8129 ;;                  1    wreg      unsigned char 
  8130 ;; Registers used:
  8131 ;;		wreg, status,2, status,0
  8132 ;; Tracked objects:
  8133 ;;		On entry : 0/0
  8134 ;;		On exit  : 0/0
  8135 ;;		Unchanged: 0/0
  8136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8137 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8138 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8140 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8141 ;;Total ram usage:        7 bytes
  8142 ;; Hardware stack levels used:    1
  8143 ;; Hardware stack levels required when called:    1
  8144 ;; This function calls:
  8145 ;;		Nothing
  8146 ;; This function is called by:
  8147 ;;		_main
  8148 ;;		_rtc_init
  8149 ;;		_get_seconds
  8150 ;;		_set_seconds
  8151 ;;		_get_minutes
  8152 ;;		_get_hours
  8153 ;;		_set_hours
  8154 ;;		_get_Aseconds
  8155 ;;		_get_Aminutes
  8156 ;;		_get_Ahours
  8157 ;;		_set_Ahours
  8158 ;;		_get_dayname
  8159 ;;		_get_months
  8160 ;;		_get_days
  8161 ;;		_get_years
  8162 ;; This function uses a non-reentrant model
  8163 ;;
  8164                           
  8165                           	psect	text40
  8166  0026D8                     __ptext40:
  8167                           	opt callstack 0
  8168  0026D8                     _i2c_read:
  8169                           	opt callstack 28
  8170                           
  8171                           ;incstack = 0
  8172                           ;i2c_read@address stored from wreg
  8173  0026D8  6E08               	movwf	i2c_read@address^0,c
  8174  0026DA                     
  8175                           ;../timer.X/i2c.c: 37:  SSP1CON2bits.SEN = 1;
  8176  0026DA  8097               	bsf	151,0,c	;volatile
  8177  0026DC                     l227:
  8178  0026DC  B097               	btfsc	151,0,c	;volatile
  8179  0026DE  EF73  F013         	goto	u2561
  8180  0026E2  EF75  F013         	goto	u2560
  8181  0026E6                     u2561:
  8182  0026E6  EF6E  F013         	goto	l227
  8183  0026EA                     u2560:
  8184  0026EA                     
  8185                           ;../timer.X/i2c.c: 40:  SSP1BUF = (address << 1) & 0xfe;
  8186  0026EA  5008               	movf	i2c_read@address^0,w,c
  8187  0026EC  2408               	addwf	i2c_read@address^0,w,c
  8188  0026EE  0BFE               	andlw	254
  8189  0026F0  6E92               	movwf	146,c	;volatile
  8190  0026F2                     l230:
  8191  0026F2  B495               	btfsc	149,2,c	;volatile
  8192  0026F4  EF7E  F013         	goto	u2571
  8193  0026F8  EF80  F013         	goto	u2570
  8194  0026FC                     u2571:
  8195  0026FC  EF79  F013         	goto	l230
  8196  002700                     u2570:
  8197  002700                     
  8198                           ;../timer.X/i2c.c: 45:  if (SSP1CON2bits.ACKSTAT == 1) {
  8199  002700  AC97               	btfss	151,6,c	;volatile
  8200  002702  EF85  F013         	goto	u2581
  8201  002706  EF87  F013         	goto	u2580
  8202  00270A                     u2581:
  8203  00270A  EF92  F013         	goto	l233
  8204  00270E                     u2580:
  8205  00270E                     
  8206                           ;../timer.X/i2c.c: 46:   SSP1CON2bits.PEN = 1;
  8207  00270E  8497               	bsf	151,2,c	;volatile
  8208  002710                     l234:
  8209  002710  B497               	btfsc	151,2,c	;volatile
  8210  002712  EF8D  F013         	goto	u2591
  8211  002716  EF8F  F013         	goto	u2590
  8212  00271A                     u2591:
  8213  00271A  EF88  F013         	goto	l234
  8214  00271E                     u2590:
  8215  00271E                     l3115:
  8216                           
  8217                           ;../timer.X/i2c.c: 48:   return 0;
  8218  00271E  0E00               	movlw	0
  8219  002720  EF0F  F014         	goto	l237
  8220  002724                     l233:
  8221                           
  8222                           ;../timer.X/i2c.c: 51:  SSP1BUF = registers;
  8223  002724  C002  FF92         	movff	i2c_read@registers,3986	;volatile
  8224  002728                     l238:
  8225  002728  B495               	btfsc	149,2,c	;volatile
  8226  00272A  EF99  F013         	goto	u2601
  8227  00272E  EF9B  F013         	goto	u2600
  8228  002732                     u2601:
  8229  002732  EF94  F013         	goto	l238
  8230  002736                     u2600:
  8231  002736                     
  8232                           ;../timer.X/i2c.c: 56:  if (SSP1CON2bits.ACKSTAT == 1) {
  8233  002736  AC97               	btfss	151,6,c	;volatile
  8234  002738  EFA0  F013         	goto	u2611
  8235  00273C  EFA2  F013         	goto	u2610
  8236  002740                     u2611:
  8237  002740  EFAC  F013         	goto	l241
  8238  002744                     u2610:
  8239  002744                     
  8240                           ;../timer.X/i2c.c: 57:   SSP1CON2bits.PEN = 1;
  8241  002744  8497               	bsf	151,2,c	;volatile
  8242  002746                     l242:
  8243  002746  B497               	btfsc	151,2,c	;volatile
  8244  002748  EFA8  F013         	goto	u2621
  8245  00274C  EFAA  F013         	goto	u2620
  8246  002750                     u2621:
  8247  002750  EFA3  F013         	goto	l242
  8248  002754                     u2620:
  8249  002754  EF8F  F013         	goto	l3115
  8250  002758                     l241:
  8251                           
  8252                           ;../timer.X/i2c.c: 63:  SSP1CON2bits.RSEN = 1;
  8253  002758  8297               	bsf	151,1,c	;volatile
  8254  00275A                     l245:
  8255  00275A  B297               	btfsc	151,1,c	;volatile
  8256  00275C  EFB2  F013         	goto	u2631
  8257  002760  EFB4  F013         	goto	u2630
  8258  002764                     u2631:
  8259  002764  EFAD  F013         	goto	l245
  8260  002768                     u2630:
  8261  002768                     
  8262                           ;../timer.X/i2c.c: 66:  SSP1BUF = (address << 1) | 0x01;
  8263  002768  80D8               	bsf	status,0,c
  8264  00276A  3408               	rlcf	i2c_read@address^0,w,c
  8265  00276C  6E92               	movwf	146,c	;volatile
  8266  00276E                     l248:
  8267  00276E  B495               	btfsc	149,2,c	;volatile
  8268  002770  EFBC  F013         	goto	u2641
  8269  002774  EFBE  F013         	goto	u2640
  8270  002778                     u2641:
  8271  002778  EFB7  F013         	goto	l248
  8272  00277C                     u2640:
  8273  00277C                     
  8274                           ;../timer.X/i2c.c: 70:  if (SSP1CON2bits.ACKSTAT == 1) {
  8275  00277C  AC97               	btfss	151,6,c	;volatile
  8276  00277E  EFC3  F013         	goto	u2651
  8277  002782  EFC5  F013         	goto	u2650
  8278  002786                     u2651:
  8279  002786  EFCF  F013         	goto	l251
  8280  00278A                     u2650:
  8281  00278A                     
  8282                           ;../timer.X/i2c.c: 71:   SSP1CON2bits.PEN = 1;
  8283  00278A  8497               	bsf	151,2,c	;volatile
  8284  00278C                     l252:
  8285  00278C  B497               	btfsc	151,2,c	;volatile
  8286  00278E  EFCB  F013         	goto	u2661
  8287  002792  EFCD  F013         	goto	u2660
  8288  002796                     u2661:
  8289  002796  EFC6  F013         	goto	l252
  8290  00279A                     u2660:
  8291  00279A  EF8F  F013         	goto	l3115
  8292  00279E                     l251:
  8293                           
  8294                           ;../timer.X/i2c.c: 76:  SSP1CON2bits.RCEN = 1;
  8295  00279E  8697               	bsf	151,3,c	;volatile
  8296  0027A0                     
  8297                           ;../timer.X/i2c.c: 78:  unsigned long num = 10000L;
  8298  0027A0  0E10               	movlw	16
  8299  0027A2  6E03               	movwf	i2c_read@num^0,c
  8300  0027A4  0E27               	movlw	39
  8301  0027A6  6E04               	movwf	(i2c_read@num+1)^0,c
  8302  0027A8  0E00               	movlw	0
  8303  0027AA  6E05               	movwf	(i2c_read@num+2)^0,c
  8304  0027AC  0E00               	movlw	0
  8305  0027AE  6E06               	movwf	(i2c_read@num+3)^0,c
  8306                           
  8307                           ;../timer.X/i2c.c: 79:  while (SSP1STATbits.BF == 0) {
  8308  0027B0  EFF4  F013         	goto	l255
  8309  0027B4                     l3135:
  8310                           
  8311                           ;../timer.X/i2c.c: 80:         if (--num == 0) {
  8312  0027B4  0603               	decf	i2c_read@num^0,f,c
  8313  0027B6  0E00               	movlw	0
  8314  0027B8  5A04               	subwfb	(i2c_read@num+1)^0,f,c
  8315  0027BA  5A05               	subwfb	(i2c_read@num+2)^0,f,c
  8316  0027BC  5A06               	subwfb	(i2c_read@num+3)^0,f,c
  8317  0027BE  5003               	movf	i2c_read@num^0,w,c
  8318  0027C0  1004               	iorwf	(i2c_read@num+1)^0,w,c
  8319  0027C2  1005               	iorwf	(i2c_read@num+2)^0,w,c
  8320  0027C4  1006               	iorwf	(i2c_read@num+3)^0,w,c
  8321  0027C6  A4D8               	btfss	status,2,c
  8322  0027C8  EFE8  F013         	goto	u2671
  8323  0027CC  EFEA  F013         	goto	u2670
  8324  0027D0                     u2671:
  8325  0027D0  EFF4  F013         	goto	l255
  8326  0027D4                     u2670:
  8327  0027D4                     
  8328                           ;../timer.X/i2c.c: 81:             SSP1CON2bits.PEN = 1;
  8329  0027D4  8497               	bsf	151,2,c	;volatile
  8330  0027D6                     l258:
  8331  0027D6  B497               	btfsc	151,2,c	;volatile
  8332  0027D8  EFF0  F013         	goto	u2681
  8333  0027DC  EFF2  F013         	goto	u2680
  8334  0027E0                     u2681:
  8335  0027E0  EFEB  F013         	goto	l258
  8336  0027E4                     u2680:
  8337  0027E4  EF8F  F013         	goto	l3115
  8338  0027E8                     l255:
  8339                           
  8340                           ;../timer.X/i2c.c: 79:  while (SSP1STATbits.BF == 0) {
  8341  0027E8  A095               	btfss	149,0,c	;volatile
  8342  0027EA  EFF9  F013         	goto	u2691
  8343  0027EE  EFFB  F013         	goto	u2690
  8344  0027F2                     u2691:
  8345  0027F2  EFDA  F013         	goto	l3135
  8346  0027F6                     u2690:
  8347  0027F6                     
  8348                           ;../timer.X/i2c.c: 87:  unsigned char read = SSP1BUF;
  8349  0027F6  CF92 F007          	movff	3986,i2c_read@read	;volatile
  8350                           
  8351                           ;../timer.X/i2c.c: 90:  SSP1CON2bits.ACKDT = 1;
  8352  0027FA  8A97               	bsf	151,5,c	;volatile
  8353                           
  8354                           ;../timer.X/i2c.c: 91:  SSP1CON2bits.ACKEN = 1;
  8355  0027FC  8897               	bsf	151,4,c	;volatile
  8356  0027FE                     l262:
  8357  0027FE  B897               	btfsc	151,4,c	;volatile
  8358  002800  EF04  F014         	goto	u2701
  8359  002804  EF06  F014         	goto	u2700
  8360  002808                     u2701:
  8361  002808  EFFF  F013         	goto	l262
  8362  00280C                     u2700:
  8363  00280C                     
  8364                           ;../timer.X/i2c.c: 94:  SSP1CON2bits.PEN = 1;
  8365  00280C  8497               	bsf	151,2,c	;volatile
  8366  00280E                     l265:
  8367  00280E  B497               	btfsc	151,2,c	;volatile
  8368  002810  EF0C  F014         	goto	u2711
  8369  002814  EF0E  F014         	goto	u2710
  8370  002818                     u2711:
  8371  002818  EF07  F014         	goto	l265
  8372  00281C                     u2710:
  8373  00281C                     
  8374                           ;../timer.X/i2c.c: 97:  return read;
  8375  00281C  5007               	movf	i2c_read@read^0,w,c
  8376  00281E                     l237:
  8377  00281E  0012               	return		;funcret
  8378  002820                     __end_of_i2c_read:
  8379                           	opt callstack 0
  8380                           
  8381 ;; *************** function _ccp_init *****************
  8382 ;; Defined at:
  8383 ;;		line 16 in file "ccp.c"
  8384 ;; Parameters:    Size  Location     Type
  8385 ;;		None
  8386 ;; Auto vars:     Size  Location     Type
  8387 ;;		None
  8388 ;; Return value:  Size  Location     Type
  8389 ;;                  1    wreg      void 
  8390 ;; Registers used:
  8391 ;;		wreg, status,2
  8392 ;; Tracked objects:
  8393 ;;		On entry : 0/0
  8394 ;;		On exit  : 0/0
  8395 ;;		Unchanged: 0/0
  8396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8401 ;;Total ram usage:        0 bytes
  8402 ;; Hardware stack levels used:    1
  8403 ;; Hardware stack levels required when called:    1
  8404 ;; This function calls:
  8405 ;;		Nothing
  8406 ;; This function is called by:
  8407 ;;		_main
  8408 ;; This function uses a non-reentrant model
  8409 ;;
  8410                           
  8411                           	psect	text41
  8412  003634                     __ptext41:
  8413                           	opt callstack 0
  8414  003634                     _ccp_init:
  8415                           	opt callstack 29
  8416  003634                     
  8417                           ;ccp.c: 18:     TMR1 = 0;
  8418  003634  0E00               	movlw	0
  8419  003636  6ECE               	movwf	206,c	;volatile
  8420  003638  0E00               	movlw	0
  8421  00363A  6ECD               	movwf	205,c	;volatile
  8422  00363C                     
  8423                           ;ccp.c: 19:     T1CKPS0 = 1;
  8424  00363C  88CF               	bsf	4047,4,c	;volatile
  8425  00363E                     
  8426                           ;ccp.c: 20:     T1CKPS1 = 1;
  8427  00363E  8ACF               	bsf	4047,5,c	;volatile
  8428  003640                     
  8429                           ;ccp.c: 21:     T1CONbits.NOT_SYNC = 0;
  8430  003640  94CF               	bcf	207,2,c	;volatile
  8431  003642                     
  8432                           ;ccp.c: 22:     T1CONbits.RD16 = 1;
  8433  003642  82CF               	bsf	207,1,c	;volatile
  8434                           
  8435                           ;ccp.c: 23:     TMR1CLKbits.CS=1;
  8436  003644  50D2               	movf	210,w,c	;volatile
  8437  003646  0BF0               	andlw	-16
  8438  003648  0901               	iorlw	1
  8439  00364A  6ED2               	movwf	210,c	;volatile
  8440  00364C                     
  8441                           ;ccp.c: 24:     TMR1IF=0;
  8442  00364C  010E               	movlb	14	; () banked
  8443  00364E  91CE               	bcf	206,0,b	;volatile
  8444  003650                     
  8445                           ; BSR set to: 14
  8446                           ;ccp.c: 25:     TMR1ON = 1;
  8447  003650  80CF               	bsf	4047,0,c	;volatile
  8448                           
  8449                           ;ccp.c: 28:     CCP1PPS=0x12;
  8450  003652  0E12               	movlw	18
  8451  003654  6FAF               	movwf	175,b	;volatile
  8452                           
  8453                           ;ccp.c: 29:     CCPR1=0x00;
  8454  003656  0E00               	movlw	0
  8455  003658  6EAB               	movwf	171,c	;volatile
  8456  00365A  0E00               	movlw	0
  8457  00365C  6EAA               	movwf	170,c	;volatile
  8458                           
  8459                           ;ccp.c: 30:     CCP1CONbits.MODE=0x05;
  8460  00365E  50AC               	movf	172,w,c	;volatile
  8461  003660  0BF0               	andlw	-16
  8462  003662  0905               	iorlw	5
  8463  003664  6EAC               	movwf	172,c	;volatile
  8464  003666                     
  8465                           ; BSR set to: 14
  8466                           ;ccp.c: 31:     CCP1CONbits.EN = 1;
  8467  003666  8EAC               	bsf	172,7,c	;volatile
  8468  003668                     
  8469                           ; BSR set to: 14
  8470                           ;ccp.c: 32:     CCP1IF=0;
  8471  003668  91D0               	bcf	208,0,b	;volatile
  8472  00366A                     
  8473                           ; BSR set to: 14
  8474                           ;ccp.c: 36:     CCP1IE = 1;
  8475  00366A  81C8               	bsf	200,0,b	;volatile
  8476  00366C                     
  8477                           ; BSR set to: 14
  8478                           ;ccp.c: 37:     PEIE = 1;
  8479  00366C  8CF2               	bsf	4082,6,c	;volatile
  8480  00366E                     
  8481                           ; BSR set to: 14
  8482                           ;ccp.c: 38:     GIE = 1;
  8483  00366E  8EF2               	bsf	4082,7,c	;volatile
  8484  003670                     
  8485                           ; BSR set to: 14
  8486  003670  0012               	return		;funcret
  8487  003672                     __end_of_ccp_init:
  8488                           	opt callstack 0
  8489                           
  8490 ;; *************** function _adc_init *****************
  8491 ;; Defined at:
  8492 ;;		line 9 in file "../timer.X/adc.c"
  8493 ;; Parameters:    Size  Location     Type
  8494 ;;		None
  8495 ;; Auto vars:     Size  Location     Type
  8496 ;;		None
  8497 ;; Return value:  Size  Location     Type
  8498 ;;                  1    wreg      void 
  8499 ;; Registers used:
  8500 ;;		wreg, status,2
  8501 ;; Tracked objects:
  8502 ;;		On entry : 0/0
  8503 ;;		On exit  : 0/0
  8504 ;;		Unchanged: 0/0
  8505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8509 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8510 ;;Total ram usage:        0 bytes
  8511 ;; Hardware stack levels used:    1
  8512 ;; Hardware stack levels required when called:    1
  8513 ;; This function calls:
  8514 ;;		Nothing
  8515 ;; This function is called by:
  8516 ;;		_main
  8517 ;; This function uses a non-reentrant model
  8518 ;;
  8519                           
  8520                           	psect	text42
  8521  0037E4                     __ptext42:
  8522                           	opt callstack 0
  8523  0037E4                     _adc_init:
  8524                           	opt callstack 29
  8525  0037E4                     
  8526                           ;../timer.X/adc.c: 10:     TRISAbits.TRISA0 = 1;
  8527  0037E4  8088               	bsf	136,0,c	;volatile
  8528  0037E6                     
  8529                           ;../timer.X/adc.c: 13:     ANSELC = 0x0;
  8530  0037E6  0E00               	movlw	0
  8531  0037E8  010F               	movlb	15	; () banked
  8532  0037EA  6F21               	movwf	33,b	;volatile
  8533  0037EC                     
  8534                           ; BSR set to: 15
  8535  0037EC  0012               	return		;funcret
  8536  0037EE                     __end_of_adc_init:
  8537                           	opt callstack 0
  8538                           
  8539 ;; *************** function _adcNum0 *****************
  8540 ;; Defined at:
  8541 ;;		line 19 in file "../timer.X/adc.c"
  8542 ;; Parameters:    Size  Location     Type
  8543 ;;		None
  8544 ;; Auto vars:     Size  Location     Type
  8545 ;;		None
  8546 ;; Return value:  Size  Location     Type
  8547 ;;                  4    1[COMRAM] unsigned long 
  8548 ;; Registers used:
  8549 ;;		wreg, status,2, status,0
  8550 ;; Tracked objects:
  8551 ;;		On entry : 0/0
  8552 ;;		On exit  : 0/0
  8553 ;;		Unchanged: 0/0
  8554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8555 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8557 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8558 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8559 ;;Total ram usage:        7 bytes
  8560 ;; Hardware stack levels used:    1
  8561 ;; Hardware stack levels required when called:    1
  8562 ;; This function calls:
  8563 ;;		Nothing
  8564 ;; This function is called by:
  8565 ;;		_main
  8566 ;; This function uses a non-reentrant model
  8567 ;;
  8568                           
  8569                           	psect	text43
  8570  003572                     __ptext43:
  8571                           	opt callstack 0
  8572  003572                     _adcNum0:
  8573                           	opt callstack 29
  8574  003572                     
  8575                           ;../timer.X/adc.c: 20:     ADCON0 = 0x00;
  8576  003572  0E00               	movlw	0
  8577  003574  6E60               	movwf	96,c	;volatile
  8578                           
  8579                           ;../timer.X/adc.c: 21:     ADPCH = 0;
  8580  003576  0E00               	movlw	0
  8581  003578  010F               	movlb	15	; () banked
  8582  00357A  6F5F               	movwf	95,b	;volatile
  8583  00357C                     
  8584                           ; BSR set to: 15
  8585                           ;../timer.X/adc.c: 22:     ADCON0bits.ADON = 1;
  8586  00357C  8E60               	bsf	96,7,c	;volatile
  8587  00357E                     
  8588                           ; BSR set to: 15
  8589                           ;../timer.X/adc.c: 23:     ADCON0bits.GO = 1;
  8590  00357E  8060               	bsf	96,0,c	;volatile
  8591  003580                     l198:
  8592  003580  B060               	btfsc	96,0,c	;volatile
  8593  003582  EFC5  F01A         	goto	u2991
  8594  003586  EFC7  F01A         	goto	u2990
  8595  00358A                     u2991:
  8596  00358A  EFC0  F01A         	goto	l198
  8597  00358E                     u2990:
  8598  00358E                     
  8599                           ;../timer.X/adc.c: 27:     ADCON0bits.ADON = 0;
  8600  00358E  9E60               	bcf	96,7,c	;volatile
  8601  003590                     
  8602                           ;../timer.X/adc.c: 30:     return (ADRES >> 6);
  8603  003590  CF63 F006          	movff	3939,??_adcNum0	;volatile
  8604  003594  CF64 F007          	movff	3940,??_adcNum0+1	;volatile
  8605  003598  0E06               	movlw	6
  8606  00359A  6E08               	movwf	(??_adcNum0+2)^0,c
  8607  00359C                     u3005:
  8608  00359C  90D8               	bcf	status,0,c
  8609  00359E  3207               	rrcf	(??_adcNum0+1)^0,f,c
  8610  0035A0  3206               	rrcf	??_adcNum0^0,f,c
  8611  0035A2  2E08               	decfsz	(??_adcNum0+2)^0,f,c
  8612  0035A4  EFCE  F01A         	goto	u3005
  8613  0035A8  C006  F002         	movff	??_adcNum0,?_adcNum0
  8614  0035AC  C007  F003         	movff	??_adcNum0+1,?_adcNum0+1
  8615  0035B0  6A04               	clrf	(?_adcNum0+2)^0,c
  8616  0035B2  6A05               	clrf	(?_adcNum0+3)^0,c
  8617  0035B4  0012               	return		;funcret
  8618  0035B6                     __end_of_adcNum0:
  8619                           	opt callstack 0
  8620                           
  8621 ;; *************** function ___lldiv *****************
  8622 ;; Defined at:
  8623 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\__lldiv.c"
  8624 ;; Parameters:    Size  Location     Type
  8625 ;;  dividend        4    1[COMRAM] unsigned long 
  8626 ;;  divisor         4    5[COMRAM] unsigned long 
  8627 ;; Auto vars:     Size  Location     Type
  8628 ;;  quotient        4    9[COMRAM] unsigned long 
  8629 ;;  counter         1   13[COMRAM] unsigned char 
  8630 ;; Return value:  Size  Location     Type
  8631 ;;                  4    1[COMRAM] unsigned long 
  8632 ;; Registers used:
  8633 ;;		wreg, status,2, status,0
  8634 ;; Tracked objects:
  8635 ;;		On entry : 0/0
  8636 ;;		On exit  : 0/0
  8637 ;;		Unchanged: 0/0
  8638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8639 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8640 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8642 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8643 ;;Total ram usage:       13 bytes
  8644 ;; Hardware stack levels used:    1
  8645 ;; Hardware stack levels required when called:    1
  8646 ;; This function calls:
  8647 ;;		Nothing
  8648 ;; This function is called by:
  8649 ;;		_main
  8650 ;; This function uses a non-reentrant model
  8651 ;;
  8652                           
  8653                           	psect	text44
  8654  00300E                     __ptext44:
  8655                           	opt callstack 0
  8656  00300E                     ___lldiv:
  8657                           	opt callstack 29
  8658  00300E  0E00               	movlw	0
  8659  003010  6E0A               	movwf	___lldiv@quotient^0,c
  8660  003012  0E00               	movlw	0
  8661  003014  6E0B               	movwf	(___lldiv@quotient+1)^0,c
  8662  003016  0E00               	movlw	0
  8663  003018  6E0C               	movwf	(___lldiv@quotient+2)^0,c
  8664  00301A  0E00               	movlw	0
  8665  00301C  6E0D               	movwf	(___lldiv@quotient+3)^0,c
  8666  00301E  5006               	movf	___lldiv@divisor^0,w,c
  8667  003020  1007               	iorwf	(___lldiv@divisor+1)^0,w,c
  8668  003022  1008               	iorwf	(___lldiv@divisor+2)^0,w,c
  8669  003024  1009               	iorwf	(___lldiv@divisor+3)^0,w,c
  8670  003026  B4D8               	btfsc	status,2,c
  8671  003028  EF18  F018         	goto	u3091
  8672  00302C  EF1A  F018         	goto	u3090
  8673  003030                     u3091:
  8674  003030  EF50  F018         	goto	l611
  8675  003034                     u3090:
  8676  003034  0E01               	movlw	1
  8677  003036  6E0E               	movwf	___lldiv@counter^0,c
  8678  003038  EF24  F018         	goto	l3493
  8679  00303C                     l3491:
  8680  00303C  90D8               	bcf	status,0,c
  8681  00303E  3606               	rlcf	___lldiv@divisor^0,f,c
  8682  003040  3607               	rlcf	(___lldiv@divisor+1)^0,f,c
  8683  003042  3608               	rlcf	(___lldiv@divisor+2)^0,f,c
  8684  003044  3609               	rlcf	(___lldiv@divisor+3)^0,f,c
  8685  003046  2A0E               	incf	___lldiv@counter^0,f,c
  8686  003048                     l3493:
  8687  003048  AE09               	btfss	(___lldiv@divisor+3)^0,7,c
  8688  00304A  EF29  F018         	goto	u3101
  8689  00304E  EF2B  F018         	goto	u3100
  8690  003052                     u3101:
  8691  003052  EF1E  F018         	goto	l3491
  8692  003056                     u3100:
  8693  003056                     l3495:
  8694  003056  90D8               	bcf	status,0,c
  8695  003058  360A               	rlcf	___lldiv@quotient^0,f,c
  8696  00305A  360B               	rlcf	(___lldiv@quotient+1)^0,f,c
  8697  00305C  360C               	rlcf	(___lldiv@quotient+2)^0,f,c
  8698  00305E  360D               	rlcf	(___lldiv@quotient+3)^0,f,c
  8699  003060  5006               	movf	___lldiv@divisor^0,w,c
  8700  003062  5C02               	subwf	___lldiv@dividend^0,w,c
  8701  003064  5007               	movf	(___lldiv@divisor+1)^0,w,c
  8702  003066  5803               	subwfb	(___lldiv@dividend+1)^0,w,c
  8703  003068  5008               	movf	(___lldiv@divisor+2)^0,w,c
  8704  00306A  5804               	subwfb	(___lldiv@dividend+2)^0,w,c
  8705  00306C  5009               	movf	(___lldiv@divisor+3)^0,w,c
  8706  00306E  5805               	subwfb	(___lldiv@dividend+3)^0,w,c
  8707  003070  A0D8               	btfss	status,0,c
  8708  003072  EF3D  F018         	goto	u3111
  8709  003076  EF3F  F018         	goto	u3110
  8710  00307A                     u3111:
  8711  00307A  EF48  F018         	goto	l3503
  8712  00307E                     u3110:
  8713  00307E  5006               	movf	___lldiv@divisor^0,w,c
  8714  003080  5E02               	subwf	___lldiv@dividend^0,f,c
  8715  003082  5007               	movf	(___lldiv@divisor+1)^0,w,c
  8716  003084  5A03               	subwfb	(___lldiv@dividend+1)^0,f,c
  8717  003086  5008               	movf	(___lldiv@divisor+2)^0,w,c
  8718  003088  5A04               	subwfb	(___lldiv@dividend+2)^0,f,c
  8719  00308A  5009               	movf	(___lldiv@divisor+3)^0,w,c
  8720  00308C  5A05               	subwfb	(___lldiv@dividend+3)^0,f,c
  8721  00308E  800A               	bsf	___lldiv@quotient^0,0,c
  8722  003090                     l3503:
  8723  003090  90D8               	bcf	status,0,c
  8724  003092  3209               	rrcf	(___lldiv@divisor+3)^0,f,c
  8725  003094  3208               	rrcf	(___lldiv@divisor+2)^0,f,c
  8726  003096  3207               	rrcf	(___lldiv@divisor+1)^0,f,c
  8727  003098  3206               	rrcf	___lldiv@divisor^0,f,c
  8728  00309A  2E0E               	decfsz	___lldiv@counter^0,f,c
  8729  00309C  EF2B  F018         	goto	l3495
  8730  0030A0                     l611:
  8731  0030A0  C00A  F002         	movff	___lldiv@quotient,?___lldiv
  8732  0030A4  C00B  F003         	movff	___lldiv@quotient+1,?___lldiv+1
  8733  0030A8  C00C  F004         	movff	___lldiv@quotient+2,?___lldiv+2
  8734  0030AC  C00D  F005         	movff	___lldiv@quotient+3,?___lldiv+3
  8735  0030B0  0012               	return		;funcret
  8736  0030B2                     __end_of___lldiv:
  8737                           	opt callstack 0
  8738                           
  8739 ;; *************** function _ISR *****************
  8740 ;; Defined at:
  8741 ;;		line 41 in file "ccp.c"
  8742 ;; Parameters:    Size  Location     Type
  8743 ;;		None
  8744 ;; Auto vars:     Size  Location     Type
  8745 ;;		None
  8746 ;; Return value:  Size  Location     Type
  8747 ;;                  1    wreg      void 
  8748 ;; Registers used:
  8749 ;;		wreg, status,2, status,0
  8750 ;; Tracked objects:
  8751 ;;		On entry : 0/0
  8752 ;;		On exit  : 0/0
  8753 ;;		Unchanged: 0/0
  8754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8757 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8758 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8759 ;;Total ram usage:        1 bytes
  8760 ;; Hardware stack levels used:    1
  8761 ;; This function calls:
  8762 ;;		Nothing
  8763 ;; This function is called by:
  8764 ;;		Interrupt level 2
  8765 ;; This function uses a non-reentrant model
  8766 ;;
  8767                           
  8768                           	psect	intcode
  8769  000008                     __pintcode:
  8770                           	opt callstack 0
  8771  000008                     _ISR:
  8772                           	opt callstack 22
  8773                           
  8774                           ;incstack = 0
  8775  000008  825D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  8776  00000A                     
  8777                           ;ccp.c: 42:   if (CCP1IF){
  8778  00000A  010E               	movlb	14	; () banked
  8779  00000C  A1D0               	btfss	208,0,b	;volatile
  8780  00000E  EF0B  F000         	goto	i2u374_41
  8781  000012  EF0D  F000         	goto	i2u374_40
  8782  000016                     i2u374_41:
  8783  000016  EF69  F000         	goto	i2l484
  8784  00001A                     i2u374_40:
  8785  00001A                     
  8786                           ; BSR set to: 14
  8787                           ;ccp.c: 43:         TMR1 = 0;
  8788  00001A  0E00               	movlw	0
  8789  00001C  6ECE               	movwf	206,c	;volatile
  8790  00001E  0E00               	movlw	0
  8791  000020  6ECD               	movwf	205,c	;volatile
  8792  000022                     
  8793                           ; BSR set to: 14
  8794                           ;ccp.c: 44:         PIR6bits.CCP1IF = 0;
  8795  000022  91D0               	bcf	208,0,b	;volatile
  8796  000024                     i2l476:
  8797                           
  8798                           ; BSR set to: 14
  8799  000024  A1D0               	btfss	208,0,b	;volatile
  8800  000026  EF17  F000         	goto	i2u375_41
  8801  00002A  EF19  F000         	goto	i2u375_40
  8802  00002E                     i2u375_41:
  8803  00002E  EF12  F000         	goto	i2l476
  8804  000032                     i2u375_40:
  8805  000032                     
  8806                           ; BSR set to: 14
  8807                           ;ccp.c: 47:         PIR6bits.CCP1IF = 0;
  8808  000032  91D0               	bcf	208,0,b	;volatile
  8809  000034                     
  8810                           ; BSR set to: 14
  8811                           ;ccp.c: 48:         f = CCPR1;
  8812  000034  CFAA F0C9          	movff	4010,_f	;volatile
  8813  000038  CFAB F0CA          	movff	4011,_f+1	;volatile
  8814  00003C  0100               	movlb	0	; () banked
  8815  00003E  6BCB               	clrf	(_f+2)& (0+255),b
  8816  000040  6BCC               	clrf	(_f+3)& (0+255),b
  8817  000042                     
  8818                           ; BSR set to: 0
  8819                           ;ccp.c: 50:         if(f>=1680){
  8820  000042  51CC               	movf	(_f+3)& (0+255),w,b
  8821  000044  11CB               	iorwf	(_f+2)& (0+255),w,b
  8822  000046  E10B               	bnz	i2u376_40
  8823  000048  0E90               	movlw	144
  8824  00004A  5DC9               	subwf	_f& (0+255),w,b
  8825  00004C  0E06               	movlw	6
  8826  00004E  59CA               	subwfb	(_f+1)& (0+255),w,b
  8827  000050  A0D8               	btfss	status,0,c
  8828  000052  EF2D  F000         	goto	i2u376_41
  8829  000056  EF2F  F000         	goto	i2u376_40
  8830  00005A                     i2u376_41:
  8831  00005A  EF3D  F000         	goto	i2l3993
  8832  00005E                     i2u376_40:
  8833  00005E                     
  8834                           ; BSR set to: 0
  8835                           ;ccp.c: 51:             r=0;
  8836  00005E  0E00               	movlw	0
  8837  000060  6FD8               	movwf	(_r+1)& (0+255),b
  8838  000062  0E00               	movlw	0
  8839  000064  6FD7               	movwf	_r& (0+255),b
  8840  000066                     i2l3991:
  8841                           
  8842                           ; BSR set to: 0
  8843                           ;ccp.c: 52:             _delay((unsigned long)((20)*(4000000/4000.0)));
  8844  000066  0E1A               	movlw	26
  8845  000068  6E01               	movwf	??_ISR^0,c
  8846  00006A  0EF8               	movlw	248
  8847  00006C                     i2u519_47:
  8848  00006C  2EE8               	decfsz	wreg,f,c
  8849  00006E  D7FE               	bra	i2u519_47
  8850  000070  2E01               	decfsz	??_ISR^0,f,c
  8851  000072  D7FC               	bra	i2u519_47
  8852  000074  D000               	nop2	
  8853                           
  8854                           ;ccp.c: 53:         }
  8855  000076  EF65  F000         	goto	i2l4005
  8856  00007A                     i2l3993:
  8857                           
  8858                           ; BSR set to: 0
  8859  00007A  51CC               	movf	(_f+3)& (0+255),w,b
  8860  00007C  11CB               	iorwf	(_f+2)& (0+255),w,b
  8861  00007E  E10B               	bnz	i2u377_40
  8862  000080  0E82               	movlw	130
  8863  000082  5DC9               	subwf	_f& (0+255),w,b
  8864  000084  0E05               	movlw	5
  8865  000086  59CA               	subwfb	(_f+1)& (0+255),w,b
  8866  000088  A0D8               	btfss	status,0,c
  8867  00008A  EF49  F000         	goto	i2u377_41
  8868  00008E  EF4B  F000         	goto	i2u377_40
  8869  000092                     i2u377_41:
  8870  000092  EF51  F000         	goto	i2l3999
  8871  000096                     i2u377_40:
  8872  000096                     
  8873                           ; BSR set to: 0
  8874                           ;ccp.c: 55:             r=1;
  8875  000096  0E00               	movlw	0
  8876  000098  6FD8               	movwf	(_r+1)& (0+255),b
  8877  00009A  0E01               	movlw	1
  8878  00009C  6FD7               	movwf	_r& (0+255),b
  8879  00009E  EF33  F000         	goto	i2l3991
  8880  0000A2                     i2l3999:
  8881                           
  8882                           ; BSR set to: 0
  8883  0000A2  51CC               	movf	(_f+3)& (0+255),w,b
  8884  0000A4  11CB               	iorwf	(_f+2)& (0+255),w,b
  8885  0000A6  E10B               	bnz	i2u378_40
  8886  0000A8  0E7A               	movlw	122
  8887  0000AA  5DC9               	subwf	_f& (0+255),w,b
  8888  0000AC  0E03               	movlw	3
  8889  0000AE  59CA               	subwfb	(_f+1)& (0+255),w,b
  8890  0000B0  A0D8               	btfss	status,0,c
  8891  0000B2  EF5D  F000         	goto	i2u378_41
  8892  0000B6  EF5F  F000         	goto	i2u378_40
  8893  0000BA                     i2u378_41:
  8894  0000BA  EF65  F000         	goto	i2l4005
  8895  0000BE                     i2u378_40:
  8896  0000BE                     
  8897                           ; BSR set to: 0
  8898                           ;ccp.c: 59:             r=2;
  8899  0000BE  0E00               	movlw	0
  8900  0000C0  6FD8               	movwf	(_r+1)& (0+255),b
  8901  0000C2  0E02               	movlw	2
  8902  0000C4  6FD7               	movwf	_r& (0+255),b
  8903  0000C6  EF33  F000         	goto	i2l3991
  8904  0000CA                     i2l4005:
  8905                           
  8906                           ;ccp.c: 65:     TMR1 = 0;
  8907  0000CA  0E00               	movlw	0
  8908  0000CC  6ECE               	movwf	206,c	;volatile
  8909  0000CE  0E00               	movlw	0
  8910  0000D0  6ECD               	movwf	205,c	;volatile
  8911  0000D2                     i2l484:
  8912  0000D2  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  8913  0000D4  0011               	retfie		f
  8914  0000D6                     __end_of_ISR:
  8915                           	opt callstack 0
  8916                           
  8917                           	psect	rparam
  8918  0000                     
  8919                           	psect	temp
  8920  00005D                     btemp:
  8921                           	opt callstack 0
  8922  00005D                     	ds	1
  8923  0000                     int$flags	set	btemp
  8924  0000                     wtemp8	set	btemp+1
  8925  0000                     ttemp5	set	btemp+1
  8926  0000                     ttemp6	set	btemp+4
  8927  0000                     ttemp7	set	btemp+8
  8928                           tosu	equ	0xFFF
  8929                           tosh	equ	0xFFE
  8930                           tosl	equ	0xFFD
  8931                           stkptr	equ	0xFFC
  8932                           pclatu	equ	0xFFB
  8933                           pclath	equ	0xFFA
  8934                           pcl	equ	0xFF9
  8935                           tblptru	equ	0xFF8
  8936                           tblptrh	equ	0xFF7
  8937                           tblptrl	equ	0xFF6
  8938                           tablat	equ	0xFF5
  8939                           prodh	equ	0xFF4
  8940                           prodl	equ	0xFF3
  8941                           indf0	equ	0xFEF
  8942                           postinc0	equ	0xFEE
  8943                           postdec0	equ	0xFED
  8944                           preinc0	equ	0xFEC
  8945                           plusw0	equ	0xFEB
  8946                           fsr0h	equ	0xFEA
  8947                           fsr0l	equ	0xFE9
  8948                           wreg	equ	0xFE8
  8949                           indf1	equ	0xFE7
  8950                           postinc1	equ	0xFE6
  8951                           postdec1	equ	0xFE5
  8952                           preinc1	equ	0xFE4
  8953                           plusw1	equ	0xFE3
  8954                           fsr1h	equ	0xFE2
  8955                           fsr1l	equ	0xFE1
  8956                           bsr	equ	0xFE0
  8957                           indf2	equ	0xFDF
  8958                           postinc2	equ	0xFDE
  8959                           postdec2	equ	0xFDD
  8960                           preinc2	equ	0xFDC
  8961                           plusw2	equ	0xFDB
  8962                           fsr2h	equ	0xFDA
  8963                           fsr2l	equ	0xFD9
  8964                           status	equ	0xFD8


Data Sizes:
    Strings     14
    Constant    0
    Data        150
    BSS         58
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     90      92
    BANK0           160     97     153
    BANK1           256      0     150
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_19(CODE[3]), STR_14(CODE[3]), STR_10(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_19(CODE[3]), STR_14(CODE[3]), STR_10(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), 
		 -> STR_3(CODE[4]), STR_2(CODE[4]), STR_1(CODE[4]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), 
		 -> STR_3(CODE[4]), STR_2(CODE[4]), STR_1(CODE[4]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), 
		 -> STR_3(CODE[4]), STR_2(CODE[4]), STR_1(CODE[4]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 2
		 -> main@array_413(BANK0[2]), main@array(BANK0[2]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 2
		 -> main@array_413(BANK0[2]), main@array(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S2184_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 2
		 -> main@array_413(BANK0[2]), main@array(BANK0[2]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 2
		 -> main@array_413(BANK0[2]), main@array(BANK0[2]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), 
		 -> STR_3(CODE[4]), STR_2(CODE[4]), STR_1(CODE[4]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 4
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), 
		 -> STR_3(CODE[4]), STR_2(CODE[4]), STR_1(CODE[4]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _utoa->_pad
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _set_seconds->___awdiv
    _set_minutes->___awdiv
    _set_hours->___awdiv
    _set_Aseconds->___awdiv
    _set_Aminutes->___awdiv
    _set_Ahours->___awdiv
    _rtc_init->_i2c_read
    _lcd_init->_lcd_command
    _get_seconds->_i2c_read
    _get_minutes->_i2c_read
    _get_hours->_i2c_read
    _get_Aseconds->_i2c_read
    _get_Aminutes->_i2c_read
    _get_Ahours->_i2c_read

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                63    63      0   78057
                                             34 BANK0     63    63      0
                            ___lldiv
                            _adcNum0
                           _adc_init
                           _ccp_init
                         _get_Ahours
                       _get_Aminutes
                       _get_Aseconds
                          _get_hours
                        _get_minutes
                        _get_seconds
                               _getr
                           _i2c_init
                           _i2c_read
                          _i2c_write
                           _lcd_char
                        _lcd_command
                           _lcd_init
                           _rtc_init
                         _set_Ahours
                       _set_Aminutes
                       _set_Aseconds
                          _set_hours
                        _set_minutes
                        _set_seconds
                           _spi_init
                          _spi_write
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             16    10      6   16914
                                             18 BANK0     16    10      6
                         _get_Ahours (ARG)
                       _get_Aminutes (ARG)
                       _get_Aseconds (ARG)
                          _get_hours (ARG)
                        _get_minutes (ARG)
                        _get_seconds (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   15330
                                             84 COMRAM     6     0      6
                                             16 BANK0      2     2      0
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           54    48      6   14827
                                             64 COMRAM    20    14      6
                                              0 BANK0     16    16      0
                               _dtoa
                              _fputc
                            _strncmp
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                32    22     10    5279
                                             28 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             17     1     16     412
                                              1 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             25     9     16     421
                                              1 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6    1135
                                              1 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    6133
                                             28 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3687
                                             17 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                              1 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1537
                                             10 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1037
                                              1 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             19 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                              1 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                              1 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _spi_write                                            6     6      0     136
                                              1 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (1) _spi_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_seconds                                          4     4      0    7271
                                              9 COMRAM     4     4      0
                            ___awdiv
                            ___awmod
                           _i2c_read
                          _i2c_write
 ---------------------------------------------------------------------------------
 (1) _set_minutes                                          3     3      0    5919
                                              9 COMRAM     3     3      0
                            ___awdiv
                            ___awmod
                          _i2c_write
 ---------------------------------------------------------------------------------
 (1) _set_hours                                            4     4      0    7271
                                              9 COMRAM     4     4      0
                            ___awdiv
                            ___awmod
                           _i2c_read
                          _i2c_write
 ---------------------------------------------------------------------------------
 (1) _set_Aseconds                                         3     3      0    5919
                                              9 COMRAM     3     3      0
                            ___awdiv
                            ___awmod
                          _i2c_write
 ---------------------------------------------------------------------------------
 (1) _set_Aminutes                                         3     3      0    5919
                                              9 COMRAM     3     3      0
                            ___awdiv
                            ___awmod
                          _i2c_write
 ---------------------------------------------------------------------------------
 (1) _set_Ahours                                           4     4      0    7271
                                              9 COMRAM     4     4      0
                            ___awdiv
                            ___awmod
                           _i2c_read
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4    1664
                                              1 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1668
                                              1 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _rtc_init                                             4     4      0    3962
                                              8 COMRAM     4     4      0
                           _i2c_read
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _i2c_write                                            3     1      2    2498
                                              1 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     295
                        _lcd_command
 ---------------------------------------------------------------------------------
 (2) _lcd_command                                          3     3      0     295
                                              1 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _lcd_char                                             3     3      0     295
                                              1 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _i2c_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _getr                                                 2     0      2       0
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _get_seconds                                          2     2      0    1373
                                              8 COMRAM     2     2      0
                           _i2c_read
 ---------------------------------------------------------------------------------
 (1) _get_minutes                                          2     2      0    1373
                                              8 COMRAM     2     2      0
                           _i2c_read
 ---------------------------------------------------------------------------------
 (1) _get_hours                                            2     2      0    1373
                                              8 COMRAM     2     2      0
                           _i2c_read
 ---------------------------------------------------------------------------------
 (1) _get_Aseconds                                         2     2      0    1373
                                              8 COMRAM     2     2      0
                           _i2c_read
 ---------------------------------------------------------------------------------
 (1) _get_Aminutes                                         2     2      0    1373
                                              8 COMRAM     2     2      0
                           _i2c_read
 ---------------------------------------------------------------------------------
 (1) _get_Ahours                                           2     2      0    1373
                                              8 COMRAM     2     2      0
                           _i2c_read
 ---------------------------------------------------------------------------------
 (2) _i2c_read                                             7     6      1    1328
                                              1 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 (1) _ccp_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adcNum0                                              7     3      4       0
                                              1 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             13     5      8     770
                                              1 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR                                                  1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lldiv
   _adcNum0
   _adc_init
   _ccp_init
   _get_Ahours
     _i2c_read
   _get_Aminutes
     _i2c_read
   _get_Aseconds
     _i2c_read
   _get_hours
     _i2c_read
   _get_minutes
     _i2c_read
   _get_seconds
     _i2c_read
   _getr
   _i2c_init
   _i2c_read
   _i2c_write
   _lcd_char
   _lcd_command
   _lcd_init
     _lcd_command
   _rtc_init
     _i2c_read
     _i2c_write
   _set_Ahours
     ___awdiv
     ___awmod
     _i2c_read
     _i2c_write
   _set_Aminutes
     ___awdiv
     ___awmod
     _i2c_write
   _set_Aseconds
     ___awdiv
     ___awmod
     _i2c_write
   _set_hours
     ___awdiv
     ___awmod
     _i2c_read
     _i2c_write
   _set_minutes
     ___awdiv
     ___awmod
     _i2c_write
   _set_seconds
     ___awdiv
     ___awmod
     _i2c_read
     _i2c_write
   _spi_init
   _spi_write
   _sprintf
     _get_Ahours (ARG)
       _i2c_read
     _get_Aminutes (ARG)
       _i2c_read
     _get_Aseconds (ARG)
       _i2c_read
     _get_hours (ARG)
       _i2c_read
     _get_minutes (ARG)
       _i2c_read
     _get_seconds (ARG)
       _i2c_read
     _vfprintf (ARG)
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _fputc
           _putch
         _strncmp
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E87      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      96       8       58.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     61      99       5       95.6%
BITBANK14           88      0       0      33        0.0%
BANK14              88      0       0      34        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5A      5C       1       97.9%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     18B       6        0.0%
DATA                 0      0     18B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Apr 24 15:07:39 2020

           ?_get_minutes 0001             ?_get_seconds 0001              main@u24_410 0094  
            main@AsetNum 00B2                        _f 00C9                        _r 00D7  
            main@u60_411 009A             lcd_char@temp 0003                       l84 0FF2  
                     l86 107A                       l88 108E                       _f2 00C5  
                     _f3 00C1             ___awdiv@sign 0007              __CFG_LVP$ON 000000  
           rtc_init@hour 000C                      l100 120C                      l200 358E  
                    l120 14C0                      l104 12B0                      l201 35B4  
                    l122 1548                      l114 1404                      l115 1822  
                    l140 177E                      l124 155C                      l108 1354  
                    l230 26F2                      l240 2736                      l232 2700  
                    l224 36D0                      l312 2F5C                      l136 16DA  
                    l241 2758                      l233 2724                      l250 277C  
                    l242 2746                      l234 2710                      l306 2EA2  
                    l154 18DA                      l251 279E                      l227 26DC  
                    l155 18FC                      l252 278C                      l332 3230  
                    l261 27F6                      l245 275A                      l237 281E  
                    l309 3798                      l325 31C6                      l421 3342  
                    l262 27FE                      l238 2728                      l342 3714  
                    l270 2C68                      l158 1926                      l255 27E8  
                    l335 37B8                      l423 3350                      l264 280C  
                    l248 276E                      l328 36F2                      l280 2D26  
                    l424 335C                      l265 280E                      l281 2CB2  
                    l273 2C7E                      l521 2DE8                      l258 27D6  
                    l290 2CF4                      l346 329A                      l418 3778  
                    l426 336A                      l611 30A0                      l195 37EC  
                    l291 2D16                      l283 2CC0                      l275 2C8C  
                    l339 342A                      l427 336C                      l292 2D04  
                    l284 2CE2                      l276 2CAE                      l516 2D6C  
                    l285 2CD0                      l277 2C9C                      l381 3482  
                    l198 3580                      l470 3670                      l391 3758  
                    l295 2D18                      l711 26D6                      l519 2DAE  
                    l527 1FAE                      l384 37D8                      l288 2CE6  
                    l552 2224                      l377 3736                      l529 1FB6  
                    l618 30B0                      l562 23EA                      l554 222C  
                    l395 3304                      l547 21EA                      l388 34DA  
                    l580 33CA                      l581 33D2                      l487 37E2  
                    l815 2C62                      l569 1F0C                      l828 300C  
                    l698 2572                      _GIE 007F97                      _ISR 0008  
                    _abs 35B6                      _pad 2D28                      _sin 0164  
           ___awmod@sign 0007                      wreg 000FE8              main@alarmON 0096  
            main@channel 009C                     ?_ISR 0001             lcd_command@x 0004  
                   l1022 29E4                     l1032 2AB4                     ?_abs 0014  
                   l1029 2A04                     l1302 2914                     l1039 2AD4  
                   l3101 2E78                     l1262 35F4                     l3111 26EA  
                   l3103 2E88                     l3113 270E                     l3105 2E8E  
                   l3201 2C42                     l1274 2B9E                     l1282 3570  
                   l3115 271E                     l3107 2E92                     l3203 2C52  
                   l3211 2F62                     l1259 35EC                     l1292 37EE  
                   l3301 3642                     l3133 27A0                     l3125 2768  
                   l3109 26DA                     l3205 2C5A                     l3221 2F92  
                   l3213 2F70                     l4101 2AFA                     l3311 366A  
                   l3303 364C                     l3143 281C                     l3135 27B4  
                   l3127 278A                     l3119 2744                     l3071 2E00  
                   l3151 2C9A                     l3231 2FD8                     l3223 2FA4  
                   l3215 2F78                     l4103 2B04                     l4111 352E  
                   l3321 357E                     l3313 366C                     l3305 3650  
                   l3137 27D4                     l3081 2E26                     l3073 2E10  
                   l3065 2DEC                     l3153 2CCE                     l3241 3004  
                   l3233 2FE0                     l3225 2FAC                     l3217 2F7C  
                   l3209 2F5E                     l4201 2578                     l4105 2B22  
                   l4113 353A                     l4121 367E                     l1289 352C  
                   l5001 1AF2                     l1298 36A6                     l3323 3590  
                   l3315 366E                     l3307 3666                     l3251 36A8  
                   l3091 2E54                     l3083 2E36                     l3075 2E16  
                   l3067 2DF8                     l3155 2D02                     l3147 2C66  
                   l3171 2BBA                     l3235 2FE6                     l3227 2FB4  
                   l3219 2F8A                     l3331 327A                     l4211 25D8  
                   l4203 2586                     l4107 2B58                     l4115 354C  
                   l4123 3682                     l4131 2D36                     l3501 308E  
                   l3317 3572                     l3245 37E4                     l3309 3668  
                   l3421 36D2                     l3253 36AC                     l3093 2E64  
                   l3085 2E3C                     l3077 2E1C                     l3069 2DFC  
                   l3149 2C76                     l3261 3148                     l3181 2BE0  
                   l3173 2BBE                     l3165 2BA0                     l3229 2FC2  
                   l3237 2FEC                     l3333 3286                     l3341 341C  
                   l4221 264E                     l4213 25F6                     l4205 25A6  
                   l4117 3550                     l4125 369A                     l4141 2D8C  
                   l4133 2D4A                     l4301 207C                     l3503 3090  
                   l3319 357C                     l3247 37E6                     l3415 379A  
                   l3423 36DE                     l3255 36CA                     l3095 2E68  
                   l3087 2E40                     l3079 2E22                     l3263 3154  
                   l3191 2C16                     l3183 2BF2                     l3175 2BCC  
                   l3167 2BA4                     l3239 2FFC                     l3431 32AE  
                   l3335 328A                     l3327 3234                     l3351 3220  
                   l3343 31CA                     l4231 26B6                     l4223 266E  
                   l4215 25FE                     l4207 25AA                     l4151 35B6  
                   l4119 3672                     l4143 2D90                     l4135 2D58  
                   l4311 2124                     l4303 2082                     l3505 309A  
                   l3417 37A6                     l3257 36CC                     l3361 2ECA  
                   l3353 2EA6                     l3097 2E6E                     l3089 2E50  
                   l3249 377A                     l3281 31B6                     l3273 317A  
                   l3265 3162                     l3193 2C2C                     l3185 2BFA  
                   l3177 2BD4                     l3169 2BB2                     l3433 32E4  
                   l3441 3496                     l3329 3244                     l3337 33D6  
                   l3345 31DA                     l4161 241E                     l4225 2680  
                   l4217 2612                     l4209 25B8                     l4153 35D0  
                   l4145 2DBC                     l4137 2D64                     l4129 2D28  
                   l4321 2186                     l4313 213E                     l4305 2088  
                   l4241 2948                     l4401 1B88                     l3451 3738  
                   l3427 37DA                     l3259 36CE                     l3371 2EF0  
                   l3363 2ED0                     l3355 2EB2                     l3099 2E74  
                   l3275 3182                     l3267 3172                     l3195 2C34  
                   l3187 2C02                     l3179 2BD8                     l3435 32F0  
                   l3443 34CC                     l3339 33E6                     l3347 3210  
                   l3291 376E                     l3283 375A                     l4171 2460  
                   l4163 2422                     l4155 23EC                     l4219 2620  
                   l4227 2686                     l4147 2DD0                     l4139 2D78  
                   l4323 218C                     l4331 21C2                     l4315 2158  
                   l4307 20EC                     l4251 29CA                     l4243 295C  
                   l4235 2916                     l4411 1C66                     l4403 1BB0  
                   l3293 3634                     l3453 3744                     l3381 2F1E  
                   l3373 2EF6                     l3365 2ED6                     l3357 2EB6  
                   l3277 319C                     l3197 2C36                     l3189 2C10  
                   l3437 32F4                     l3429 329E                     l3445 342E  
                   l3349 321C                     l3285 3762                     l4181 24BA  
                   l4173 247E                     l4165 2430                     l4157 23F0  
                   l4229 2696                     l4325 219E                     l4309 2106  
                   l4317 2166                     l4253 29CC                     l4245 296A  
                   l4237 2922                     l4261 2A2C                     l4341 2218  
                   l4421 1D4A                     l4413 1C9C                     l4405 1BF8  
                   l4501 0F60                     l3295 363C                     l3463 3716  
                   l3391 2F42                     l3383 2F22                     l3375 2EFA  
                   l3367 2EDC                     l3359 2EBA                     l3279 31A8  
                   l3199 2C3C                     l3439 3486                     l3447 343E  
                   l3287 376A                     l3471 330A                     l4183 24E8  
                   l4175 2486                     l4191 2522                     l4167 2450  
                   l4159 23FE                     l4327 21AA                     l4319 2178  
                   l4255 29DE                     l4247 297C                     l4239 2940  
                   l4271 2AAE                     l4263 2A40                     l4351 22E0  
                   l4343 2254                     l4335 21EC                     l4423 1D96  
                   l4511 0F6A                     l4503 0F62                     l3297 363E  
                   l3457 37BA                     l3465 3722                     l3393 2F48  
                   l3385 2F28                     l3377 2F0A                     l3369 2EE0  
                   l3449 3474                     l3289 376C                     l3481 3356  
                   l3473 3312                     l4193 2532                     l4185 2508  
                   l4177 249A                     l4169 2454                     l4097 2AD6  
                   l4329 21B2                     l4281 1F86                     l4273 1F0E  
                   l4249 29AA                     l4265 2A4E                     l4257 2A06  
                   l4361 2380                     l4353 22E6                     l4345 225C  
                   l4337 21FC                     l4441 1EAC                     l4409 1C30  
                   l4601 1282                     l4521 0F74                     l4513 0F6C  
                   l4505 0F64                     l3491 303C                     l3299 3640  
                   l3459 37C6                     l3395 2F4C                     l3387 2F2E  
                   l3379 2F0E                     l3483 3358                     l3475 3336  
                   l4195 2552                     l4187 250A                     l4179 24A8  
                   l4099 2AE8                     l4291 1FDE                     l4283 1F88  
                   l4275 1F2E                     l4371 2820                     l4267 2A7C  
                   l4259 2A24                     l4363 239A                     l4355 22EC  
                   l4347 2264                     l4339 21FE                     l4435 1E62  
                   l4427 1DCE                     l4419 1D22                     l4451 1ED2  
                   l4611 12DE                     l4603 1292                     l4531 1058  
                   l4523 0F82                     l4515 0F6E                     l4507 0F66  
                   l3493 3048                     l3485 300E                     l3397 36F4  
                   l3389 2F32                     l3477 333A                     l3469 3308  
                   l4189 251C                     l4293 1FE4                     l4285 1FA2  
                   l4277 1F56                     l4381 2884                     l4373 284A  
                   l4269 2A9C                     l4365 23B4                     l4349 226A  
                   l4357 2350                     l4453 1EFA                     l4437 1E8A  
                   l4445 1EB8                     l4429 1E04                     l4461 3376  
                   l4621 1326                     l4613 12E2                     l4605 12A4  
                   l4541 10C2                     l4533 105E                     l4525 0F9A  
                   l4517 0F70                     l4509 0F68                     ?_pad 0012  
                   l3495 3056                     l3487 301E                     l3399 3700  
                   l3479 333E                     l4199 2574                     l4295 1FEC  
                   l4287 1FBE                     l4279 1F76                     l4383 28A4  
                   l4359 2362                     l4367 23C2                     l4447 1EC6  
                   l4439 1E98                     l4391 1B14                     l4463 3384  
                   l4471 34F6                     l4711 163C                     l4703 1612  
                   l4631 138A                     l4623 1336                     l4615 12F4  
                   l4607 12B6                     l4543 10C8                     l4535 1072  
                   l4551 10E6                     l4527 0FB2                     l4519 0F72  
                   l3497 3060                     l3489 3034                     l4297 1FF4  
                   l4289 1FD0                     l4385 28B6                     l4377 2856  
                   l4393 1B3C                     l4465 33AA                     l4473 34FE  
                   l4801 1930                     l4721 168A                     l4713 1660  
                   l4705 1622                     l4641 13CA                     l4633 1396  
                   l4625 1348                     l4617 1304                     l4609 12DA  
                   l4561 1154                     l4545 10D2                     l4553 111A  
                   l4537 1090                     l4529 104A                     l4481 0F3A  
                   l3499 307E                     l4299 1FFA                     l4387 28E8  
                   l4379 2864                     l4395 1B4A                     l4459 336E  
                   l4475 351A                     l4467 34DC                     l4803 193A  
                   l4731 16E0                     l4723 169C                     l4715 1664  
                   l4651 13F4                     l4643 13D0                     l4635 13A2  
                   l4627 1366                     l4619 1316                     l4571 1196  
                   l4555 1124                     l4547 10DC                     l4539 10B0  
                   l4491 0F4E                     l4483 0F3E                     l4397 1B5C  
                   l4469 34EE                     l4821 19BA                     l4813 1982  
                   l4805 1948                     l4741 172E                     l4733 1704  
                   l4725 16AC                     l4717 1668                     l4709 162A  
                   l4661 1432                     l4653 13FE                     l4645 13D6  
                   l4637 13C0                     l4629 137A                     l4581 11DE  
                   l4573 119A                     l4565 115C                     l4493 0F52  
                   l4485 0F42                     l4399 1B60                     l4823 19C0  
                   l4815 198A                     l4807 195A                     l4751 1784  
                   l4743 1740                     l4735 1708                     l4727 16BC  
                   l4719 167A                     l4671 1480                     l4663 1444  
                   l4647 13DC                     l4639 13C4                     l4591 123A  
                   l4583 11EE                     l4575 11AC                     l4567 116E  
                   l4559 1144                     l4655 140E                     l4495 0F54  
                   l4487 0F46                     l4479 0F10                     l4841 1A0A  
                   l4833 19DA                     l4825 19C8                     l4809 1962  
                   l4761 17D2                     l4753 17A8                     l4745 1750  
                   l4737 170C                     l4729 16CE                     l4681 155E  
                   l4673 1518                     l4665 144A                     l4657 1422  
                   l4649 13E2                     l4593 123E                     l4585 1200  
                   l4577 11BC                     l4569 1192                     l4497 0F56  
                   l4489 0F4A                     l4851 1A48                     l4835 19E2  
                   l4819 19AA                     l4771 183E                     l4763 17E4  
                   l4755 17AC                     l4747 1760                     l4739 171E  
                   l4691 15AA                     l4683 157E                     l4675 1526  
                   l4667 1452                     l4659 1428                     l4595 1250  
                   l4587 1212                     l4579 11CE                     l4499 0F58  
                   l4861 1A62                     l4845 1A2A                     l4829 19D2  
                   l4781 188E                     l4773 184A                     l4765 17F4  
                   l4757 17B0                     l4749 1772                     l4685 1590  
                   l4677 152C                     l4669 1468                     l4597 1260  
                   l4589 1236                     l4871 1AAA                     l4847 1A3A  
                   l4855 1A52                     l4839 1A02                     l4791 18DC  
                   l4783 189C                     l4775 1852                     l4767 1804  
                   l4759 17C2                     l4687 1596                     l4679 1540  
                   l4695 15B4                     l4599 1272                     l4873 1ABA  
                   l4881 1AD2                     l4865 1A82                     l4849 1A40  
                   l4785 18AE                     l4777 1860                     l4793 18FE  
                   l4769 1816                     l4689 15A0                     l4697 15E8  
                   l4875 1AC0                     l4867 1A8A                     l4859 1A5A  
                   l4795 1910                     l4787 18BC                     l4779 1872  
                   l4699 15F2                     l4877 1AC8                     l4789 18C6  
                   l4799 1928                     l4887 1ADA                     l4997 10FC  
                   l4999 15CA                     STR_1 0F01                     STR_2 0F01  
                   STR_3 0F01                     STR_4 0F01                     STR_5 0F05  
                   STR_6 0F05                     STR_7 0F05                     STR_8 0F09  
                   u3010 3244                     u3011 3240                     u3100 3056  
                   u3020 33E6                     u3101 3052                     u3005 359C  
                   u3021 33E2                     u3110 307E                     u3030 31DA  
                   u3111 307A                     u3031 31D6                     u3040 32AE  
                   u4000 2620                     u3041 32AA                     u4001 261C  
                   u3050 3496                     u4010 264E                     u3051 3492  
                   u4011 264A                     u3060 343E                     u4020 2696  
                   u4100 1F3E                     u3061 343A                     u4021 2692  
                   u4101 1F38                     u3070 3350                     u4110 1F40  
                   u3071 334C                     u4031 291C                     u2600 2736  
                   u3080 336A                     u4200 2158                     u4120 1F56  
                   u4040 2940                     u5000 1AA6                     u2601 2732  
                   u3081 3366                     u4201 2154                     u4121 1F52  
                   u4041 293C                     u5001 1AA2                     u3090 3034  
                   u2610 2744                     u4210 2166                     u4130 1F86  
                   u4050 296A                     u3091 3030                     u2611 2740  
                   u4211 2162                     u4131 1F82                     u4051 2966  
                   u2700 280C                     u2620 2754                     u4220 2178  
                   u4140 1FA2                     u4060 29AA                     u4300 23B4  
                   u2701 2808                     u2621 2750                     u4221 2174  
                   u4141 1F9E                     u4061 29A6                     u4301 23B0  
                   u2710 281C                     u2630 2768                     u4230 2186  
                   u4150 1FD0                     u4070 2A24                     u4310 23C2  
                   u2711 2818                     u2631 2764                     u4231 2182  
                   u4151 1FCC                     u4071 2A20                     u4311 23BE  
                   u2640 277C                     u2560 26EA                     u2800 2D02  
                   u2720 2C76                     u4240 219E                     u4160 1FDE  
                   u4320 284A                     u4080 2A4E                     u4400 1C66  
                   u2641 2778                     u2561 26E6                     u2801 2CFE  
                   u2721 2C72                     u4241 219A                     u4161 1FDA  
                   u4321 2846                     u4081 2A4A                     u4401 1C62  
                   u5017 192A                     u2650 278A                     u2570 2700  
                   u2810 2D12                     u2730 2C8C                     u4170 2106  
                   u4330 2884                     u4090 2A7C                     u4250 21FC  
                   u4410 1C9C                     u2651 2786                     u2571 26FC  
                   u5107 2E5A                     u2811 2D0E                     u2731 2C88  
                   u4171 2102                     u4331 2880                     u4091 2A78  
                   u4251 21F8                     u4411 1C98                     u5027 1934  
                   u2660 279A                     u2580 270E                     u2820 2D26  
                   u2740 2C9A                     u2900 2F70                     u4180 2124  
                   u4340 28A4                     u4260 2218                     u4420 1D4A  
                   u4500 10B0                     u2661 2796                     u2581 270A  
                   u5117 2E7E                     u2821 2D22                     u2741 2C96  
                   u2901 2F6C                     u4181 2120                     u4341 28A0  
                   u4261 2214                     u4421 1D46                     u5037 19C2  
                   u4501 10AC                     u2670 27D4                     u2590 271E  
                   u2750 2CAA                     u2910 2F8A                     u4190 213E  
                   u4350 28B6                     u4270 2362                     u4430 1E04  
                   u4510 10C2                     u2671 27D0                     u2591 271A  
                   u5127 2E98                     u2751 2CA6                     u2911 2F86  
                   u4191 213A                     u4351 28B2                     u4271 235E  
                   u4431 1E00                     u5047 1A42                     u4511 10BE  
                   u2680 27E4                     u2760 2CC0                     u2840 2BB2  
                   u2920 2FA4                     u3800 2AFA                     u4360 28E8  
                   u4280 2380                     u4440 1E8A                     u4600 1292  
                   u4520 1140                     u2681 27E0                     u5137 2EC0  
                   u2761 2CBC                     u2841 2BAE                     u2921 2FA0  
                   u3801 2AF6                     u4361 28E4                     u4281 237C  
                   u4441 1E86                     u5057 1AC2                     u4601 128E  
                   u4521 113C                     u2690 27F6                     u2770 2CCE  
                   u2850 2BCC                     u2930 2FC2                     u3810 2B22  
                   u4290 239A                     u4370 1B3C                     u4450 33CA  
                   u4610 12F4                     u4530 11AC                     u2691 27F2  
                   u5147 2EE6                     u2771 2CCA                     u5067 317C  
                   u2851 2BC8                     u2931 2FBE                     u3811 2B1E  
                   u4291 2396                     u4371 1B38                     u4451 33C6  
                   u4611 12F0                     u4531 11A8                     _PEIE 007F96  
                   u2780 2CDE                     u2860 2BF2                     u2940 2FD8  
                   u3900 23FE                     u3820 2B58                     u4380 1B88  
                   u4700 1526                     u4620 1304                     u4540 11BC  
                   u4460 0F82                     u5157 2F00                     u5077 2E06  
                   u2781 2CDA                     u2861 2BEE                     u2941 2FD4  
                   u3901 23FA                     u3821 2B54                     u4381 1B84  
                   u4701 1522                     u4621 1300                     u4541 11B8  
                   u4461 0F7E                     u2790 2CF4                     u2870 2C10  
                   u2950 2FFC                     u3910 2430                     u3830 3570  
                   u4390 1BB0                     u4710 1540                     u4630 1326  
                   u4550 11DE                     u4470 0F9A                     u5167 2F14  
                   u5087 2E2C                     u2791 2CF0                     u2871 2C0C  
                   u2951 2FF8                     u3911 242C                     u3831 356C  
                   u4391 1BAC                     u4711 153C                     u4631 1322  
                   u4551 11DA                     u4471 0F96                     u2960 3162  
                   u2880 2C2C                     u3840 369A                     u4800 172E  
                   u4720 157E                     u4640 1336                     u4560 11EE  
                   u4480 1058                     u5177 2F38                     u5097 2E46  
                   u2961 315E                     u2881 2C28                     u3921 245A  
                   u3841 3696                     u4801 172A                     u4721 157A  
                   u4641 1332                     u4561 11EA                     u4481 1054  
                   u2970 319C                     u2890 2C52                     u3930 247E  
                   u3850 2D36                     u4810 1750                     u4730 1590  
                   u4650 137A                     u4570 1250                     u4490 1072  
                   u5187 2F52                     u2971 3198                     u2891 2C4E  
                   u3931 247A                     u3851 2D32                     u4811 174C  
                   u4731 158C                     u4651 1376                     u4571 124C  
                   u4491 106E                     u2980 31B6                     u3940 24A8  
                   u3860 2D58                     u4900 18AE                     u4820 1760  
                   u4740 160E                     u4660 13F4                     u4580 1260  
                   u2981 31B2                     u3941 24A4                     u3861 2D54  
                   u4901 18AA                     u4821 175C                     u4741 160A  
                   u4661 13F0                     u4581 125C                     u2990 358E  
                   u3950 24E8                     u3790 2AE8                     u3870 2DAE  
                   u4910 18FC                     u4830 17C2                     u4750 167A  
                   u4670 1422                     u4590 1282                     u2991 358A  
                   u3951 24E4                     u3791 2AE4                     u3871 2DAA  
                   u4911 18F8                     u4831 17BE                     u4751 1676  
                   u4671 141E                     u4591 127E                     u3960 2532  
                   u3880 2DBC                     u4920 1910                     u4840 17D2  
                   u4760 168A                     u4680 1444                     u3961 252E  
                   u3881 2DB8                     u4921 190C                     u4841 17CE  
                   u4761 1686                     u4681 1440                     u3970 2586  
                   u3890 35D0                     u4930 1922                     u4850 17F4  
                   u4770 16AC                     u4690 1468                     u3971 2582  
                   u3891 35CC                     u4931 191E                     u4851 17F0  
                   u4771 16A8                     u4691 1464                     u3980 25B8  
                   u4940 1948                     u4860 1804                     u4780 16BC  
                   u3981 25B4                     u4941 1944                     u4861 1800  
                   u4781 16B8                     u3990 25F6                     u4950 197E  
                   u4870 183E                     u4790 171E                     u3991 25F2  
                   u4951 197A                     u4871 183A                     u4791 171A  
                   u4960 19A6                     u4880 1860                     u4961 19A2  
                   u4881 185C                     u4970 19FE                     u4890 1872  
                   u4971 19FA                     u4891 186E                     u4980 1A26  
                   u4981 1A22                     u4990 1A7E                     u4991 1A7A  
                   _TMR1 000FCD              main@num_420 008E              main@num_412 008A  
                   abs@a 0014                     _dbuf 00D9                     _getr 37DA  
                   _main 0F10                     _dtoa 1F0E                     _prec 00D5  
                   _nout 00D1                     pad@i 0019                     pad@p 0016  
                   fsr1h 000FE2                     fsr2h 000FDA                     indf2 000FDF  
                   fsr1l 000FE1                     pad@w 001B                     fsr2l 000FD9  
                   btemp 005D                     _utoa 21EC                     prodl 000FF3  
                   start 00D6             ___param_bank 000000                    ??_ISR 0001  
                  ??_abs 0016                    ??_pad 0018     set_Ahours@Acurr_hour 000C  
        __end_of___aodiv 2574                    ?_getr 0002                    ?_main 0001  
                  ?_dtoa 001D          __end_of___aomod 26D8                    _ADPCH 000F5F  
        __end_of_adcNum0 35B6          __end_of___awdiv 2C64                    _ADRES 000F63  
                  _CCPR1 000FAA                    STR_10 0F09                    STR_12 0F0C  
                  STR_14 0F0C            __CFG_WDTE$OFF 000000                    STR_19 0F06  
        __end_of___awmod 300E          __end_of___lldiv 30B2                    ?_utoa 001D  
        __end_of___lodiv 2A06          ___awdiv@divisor 0004          __end_of___lomod 2AD6  
            i2c_read@num 0003                    i2l476 0024                    i2l484 00D2  
                  i2l478 0032          ___awdiv@counter 0006             vfpfcnvrt@fmt 0043  
           vfpfcnvrt@llu 0068                    _PORTD 000F90                    _flags 005B  
                  _fputc 2AD6                    _fputs 352E                    pad@fp 0012  
                  _width 00D3                    _putch 37EE                    main@i 00A6  
                  dtoa@d 001F                    dtoa@i 003F                    main@x 00AA  
                  main@y 009E                    dtoa@n 0037                    dtoa@p 0031  
                  dtoa@s 0035                    dtoa@w 0033                    tablat 000FF5  
           main@outv_434 00B9             main@outv_437 00BA                    nvmcon 000F81  
                  ttemp5 005E                    ttemp6 0061                    ttemp7 0065  
                  utoa@d 001F                    utoa@i 003B                    utoa@n 0033  
                  utoa@p 002F                    utoa@w 0031                    status 000FD8  
                  wtemp8 005E          __end_of_sprintf 352E          __end_of_strncmp 2916  
       ___lodiv@dividend 0002          get_Ahours@Ahour 000A          __initialization 35F6  
           __end_of_getr 37E4             __end_of_main 1B14             __end_of_dtoa 21EC  
           __end_of_utoa 23EC         __end_of_i2c_init 36D2         __end_of_i2c_read 2820  
   __end_of_get_Aminutes 37DA     __end_of_get_Aseconds 3738            get_hours@hour 000A  
                 ??_getr 0004                   ??_main 0082                   ??_dtoa 0027  
                 ??_utoa 0027            __activetblptr 000003            main@array_413 00B6  
       ___lodiv@quotient 0012                   _ADCON0 000F60                   _CCP1IE 007640  
                 _CCP1IF 007680                   ?_fputc 0002                   ?_fputs 000B  
       ___awdiv@dividend 0002                   _ANSELA 000F11                   ?_putch 0001  
                 _ANSELC 000F21                   _RB1PPS 000EF0                   _RB3PPS 000EF2  
       __end_of_adc_init 37EE             i2c_read@read 0007                   _RC3PPS 000EFA  
                 _RC4PPS 000EFB                   i2l4001 00BE                   i2l4005 00CA  
                 i2l3981 001A                   i2l3991 0066                   i2l3983 0022  
                 i2l3993 007A                   i2l3985 0034                   i2l3995 0096  
                 i2l3987 0042                   i2l3979 000A                   i2l3989 005E  
                 i2l3999 00A2                   _TMR1IF 007670                   _TMR1ON 007E78  
     __size_of_i2c_write 00C4         __end_of_ccp_init 3672            main@temp1_416 00BF  
          main@temp2_417 00BE         __end_of_lcd_char 2F5E             vfprintf@cfmt 0070  
       __end_of_lcd_init 379A     __size_of_lcd_command 00BA             ?_set_minutes 0001  
           ?_set_seconds 0001                ??___aodiv 0012                ??___aomod 0012  
              ??_adcNum0 0006                ??___awdiv 0006                ??___awmod 0006  
              ??___lldiv 000A                ??___lodiv 0012                ??___lomod 0012  
   __size_of_get_minutes 0020     __size_of_get_seconds 0022                   clear_0 3620  
       ___awdiv@quotient 0008          ___awmod@divisor 0004                   _value0 00CD  
        ___awmod@counter 0006                   pad@buf 0014                   dtoa@fp 001D  
                 _strlen 3672                   fputc@c 0002                   fputs@c 000F  
                 fputs@i 0010                   fputs@s 000B             __mediumconst 0000  
       __end_of_rtc_init 31C8                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8         __end_of_spi_init 377A                   putch@c 0001  
       __end_of_vfprintf 33D4                   utoa@fp 001D                ??_sprintf 005B  
              ??_strncmp 0008               __accesstop 0060  __end_of__initialization 362A  
          spi_write@data 0004            spi_write@full 0006            ___rparam_used 000001  
         __pcstackCOMRAM 0001             __pidataBANK1 30B2            __end_of_fputc 2BA0  
          __end_of_fputs 3572            __end_of_putch 37F0        __end_of_i2c_write 2D28  
     __size_of_get_hours 0022                  ??_fputc 0006                  ??_fputs 000F  
                ??_putch 0002               __pbssBANK0 00C1                ?_i2c_init 0001  
              ?_i2c_read 0002      set_seconds@curr_sec 000C            ?_set_Aminutes 0001  
          ?_set_Aseconds 0001           get_minutes@min 000A           get_seconds@sec 000A  
        lcd_command@temp 0003         get_Aminutes@Amin 000A         set_Aminutes@Amin 000C  
       get_Aseconds@Asec 000A         set_Aseconds@Asec 000C    __size_of_get_Aminutes 0020  
  __size_of_get_Aseconds 0022               _get_Ahours 3738                  _CCP1PPS 000EAF  
              ?_adc_init 0001       __size_of_set_hours 006A                  _T1CKPS0 007E7C  
                _T1CKPS1 007E7D                  ?_strlen 0002                ?_ccp_init 0001  
     __size_of_vfpfcnvrt 03FA       __size_of_spi_write 0068                  _SSP1ADD 000F93  
                _SSP1BUF 000F92                  _SSP2BUF 000E92                ?_lcd_char 0001  
              ?_lcd_init 0001         ___lomod@dividend 0002             _get_Aminutes 37BA  
           _get_Aseconds 3716           ??_set_Aminutes 000A           ??_set_Aseconds 000A  
             ??_i2c_init 0002               ??_i2c_read 0003                  __Hparam 0000  
                __Lparam 0000        __end_of_get_hours 3716                ?_rtc_init 0001  
                ___aodiv 23EC                ?_spi_init 0001                  ___aomod 2574  
                _adcNum0 3572                  ___awdiv 2BA0                  ___awmod 2F5E  
                ___lldiv 300E                  ___lodiv 2916                  ___lomod 2A06  
              ?_vfprintf 0055             __psmallconst 0F00     __size_of_set_minutes 0058  
   __size_of_set_seconds 006A                  __pcinit 35F6                  __ramtop 0F00  
        i2c_read@address 0008               ??_adc_init 0002                  __ptext0 0F10  
                __ptext1 34DC                  __ptext2 336E                  __ptext3 1B14  
                __ptext4 21EC                  __ptext5 2A06                  __ptext6 2916  
                __ptext7 2820                  __ptext8 1F0E                  __ptext9 2D28  
        __size_of_strlen 0036             __size_of_ISR 00CE                _T1CONbits 000FCF  
           __size_of_abs 0040             __size_of_pad 00C2               ??_ccp_init 0002  
       ___awmod@dividend 0002                  main@u24 0092                  main@u60 0098  
             ??_lcd_char 0002                  _sprintf 34DC                  main@num 0086  
             ??_lcd_init 0005                  _strncmp 2820     end_of_initialization 362A  
             _set_Ahours 329C                  fputc@fp 0004                  fputs@fp 000D  
      __end_of_set_hours 329C          ___lldiv@divisor 0006          ___lldiv@counter 000E  
      __end_of_vfpfcnvrt 1F0E        __end_of_spi_write 336E               ??_rtc_init 0009  
                postdec1 000FE5                  postdec2 000FDD               ??_spi_init 0002  
                postinc0 000FEE                  postinc1 000FE6                  postinc2 000FDE  
             ??_vfprintf 005B              ?_get_Ahours 0001                  strlen@a 0004  
                strlen@s 0002                _PORTAbits 000F8D                _PORTCbits 000F8F  
          i2c_write@data 0003                _TRISAbits 000F88                _TRISBbits 000F89  
              _TRISCbits 000F8A                _TRISDbits 000F8B           spi_write@bound 0005  
            rtc_init@sec 000B              _CCP1CONbits 000FAC            ??_lcd_command 0002  
             main@setNum 00B0            ??_get_minutes 0009            ??_get_seconds 0009  
            vfpfcnvrt@ap 0045              vfpfcnvrt@fp 0041              vfpfcnvrt@ll 0060  
   __end_of_set_Aminutes 34DC     __end_of_set_Aseconds 3484           __end_of_strlen 36A8  
    start_initialization 35F6          ___lodiv@divisor 000A          ___lodiv@counter 001A  
            __end_of_ISR 00D6              __end_of_abs 35F6              __end_of_pad 2DEA  
              _i2c_write 2C64           set_minutes@min 000C           set_seconds@sec 000D  
            ?_set_Ahours 0001      __size_of_get_Ahours 0022        __size_of_i2c_init 002A  
      __size_of_i2c_read 0148              vfprintf@fmt 0057      __end_of_lcd_command 2EA4  
            __pdataBANK1 0100      __end_of_get_minutes 37BA      __end_of_get_seconds 36F4  
               ??_strlen 0004          set_Ahours@Ahour 000D        __size_of_adc_init 000A  
            __pbssCOMRAM 005B            __pcstackBANK0 0060         ___aodiv@dividend 0002  
             ?_i2c_write 0002        __size_of_ccp_init 003E        __size_of_lcd_char 00BA  
      __size_of_lcd_init 0020                _dtoa$1701 002F                __pintcode 0008  
               ?___aodiv 0002                 ?___aomod 0002                 ?_adcNum0 0002  
               ?___awdiv 0002         ___aodiv@quotient 0014                 ?___awmod 0002  
               ?___lldiv 0002                 ?___lodiv 0002                 ?___lomod 0002  
      __size_of_rtc_init 0080        __size_of_spi_init 0020                _get_hours 36F4  
    __size_of_set_Ahours 006A        __size_of_vfprintf 0066       set_hours@curr_hour 000C  
        ___lomod@divisor 000A              __smallconst 0F00          ___lomod@counter 0012  
               ?_sprintf 0072           __size_of_fputc 00CA           __size_of_fputs 0044  
               ?_strncmp 0002           __size_of_putch 0002                 _LATAbits 000F83  
               _LATBbits 000F84                 _LATCbits 000F85              _lcd_command 2DEA  
               i2u374_40 001A                 i2u374_41 0016                 i2u375_40 0032  
               i2u375_41 002E                 i2u519_47 006C                 i2u376_40 005E  
               i2u376_41 005A                 i2u377_40 0096                 i2u377_41 0092  
               i2u378_40 00BE                 i2u378_41 00BA                 _PIR6bits 000ED0  
              _set_hours 3232              _get_minutes 379A              _get_seconds 36D2  
          ??_set_minutes 000A            ??_set_seconds 000A    __size_of_set_Aminutes 0058  
  __size_of_set_Aseconds 0058             ??_get_Ahours 0009        i2c_read@registers 0002  
              _vfpfcnvrt 1B14                _spi_write 3306               ?_get_hours 0001  
              lcd_char@x 0004               _ADCON0bits 000F60                main@i_414 00A8  
              main@x_433 00AC                main@x_436 00AE                main@y_432 00A0  
              main@y_435 00A2                main@check 00A4                main@alarm 00B4  
              main@array 00BB                main@temp1 00C0                main@temp2 00BD  
            ??_i2c_write 0004            set_hours@hour 000D                copy_data0 360E  
               _i2c_init 36A8                 _i2c_read 26D8       __end_of_get_Ahours 375A  
           _set_Aminutes 3484             _set_Aseconds 342C                 __Hrparam 0000  
             vfprintf@ap 0059                 __Lrparam 0000               vfprintf@fp 0055  
             ?_set_hours 0001         __size_of___aodiv 0188         __size_of___aomod 0164  
       __size_of_adcNum0 0044         __size_of___awdiv 00C4         __size_of___awmod 00B0  
       __size_of___lldiv 00A4         __size_of___lodiv 00F0         __size_of___lomod 00D0  
             ?_vfpfcnvrt 0041               ?_spi_write 0001          ___aodiv@divisor 000A  
               _adc_init 37E4          ___aodiv@counter 0012      __end_of_set_minutes 342C  
    __end_of_set_seconds 3232               sprintf@fmt 0074                 _ccp_init 3634  
               __ptext10 3672                 __ptext11 352E                 __ptext20 33D4  
               __ptext12 2AD6                 __ptext21 3232                 __ptext13 37EE  
               __ptext30 2DEA                 __ptext22 342C                 __ptext14 35B6  
               __ptext31 2EA4                 __ptext23 3484                 __ptext15 2574  
               __ptext40 26D8                 __ptext32 36A8                 __ptext24 329C  
               __ptext16 23EC                 __ptext41 3634                 __ptext33 37DA  
               __ptext25 2F5E                 __ptext17 3306                 __ptext42 37E4  
               __ptext34 36D2                 __ptext26 2BA0                 __ptext18 375A  
               __ptext43 3572                 __ptext35 379A                 __ptext27 3148  
               __ptext19 31C8                 __ptext44 300E                 __ptext36 36F4  
               __ptext28 2C64                 __ptext37 3716                 __ptext29 377A  
               __ptext38 37BA                 __ptext39 3738             _SSP1CON1bits 000F96  
           _SSP1CON2bits 000F97                 _lcd_char 2EA4                 _lcd_init 377A  
           _SSP2CON1bits 000E96             ??_set_Ahours 000A         __size_of_sprintf 0052  
       __size_of_strncmp 00F6            __size_of_getr 000A            __size_of_main 0C04  
          __size_of_dtoa 02DE            __size_of_utoa 0200                 _sawtooth 0100  
               _rtc_init 3148                 _spi_init 375A                 int$flags 005D  
               _vfprintf 336E                rtc_init@i 0009                 _triangle 0132  
           _SSP1STATbits 000F95                 main@outv 00B8              ??_get_hours 0009  
           _SSP2STATbits 000E95         ___aomod@dividend 0002       __end_of_set_Ahours 3306  
            _TMR1CLKbits 000FD2                 intlevel2 0000            ?_get_Aminutes 0001  
          ?_get_Aseconds 0001                sprintf@ap 007A         ___lldiv@dividend 0002  
              strncmp@_l 0002                strncmp@_r 0004              ??_set_hours 000A  
     i2c_write@registers 0002              _set_minutes 33D4              _set_seconds 31C8  
        ___aomod@divisor 000A              ??_vfpfcnvrt 0047          ___aomod@counter 0012  
            ??_spi_write 0002                 sprintf@f 007C                 sprintf@s 0072  
             _SSP1DATPPS 000EB8               _SSP1CLKPPS 000EB7         ___lldiv@quotient 000A  
               strncmp@l 0009                 strncmp@n 0006                 strncmp@r 000B  
       i2c_write@address 0004           ??_get_Aminutes 0009           ??_get_Aseconds 0009  
           ___aodiv@sign 0013             ?_lcd_command 0001             ___aomod@sign 0013  
