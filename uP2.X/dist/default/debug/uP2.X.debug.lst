

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Feb 12 14:51:10 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F47K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    33                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    34  0000                     
    35                           ; Version 2.10
    36                           ; Generated 31/07/2019 GMT
    37                           ; 
    38                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC18F47K40 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69  0000                     
    70                           	psect	idataBANK0
    71  001E20                     __pidataBANK0:
    72                           	opt callstack 0
    73                           
    74                           ;initializer for _r1
    75  001E20  80E8               	dw	33000
    76  001E22  0000               	dw	0
    77                           
    78                           ;initializer for _volt
    79  001E24  0005               	dw	5
    80  0000                     _ADRES	set	3939
    81  0000                     _ADCON0bits	set	3936
    82  0000                     _ADCON0	set	3936
    83  0000                     _TRISAbits	set	3976
    84  0000                     _PORTC	set	3983
    85  0000                     _TRISCbits	set	3978
    86                           
    87                           	psect	smallconst
    88  000F00                     __psmallconst:
    89                           	opt callstack 0
    90  000F00  00                 	db	0
    91  000F01                     STR_1:
    92  000F01  25                 	db	37
    93  000F02  6C                 	db	108	;'l'
    94  000F03  75                 	db	117	;'u'
    95  000F04  00                 	db	0
    96  0000                     
    97                           ; #config settings
    98  000F05  00                 	db	0	; dummy byte at the end
    99  0000                     
   100                           	psect	cinit
   101  001D84                     __pcinit:
   102                           	opt callstack 0
   103  001D84                     start_initialization:
   104                           	opt callstack 0
   105  001D84                     __initialization:
   106                           	opt callstack 0
   107                           
   108                           ; NVMREG Errata
   109  001D84                     	if	3969
   110  001D84  8E81               	bsf	129,7,c
   111  001D86  9C81               	bcf	129,6,c
   112  001D88                     	endif
   113                           
   114                           ; Initialize objects allocated to BANK0 (6 bytes)
   115                           ; load TBLPTR registers with __pidataBANK0
   116  001D88  0E20               	movlw	low __pidataBANK0
   117  001D8A  6EF6               	movwf	tblptrl,c
   118  001D8C  0E1E               	movlw	high __pidataBANK0
   119  001D8E  6EF7               	movwf	tblptrh,c
   120  001D90  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   121  001D92  6EF8               	movwf	tblptru,c
   122  001D94  EE00  F0AC         	lfsr	0,__pdataBANK0
   123  001D98  EE10 F006          	lfsr	1,6
   124  001D9C                     copy_data0:
   125  001D9C  0009               	tblrd		*+
   126  001D9E  CFF5 FFEE          	movff	tablat,postinc0
   127  001DA2  50E5               	movf	postdec1,w,c
   128  001DA4  50E1               	movf	fsr1l,w,c
   129  001DA6  E1FA               	bnz	copy_data0
   130                           
   131                           ; Clear objects allocated to BANK0 (48 bytes)
   132  001DA8  EE00  F060         	lfsr	0,__pbssBANK0
   133  001DAC  0E30               	movlw	48
   134  001DAE                     clear_0:
   135  001DAE  6AEE               	clrf	postinc0,c
   136  001DB0  06E8               	decf	wreg,f,c
   137  001DB2  E1FD               	bnz	clear_0
   138  001DB4                     end_of_initialization:
   139                           	opt callstack 0
   140  001DB4                     __end_of__initialization:
   141                           	opt callstack 0
   142  001DB4  0E00               	movlw	low (__Lsmallconst shr (0+16))
   143  001DB6  6EF8               	movwf	tblptru,c
   144  001DB8  0E0F               	movlw	high __Lsmallconst
   145  001DBA  6EF7               	movwf	tblptrh,c
   146  001DBC  0100               	movlb	0
   147  001DBE  EF83  F007         	goto	_main	;jump to C main() function
   148                           
   149                           	psect	bssBANK0
   150  000060                     __pbssBANK0:
   151                           	opt callstack 0
   152  000060                     _R:
   153                           	opt callstack 0
   154  000060                     	ds	4
   155  000064                     _value:
   156                           	opt callstack 0
   157  000064                     	ds	4
   158  000068                     _nout:
   159                           	opt callstack 0
   160  000068                     	ds	2
   161  00006A                     _width:
   162                           	opt callstack 0
   163  00006A                     	ds	2
   164  00006C                     _prec:
   165                           	opt callstack 0
   166  00006C                     	ds	2
   167  00006E                     _flags:
   168                           	opt callstack 0
   169  00006E                     	ds	2
   170  000070                     _dbuf:
   171                           	opt callstack 0
   172  000070                     	ds	32
   173                           
   174                           	psect	dataBANK0
   175  0000AC                     __pdataBANK0:
   176                           	opt callstack 0
   177  0000AC                     _r1:
   178                           	opt callstack 0
   179  0000AC                     	ds	4
   180  0000B0                     _volt:
   181                           	opt callstack 0
   182  0000B0                     	ds	2
   183                           
   184                           	psect	cstackBANK0
   185  000090                     __pcstackBANK0:
   186                           	opt callstack 0
   187  000090                     	ds	2
   188  000092                     sprintf@ap:
   189                           	opt callstack 0
   190                           
   191                           ; 2 bytes @ 0x2
   192  000092                     	ds	2
   193  000094                     sprintf@f:
   194                           	opt callstack 0
   195                           
   196                           ; 6 bytes @ 0x4
   197  000094                     	ds	6
   198  00009A                     ??_main:
   199                           
   200                           ; 1 bytes @ 0xA
   201  00009A                     	ds	2
   202  00009C                     main@array:
   203                           	opt callstack 0
   204                           
   205                           ; 7 bytes @ 0xC
   206  00009C                     	ds	7
   207  0000A3                     main@Vout:
   208                           	opt callstack 0
   209                           
   210                           ; 4 bytes @ 0x13
   211  0000A3                     	ds	4
   212  0000A7                     main@temp:
   213                           	opt callstack 0
   214                           
   215                           ; 1 bytes @ 0x17
   216  0000A7                     	ds	1
   217  0000A8                     main@i:
   218                           	opt callstack 0
   219                           
   220                           ; 2 bytes @ 0x18
   221  0000A8                     	ds	2
   222  0000AA                     main@i_187:
   223                           	opt callstack 0
   224                           
   225                           ; 2 bytes @ 0x1A
   226  0000AA                     	ds	2
   227                           
   228                           	psect	cstackCOMRAM
   229  000001                     __pcstackCOMRAM:
   230                           	opt callstack 0
   231  000001                     ??_lcd_command:
   232  000001                     ??_lcd_char:
   233  000001                     ?_strlen:
   234                           	opt callstack 0
   235  000001                     ?_strncmp:
   236                           	opt callstack 0
   237  000001                     ?_adcNum:
   238                           	opt callstack 0
   239  000001                     ?___lmul:
   240                           	opt callstack 0
   241  000001                     ?___lodiv:
   242                           	opt callstack 0
   243  000001                     ?___lomod:
   244                           	opt callstack 0
   245  000001                     fputc@c:
   246                           	opt callstack 0
   247  000001                     strlen@s:
   248                           	opt callstack 0
   249  000001                     strncmp@_l:
   250                           	opt callstack 0
   251  000001                     ___lmul@multiplier:
   252                           	opt callstack 0
   253  000001                     ___lodiv@dividend:
   254                           	opt callstack 0
   255  000001                     ___lomod@dividend:
   256                           	opt callstack 0
   257                           
   258                           ; 8 bytes @ 0x0
   259  000001                     	ds	1
   260  000002                     lcd_command@temp:
   261                           	opt callstack 0
   262  000002                     lcd_char@temp:
   263                           	opt callstack 0
   264                           
   265                           ; 1 bytes @ 0x1
   266  000002                     	ds	1
   267  000003                     lcd_command@x:
   268                           	opt callstack 0
   269  000003                     lcd_char@x:
   270                           	opt callstack 0
   271  000003                     fputc@fp:
   272                           	opt callstack 0
   273  000003                     strlen@a:
   274                           	opt callstack 0
   275  000003                     strncmp@_r:
   276                           	opt callstack 0
   277                           
   278                           ; 2 bytes @ 0x2
   279  000003                     	ds	1
   280  000004                     
   281                           ; 1 bytes @ 0x3
   282  000004                     	ds	1
   283  000005                     ??_fputc:
   284  000005                     ??_adcNum:
   285  000005                     strncmp@n:
   286                           	opt callstack 0
   287  000005                     ___lmul@multiplicand:
   288                           	opt callstack 0
   289                           
   290                           ; 4 bytes @ 0x4
   291  000005                     	ds	2
   292  000007                     ??_strncmp:
   293                           
   294                           ; 1 bytes @ 0x6
   295  000007                     	ds	1
   296  000008                     strncmp@l:
   297                           	opt callstack 0
   298                           
   299                           ; 2 bytes @ 0x7
   300  000008                     	ds	1
   301  000009                     ___lmul@product:
   302                           	opt callstack 0
   303  000009                     ___lodiv@divisor:
   304                           	opt callstack 0
   305  000009                     ___lomod@divisor:
   306                           	opt callstack 0
   307                           
   308                           ; 8 bytes @ 0x8
   309  000009                     	ds	1
   310  00000A                     fputs@s:
   311                           	opt callstack 0
   312  00000A                     strncmp@r:
   313                           	opt callstack 0
   314                           
   315                           ; 2 bytes @ 0x9
   316  00000A                     	ds	2
   317  00000C                     fputs@fp:
   318                           	opt callstack 0
   319                           
   320                           ; 2 bytes @ 0xB
   321  00000C                     	ds	1
   322  00000D                     ?___lldiv:
   323                           	opt callstack 0
   324  00000D                     ___lldiv@dividend:
   325                           	opt callstack 0
   326                           
   327                           ; 4 bytes @ 0xC
   328  00000D                     	ds	1
   329  00000E                     fputs@c:
   330                           	opt callstack 0
   331                           
   332                           ; 1 bytes @ 0xD
   333  00000E                     	ds	1
   334  00000F                     fputs@i:
   335                           	opt callstack 0
   336                           
   337                           ; 2 bytes @ 0xE
   338  00000F                     	ds	2
   339  000011                     ?_pad:
   340                           	opt callstack 0
   341  000011                     ___lomod@counter:
   342                           	opt callstack 0
   343  000011                     pad@fp:
   344                           	opt callstack 0
   345  000011                     ___lldiv@divisor:
   346                           	opt callstack 0
   347  000011                     ___lodiv@quotient:
   348                           	opt callstack 0
   349                           
   350                           ; 8 bytes @ 0x10
   351  000011                     	ds	2
   352  000013                     pad@buf:
   353                           	opt callstack 0
   354                           
   355                           ; 2 bytes @ 0x12
   356  000013                     	ds	2
   357  000015                     pad@p:
   358                           	opt callstack 0
   359  000015                     ___lldiv@quotient:
   360                           	opt callstack 0
   361                           
   362                           ; 4 bytes @ 0x14
   363  000015                     	ds	2
   364  000017                     ??_pad:
   365                           
   366                           ; 1 bytes @ 0x16
   367  000017                     	ds	1
   368  000018                     pad@i:
   369                           	opt callstack 0
   370                           
   371                           ; 2 bytes @ 0x17
   372  000018                     	ds	1
   373  000019                     ___lldiv@counter:
   374                           	opt callstack 0
   375  000019                     ___lodiv@counter:
   376                           	opt callstack 0
   377                           
   378                           ; 1 bytes @ 0x18
   379  000019                     	ds	1
   380  00001A                     pad@w:
   381                           	opt callstack 0
   382                           
   383                           ; 2 bytes @ 0x19
   384  00001A                     	ds	2
   385  00001C                     ?_utoa:
   386                           	opt callstack 0
   387  00001C                     utoa@fp:
   388                           	opt callstack 0
   389                           
   390                           ; 2 bytes @ 0x1B
   391  00001C                     	ds	2
   392  00001E                     utoa@d:
   393                           	opt callstack 0
   394                           
   395                           ; 8 bytes @ 0x1D
   396  00001E                     	ds	8
   397  000026                     ??_utoa:
   398                           
   399                           ; 1 bytes @ 0x25
   400  000026                     	ds	8
   401  00002E                     utoa@p:
   402                           	opt callstack 0
   403                           
   404                           ; 2 bytes @ 0x2D
   405  00002E                     	ds	2
   406  000030                     utoa@w:
   407                           	opt callstack 0
   408                           
   409                           ; 2 bytes @ 0x2F
   410  000030                     	ds	2
   411  000032                     utoa@n:
   412                           	opt callstack 0
   413                           
   414                           ; 8 bytes @ 0x31
   415  000032                     	ds	8
   416  00003A                     utoa@i:
   417                           	opt callstack 0
   418                           
   419                           ; 2 bytes @ 0x39
   420  00003A                     	ds	2
   421  00003C                     ?_vfpfcnvrt:
   422                           	opt callstack 0
   423  00003C                     vfpfcnvrt@fp:
   424                           	opt callstack 0
   425                           
   426                           ; 2 bytes @ 0x3B
   427  00003C                     	ds	2
   428  00003E                     vfpfcnvrt@fmt:
   429                           	opt callstack 0
   430                           
   431                           ; 2 bytes @ 0x3D
   432  00003E                     	ds	2
   433  000040                     vfpfcnvrt@ap:
   434                           	opt callstack 0
   435                           
   436                           ; 2 bytes @ 0x3F
   437  000040                     	ds	2
   438  000042                     ??_vfpfcnvrt:
   439                           
   440                           ; 1 bytes @ 0x41
   441  000042                     	ds	6
   442  000048                     vfpfcnvrt@llu:
   443                           	opt callstack 0
   444                           
   445                           ; 8 bytes @ 0x47
   446  000048                     	ds	8
   447  000050                     ?_vfprintf:
   448                           	opt callstack 0
   449  000050                     vfprintf@fp:
   450                           	opt callstack 0
   451                           
   452                           ; 2 bytes @ 0x4F
   453  000050                     	ds	2
   454  000052                     vfprintf@fmt:
   455                           	opt callstack 0
   456                           
   457                           ; 2 bytes @ 0x51
   458  000052                     	ds	2
   459  000054                     vfprintf@ap:
   460                           	opt callstack 0
   461                           
   462                           ; 2 bytes @ 0x53
   463  000054                     	ds	2
   464  000056                     vfprintf@cfmt:
   465                           	opt callstack 0
   466                           
   467                           ; 2 bytes @ 0x55
   468  000056                     	ds	2
   469  000058                     ?_sprintf:
   470                           	opt callstack 0
   471  000058                     sprintf@s:
   472                           	opt callstack 0
   473                           
   474                           ; 2 bytes @ 0x57
   475  000058                     	ds	2
   476  00005A                     sprintf@fmt:
   477                           	opt callstack 0
   478                           
   479                           ; 2 bytes @ 0x59
   480  00005A                     	ds	6
   481  000060                     
   482                           ; 1 bytes @ 0x5F
   483 ;;
   484 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   485 ;;
   486 ;; *************** function _main *****************
   487 ;; Defined at:
   488 ;;		line 204 in file "uP Part 2.c"
   489 ;; Parameters:    Size  Location     Type
   490 ;;		None
   491 ;; Auto vars:     Size  Location     Type
   492 ;;  temp            1   23[BANK0 ] unsigned char 
   493 ;;  i               2   26[BANK0 ] int 
   494 ;;  i               2   24[BANK0 ] int 
   495 ;;  array           7   12[BANK0 ] unsigned char [7]
   496 ;;  Vout            4   19[BANK0 ] unsigned long 
   497 ;; Return value:  Size  Location     Type
   498 ;;                  1    wreg      void 
   499 ;; Registers used:
   500 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   501 ;; Tracked objects:
   502 ;;		On entry : 0/0
   503 ;;		On exit  : 0/0
   504 ;;		Unchanged: 0/0
   505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   507 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   508 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   509 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   510 ;;Total ram usage:       18 bytes
   511 ;; Hardware stack levels required when called:    8
   512 ;; This function calls:
   513 ;;		___lldiv
   514 ;;		___lmul
   515 ;;		_adcNum
   516 ;;		_adc_init
   517 ;;		_lcd_char
   518 ;;		_lcd_command
   519 ;;		_lcd_init
   520 ;;		_sprintf
   521 ;; This function is called by:
   522 ;;		Startup code after reset
   523 ;; This function uses a non-reentrant model
   524 ;;
   525                           
   526                           	psect	text0
   527  000F06                     __ptext0:
   528                           	opt callstack 0
   529  000F06                     _main:
   530                           	opt callstack 23
   531  000F06                     
   532                           ;uP Part 2.c: 205:     adc_init();
   533  000F06  EC0C  F00F         	call	_adc_init	;wreg free
   534  000F0A                     
   535                           ;uP Part 2.c: 206:     lcd_init();
   536  000F0A  ECFC  F00E         	call	_lcd_init	;wreg free
   537  000F0E                     l1605:
   538                           
   539                           ;uP Part 2.c: 218:         value = adcNum();
   540  000F0E  EC7B  F00E         	call	_adcNum	;wreg free
   541  000F12  C001  F064         	movff	?_adcNum,_value
   542  000F16  C002  F065         	movff	?_adcNum+1,_value+1
   543  000F1A  C003  F066         	movff	?_adcNum+2,_value+2
   544  000F1E  C004  F067         	movff	?_adcNum+3,_value+3
   545  000F22                     
   546                           ;uP Part 2.c: 221:         unsigned long Vout = (value*volt*1000)/1023;
   547  000F22  C064  F001         	movff	_value,___lmul@multiplier
   548  000F26  C065  F002         	movff	_value+1,___lmul@multiplier+1
   549  000F2A  C066  F003         	movff	_value+2,___lmul@multiplier+2
   550  000F2E  C067  F004         	movff	_value+3,___lmul@multiplier+3
   551  000F32  0E88               	movlw	136
   552  000F34  6E05               	movwf	___lmul@multiplicand^0,c
   553  000F36  0E13               	movlw	19
   554  000F38  6E06               	movwf	(___lmul@multiplicand+1)^0,c
   555  000F3A  0E00               	movlw	0
   556  000F3C  6E07               	movwf	(___lmul@multiplicand+2)^0,c
   557  000F3E  0E00               	movlw	0
   558  000F40  6E08               	movwf	(___lmul@multiplicand+3)^0,c
   559  000F42  ECEC  F00D         	call	___lmul	;wreg free
   560  000F46  C001  F00D         	movff	?___lmul,___lldiv@dividend
   561  000F4A  C002  F00E         	movff	?___lmul+1,___lldiv@dividend+1
   562  000F4E  C003  F00F         	movff	?___lmul+2,___lldiv@dividend+2
   563  000F52  C004  F010         	movff	?___lmul+3,___lldiv@dividend+3
   564  000F56  0EFF               	movlw	255
   565  000F58  6E11               	movwf	___lldiv@divisor^0,c
   566  000F5A  0E03               	movlw	3
   567  000F5C  6E12               	movwf	(___lldiv@divisor+1)^0,c
   568  000F5E  0E00               	movlw	0
   569  000F60  6E13               	movwf	(___lldiv@divisor+2)^0,c
   570  000F62  0E00               	movlw	0
   571  000F64  6E14               	movwf	(___lldiv@divisor+3)^0,c
   572  000F66  EC9A  F00D         	call	___lldiv	;wreg free
   573  000F6A  C00D  F0A3         	movff	?___lldiv,main@Vout
   574  000F6E  C00E  F0A4         	movff	?___lldiv+1,main@Vout+1
   575  000F72  C00F  F0A5         	movff	?___lldiv+2,main@Vout+2
   576  000F76  C010  F0A6         	movff	?___lldiv+3,main@Vout+3
   577  000F7A                     
   578                           ;uP Part 2.c: 222:         R = (Vout*r1)/((volt*1000)-Vout);
   579  000F7A  C0A3  F001         	movff	main@Vout,___lmul@multiplier
   580  000F7E  C0A4  F002         	movff	main@Vout+1,___lmul@multiplier+1
   581  000F82  C0A5  F003         	movff	main@Vout+2,___lmul@multiplier+2
   582  000F86  C0A6  F004         	movff	main@Vout+3,___lmul@multiplier+3
   583  000F8A  0EE8               	movlw	232
   584  000F8C  6E05               	movwf	___lmul@multiplicand^0,c
   585  000F8E  0E80               	movlw	128
   586  000F90  6E06               	movwf	(___lmul@multiplicand+1)^0,c
   587  000F92  0E00               	movlw	0
   588  000F94  6E07               	movwf	(___lmul@multiplicand+2)^0,c
   589  000F96  0E00               	movlw	0
   590  000F98  6E08               	movwf	(___lmul@multiplicand+3)^0,c
   591  000F9A  ECEC  F00D         	call	___lmul	;wreg free
   592  000F9E  C001  F00D         	movff	?___lmul,___lldiv@dividend
   593  000FA2  C002  F00E         	movff	?___lmul+1,___lldiv@dividend+1
   594  000FA6  C003  F00F         	movff	?___lmul+2,___lldiv@dividend+2
   595  000FAA  C004  F010         	movff	?___lmul+3,___lldiv@dividend+3
   596  000FAE  0100               	movlb	0	; () banked
   597  000FB0  51A3               	movf	main@Vout& (0+255),w,b
   598  000FB2  0888               	sublw	136
   599  000FB4  6E11               	movwf	___lldiv@divisor^0,c
   600  000FB6  0E13               	movlw	19
   601  000FB8  55A4               	subfwb	(main@Vout+1)& (0+255),w,b
   602  000FBA  6E12               	movwf	(___lldiv@divisor+1)^0,c
   603  000FBC  0E00               	movlw	0
   604  000FBE  55A5               	subfwb	(main@Vout+2)& (0+255),w,b
   605  000FC0  6E13               	movwf	(___lldiv@divisor+2)^0,c
   606  000FC2  0E00               	movlw	0
   607  000FC4  55A6               	subfwb	(main@Vout+3)& (0+255),w,b
   608  000FC6  6E14               	movwf	(___lldiv@divisor+3)^0,c
   609  000FC8  EC9A  F00D         	call	___lldiv	;wreg free
   610  000FCC  C00D  F060         	movff	?___lldiv,_R
   611  000FD0  C00E  F061         	movff	?___lldiv+1,_R+1
   612  000FD4  C00F  F062         	movff	?___lldiv+2,_R+2
   613  000FD8  C010  F063         	movff	?___lldiv+3,_R+3
   614  000FDC                     
   615                           ;uP Part 2.c: 224:        char array[7];;uP Part 2.c: 226:        for(int i=0; i<7; i++)
      +                          {
   616  000FDC  0E00               	movlw	0
   617  000FDE  0100               	movlb	0	; () banked
   618  000FE0  6FA9               	movwf	(main@i+1)& (0+255),b
   619  000FE2  0E00               	movlw	0
   620  000FE4  6FA8               	movwf	main@i& (0+255),b
   621  000FE6                     l1617:
   622                           
   623                           ; BSR set to: 0
   624                           ;uP Part 2.c: 227:            array[i]=0;
   625  000FE6  0E9C               	movlw	low main@array
   626  000FE8  25A8               	addwf	main@i& (0+255),w,b
   627  000FEA  6ED9               	movwf	fsr2l,c
   628  000FEC  0E00               	movlw	high main@array
   629  000FEE  21A9               	addwfc	(main@i+1)& (0+255),w,b
   630  000FF0  6EDA               	movwf	fsr2h,c
   631  000FF2  0E00               	movlw	0
   632  000FF4  6EDF               	movwf	indf2,c
   633  000FF6                     
   634                           ; BSR set to: 0
   635                           ;uP Part 2.c: 228:        }
   636  000FF6  4BA8               	infsnz	main@i& (0+255),f,b
   637  000FF8  2BA9               	incf	(main@i+1)& (0+255),f,b
   638  000FFA                     
   639                           ; BSR set to: 0
   640  000FFA  BFA9               	btfsc	(main@i+1)& (0+255),7,b
   641  000FFC  EF09  F008         	goto	u881
   642  001000  51A9               	movf	(main@i+1)& (0+255),w,b
   643  001002  E109               	bnz	u880
   644  001004  0E07               	movlw	7
   645  001006  5DA8               	subwf	main@i& (0+255),w,b
   646  001008  A0D8               	btfss	status,0,c
   647  00100A  EF09  F008         	goto	u881
   648  00100E  EF0B  F008         	goto	u880
   649  001012                     u881:
   650  001012  EFF3  F007         	goto	l1617
   651  001016                     u880:
   652  001016                     
   653                           ; BSR set to: 0
   654                           ;uP Part 2.c: 230:        sprintf(array, "%lu", R);
   655  001016  0E9C               	movlw	low main@array
   656  001018  6E58               	movwf	sprintf@s^0,c
   657  00101A  0E00               	movlw	high main@array
   658  00101C  6E59               	movwf	(sprintf@s+1)^0,c
   659  00101E  0E01               	movlw	low STR_1
   660  001020  6E5A               	movwf	sprintf@fmt^0,c
   661  001022  0E0F               	movlw	high STR_1
   662  001024  6E5B               	movwf	(sprintf@fmt+1)^0,c
   663  001026  C060  F05C         	movff	_R,?_sprintf+4
   664  00102A  C061  F05D         	movff	_R+1,?_sprintf+5
   665  00102E  C062  F05E         	movff	_R+2,?_sprintf+6
   666  001032  C063  F05F         	movff	_R+3,?_sprintf+7
   667  001036  EC52  F00E         	call	_sprintf	;wreg free
   668  00103A                     
   669                           ;uP Part 2.c: 233:         if ((R<1000) || (R>1000000)){
   670  00103A  0100               	movlb	0	; () banked
   671  00103C  5163               	movf	(_R+3)& (0+255),w,b
   672  00103E  1162               	iorwf	(_R+2)& (0+255),w,b
   673  001040  E10B               	bnz	u890
   674  001042  0EE8               	movlw	232
   675  001044  5D60               	subwf	_R& (0+255),w,b
   676  001046  0E03               	movlw	3
   677  001048  5961               	subwfb	(_R+1)& (0+255),w,b
   678  00104A  A0D8               	btfss	status,0,c
   679  00104C  EF2A  F008         	goto	u891
   680  001050  EF2C  F008         	goto	u890
   681  001054                     u891:
   682  001054  EF3B  F008         	goto	l1629
   683  001058                     u890:
   684  001058                     
   685                           ; BSR set to: 0
   686  001058  5163               	movf	(_R+3)& (0+255),w,b
   687  00105A  E10D               	bnz	u900
   688  00105C  0E41               	movlw	65
   689  00105E  5D60               	subwf	_R& (0+255),w,b
   690  001060  0E42               	movlw	66
   691  001062  5961               	subwfb	(_R+1)& (0+255),w,b
   692  001064  0E0F               	movlw	15
   693  001066  5962               	subwfb	(_R+2)& (0+255),w,b
   694  001068  A0D8               	btfss	status,0,c
   695  00106A  EF39  F008         	goto	u901
   696  00106E  EF3B  F008         	goto	u900
   697  001072                     u901:
   698  001072  EF61  F008         	goto	l1631
   699  001076                     u900:
   700  001076                     l1629:
   701                           
   702                           ; BSR set to: 0
   703                           ;uP Part 2.c: 235:             lcd_char('O');
   704  001076  0E4F               	movlw	79
   705  001078  EC3D  F00D         	call	_lcd_char
   706                           
   707                           ;uP Part 2.c: 236:             lcd_char('u');
   708  00107C  0E75               	movlw	117
   709  00107E  EC3D  F00D         	call	_lcd_char
   710                           
   711                           ;uP Part 2.c: 237:             lcd_char('t');
   712  001082  0E74               	movlw	116
   713  001084  EC3D  F00D         	call	_lcd_char
   714                           
   715                           ;uP Part 2.c: 238:             lcd_char(' ');
   716  001088  0E20               	movlw	32
   717  00108A  EC3D  F00D         	call	_lcd_char
   718                           
   719                           ;uP Part 2.c: 239:             lcd_char('o');
   720  00108E  0E6F               	movlw	111
   721  001090  EC3D  F00D         	call	_lcd_char
   722                           
   723                           ;uP Part 2.c: 240:             lcd_char('f');
   724  001094  0E66               	movlw	102
   725  001096  EC3D  F00D         	call	_lcd_char
   726                           
   727                           ;uP Part 2.c: 241:             lcd_char(' ');
   728  00109A  0E20               	movlw	32
   729  00109C  EC3D  F00D         	call	_lcd_char
   730                           
   731                           ;uP Part 2.c: 242:             lcd_char('B');
   732  0010A0  0E42               	movlw	66
   733  0010A2  EC3D  F00D         	call	_lcd_char
   734                           
   735                           ;uP Part 2.c: 243:             lcd_char('o');
   736  0010A6  0E6F               	movlw	111
   737  0010A8  EC3D  F00D         	call	_lcd_char
   738                           
   739                           ;uP Part 2.c: 244:             lcd_char('u');
   740  0010AC  0E75               	movlw	117
   741  0010AE  EC3D  F00D         	call	_lcd_char
   742                           
   743                           ;uP Part 2.c: 245:             lcd_char('n');
   744  0010B2  0E6E               	movlw	110
   745  0010B4  EC3D  F00D         	call	_lcd_char
   746                           
   747                           ;uP Part 2.c: 246:             lcd_char('d');
   748  0010B8  0E64               	movlw	100
   749  0010BA  EC3D  F00D         	call	_lcd_char
   750                           
   751                           ;uP Part 2.c: 247:         }
   752  0010BE  EFA2  F008         	goto	l1651
   753  0010C2                     l1631:
   754                           
   755                           ; BSR set to: 0
   756                           ;uP Part 2.c: 250:             lcd_char('R');
   757  0010C2  0E52               	movlw	82
   758  0010C4  EC3D  F00D         	call	_lcd_char
   759                           
   760                           ;uP Part 2.c: 251:             lcd_char('=');
   761  0010C8  0E3D               	movlw	61
   762  0010CA  EC3D  F00D         	call	_lcd_char
   763                           
   764                           ;uP Part 2.c: 252:             lcd_char(' ');
   765  0010CE  0E20               	movlw	32
   766  0010D0  EC3D  F00D         	call	_lcd_char
   767  0010D4                     
   768                           ;uP Part 2.c: 255:             for(int i=0; i<7; i++){
   769  0010D4  0E00               	movlw	0
   770  0010D6  0100               	movlb	0	; () banked
   771  0010D8  6FAB               	movwf	(main@i_187+1)& (0+255),b
   772  0010DA  0E00               	movlw	0
   773  0010DC  6FAA               	movwf	main@i_187& (0+255),b
   774  0010DE                     l1639:
   775                           
   776                           ; BSR set to: 0
   777                           ;uP Part 2.c: 256:                 char temp = array[i];
   778  0010DE  0E9C               	movlw	low main@array
   779  0010E0  25AA               	addwf	main@i_187& (0+255),w,b
   780  0010E2  6ED9               	movwf	fsr2l,c
   781  0010E4  0E00               	movlw	high main@array
   782  0010E6  21AB               	addwfc	(main@i_187+1)& (0+255),w,b
   783  0010E8  6EDA               	movwf	fsr2h,c
   784  0010EA  50DF               	movf	indf2,w,c
   785  0010EC  6FA7               	movwf	main@temp& (0+255),b
   786  0010EE                     
   787                           ; BSR set to: 0
   788                           ;uP Part 2.c: 257:                 if(temp != 0){
   789  0010EE  51A7               	movf	main@temp& (0+255),w,b
   790  0010F0  B4D8               	btfsc	status,2,c
   791  0010F2  EF7D  F008         	goto	u911
   792  0010F6  EF7F  F008         	goto	u910
   793  0010FA                     u911:
   794  0010FA  EF93  F008         	goto	l1649
   795  0010FE                     u910:
   796  0010FE                     
   797                           ; BSR set to: 0
   798                           ;uP Part 2.c: 258:                     lcd_char(temp);
   799  0010FE  51A7               	movf	main@temp& (0+255),w,b
   800  001100  EC3D  F00D         	call	_lcd_char
   801  001104                     
   802                           ;uP Part 2.c: 263:             }
   803  001104  0100               	movlb	0	; () banked
   804  001106  4BAA               	infsnz	main@i_187& (0+255),f,b
   805  001108  2BAB               	incf	(main@i_187+1)& (0+255),f,b
   806  00110A                     
   807                           ; BSR set to: 0
   808  00110A  BFAB               	btfsc	(main@i_187+1)& (0+255),7,b
   809  00110C  EF91  F008         	goto	u921
   810  001110  51AB               	movf	(main@i_187+1)& (0+255),w,b
   811  001112  E109               	bnz	u920
   812  001114  0E07               	movlw	7
   813  001116  5DAA               	subwf	main@i_187& (0+255),w,b
   814  001118  A0D8               	btfss	status,0,c
   815  00111A  EF91  F008         	goto	u921
   816  00111E  EF93  F008         	goto	u920
   817  001122                     u921:
   818  001122  EF6F  F008         	goto	l1639
   819  001126                     u920:
   820  001126                     l1649:
   821                           
   822                           ; BSR set to: 0
   823                           ;uP Part 2.c: 264:             lcd_char(' ');
   824  001126  0E20               	movlw	32
   825  001128  EC3D  F00D         	call	_lcd_char
   826                           
   827                           ;uP Part 2.c: 265:             lcd_char('O');
   828  00112C  0E4F               	movlw	79
   829  00112E  EC3D  F00D         	call	_lcd_char
   830                           
   831                           ;uP Part 2.c: 266:             lcd_char('h');
   832  001132  0E68               	movlw	104
   833  001134  EC3D  F00D         	call	_lcd_char
   834                           
   835                           ;uP Part 2.c: 267:             lcd_char('m');
   836  001138  0E6D               	movlw	109
   837  00113A  EC3D  F00D         	call	_lcd_char
   838                           
   839                           ;uP Part 2.c: 268:             lcd_char('s');
   840  00113E  0E73               	movlw	115
   841  001140  EC3D  F00D         	call	_lcd_char
   842  001144                     l1651:
   843                           
   844                           ;uP Part 2.c: 270:         _delay((unsigned long)((2000)*(4000000/4000.0)));
   845  001144  0E0B               	movlw	11
   846  001146  0100               	movlb	0	; () banked
   847  001148  6F9B               	movwf	(??_main+1)& (0+255),b
   848  00114A  0E26               	movlw	38
   849  00114C  6F9A               	movwf	??_main& (0+255),b
   850  00114E  0E5D               	movlw	93
   851  001150                     u937:
   852  001150  2EE8               	decfsz	wreg,f,c
   853  001152  D7FE               	bra	u937
   854  001154  2F9A               	decfsz	??_main& (0+255),f,b
   855  001156  D7FC               	bra	u937
   856  001158  2F9B               	decfsz	(??_main+1)& (0+255),f,b
   857  00115A  D7FA               	bra	u937
   858  00115C  D000               	nop2	
   859  00115E                     
   860                           ;uP Part 2.c: 273:         lcd_command(0x01);
   861  00115E  0E01               	movlw	1
   862  001160  ECE0  F00C         	call	_lcd_command
   863  001164  EF87  F007         	goto	l1605
   864  001168  EF00  F000         	goto	start
   865  00116C                     __end_of_main:
   866                           	opt callstack 0
   867                           
   868 ;; *************** function _sprintf *****************
   869 ;; Defined at:
   870 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
   871 ;; Parameters:    Size  Location     Type
   872 ;;  s               2   87[COMRAM] PTR unsigned char 
   873 ;;		 -> main@array(7), 
   874 ;;  fmt             2   89[COMRAM] PTR const unsigned char 
   875 ;;		 -> STR_1(4), 
   876 ;; Auto vars:     Size  Location     Type
   877 ;;  f               6    4[BANK0 ] struct _IO_FILE
   878 ;;  ap              2    2[BANK0 ] PTR void [1]
   879 ;;		 -> ?_sprintf(2), 
   880 ;;  ret             2    0        int 
   881 ;; Return value:  Size  Location     Type
   882 ;;                  2   87[COMRAM] int 
   883 ;; Registers used:
   884 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   885 ;; Tracked objects:
   886 ;;		On entry : 0/0
   887 ;;		On exit  : 0/0
   888 ;;		Unchanged: 0/0
   889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   890 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   891 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   893 ;;      Totals:         8      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   894 ;;Total ram usage:       18 bytes
   895 ;; Hardware stack levels used:    1
   896 ;; Hardware stack levels required when called:    7
   897 ;; This function calls:
   898 ;;		_vfprintf
   899 ;; This function is called by:
   900 ;;		_main
   901 ;; This function uses a non-reentrant model
   902 ;;
   903                           
   904                           	psect	text1
   905  001CA4                     __ptext1:
   906                           	opt callstack 0
   907  001CA4                     _sprintf:
   908                           	opt callstack 23
   909  001CA4  0E5C               	movlw	low (?_sprintf+4)
   910  001CA6  0100               	movlb	0	; () banked
   911  001CA8  6F92               	movwf	sprintf@ap& (0+255),b
   912  001CAA  0E00               	movlw	high (?_sprintf+4)
   913  001CAC  6F93               	movwf	(sprintf@ap+1)& (0+255),b
   914  001CAE  C058  F094         	movff	sprintf@s,sprintf@f
   915  001CB2  C059  F095         	movff	sprintf@s+1,sprintf@f+1
   916  001CB6                     
   917                           ; BSR set to: 0
   918  001CB6  0E00               	movlw	0
   919  001CB8  6F97               	movwf	(sprintf@f+3)& (0+255),b
   920  001CBA  0E00               	movlw	0
   921  001CBC  6F96               	movwf	(sprintf@f+2)& (0+255),b
   922  001CBE                     
   923                           ; BSR set to: 0
   924  001CBE  0E00               	movlw	0
   925  001CC0  6F99               	movwf	(sprintf@f+5)& (0+255),b
   926  001CC2  0E00               	movlw	0
   927  001CC4  6F98               	movwf	(sprintf@f+4)& (0+255),b
   928  001CC6                     
   929                           ; BSR set to: 0
   930  001CC6  0E94               	movlw	low sprintf@f
   931  001CC8  6E50               	movwf	vfprintf@fp^0,c
   932  001CCA  0E00               	movlw	high sprintf@f
   933  001CCC  6E51               	movwf	(vfprintf@fp+1)^0,c
   934  001CCE  C05A  F052         	movff	sprintf@fmt,vfprintf@fmt
   935  001CD2  C05B  F053         	movff	sprintf@fmt+1,vfprintf@fmt+1
   936  001CD6  0E92               	movlw	low sprintf@ap
   937  001CD8  6E54               	movwf	vfprintf@ap^0,c
   938  001CDA  0E00               	movlw	high sprintf@ap
   939  001CDC  6E55               	movwf	(vfprintf@ap+1)^0,c
   940  001CDE  EC21  F00E         	call	_vfprintf	;wreg free
   941  001CE2  0100               	movlb	0	; () banked
   942  001CE4  5196               	movf	(sprintf@f+2)& (0+255),w,b
   943  001CE6  2458               	addwf	sprintf@s^0,w,c
   944  001CE8  6ED9               	movwf	fsr2l,c
   945  001CEA  5197               	movf	(sprintf@f+3)& (0+255),w,b
   946  001CEC  2059               	addwfc	(sprintf@s+1)^0,w,c
   947  001CEE  6EDA               	movwf	fsr2h,c
   948  001CF0  0E00               	movlw	0
   949  001CF2  6EDF               	movwf	indf2,c
   950  001CF4                     
   951                           ; BSR set to: 0
   952  001CF4  0012               	return		;funcret
   953  001CF6                     __end_of_sprintf:
   954                           	opt callstack 0
   955                           
   956 ;; *************** function _vfprintf *****************
   957 ;; Defined at:
   958 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
   959 ;; Parameters:    Size  Location     Type
   960 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
   961 ;;		 -> sprintf@f(6), 
   962 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
   963 ;;		 -> STR_1(4), 
   964 ;;  ap              2   83[COMRAM] PTR PTR void 
   965 ;;		 -> sprintf@ap(2), 
   966 ;; Auto vars:     Size  Location     Type
   967 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
   968 ;;		 -> STR_1(4), 
   969 ;; Return value:  Size  Location     Type
   970 ;;                  2   79[COMRAM] int 
   971 ;; Registers used:
   972 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   973 ;; Tracked objects:
   974 ;;		On entry : 0/0
   975 ;;		On exit  : 0/0
   976 ;;		Unchanged: 0/0
   977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   978 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   979 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   981 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   982 ;;Total ram usage:        8 bytes
   983 ;; Hardware stack levels used:    1
   984 ;; Hardware stack levels required when called:    6
   985 ;; This function calls:
   986 ;;		_vfpfcnvrt
   987 ;; This function is called by:
   988 ;;		_sprintf
   989 ;; This function uses a non-reentrant model
   990 ;;
   991                           
   992                           	psect	text2
   993  001C42                     __ptext2:
   994                           	opt callstack 0
   995  001C42                     _vfprintf:
   996                           	opt callstack 23
   997  001C42                     
   998                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
   999  001C42  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
  1000  001C46  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1001  001C4A                     
  1002                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  1003  001C4A  0E00               	movlw	0
  1004  001C4C  0100               	movlb	0	; () banked
  1005  001C4E  6F69               	movwf	(_nout+1)& (0+255),b
  1006  001C50  0E00               	movlw	0
  1007  001C52  6F68               	movwf	_nout& (0+255),b
  1008                           
  1009                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1010  001C54  EF3F  F00E         	goto	l1497
  1011  001C58                     l1495:
  1012                           
  1013                           ; BSR set to: 0
  1014                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  1015  001C58  C050  F03C         	movff	vfprintf@fp,vfpfcnvrt@fp
  1016  001C5C  C051  F03D         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1017  001C60  0E56               	movlw	low vfprintf@cfmt
  1018  001C62  6E3E               	movwf	vfpfcnvrt@fmt^0,c
  1019  001C64  0E00               	movlw	high vfprintf@cfmt
  1020  001C66  6E3F               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1021  001C68  C054  F040         	movff	vfprintf@ap,vfpfcnvrt@ap
  1022  001C6C  C055  F041         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1023  001C70  ECB6  F008         	call	_vfpfcnvrt	;wreg free
  1024  001C74  503C               	movf	?_vfpfcnvrt^0,w,c
  1025  001C76  0100               	movlb	0	; () banked
  1026  001C78  2768               	addwf	_nout& (0+255),f,b
  1027  001C7A  503D               	movf	(?_vfpfcnvrt+1)^0,w,c
  1028  001C7C  2369               	addwfc	(_nout+1)& (0+255),f,b
  1029  001C7E                     l1497:
  1030                           
  1031                           ; BSR set to: 0
  1032                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1033  001C7E  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
  1034  001C82  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1035  001C86                     	if	0	;tblptru may be non-zero
  1036  001C86                     	endif
  1037  001C86                     	if	0	;tblptru may be non-zero
  1038  001C86                     	endif
  1039  001C86  0008               	tblrd		*
  1040  001C88  50F5               	movf	tablat,w,c
  1041  001C8A  0900               	iorlw	0
  1042  001C8C  A4D8               	btfss	status,2,c
  1043  001C8E  EF4B  F00E         	goto	u801
  1044  001C92  EF4D  F00E         	goto	u800
  1045  001C96                     u801:
  1046  001C96  EF2C  F00E         	goto	l1495
  1047  001C9A                     u800:
  1048  001C9A                     
  1049                           ; BSR set to: 0
  1050                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  1051  001C9A  C068  F050         	movff	_nout,?_vfprintf
  1052  001C9E  C069  F051         	movff	_nout+1,?_vfprintf+1
  1053  001CA2                     
  1054                           ; BSR set to: 0
  1055  001CA2  0012               	return		;funcret
  1056  001CA4                     __end_of_vfprintf:
  1057                           	opt callstack 0
  1058                           
  1059 ;; *************** function _vfpfcnvrt *****************
  1060 ;; Defined at:
  1061 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1062 ;; Parameters:    Size  Location     Type
  1063 ;;  fp              2   59[COMRAM] PTR struct _IO_FILE
  1064 ;;		 -> sprintf@f(6), 
  1065 ;;  fmt             2   61[COMRAM] PTR PTR unsigned char 
  1066 ;;		 -> vfprintf@cfmt(2), 
  1067 ;;  ap              2   63[COMRAM] PTR PTR void 
  1068 ;;		 -> sprintf@ap(2), 
  1069 ;; Auto vars:     Size  Location     Type
  1070 ;;  llu             8   71[COMRAM] unsigned long long 
  1071 ;;  ll              8    0        long long 
  1072 ;;  f               4    0        long long 
  1073 ;;  vp              3    0        PTR void 
  1074 ;;  ct              3    0        unsigned char [3]
  1075 ;;  cp              3    0        PTR unsigned char 
  1076 ;;  i               2    0        int 
  1077 ;;  done            2    0        int 
  1078 ;;  c               1    0        unsigned char 
  1079 ;; Return value:  Size  Location     Type
  1080 ;;                  2   59[COMRAM] int 
  1081 ;; Registers used:
  1082 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1083 ;; Tracked objects:
  1084 ;;		On entry : 0/0
  1085 ;;		On exit  : 0/0
  1086 ;;		Unchanged: 0/0
  1087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1088 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1089 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1090 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1091 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1092 ;;Total ram usage:       20 bytes
  1093 ;; Hardware stack levels used:    1
  1094 ;; Hardware stack levels required when called:    5
  1095 ;; This function calls:
  1096 ;;		_fputc
  1097 ;;		_strncmp
  1098 ;;		_utoa
  1099 ;; This function is called by:
  1100 ;;		_vfprintf
  1101 ;; This function uses a non-reentrant model
  1102 ;;
  1103                           
  1104                           	psect	text3
  1105  00116C                     __ptext3:
  1106                           	opt callstack 0
  1107  00116C                     _vfpfcnvrt:
  1108                           	opt callstack 23
  1109  00116C                     
  1110                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  1111  00116C  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1112  001170  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1113  001174  CFDE FFF6          	movff	postinc2,tblptrl
  1114  001178  CFDD FFF7          	movff	postdec2,tblptrh
  1115  00117C                     	if	0	;tblptru may be non-zero
  1116  00117C                     	endif
  1117  00117C                     	if	0	;tblptru may be non-zero
  1118  00117C                     	endif
  1119  00117C  0008               	tblrd		*
  1120  00117E  50F5               	movf	tablat,w,c
  1121  001180  0A25               	xorlw	37
  1122  001182  A4D8               	btfss	status,2,c
  1123  001184  EFC6  F008         	goto	u761
  1124  001188  EFC8  F008         	goto	u760
  1125  00118C                     u761:
  1126  00118C  EFAC  F009         	goto	l1439
  1127  001190                     u760:
  1128  001190                     
  1129                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  1130  001190  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1131  001194  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1132  001198  2ADE               	incf	postinc2,f,c
  1133  00119A  0E00               	movlw	0
  1134  00119C  22DD               	addwfc	postdec2,f,c
  1135  00119E                     
  1136                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  1137  00119E  0E00               	movlw	0
  1138  0011A0  0100               	movlb	0	; () banked
  1139  0011A2  6F6B               	movwf	(_width+1)& (0+255),b
  1140  0011A4  0E00               	movlw	0
  1141  0011A6  6F6A               	movwf	_width& (0+255),b
  1142  0011A8  C06A  F06E         	movff	_width,_flags
  1143  0011AC  C06B  F06F         	movff	_width+1,_flags+1
  1144  0011B0                     
  1145                           ; BSR set to: 0
  1146                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  1147  0011B0  696C               	setf	_prec& (0+255),b
  1148  0011B2  696D               	setf	(_prec+1)& (0+255),b
  1149  0011B4                     
  1150                           ; BSR set to: 0
  1151                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
  1152  0011B4  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1153  0011B8  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1154  0011BC  CFDE FFF6          	movff	postinc2,tblptrl
  1155  0011C0  CFDD FFF7          	movff	postdec2,tblptrh
  1156  0011C4                     	if	0	;tblptru may be non-zero
  1157  0011C4                     	endif
  1158  0011C4                     	if	0	;tblptru may be non-zero
  1159  0011C4                     	endif
  1160  0011C4  0008               	tblrd		*
  1161  0011C6  50F5               	movf	tablat,w,c
  1162  0011C8  0A75               	xorlw	117
  1163  0011CA  A4D8               	btfss	status,2,c
  1164  0011CC  EFEA  F008         	goto	u771
  1165  0011D0  EFEC  F008         	goto	u770
  1166  0011D4                     u771:
  1167  0011D4  EF2D  F009         	goto	l1415
  1168  0011D8                     u770:
  1169  0011D8                     
  1170                           ; BSR set to: 0
  1171                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
  1172  0011D8  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1173  0011DC  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1174  0011E0  2ADE               	incf	postinc2,f,c
  1175  0011E2  0E00               	movlw	0
  1176  0011E4  22DD               	addwfc	postdec2,f,c
  1177                           
  1178                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  1179  0011E6  C040  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1180  0011EA  C041  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1181  0011EE  CFDF F042          	movff	indf2,??_vfpfcnvrt
  1182  0011F2  0E02               	movlw	2
  1183  0011F4  26DE               	addwf	postinc2,f,c
  1184  0011F6  CFDF F043          	movff	indf2,??_vfpfcnvrt+1
  1185  0011FA  0E00               	movlw	0
  1186  0011FC  22DD               	addwfc	postdec2,f,c
  1187  0011FE  C042  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1188  001202  C043  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1189  001206  CFDE F044          	movff	postinc2,??_vfpfcnvrt+2
  1190  00120A  CFDD F045          	movff	postdec2,??_vfpfcnvrt+3
  1191  00120E  C044  F048         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  1192  001212  C045  F049         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  1193  001216  6A4A               	clrf	(vfpfcnvrt@llu+2)^0,c
  1194  001218  6A4B               	clrf	(vfpfcnvrt@llu+3)^0,c
  1195  00121A  6A4C               	clrf	(vfpfcnvrt@llu+4)^0,c
  1196  00121C  6A4D               	clrf	(vfpfcnvrt@llu+5)^0,c
  1197  00121E  6A4E               	clrf	(vfpfcnvrt@llu+6)^0,c
  1198  001220  6A4F               	clrf	(vfpfcnvrt@llu+7)^0,c
  1199  001222                     l1411:
  1200                           
  1201                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1187:      
      +                                 return utoa(fp, llu);
  1202  001222  C03C  F01C         	movff	vfpfcnvrt@fp,utoa@fp
  1203  001226  C03D  F01D         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  1204  00122A  C048  F01E         	movff	vfpfcnvrt@llu,utoa@d
  1205  00122E  C049  F01F         	movff	vfpfcnvrt@llu+1,utoa@d+1
  1206  001232  C04A  F020         	movff	vfpfcnvrt@llu+2,utoa@d+2
  1207  001236  C04B  F021         	movff	vfpfcnvrt@llu+3,utoa@d+3
  1208  00123A  C04C  F022         	movff	vfpfcnvrt@llu+4,utoa@d+4
  1209  00123E  C04D  F023         	movff	vfpfcnvrt@llu+5,utoa@d+5
  1210  001242  C04E  F024         	movff	vfpfcnvrt@llu+6,utoa@d+6
  1211  001246  C04F  F025         	movff	vfpfcnvrt@llu+7,utoa@d+7
  1212  00124A  ECC8  F009         	call	_utoa	;wreg free
  1213  00124E  C01C  F03C         	movff	?_utoa,?_vfpfcnvrt
  1214  001252  C01D  F03D         	movff	?_utoa+1,?_vfpfcnvrt+1
  1215  001256  EFC7  F009         	goto	l112
  1216  00125A                     l1415:
  1217                           
  1218                           ; BSR set to: 0
  1219                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1192:      
      +                             if (!strncmp(*fmt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
  1220  00125A  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1221  00125E  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1222  001262  CFDE F001          	movff	postinc2,strncmp@_l
  1223  001266  CFDD F002          	movff	postdec2,strncmp@_l+1
  1224  00126A  0E02               	movlw	low (STR_1+1)
  1225  00126C  6E03               	movwf	strncmp@_r^0,c
  1226  00126E  0E0F               	movlw	high (STR_1+1)
  1227  001270  6E04               	movwf	(strncmp@_r+1)^0,c
  1228  001272  0E00               	movlw	0
  1229  001274  6E06               	movwf	(strncmp@n+1)^0,c
  1230  001276  0E02               	movlw	2
  1231  001278  6E05               	movwf	strncmp@n^0,c
  1232  00127A  EC41  F00B         	call	_strncmp	;wreg free
  1233  00127E  5001               	movf	?_strncmp^0,w,c
  1234  001280  1002               	iorwf	(?_strncmp+1)^0,w,c
  1235  001282  A4D8               	btfss	status,2,c
  1236  001284  EF46  F009         	goto	u781
  1237  001288  EF48  F009         	goto	u780
  1238  00128C                     u781:
  1239  00128C  EF76  F009         	goto	l1423
  1240  001290                     u780:
  1241  001290                     
  1242                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1194:      
      +                                 *fmt += ((sizeof("lu")/sizeof("lu"[0]))-1);
  1243  001290  0E02               	movlw	2
  1244  001292  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1245  001296  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1246  00129A  26DE               	addwf	postinc2,f,c
  1247  00129C  0E00               	movlw	0
  1248  00129E  22DD               	addwfc	postdec2,f,c
  1249                           
  1250                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1195:      
      +                                 llu = (unsigned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (uns
      +                          igned long)0));
  1251  0012A0  C040  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1252  0012A4  C041  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1253  0012A8  CFDF F042          	movff	indf2,??_vfpfcnvrt
  1254  0012AC  0E04               	movlw	4
  1255  0012AE  26DE               	addwf	postinc2,f,c
  1256  0012B0  CFDF F043          	movff	indf2,??_vfpfcnvrt+1
  1257  0012B4  0E00               	movlw	0
  1258  0012B6  22DD               	addwfc	postdec2,f,c
  1259  0012B8  C042  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1260  0012BC  C043  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1261  0012C0  CFDE F044          	movff	postinc2,??_vfpfcnvrt+2
  1262  0012C4  CFDE F045          	movff	postinc2,??_vfpfcnvrt+3
  1263  0012C8  CFDE F046          	movff	postinc2,??_vfpfcnvrt+4
  1264  0012CC  CFDE F047          	movff	postinc2,??_vfpfcnvrt+5
  1265  0012D0  5044               	movf	(??_vfpfcnvrt+2)^0,w,c
  1266  0012D2  6E48               	movwf	vfpfcnvrt@llu^0,c
  1267  0012D4  5045               	movf	(??_vfpfcnvrt+3)^0,w,c
  1268  0012D6  6E49               	movwf	(vfpfcnvrt@llu+1)^0,c
  1269  0012D8  5046               	movf	(??_vfpfcnvrt+4)^0,w,c
  1270  0012DA  6E4A               	movwf	(vfpfcnvrt@llu+2)^0,c
  1271  0012DC  5047               	movf	(??_vfpfcnvrt+5)^0,w,c
  1272  0012DE  6E4B               	movwf	(vfpfcnvrt@llu+3)^0,c
  1273  0012E0  6A4C               	clrf	(vfpfcnvrt@llu+4)^0,c
  1274  0012E2  6A4D               	clrf	(vfpfcnvrt@llu+5)^0,c
  1275  0012E4  6A4E               	clrf	(vfpfcnvrt@llu+6)^0,c
  1276  0012E6  6A4F               	clrf	(vfpfcnvrt@llu+7)^0,c
  1277  0012E8  EF11  F009         	goto	l1411
  1278  0012EC                     l1423:
  1279                           
  1280                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  1281  0012EC  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1282  0012F0  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1283  0012F4  CFDE FFF6          	movff	postinc2,tblptrl
  1284  0012F8  CFDD FFF7          	movff	postdec2,tblptrh
  1285  0012FC                     	if	0	;tblptru may be non-zero
  1286  0012FC                     	endif
  1287  0012FC                     	if	0	;tblptru may be non-zero
  1288  0012FC                     	endif
  1289  0012FC  0008               	tblrd		*
  1290  0012FE  50F5               	movf	tablat,w,c
  1291  001300  0A25               	xorlw	37
  1292  001302  A4D8               	btfss	status,2,c
  1293  001304  EF86  F009         	goto	u791
  1294  001308  EF88  F009         	goto	u790
  1295  00130C                     u791:
  1296  00130C  EF9F  F009         	goto	l1433
  1297  001310                     u790:
  1298  001310                     
  1299                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  1300  001310  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1301  001314  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1302  001318  2ADE               	incf	postinc2,f,c
  1303  00131A  0E00               	movlw	0
  1304  00131C  22DD               	addwfc	postdec2,f,c
  1305  00131E                     
  1306                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  1307  00131E  0E00               	movlw	0
  1308  001320  6E02               	movwf	(fputc@c+1)^0,c
  1309  001322  0E25               	movlw	37
  1310  001324  6E01               	movwf	fputc@c^0,c
  1311  001326  C03C  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1312  00132A  C03D  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1313  00132E  EC18  F00C         	call	_fputc	;wreg free
  1314  001332                     l1429:
  1315                           
  1316                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  1317  001332  0E00               	movlw	0
  1318  001334  6E3D               	movwf	(?_vfpfcnvrt+1)^0,c
  1319  001336  0E01               	movlw	1
  1320  001338  6E3C               	movwf	?_vfpfcnvrt^0,c
  1321  00133A  EFC7  F009         	goto	l112
  1322  00133E                     l1433:
  1323                           
  1324                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  1325  00133E  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1326  001342  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1327  001346  2ADE               	incf	postinc2,f,c
  1328  001348  0E00               	movlw	0
  1329  00134A  22DD               	addwfc	postdec2,f,c
  1330  00134C                     
  1331                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  1332  00134C  0E00               	movlw	0
  1333  00134E  6E3D               	movwf	(?_vfpfcnvrt+1)^0,c
  1334  001350  0E00               	movlw	0
  1335  001352  6E3C               	movwf	?_vfpfcnvrt^0,c
  1336  001354  EFC7  F009         	goto	l112
  1337  001358                     l1439:
  1338                           
  1339                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  1340  001358  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1341  00135C  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1342  001360  CFDE FFF6          	movff	postinc2,tblptrl
  1343  001364  CFDD FFF7          	movff	postdec2,tblptrh
  1344  001368                     	if	0	;tblptru may be non-zero
  1345  001368                     	endif
  1346  001368                     	if	0	;tblptru may be non-zero
  1347  001368                     	endif
  1348  001368  0008               	tblrd		*
  1349  00136A  50F5               	movf	tablat,w,c
  1350  00136C  6E01               	movwf	fputc@c^0,c
  1351  00136E  6A02               	clrf	(fputc@c+1)^0,c
  1352  001370  C03C  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1353  001374  C03D  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1354  001378  EC18  F00C         	call	_fputc	;wreg free
  1355  00137C                     
  1356                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  1357  00137C  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1358  001380  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1359  001384  2ADE               	incf	postinc2,f,c
  1360  001386  0E00               	movlw	0
  1361  001388  22DD               	addwfc	postdec2,f,c
  1362  00138A  EF99  F009         	goto	l1429
  1363  00138E                     l112:
  1364  00138E  0012               	return		;funcret
  1365  001390                     __end_of_vfpfcnvrt:
  1366                           	opt callstack 0
  1367                           
  1368 ;; *************** function _utoa *****************
  1369 ;; Defined at:
  1370 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1371 ;; Parameters:    Size  Location     Type
  1372 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  1373 ;;		 -> sprintf@f(6), 
  1374 ;;  d               8   29[COMRAM] unsigned long long 
  1375 ;; Auto vars:     Size  Location     Type
  1376 ;;  n               8   49[COMRAM] unsigned long long 
  1377 ;;  i               2   57[COMRAM] int 
  1378 ;;  w               2   47[COMRAM] int 
  1379 ;;  p               2   45[COMRAM] int 
  1380 ;; Return value:  Size  Location     Type
  1381 ;;                  2   27[COMRAM] int 
  1382 ;; Registers used:
  1383 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1384 ;; Tracked objects:
  1385 ;;		On entry : 0/0
  1386 ;;		On exit  : 0/0
  1387 ;;		Unchanged: 0/0
  1388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1389 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1390 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1391 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1392 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1393 ;;Total ram usage:       32 bytes
  1394 ;; Hardware stack levels used:    1
  1395 ;; Hardware stack levels required when called:    4
  1396 ;; This function calls:
  1397 ;;		___lodiv
  1398 ;;		___lomod
  1399 ;;		_pad
  1400 ;; This function is called by:
  1401 ;;		_vfpfcnvrt
  1402 ;; This function uses a non-reentrant model
  1403 ;;
  1404                           
  1405                           	psect	text4
  1406  001390                     __ptext4:
  1407                           	opt callstack 0
  1408  001390                     _utoa:
  1409                           	opt callstack 23
  1410  001390                     
  1411                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  1412  001390  0100               	movlb	0	; () banked
  1413  001392  BF6D               	btfsc	(_prec+1)& (0+255),7,b
  1414  001394  EFCE  F009         	goto	u641
  1415  001398  EFD0  F009         	goto	u640
  1416  00139C                     u641:
  1417  00139C  EFD1  F009         	goto	l1347
  1418  0013A0                     u640:
  1419  0013A0                     
  1420                           ; BSR set to: 0
  1421                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
  1422  0013A0  936E               	bcf	_flags& (0+255),1,b
  1423  0013A2                     l1347:
  1424                           
  1425                           ; BSR set to: 0
  1426                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
  1427  0013A2  BF6D               	btfsc	(_prec+1)& (0+255),7,b
  1428  0013A4  EFDE  F009         	goto	u650
  1429  0013A8  516D               	movf	(_prec+1)& (0+255),w,b
  1430  0013AA  E106               	bnz	u651
  1431  0013AC  056C               	decf	_prec& (0+255),w,b
  1432  0013AE  B0D8               	btfsc	status,0,c
  1433  0013B0  EFDC  F009         	goto	u651
  1434  0013B4  EFDE  F009         	goto	u650
  1435  0013B8                     u651:
  1436  0013B8  EFE4  F009         	goto	l97
  1437  0013BC                     u650:
  1438  0013BC                     
  1439                           ; BSR set to: 0
  1440  0013BC  0E00               	movlw	0
  1441  0013BE  6E2F               	movwf	(utoa@p+1)^0,c
  1442  0013C0  0E01               	movlw	1
  1443  0013C2  6E2E               	movwf	utoa@p^0,c
  1444  0013C4  EFE8  F009         	goto	l99
  1445  0013C8                     l97:
  1446                           
  1447                           ; BSR set to: 0
  1448  0013C8  C06C  F02E         	movff	_prec,utoa@p
  1449  0013CC  C06D  F02F         	movff	_prec+1,utoa@p+1
  1450  0013D0                     l99:
  1451                           
  1452                           ; BSR set to: 0
  1453                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
  1454  0013D0  C06A  F030         	movff	_width,utoa@w
  1455  0013D4  C06B  F031         	movff	_width+1,utoa@w+1
  1456                           
  1457                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
  1458  0013D8  C01E  F032         	movff	utoa@d,utoa@n
  1459  0013DC  C01F  F033         	movff	utoa@d+1,utoa@n+1
  1460  0013E0  C020  F034         	movff	utoa@d+2,utoa@n+2
  1461  0013E4  C021  F035         	movff	utoa@d+3,utoa@n+3
  1462  0013E8  C022  F036         	movff	utoa@d+4,utoa@n+4
  1463  0013EC  C023  F037         	movff	utoa@d+5,utoa@n+5
  1464  0013F0  C024  F038         	movff	utoa@d+6,utoa@n+6
  1465  0013F4  C025  F039         	movff	utoa@d+7,utoa@n+7
  1466  0013F8                     
  1467                           ; BSR set to: 0
  1468                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
  1469  0013F8  0E00               	movlw	0
  1470  0013FA  6E3B               	movwf	(utoa@i+1)^0,c
  1471  0013FC  0E1F               	movlw	31
  1472  0013FE  6E3A               	movwf	utoa@i^0,c
  1473  001400                     
  1474                           ; BSR set to: 0
  1475                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
  1476  001400  0E00               	movlw	0
  1477  001402  6F8F               	movwf	(_dbuf+31)& (0+255),b
  1478                           
  1479                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1480  001404  EF7A  F00A         	goto	l1365
  1481  001408                     l1355:
  1482                           
  1483                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
  1484  001408  063A               	decf	utoa@i^0,f,c
  1485  00140A  A0D8               	btfss	status,0,c
  1486  00140C  063B               	decf	(utoa@i+1)^0,f,c
  1487  00140E                     
  1488                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
  1489  00140E  0E70               	movlw	low _dbuf
  1490  001410  243A               	addwf	utoa@i^0,w,c
  1491  001412  6ED9               	movwf	fsr2l,c
  1492  001414  0E00               	movlw	high _dbuf
  1493  001416  203B               	addwfc	(utoa@i+1)^0,w,c
  1494  001418  6EDA               	movwf	fsr2h,c
  1495  00141A  C032  F001         	movff	utoa@n,___lomod@dividend
  1496  00141E  C033  F002         	movff	utoa@n+1,___lomod@dividend+1
  1497  001422  C034  F003         	movff	utoa@n+2,___lomod@dividend+2
  1498  001426  C035  F004         	movff	utoa@n+3,___lomod@dividend+3
  1499  00142A  C036  F005         	movff	utoa@n+4,___lomod@dividend+4
  1500  00142E  C037  F006         	movff	utoa@n+5,___lomod@dividend+5
  1501  001432  C038  F007         	movff	utoa@n+6,___lomod@dividend+6
  1502  001436  C039  F008         	movff	utoa@n+7,___lomod@dividend+7
  1503  00143A  0E0A               	movlw	10
  1504  00143C  6E09               	movwf	___lomod@divisor^0,c
  1505  00143E  0E00               	movlw	0
  1506  001440  6E0A               	movwf	(___lomod@divisor+1)^0,c
  1507  001442  0E00               	movlw	0
  1508  001444  6E0B               	movwf	(___lomod@divisor+2)^0,c
  1509  001446  0E00               	movlw	0
  1510  001448  6E0C               	movwf	(___lomod@divisor+3)^0,c
  1511  00144A  0E00               	movlw	0
  1512  00144C  6E0D               	movwf	(___lomod@divisor+4)^0,c
  1513  00144E  0E00               	movlw	0
  1514  001450  6E0E               	movwf	(___lomod@divisor+5)^0,c
  1515  001452  0E00               	movlw	0
  1516  001454  6E0F               	movwf	(___lomod@divisor+6)^0,c
  1517  001456  0E00               	movlw	0
  1518  001458  6E10               	movwf	(___lomod@divisor+7)^0,c
  1519  00145A  ECB0  F00B         	call	___lomod	;wreg free
  1520  00145E  C001  F026         	movff	?___lomod,??_utoa
  1521  001462  C002  F027         	movff	?___lomod+1,??_utoa+1
  1522  001466  C003  F028         	movff	?___lomod+2,??_utoa+2
  1523  00146A  C004  F029         	movff	?___lomod+3,??_utoa+3
  1524  00146E  C005  F02A         	movff	?___lomod+4,??_utoa+4
  1525  001472  C006  F02B         	movff	?___lomod+5,??_utoa+5
  1526  001476  C007  F02C         	movff	?___lomod+6,??_utoa+6
  1527  00147A  C008  F02D         	movff	?___lomod+7,??_utoa+7
  1528  00147E  5026               	movf	??_utoa^0,w,c
  1529  001480  0F30               	addlw	48
  1530  001482  6EDF               	movwf	indf2,c
  1531  001484                     
  1532                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
  1533  001484  062E               	decf	utoa@p^0,f,c
  1534  001486  A0D8               	btfss	status,0,c
  1535  001488  062F               	decf	(utoa@p+1)^0,f,c
  1536  00148A                     
  1537                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
  1538  00148A  0630               	decf	utoa@w^0,f,c
  1539  00148C  A0D8               	btfss	status,0,c
  1540  00148E  0631               	decf	(utoa@w+1)^0,f,c
  1541  001490                     
  1542                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
  1543  001490  C032  F001         	movff	utoa@n,___lodiv@dividend
  1544  001494  C033  F002         	movff	utoa@n+1,___lodiv@dividend+1
  1545  001498  C034  F003         	movff	utoa@n+2,___lodiv@dividend+2
  1546  00149C  C035  F004         	movff	utoa@n+3,___lodiv@dividend+3
  1547  0014A0  C036  F005         	movff	utoa@n+4,___lodiv@dividend+4
  1548  0014A4  C037  F006         	movff	utoa@n+5,___lodiv@dividend+5
  1549  0014A8  C038  F007         	movff	utoa@n+6,___lodiv@dividend+6
  1550  0014AC  C039  F008         	movff	utoa@n+7,___lodiv@dividend+7
  1551  0014B0  0E0A               	movlw	10
  1552  0014B2  6E09               	movwf	___lodiv@divisor^0,c
  1553  0014B4  0E00               	movlw	0
  1554  0014B6  6E0A               	movwf	(___lodiv@divisor+1)^0,c
  1555  0014B8  0E00               	movlw	0
  1556  0014BA  6E0B               	movwf	(___lodiv@divisor+2)^0,c
  1557  0014BC  0E00               	movlw	0
  1558  0014BE  6E0C               	movwf	(___lodiv@divisor+3)^0,c
  1559  0014C0  0E00               	movlw	0
  1560  0014C2  6E0D               	movwf	(___lodiv@divisor+4)^0,c
  1561  0014C4  0E00               	movlw	0
  1562  0014C6  6E0E               	movwf	(___lodiv@divisor+5)^0,c
  1563  0014C8  0E00               	movlw	0
  1564  0014CA  6E0F               	movwf	(___lodiv@divisor+6)^0,c
  1565  0014CC  0E00               	movlw	0
  1566  0014CE  6E10               	movwf	(___lodiv@divisor+7)^0,c
  1567  0014D0  ECC9  F00A         	call	___lodiv	;wreg free
  1568  0014D4  C001  F032         	movff	?___lodiv,utoa@n
  1569  0014D8  C002  F033         	movff	?___lodiv+1,utoa@n+1
  1570  0014DC  C003  F034         	movff	?___lodiv+2,utoa@n+2
  1571  0014E0  C004  F035         	movff	?___lodiv+3,utoa@n+3
  1572  0014E4  C005  F036         	movff	?___lodiv+4,utoa@n+4
  1573  0014E8  C006  F037         	movff	?___lodiv+5,utoa@n+5
  1574  0014EC  C007  F038         	movff	?___lodiv+6,utoa@n+6
  1575  0014F0  C008  F039         	movff	?___lodiv+7,utoa@n+7
  1576  0014F4                     l1365:
  1577                           
  1578                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1579  0014F4  503A               	movf	utoa@i^0,w,c
  1580  0014F6  103B               	iorwf	(utoa@i+1)^0,w,c
  1581  0014F8  B4D8               	btfsc	status,2,c
  1582  0014FA  EF81  F00A         	goto	u661
  1583  0014FE  EF83  F00A         	goto	u660
  1584  001502                     u661:
  1585  001502  EFB4  F00A         	goto	l1375
  1586  001506                     u660:
  1587  001506  5032               	movf	utoa@n^0,w,c
  1588  001508  1033               	iorwf	(utoa@n+1)^0,w,c
  1589  00150A  1034               	iorwf	(utoa@n+2)^0,w,c
  1590  00150C  1035               	iorwf	(utoa@n+3)^0,w,c
  1591  00150E  1036               	iorwf	(utoa@n+4)^0,w,c
  1592  001510  1037               	iorwf	(utoa@n+5)^0,w,c
  1593  001512  1038               	iorwf	(utoa@n+6)^0,w,c
  1594  001514  1039               	iorwf	(utoa@n+7)^0,w,c
  1595  001516  A4D8               	btfss	status,2,c
  1596  001518  EF90  F00A         	goto	u671
  1597  00151C  EF92  F00A         	goto	u670
  1598  001520                     u671:
  1599  001520  EF04  F00A         	goto	l1355
  1600  001524                     u670:
  1601  001524  BE2F               	btfsc	(utoa@p+1)^0,7,c
  1602  001526  EF9F  F00A         	goto	u680
  1603  00152A  502F               	movf	(utoa@p+1)^0,w,c
  1604  00152C  E106               	bnz	u681
  1605  00152E  042E               	decf	utoa@p^0,w,c
  1606  001530  B0D8               	btfsc	status,0,c
  1607  001532  EF9D  F00A         	goto	u681
  1608  001536  EF9F  F00A         	goto	u680
  1609  00153A                     u681:
  1610  00153A  EF04  F00A         	goto	l1355
  1611  00153E                     u680:
  1612  00153E  BE31               	btfsc	(utoa@w+1)^0,7,c
  1613  001540  EFAA  F00A         	goto	u691
  1614  001544  5031               	movf	(utoa@w+1)^0,w,c
  1615  001546  E108               	bnz	u690
  1616  001548  0430               	decf	utoa@w^0,w,c
  1617  00154A  A0D8               	btfss	status,0,c
  1618  00154C  EFAA  F00A         	goto	u691
  1619  001550  EFAC  F00A         	goto	u690
  1620  001554                     u691:
  1621  001554  EFB4  F00A         	goto	l1375
  1622  001558                     u690:
  1623  001558  0100               	movlb	0	; () banked
  1624  00155A  B36E               	btfsc	_flags& (0+255),1,b
  1625  00155C  EFB2  F00A         	goto	u701
  1626  001560  EFB4  F00A         	goto	u700
  1627  001564                     u701:
  1628  001564  EF04  F00A         	goto	l1355
  1629  001568                     u700:
  1630  001568                     l1375:
  1631                           
  1632                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
  1633  001568  C01C  F011         	movff	utoa@fp,pad@fp
  1634  00156C  C01D  F012         	movff	utoa@fp+1,pad@fp+1
  1635  001570  0E70               	movlw	low _dbuf
  1636  001572  243A               	addwf	utoa@i^0,w,c
  1637  001574  6E13               	movwf	pad@buf^0,c
  1638  001576  0E00               	movlw	high _dbuf
  1639  001578  203B               	addwfc	(utoa@i+1)^0,w,c
  1640  00157A  6E14               	movwf	(pad@buf+1)^0,c
  1641  00157C  C030  F015         	movff	utoa@w,pad@p
  1642  001580  C031  F016         	movff	utoa@w+1,pad@p+1
  1643  001584  EC7D  F00C         	call	_pad	;wreg free
  1644  001588  C011  F01C         	movff	?_pad,?_utoa
  1645  00158C  C012  F01D         	movff	?_pad+1,?_utoa+1
  1646  001590  0012               	return		;funcret
  1647  001592                     __end_of_utoa:
  1648                           	opt callstack 0
  1649                           
  1650 ;; *************** function _pad *****************
  1651 ;; Defined at:
  1652 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1653 ;; Parameters:    Size  Location     Type
  1654 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  1655 ;;		 -> sprintf@f(6), 
  1656 ;;  buf             2   18[COMRAM] PTR unsigned char 
  1657 ;;		 -> dbuf(32), 
  1658 ;;  p               2   20[COMRAM] int 
  1659 ;; Auto vars:     Size  Location     Type
  1660 ;;  w               2   25[COMRAM] int 
  1661 ;;  i               2   23[COMRAM] int 
  1662 ;; Return value:  Size  Location     Type
  1663 ;;                  2   16[COMRAM] int 
  1664 ;; Registers used:
  1665 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1666 ;; Tracked objects:
  1667 ;;		On entry : 0/0
  1668 ;;		On exit  : 0/0
  1669 ;;		Unchanged: 0/0
  1670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1671 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1672 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1673 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1674 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1675 ;;Total ram usage:       11 bytes
  1676 ;; Hardware stack levels used:    1
  1677 ;; Hardware stack levels required when called:    3
  1678 ;; This function calls:
  1679 ;;		_fputc
  1680 ;;		_fputs
  1681 ;;		_strlen
  1682 ;; This function is called by:
  1683 ;;		_utoa
  1684 ;; This function uses a non-reentrant model
  1685 ;;
  1686                           
  1687                           	psect	text5
  1688  0018FA                     __ptext5:
  1689                           	opt callstack 0
  1690  0018FA                     _pad:
  1691                           	opt callstack 23
  1692  0018FA                     
  1693                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  1694  0018FA  0100               	movlb	0	; () banked
  1695  0018FC  A16E               	btfss	_flags& (0+255),0,b
  1696  0018FE  EF83  F00C         	goto	u531
  1697  001902  EF85  F00C         	goto	u530
  1698  001906                     u531:
  1699  001906  EF8F  F00C         	goto	l1287
  1700  00190A                     u530:
  1701  00190A                     
  1702                           ; BSR set to: 0
  1703                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  1704  00190A  C013  F00A         	movff	pad@buf,fputs@s
  1705  00190E  C014  F00B         	movff	pad@buf+1,fputs@s+1
  1706  001912  C011  F00C         	movff	pad@fp,fputs@fp
  1707  001916  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  1708  00191A  ECA0  F00E         	call	_fputs	;wreg free
  1709  00191E                     l1287:
  1710                           
  1711                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  1712  00191E  BE16               	btfsc	(pad@p+1)^0,7,c
  1713  001920  EF94  F00C         	goto	u541
  1714  001924  EF96  F00C         	goto	u540
  1715  001928                     u541:
  1716  001928  EF9C  F00C         	goto	l1291
  1717  00192C                     u540:
  1718  00192C  C015  F01A         	movff	pad@p,pad@w
  1719  001930  C016  F01B         	movff	pad@p+1,pad@w+1
  1720  001934  EFA0  F00C         	goto	l87
  1721  001938                     l1291:
  1722  001938  0E00               	movlw	0
  1723  00193A  6E1B               	movwf	(pad@w+1)^0,c
  1724  00193C  0E00               	movlw	0
  1725  00193E  6E1A               	movwf	pad@w^0,c
  1726  001940                     l87:
  1727                           
  1728                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  1729  001940  0E00               	movlw	0
  1730  001942  6E19               	movwf	(pad@i+1)^0,c
  1731  001944  0E00               	movlw	0
  1732  001946  6E18               	movwf	pad@i^0,c
  1733                           
  1734                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  1735  001948  EFB2  F00C         	goto	l1297
  1736  00194C                     l1293:
  1737                           
  1738                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  1739  00194C  0E00               	movlw	0
  1740  00194E  6E02               	movwf	(fputc@c+1)^0,c
  1741  001950  0E20               	movlw	32
  1742  001952  6E01               	movwf	fputc@c^0,c
  1743  001954  C011  F003         	movff	pad@fp,fputc@fp
  1744  001958  C012  F004         	movff	pad@fp+1,fputc@fp+1
  1745  00195C  EC18  F00C         	call	_fputc	;wreg free
  1746  001960                     
  1747                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  1748  001960  4A18               	infsnz	pad@i^0,f,c
  1749  001962  2A19               	incf	(pad@i+1)^0,f,c
  1750  001964                     l1297:
  1751                           
  1752                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  1753  001964  501A               	movf	pad@w^0,w,c
  1754  001966  5C18               	subwf	pad@i^0,w,c
  1755  001968  5019               	movf	(pad@i+1)^0,w,c
  1756  00196A  0A80               	xorlw	128
  1757  00196C  6E17               	movwf	??_pad^0,c
  1758  00196E  501B               	movf	(pad@w+1)^0,w,c
  1759  001970  0A80               	xorlw	128
  1760  001972  5817               	subwfb	??_pad^0,w,c
  1761  001974  A0D8               	btfss	status,0,c
  1762  001976  EFBF  F00C         	goto	u551
  1763  00197A  EFC1  F00C         	goto	u550
  1764  00197E                     u551:
  1765  00197E  EFA6  F00C         	goto	l1293
  1766  001982                     u550:
  1767  001982                     
  1768                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  1769  001982  0100               	movlb	0	; () banked
  1770  001984  B16E               	btfsc	_flags& (0+255),0,b
  1771  001986  EFC7  F00C         	goto	u561
  1772  00198A  EFC9  F00C         	goto	u560
  1773  00198E                     u561:
  1774  00198E  EFD3  F00C         	goto	l1301
  1775  001992                     u560:
  1776  001992                     
  1777                           ; BSR set to: 0
  1778                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  1779  001992  C013  F00A         	movff	pad@buf,fputs@s
  1780  001996  C014  F00B         	movff	pad@buf+1,fputs@s+1
  1781  00199A  C011  F00C         	movff	pad@fp,fputs@fp
  1782  00199E  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  1783  0019A2  ECA0  F00E         	call	_fputs	;wreg free
  1784  0019A6                     l1301:
  1785                           
  1786                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  1787  0019A6  C013  F001         	movff	pad@buf,strlen@s
  1788  0019AA  C014  F002         	movff	pad@buf+1,strlen@s+1
  1789  0019AE  ECE1  F00E         	call	_strlen	;wreg free
  1790  0019B2  501A               	movf	pad@w^0,w,c
  1791  0019B4  2401               	addwf	?_strlen^0,w,c
  1792  0019B6  6E11               	movwf	?_pad^0,c
  1793  0019B8  501B               	movf	(pad@w+1)^0,w,c
  1794  0019BA  2002               	addwfc	(?_strlen+1)^0,w,c
  1795  0019BC  6E12               	movwf	(?_pad+1)^0,c
  1796  0019BE  0012               	return		;funcret
  1797  0019C0                     __end_of_pad:
  1798                           	opt callstack 0
  1799                           
  1800 ;; *************** function _strlen *****************
  1801 ;; Defined at:
  1802 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  1803 ;; Parameters:    Size  Location     Type
  1804 ;;  s               2    0[COMRAM] PTR const unsigned char 
  1805 ;;		 -> dbuf(32), 
  1806 ;; Auto vars:     Size  Location     Type
  1807 ;;  a               2    2[COMRAM] PTR const unsigned char 
  1808 ;;		 -> dbuf(32), 
  1809 ;; Return value:  Size  Location     Type
  1810 ;;                  2    0[COMRAM] unsigned int 
  1811 ;; Registers used:
  1812 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1813 ;; Tracked objects:
  1814 ;;		On entry : 0/0
  1815 ;;		On exit  : 0/0
  1816 ;;		Unchanged: 0/0
  1817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1818 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1819 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1821 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1822 ;;Total ram usage:        4 bytes
  1823 ;; Hardware stack levels used:    1
  1824 ;; This function calls:
  1825 ;;		Nothing
  1826 ;; This function is called by:
  1827 ;;		_pad
  1828 ;; This function uses a non-reentrant model
  1829 ;;
  1830                           
  1831                           	psect	text6
  1832  001DC2                     __ptext6:
  1833                           	opt callstack 0
  1834  001DC2                     _strlen:
  1835                           	opt callstack 25
  1836  001DC2  C001  F003         	movff	strlen@s,strlen@a
  1837  001DC6  C002  F004         	movff	strlen@s+1,strlen@a+1
  1838  001DCA  EFE9  F00E         	goto	l1277
  1839  001DCE                     l1275:
  1840  001DCE  4A01               	infsnz	strlen@s^0,f,c
  1841  001DD0  2A02               	incf	(strlen@s+1)^0,f,c
  1842  001DD2                     l1277:
  1843  001DD2  C001  FFD9         	movff	strlen@s,fsr2l
  1844  001DD6  C002  FFDA         	movff	strlen@s+1,fsr2h
  1845  001DDA  50DF               	movf	indf2,w,c
  1846  001DDC  A4D8               	btfss	status,2,c
  1847  001DDE  EFF3  F00E         	goto	u521
  1848  001DE2  EFF5  F00E         	goto	u520
  1849  001DE6                     u521:
  1850  001DE6  EFE7  F00E         	goto	l1275
  1851  001DEA                     u520:
  1852  001DEA  5003               	movf	strlen@a^0,w,c
  1853  001DEC  5C01               	subwf	strlen@s^0,w,c
  1854  001DEE  6E01               	movwf	?_strlen^0,c
  1855  001DF0  5004               	movf	(strlen@a+1)^0,w,c
  1856  001DF2  5802               	subwfb	(strlen@s+1)^0,w,c
  1857  001DF4  6E02               	movwf	(?_strlen+1)^0,c
  1858  001DF6  0012               	return		;funcret
  1859  001DF8                     __end_of_strlen:
  1860                           	opt callstack 0
  1861                           
  1862 ;; *************** function _fputs *****************
  1863 ;; Defined at:
  1864 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  1865 ;; Parameters:    Size  Location     Type
  1866 ;;  s               2    9[COMRAM] PTR const unsigned char 
  1867 ;;		 -> dbuf(32), 
  1868 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  1869 ;;		 -> sprintf@f(6), 
  1870 ;; Auto vars:     Size  Location     Type
  1871 ;;  i               2   14[COMRAM] int 
  1872 ;;  c               1   13[COMRAM] unsigned char 
  1873 ;; Return value:  Size  Location     Type
  1874 ;;                  2    9[COMRAM] int 
  1875 ;; Registers used:
  1876 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1877 ;; Tracked objects:
  1878 ;;		On entry : 0/0
  1879 ;;		On exit  : 0/0
  1880 ;;		Unchanged: 0/0
  1881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1882 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1883 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1885 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1886 ;;Total ram usage:        7 bytes
  1887 ;; Hardware stack levels used:    1
  1888 ;; Hardware stack levels required when called:    2
  1889 ;; This function calls:
  1890 ;;		_fputc
  1891 ;; This function is called by:
  1892 ;;		_pad
  1893 ;; This function uses a non-reentrant model
  1894 ;;
  1895                           
  1896                           	psect	text7
  1897  001D40                     __ptext7:
  1898                           	opt callstack 0
  1899  001D40                     _fputs:
  1900                           	opt callstack 23
  1901  001D40  0E00               	movlw	0
  1902  001D42  6E10               	movwf	(fputs@i+1)^0,c
  1903  001D44  0E00               	movlw	0
  1904  001D46  6E0F               	movwf	fputs@i^0,c
  1905  001D48  EFB1  F00E         	goto	l1271
  1906  001D4C                     l1267:
  1907  001D4C  C00E  F001         	movff	fputs@c,fputc@c
  1908  001D50  6A02               	clrf	(fputc@c+1)^0,c
  1909  001D52  C00C  F003         	movff	fputs@fp,fputc@fp
  1910  001D56  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  1911  001D5A  EC18  F00C         	call	_fputc	;wreg free
  1912  001D5E  4A0F               	infsnz	fputs@i^0,f,c
  1913  001D60  2A10               	incf	(fputs@i+1)^0,f,c
  1914  001D62                     l1271:
  1915  001D62  500F               	movf	fputs@i^0,w,c
  1916  001D64  240A               	addwf	fputs@s^0,w,c
  1917  001D66  6ED9               	movwf	fsr2l,c
  1918  001D68  5010               	movf	(fputs@i+1)^0,w,c
  1919  001D6A  200B               	addwfc	(fputs@s+1)^0,w,c
  1920  001D6C  6EDA               	movwf	fsr2h,c
  1921  001D6E  50DF               	movf	indf2,w,c
  1922  001D70  6E0E               	movwf	fputs@c^0,c
  1923  001D72  500E               	movf	fputs@c^0,w,c
  1924  001D74  A4D8               	btfss	status,2,c
  1925  001D76  EFBF  F00E         	goto	u511
  1926  001D7A  EFC1  F00E         	goto	u510
  1927  001D7E                     u511:
  1928  001D7E  EFA6  F00E         	goto	l1267
  1929  001D82                     u510:
  1930  001D82  0012               	return		;funcret
  1931  001D84                     __end_of_fputs:
  1932                           	opt callstack 0
  1933                           
  1934 ;; *************** function _fputc *****************
  1935 ;; Defined at:
  1936 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  1937 ;; Parameters:    Size  Location     Type
  1938 ;;  c               2    0[COMRAM] int 
  1939 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  1940 ;;		 -> sprintf@f(6), 
  1941 ;; Auto vars:     Size  Location     Type
  1942 ;;		None
  1943 ;; Return value:  Size  Location     Type
  1944 ;;                  2    0[COMRAM] int 
  1945 ;; Registers used:
  1946 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1947 ;; Tracked objects:
  1948 ;;		On entry : 0/0
  1949 ;;		On exit  : 0/0
  1950 ;;		Unchanged: 0/0
  1951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1952 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1954 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1955 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1956 ;;Total ram usage:        9 bytes
  1957 ;; Hardware stack levels used:    1
  1958 ;; Hardware stack levels required when called:    1
  1959 ;; This function calls:
  1960 ;;		_putch
  1961 ;; This function is called by:
  1962 ;;		_pad
  1963 ;;		_vfpfcnvrt
  1964 ;;		_fputs
  1965 ;; This function uses a non-reentrant model
  1966 ;;
  1967                           
  1968                           	psect	text8
  1969  001830                     __ptext8:
  1970                           	opt callstack 0
  1971  001830                     _fputc:
  1972                           	opt callstack 23
  1973  001830  5003               	movf	fputc@fp^0,w,c
  1974  001832  1004               	iorwf	(fputc@fp+1)^0,w,c
  1975  001834  B4D8               	btfsc	status,2,c
  1976  001836  EF1F  F00C         	goto	u471
  1977  00183A  EF21  F00C         	goto	u470
  1978  00183E                     u471:
  1979  00183E  EF2A  F00C         	goto	l1255
  1980  001842                     u470:
  1981  001842  5003               	movf	fputc@fp^0,w,c
  1982  001844  1004               	iorwf	(fputc@fp+1)^0,w,c
  1983  001846  A4D8               	btfss	status,2,c
  1984  001848  EF28  F00C         	goto	u481
  1985  00184C  EF2A  F00C         	goto	u480
  1986  001850                     u481:
  1987  001850  EF2F  F00C         	goto	l1257
  1988  001854                     u480:
  1989  001854                     l1255:
  1990  001854  5001               	movf	fputc@c^0,w,c
  1991  001856  EC13  F00F         	call	_putch
  1992  00185A  EF7C  F00C         	goto	l806
  1993  00185E                     l1257:
  1994  00185E  EE20 F004          	lfsr	2,4
  1995  001862  5003               	movf	fputc@fp^0,w,c
  1996  001864  26D9               	addwf	fsr2l,f,c
  1997  001866  5004               	movf	(fputc@fp+1)^0,w,c
  1998  001868  22DA               	addwfc	fsr2h,f,c
  1999  00186A  50DE               	movf	postinc2,w,c
  2000  00186C  10DE               	iorwf	postinc2,w,c
  2001  00186E  B4D8               	btfsc	status,2,c
  2002  001870  EF3C  F00C         	goto	u491
  2003  001874  EF3E  F00C         	goto	u490
  2004  001878                     u491:
  2005  001878  EF59  F00C         	goto	l1261
  2006  00187C                     u490:
  2007  00187C  EE20 F004          	lfsr	2,4
  2008  001880  5003               	movf	fputc@fp^0,w,c
  2009  001882  26D9               	addwf	fsr2l,f,c
  2010  001884  5004               	movf	(fputc@fp+1)^0,w,c
  2011  001886  22DA               	addwfc	fsr2h,f,c
  2012  001888  EE10 F002          	lfsr	1,2
  2013  00188C  5003               	movf	fputc@fp^0,w,c
  2014  00188E  26E1               	addwf	fsr1l,f,c
  2015  001890  5004               	movf	(fputc@fp+1)^0,w,c
  2016  001892  22E2               	addwfc	fsr1h,f,c
  2017  001894  50DE               	movf	postinc2,w,c
  2018  001896  5CE6               	subwf	postinc1,w,c
  2019  001898  50E6               	movf	postinc1,w,c
  2020  00189A  0A80               	xorlw	128
  2021  00189C  6E09               	movwf	(??_fputc+4)^0,c
  2022  00189E  50DE               	movf	postinc2,w,c
  2023  0018A0  0A80               	xorlw	128
  2024  0018A2  5809               	subwfb	(??_fputc+4)^0,w,c
  2025  0018A4  B0D8               	btfsc	status,0,c
  2026  0018A6  EF57  F00C         	goto	u501
  2027  0018AA  EF59  F00C         	goto	u500
  2028  0018AE                     u501:
  2029  0018AE  EF7C  F00C         	goto	l806
  2030  0018B2                     u500:
  2031  0018B2                     l1261:
  2032  0018B2  EE20 F002          	lfsr	2,2
  2033  0018B6  5003               	movf	fputc@fp^0,w,c
  2034  0018B8  26D9               	addwf	fsr2l,f,c
  2035  0018BA  5004               	movf	(fputc@fp+1)^0,w,c
  2036  0018BC  22DA               	addwfc	fsr2h,f,c
  2037  0018BE  CFDE F005          	movff	postinc2,??_fputc
  2038  0018C2  CFDD F006          	movff	postdec2,??_fputc+1
  2039  0018C6  C003  FFD9         	movff	fputc@fp,fsr2l
  2040  0018CA  C004  FFDA         	movff	fputc@fp+1,fsr2h
  2041  0018CE  CFDE F007          	movff	postinc2,??_fputc+2
  2042  0018D2  CFDD F008          	movff	postdec2,??_fputc+3
  2043  0018D6  5005               	movf	??_fputc^0,w,c
  2044  0018D8  2407               	addwf	(??_fputc+2)^0,w,c
  2045  0018DA  6ED9               	movwf	fsr2l,c
  2046  0018DC  5006               	movf	(??_fputc+1)^0,w,c
  2047  0018DE  2008               	addwfc	(??_fputc+3)^0,w,c
  2048  0018E0  6EDA               	movwf	fsr2h,c
  2049  0018E2  C001  FFDF         	movff	fputc@c,indf2
  2050  0018E6  EE20 F002          	lfsr	2,2
  2051  0018EA  5003               	movf	fputc@fp^0,w,c
  2052  0018EC  26D9               	addwf	fsr2l,f,c
  2053  0018EE  5004               	movf	(fputc@fp+1)^0,w,c
  2054  0018F0  22DA               	addwfc	fsr2h,f,c
  2055  0018F2  2ADE               	incf	postinc2,f,c
  2056  0018F4  0E00               	movlw	0
  2057  0018F6  22DD               	addwfc	postdec2,f,c
  2058  0018F8                     l806:
  2059  0018F8  0012               	return		;funcret
  2060  0018FA                     __end_of_fputc:
  2061                           	opt callstack 0
  2062                           
  2063 ;; *************** function _putch *****************
  2064 ;; Defined at:
  2065 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
  2066 ;; Parameters:    Size  Location     Type
  2067 ;;  c               1    wreg     unsigned char 
  2068 ;; Auto vars:     Size  Location     Type
  2069 ;;  c               1    0[COMRAM] unsigned char 
  2070 ;; Return value:  Size  Location     Type
  2071 ;;                  1    wreg      void 
  2072 ;; Registers used:
  2073 ;;		wreg
  2074 ;; Tracked objects:
  2075 ;;		On entry : 0/0
  2076 ;;		On exit  : 0/0
  2077 ;;		Unchanged: 0/0
  2078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2082 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2083 ;;Total ram usage:        0 bytes
  2084 ;; Hardware stack levels used:    1
  2085 ;; This function calls:
  2086 ;;		Nothing
  2087 ;; This function is called by:
  2088 ;;		_fputc
  2089 ;; This function uses a non-reentrant model
  2090 ;;
  2091                           
  2092                           	psect	text9
  2093  001E26                     __ptext9:
  2094                           	opt callstack 0
  2095  001E26                     _putch:
  2096                           	opt callstack 23
  2097  001E26  0012               	return		;funcret
  2098  001E28                     __end_of_putch:
  2099                           	opt callstack 0
  2100                           
  2101 ;; *************** function ___lomod *****************
  2102 ;; Defined at:
  2103 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lomod.c"
  2104 ;; Parameters:    Size  Location     Type
  2105 ;;  dividend        8    0[COMRAM] unsigned long long 
  2106 ;;  divisor         8    8[COMRAM] unsigned long long 
  2107 ;; Auto vars:     Size  Location     Type
  2108 ;;  counter         1   16[COMRAM] unsigned char 
  2109 ;; Return value:  Size  Location     Type
  2110 ;;                  8    0[COMRAM] unsigned long long 
  2111 ;; Registers used:
  2112 ;;		wreg, status,2, status,0
  2113 ;; Tracked objects:
  2114 ;;		On entry : 0/0
  2115 ;;		On exit  : 0/0
  2116 ;;		Unchanged: 0/0
  2117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2118 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2119 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2121 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2122 ;;Total ram usage:       17 bytes
  2123 ;; Hardware stack levels used:    1
  2124 ;; This function calls:
  2125 ;;		Nothing
  2126 ;; This function is called by:
  2127 ;;		_utoa
  2128 ;; This function uses a non-reentrant model
  2129 ;;
  2130                           
  2131                           	psect	text10
  2132  001760                     __ptext10:
  2133                           	opt callstack 0
  2134  001760                     ___lomod:
  2135                           	opt callstack 26
  2136  001760  5009               	movf	___lomod@divisor^0,w,c
  2137  001762  100A               	iorwf	(___lomod@divisor+1)^0,w,c
  2138  001764  100B               	iorwf	(___lomod@divisor+2)^0,w,c
  2139  001766  100C               	iorwf	(___lomod@divisor+3)^0,w,c
  2140  001768  100D               	iorwf	(___lomod@divisor+4)^0,w,c
  2141  00176A  100E               	iorwf	(___lomod@divisor+5)^0,w,c
  2142  00176C  100F               	iorwf	(___lomod@divisor+6)^0,w,c
  2143  00176E  1010               	iorwf	(___lomod@divisor+7)^0,w,c
  2144  001770  B4D8               	btfsc	status,2,c
  2145  001772  EFBD  F00B         	goto	u611
  2146  001776  EFBF  F00B         	goto	u610
  2147  00177A                     u611:
  2148  00177A  EF07  F00C         	goto	l571
  2149  00177E                     u610:
  2150  00177E  0E01               	movlw	1
  2151  001780  6E11               	movwf	___lomod@counter^0,c
  2152  001782  EFCD  F00B         	goto	l1333
  2153  001786                     l1331:
  2154  001786  90D8               	bcf	status,0,c
  2155  001788  3609               	rlcf	___lomod@divisor^0,f,c
  2156  00178A  360A               	rlcf	(___lomod@divisor+1)^0,f,c
  2157  00178C  360B               	rlcf	(___lomod@divisor+2)^0,f,c
  2158  00178E  360C               	rlcf	(___lomod@divisor+3)^0,f,c
  2159  001790  360D               	rlcf	(___lomod@divisor+4)^0,f,c
  2160  001792  360E               	rlcf	(___lomod@divisor+5)^0,f,c
  2161  001794  360F               	rlcf	(___lomod@divisor+6)^0,f,c
  2162  001796  3610               	rlcf	(___lomod@divisor+7)^0,f,c
  2163  001798  2A11               	incf	___lomod@counter^0,f,c
  2164  00179A                     l1333:
  2165  00179A  AE10               	btfss	(___lomod@divisor+7)^0,7,c
  2166  00179C  EFD2  F00B         	goto	u621
  2167  0017A0  EFD4  F00B         	goto	u620
  2168  0017A4                     u621:
  2169  0017A4  EFC3  F00B         	goto	l1331
  2170  0017A8                     u620:
  2171  0017A8                     l1335:
  2172  0017A8  5009               	movf	___lomod@divisor^0,w,c
  2173  0017AA  5C01               	subwf	___lomod@dividend^0,w,c
  2174  0017AC  500A               	movf	(___lomod@divisor+1)^0,w,c
  2175  0017AE  5802               	subwfb	(___lomod@dividend+1)^0,w,c
  2176  0017B0  500B               	movf	(___lomod@divisor+2)^0,w,c
  2177  0017B2  5803               	subwfb	(___lomod@dividend+2)^0,w,c
  2178  0017B4  500C               	movf	(___lomod@divisor+3)^0,w,c
  2179  0017B6  5804               	subwfb	(___lomod@dividend+3)^0,w,c
  2180  0017B8  500D               	movf	(___lomod@divisor+4)^0,w,c
  2181  0017BA  5805               	subwfb	(___lomod@dividend+4)^0,w,c
  2182  0017BC  500E               	movf	(___lomod@divisor+5)^0,w,c
  2183  0017BE  5806               	subwfb	(___lomod@dividend+5)^0,w,c
  2184  0017C0  500F               	movf	(___lomod@divisor+6)^0,w,c
  2185  0017C2  5807               	subwfb	(___lomod@dividend+6)^0,w,c
  2186  0017C4  5010               	movf	(___lomod@divisor+7)^0,w,c
  2187  0017C6  5808               	subwfb	(___lomod@dividend+7)^0,w,c
  2188  0017C8  A0D8               	btfss	status,0,c
  2189  0017CA  EFE9  F00B         	goto	u631
  2190  0017CE  EFEB  F00B         	goto	u630
  2191  0017D2                     u631:
  2192  0017D2  EFFB  F00B         	goto	l1339
  2193  0017D6                     u630:
  2194  0017D6  5009               	movf	___lomod@divisor^0,w,c
  2195  0017D8  5E01               	subwf	___lomod@dividend^0,f,c
  2196  0017DA  500A               	movf	(___lomod@divisor+1)^0,w,c
  2197  0017DC  5A02               	subwfb	(___lomod@dividend+1)^0,f,c
  2198  0017DE  500B               	movf	(___lomod@divisor+2)^0,w,c
  2199  0017E0  5A03               	subwfb	(___lomod@dividend+2)^0,f,c
  2200  0017E2  500C               	movf	(___lomod@divisor+3)^0,w,c
  2201  0017E4  5A04               	subwfb	(___lomod@dividend+3)^0,f,c
  2202  0017E6  500D               	movf	(___lomod@divisor+4)^0,w,c
  2203  0017E8  5A05               	subwfb	(___lomod@dividend+4)^0,f,c
  2204  0017EA  500E               	movf	(___lomod@divisor+5)^0,w,c
  2205  0017EC  5A06               	subwfb	(___lomod@dividend+5)^0,f,c
  2206  0017EE  500F               	movf	(___lomod@divisor+6)^0,w,c
  2207  0017F0  5A07               	subwfb	(___lomod@dividend+6)^0,f,c
  2208  0017F2  5010               	movf	(___lomod@divisor+7)^0,w,c
  2209  0017F4  5A08               	subwfb	(___lomod@dividend+7)^0,f,c
  2210  0017F6                     l1339:
  2211  0017F6  90D8               	bcf	status,0,c
  2212  0017F8  3210               	rrcf	(___lomod@divisor+7)^0,f,c
  2213  0017FA  320F               	rrcf	(___lomod@divisor+6)^0,f,c
  2214  0017FC  320E               	rrcf	(___lomod@divisor+5)^0,f,c
  2215  0017FE  320D               	rrcf	(___lomod@divisor+4)^0,f,c
  2216  001800  320C               	rrcf	(___lomod@divisor+3)^0,f,c
  2217  001802  320B               	rrcf	(___lomod@divisor+2)^0,f,c
  2218  001804  320A               	rrcf	(___lomod@divisor+1)^0,f,c
  2219  001806  3209               	rrcf	___lomod@divisor^0,f,c
  2220  001808  2E11               	decfsz	___lomod@counter^0,f,c
  2221  00180A  EFD4  F00B         	goto	l1335
  2222  00180E                     l571:
  2223  00180E  C001  F001         	movff	___lomod@dividend,?___lomod
  2224  001812  C002  F002         	movff	___lomod@dividend+1,?___lomod+1
  2225  001816  C003  F003         	movff	___lomod@dividend+2,?___lomod+2
  2226  00181A  C004  F004         	movff	___lomod@dividend+3,?___lomod+3
  2227  00181E  C005  F005         	movff	___lomod@dividend+4,?___lomod+4
  2228  001822  C006  F006         	movff	___lomod@dividend+5,?___lomod+5
  2229  001826  C007  F007         	movff	___lomod@dividend+6,?___lomod+6
  2230  00182A  C008  F008         	movff	___lomod@dividend+7,?___lomod+7
  2231  00182E  0012               	return		;funcret
  2232  001830                     __end_of___lomod:
  2233                           	opt callstack 0
  2234                           
  2235 ;; *************** function ___lodiv *****************
  2236 ;; Defined at:
  2237 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lodiv.c"
  2238 ;; Parameters:    Size  Location     Type
  2239 ;;  dividend        8    0[COMRAM] unsigned long long 
  2240 ;;  divisor         8    8[COMRAM] unsigned long long 
  2241 ;; Auto vars:     Size  Location     Type
  2242 ;;  quotient        8   16[COMRAM] unsigned long long 
  2243 ;;  counter         1   24[COMRAM] unsigned char 
  2244 ;; Return value:  Size  Location     Type
  2245 ;;                  8    0[COMRAM] unsigned long long 
  2246 ;; Registers used:
  2247 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2248 ;; Tracked objects:
  2249 ;;		On entry : 0/0
  2250 ;;		On exit  : 0/0
  2251 ;;		Unchanged: 0/0
  2252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2253 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2254 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2256 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2257 ;;Total ram usage:       25 bytes
  2258 ;; Hardware stack levels used:    1
  2259 ;; This function calls:
  2260 ;;		Nothing
  2261 ;; This function is called by:
  2262 ;;		_utoa
  2263 ;; This function uses a non-reentrant model
  2264 ;;
  2265                           
  2266                           	psect	text11
  2267  001592                     __ptext11:
  2268                           	opt callstack 0
  2269  001592                     ___lodiv:
  2270                           	opt callstack 26
  2271  001592  EE20  F011         	lfsr	2,___lodiv@quotient
  2272  001596  0E07               	movlw	7
  2273  001598                     u571:
  2274  001598  6ADE               	clrf	postinc2,c
  2275  00159A  06E8               	decf	wreg,f,c
  2276  00159C  E2FD               	bc	u571
  2277  00159E  5009               	movf	___lodiv@divisor^0,w,c
  2278  0015A0  100A               	iorwf	(___lodiv@divisor+1)^0,w,c
  2279  0015A2  100B               	iorwf	(___lodiv@divisor+2)^0,w,c
  2280  0015A4  100C               	iorwf	(___lodiv@divisor+3)^0,w,c
  2281  0015A6  100D               	iorwf	(___lodiv@divisor+4)^0,w,c
  2282  0015A8  100E               	iorwf	(___lodiv@divisor+5)^0,w,c
  2283  0015AA  100F               	iorwf	(___lodiv@divisor+6)^0,w,c
  2284  0015AC  1010               	iorwf	(___lodiv@divisor+7)^0,w,c
  2285  0015AE  B4D8               	btfsc	status,2,c
  2286  0015B0  EFDC  F00A         	goto	u581
  2287  0015B4  EFDE  F00A         	goto	u580
  2288  0015B8                     u581:
  2289  0015B8  EF30  F00B         	goto	l561
  2290  0015BC                     u580:
  2291  0015BC  0E01               	movlw	1
  2292  0015BE  6E19               	movwf	___lodiv@counter^0,c
  2293  0015C0  EFEC  F00A         	goto	l1313
  2294  0015C4                     l1311:
  2295  0015C4  90D8               	bcf	status,0,c
  2296  0015C6  3609               	rlcf	___lodiv@divisor^0,f,c
  2297  0015C8  360A               	rlcf	(___lodiv@divisor+1)^0,f,c
  2298  0015CA  360B               	rlcf	(___lodiv@divisor+2)^0,f,c
  2299  0015CC  360C               	rlcf	(___lodiv@divisor+3)^0,f,c
  2300  0015CE  360D               	rlcf	(___lodiv@divisor+4)^0,f,c
  2301  0015D0  360E               	rlcf	(___lodiv@divisor+5)^0,f,c
  2302  0015D2  360F               	rlcf	(___lodiv@divisor+6)^0,f,c
  2303  0015D4  3610               	rlcf	(___lodiv@divisor+7)^0,f,c
  2304  0015D6  2A19               	incf	___lodiv@counter^0,f,c
  2305  0015D8                     l1313:
  2306  0015D8  AE10               	btfss	(___lodiv@divisor+7)^0,7,c
  2307  0015DA  EFF1  F00A         	goto	u591
  2308  0015DE  EFF3  F00A         	goto	u590
  2309  0015E2                     u591:
  2310  0015E2  EFE2  F00A         	goto	l1311
  2311  0015E6                     u590:
  2312  0015E6                     l1315:
  2313  0015E6  90D8               	bcf	status,0,c
  2314  0015E8  3611               	rlcf	___lodiv@quotient^0,f,c
  2315  0015EA  3612               	rlcf	(___lodiv@quotient+1)^0,f,c
  2316  0015EC  3613               	rlcf	(___lodiv@quotient+2)^0,f,c
  2317  0015EE  3614               	rlcf	(___lodiv@quotient+3)^0,f,c
  2318  0015F0  3615               	rlcf	(___lodiv@quotient+4)^0,f,c
  2319  0015F2  3616               	rlcf	(___lodiv@quotient+5)^0,f,c
  2320  0015F4  3617               	rlcf	(___lodiv@quotient+6)^0,f,c
  2321  0015F6  3618               	rlcf	(___lodiv@quotient+7)^0,f,c
  2322  0015F8  5009               	movf	___lodiv@divisor^0,w,c
  2323  0015FA  5C01               	subwf	___lodiv@dividend^0,w,c
  2324  0015FC  500A               	movf	(___lodiv@divisor+1)^0,w,c
  2325  0015FE  5802               	subwfb	(___lodiv@dividend+1)^0,w,c
  2326  001600  500B               	movf	(___lodiv@divisor+2)^0,w,c
  2327  001602  5803               	subwfb	(___lodiv@dividend+2)^0,w,c
  2328  001604  500C               	movf	(___lodiv@divisor+3)^0,w,c
  2329  001606  5804               	subwfb	(___lodiv@dividend+3)^0,w,c
  2330  001608  500D               	movf	(___lodiv@divisor+4)^0,w,c
  2331  00160A  5805               	subwfb	(___lodiv@dividend+4)^0,w,c
  2332  00160C  500E               	movf	(___lodiv@divisor+5)^0,w,c
  2333  00160E  5806               	subwfb	(___lodiv@dividend+5)^0,w,c
  2334  001610  500F               	movf	(___lodiv@divisor+6)^0,w,c
  2335  001612  5807               	subwfb	(___lodiv@dividend+6)^0,w,c
  2336  001614  5010               	movf	(___lodiv@divisor+7)^0,w,c
  2337  001616  5808               	subwfb	(___lodiv@dividend+7)^0,w,c
  2338  001618  A0D8               	btfss	status,0,c
  2339  00161A  EF11  F00B         	goto	u601
  2340  00161E  EF13  F00B         	goto	u600
  2341  001622                     u601:
  2342  001622  EF24  F00B         	goto	l1323
  2343  001626                     u600:
  2344  001626  5009               	movf	___lodiv@divisor^0,w,c
  2345  001628  5E01               	subwf	___lodiv@dividend^0,f,c
  2346  00162A  500A               	movf	(___lodiv@divisor+1)^0,w,c
  2347  00162C  5A02               	subwfb	(___lodiv@dividend+1)^0,f,c
  2348  00162E  500B               	movf	(___lodiv@divisor+2)^0,w,c
  2349  001630  5A03               	subwfb	(___lodiv@dividend+2)^0,f,c
  2350  001632  500C               	movf	(___lodiv@divisor+3)^0,w,c
  2351  001634  5A04               	subwfb	(___lodiv@dividend+3)^0,f,c
  2352  001636  500D               	movf	(___lodiv@divisor+4)^0,w,c
  2353  001638  5A05               	subwfb	(___lodiv@dividend+4)^0,f,c
  2354  00163A  500E               	movf	(___lodiv@divisor+5)^0,w,c
  2355  00163C  5A06               	subwfb	(___lodiv@dividend+5)^0,f,c
  2356  00163E  500F               	movf	(___lodiv@divisor+6)^0,w,c
  2357  001640  5A07               	subwfb	(___lodiv@dividend+6)^0,f,c
  2358  001642  5010               	movf	(___lodiv@divisor+7)^0,w,c
  2359  001644  5A08               	subwfb	(___lodiv@dividend+7)^0,f,c
  2360  001646  8011               	bsf	___lodiv@quotient^0,0,c
  2361  001648                     l1323:
  2362  001648  90D8               	bcf	status,0,c
  2363  00164A  3210               	rrcf	(___lodiv@divisor+7)^0,f,c
  2364  00164C  320F               	rrcf	(___lodiv@divisor+6)^0,f,c
  2365  00164E  320E               	rrcf	(___lodiv@divisor+5)^0,f,c
  2366  001650  320D               	rrcf	(___lodiv@divisor+4)^0,f,c
  2367  001652  320C               	rrcf	(___lodiv@divisor+3)^0,f,c
  2368  001654  320B               	rrcf	(___lodiv@divisor+2)^0,f,c
  2369  001656  320A               	rrcf	(___lodiv@divisor+1)^0,f,c
  2370  001658  3209               	rrcf	___lodiv@divisor^0,f,c
  2371  00165A  2E19               	decfsz	___lodiv@counter^0,f,c
  2372  00165C  EFF3  F00A         	goto	l1315
  2373  001660                     l561:
  2374  001660  C011  F001         	movff	___lodiv@quotient,?___lodiv
  2375  001664  C012  F002         	movff	___lodiv@quotient+1,?___lodiv+1
  2376  001668  C013  F003         	movff	___lodiv@quotient+2,?___lodiv+2
  2377  00166C  C014  F004         	movff	___lodiv@quotient+3,?___lodiv+3
  2378  001670  C015  F005         	movff	___lodiv@quotient+4,?___lodiv+4
  2379  001674  C016  F006         	movff	___lodiv@quotient+5,?___lodiv+5
  2380  001678  C017  F007         	movff	___lodiv@quotient+6,?___lodiv+6
  2381  00167C  C018  F008         	movff	___lodiv@quotient+7,?___lodiv+7
  2382  001680  0012               	return		;funcret
  2383  001682                     __end_of___lodiv:
  2384                           	opt callstack 0
  2385                           
  2386 ;; *************** function _strncmp *****************
  2387 ;; Defined at:
  2388 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strncmp.c"
  2389 ;; Parameters:    Size  Location     Type
  2390 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  2391 ;;		 -> STR_1(4), 
  2392 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  2393 ;;		 -> STR_4(3), 
  2394 ;;  n               2    4[COMRAM] unsigned int 
  2395 ;; Auto vars:     Size  Location     Type
  2396 ;;  r               2    9[COMRAM] PTR const unsigned char 
  2397 ;;		 -> STR_4(3), 
  2398 ;;  l               2    7[COMRAM] PTR const unsigned char 
  2399 ;;		 -> STR_1(4), 
  2400 ;; Return value:  Size  Location     Type
  2401 ;;                  2    0[COMRAM] int 
  2402 ;; Registers used:
  2403 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  2404 ;; Tracked objects:
  2405 ;;		On entry : 0/0
  2406 ;;		On exit  : 0/0
  2407 ;;		Unchanged: 0/0
  2408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2409 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2410 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2411 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2412 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2413 ;;Total ram usage:       11 bytes
  2414 ;; Hardware stack levels used:    1
  2415 ;; This function calls:
  2416 ;;		Nothing
  2417 ;; This function is called by:
  2418 ;;		_vfpfcnvrt
  2419 ;; This function uses a non-reentrant model
  2420 ;;
  2421                           
  2422                           	psect	text12
  2423  001682                     __ptext12:
  2424                           	opt callstack 0
  2425  001682                     _strncmp:
  2426                           	opt callstack 27
  2427  001682  C001  F008         	movff	strncmp@_l,strncmp@l
  2428  001686  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  2429  00168A  C003  F00A         	movff	strncmp@_r,strncmp@r
  2430  00168E  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  2431  001692  0605               	decf	strncmp@n^0,f,c
  2432  001694  A0D8               	btfss	status,0,c
  2433  001696  0606               	decf	(strncmp@n+1)^0,f,c
  2434  001698  2805               	incf	strncmp@n^0,w,c
  2435  00169A  E106               	bnz	u711
  2436  00169C  2806               	incf	(strncmp@n+1)^0,w,c
  2437  00169E  A4D8               	btfss	status,2,c
  2438  0016A0  EF54  F00B         	goto	u711
  2439  0016A4  EF56  F00B         	goto	u710
  2440  0016A8                     u711:
  2441  0016A8  EF63  F00B         	goto	l1387
  2442  0016AC                     u710:
  2443  0016AC  0E00               	movlw	0
  2444  0016AE  6E02               	movwf	(?_strncmp+1)^0,c
  2445  0016B0  0E00               	movlw	0
  2446  0016B2  6E01               	movwf	?_strncmp^0,c
  2447  0016B4  EFAF  F00B         	goto	l834
  2448  0016B8                     l1385:
  2449  0016B8  4A08               	infsnz	strncmp@l^0,f,c
  2450  0016BA  2A09               	incf	(strncmp@l+1)^0,f,c
  2451  0016BC  4A0A               	infsnz	strncmp@r^0,f,c
  2452  0016BE  2A0B               	incf	(strncmp@r+1)^0,f,c
  2453  0016C0  0605               	decf	strncmp@n^0,f,c
  2454  0016C2  A0D8               	btfss	status,0,c
  2455  0016C4  0606               	decf	(strncmp@n+1)^0,f,c
  2456  0016C6                     l1387:
  2457  0016C6  C008  FFF6         	movff	strncmp@l,tblptrl
  2458  0016CA  C009  FFF7         	movff	strncmp@l+1,tblptrh
  2459  0016CE                     	if	0	;tblptru may be non-zero
  2460  0016CE                     	endif
  2461  0016CE                     	if	0	;tblptru may be non-zero
  2462  0016CE                     	endif
  2463  0016CE  0008               	tblrd		*
  2464  0016D0  50F5               	movf	tablat,w,c
  2465  0016D2  0900               	iorlw	0
  2466  0016D4  B4D8               	btfsc	status,2,c
  2467  0016D6  EF6F  F00B         	goto	u721
  2468  0016DA  EF71  F00B         	goto	u720
  2469  0016DE                     u721:
  2470  0016DE  EF9D  F00B         	goto	l1395
  2471  0016E2                     u720:
  2472  0016E2  C00A  FFF6         	movff	strncmp@r,tblptrl
  2473  0016E6  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2474  0016EA                     	if	0	;tblptru may be non-zero
  2475  0016EA                     	endif
  2476  0016EA                     	if	0	;tblptru may be non-zero
  2477  0016EA                     	endif
  2478  0016EA  0008               	tblrd		*
  2479  0016EC  50F5               	movf	tablat,w,c
  2480  0016EE  0900               	iorlw	0
  2481  0016F0  B4D8               	btfsc	status,2,c
  2482  0016F2  EF7D  F00B         	goto	u731
  2483  0016F6  EF7F  F00B         	goto	u730
  2484  0016FA                     u731:
  2485  0016FA  EF9D  F00B         	goto	l1395
  2486  0016FE                     u730:
  2487  0016FE  5005               	movf	strncmp@n^0,w,c
  2488  001700  1006               	iorwf	(strncmp@n+1)^0,w,c
  2489  001702  B4D8               	btfsc	status,2,c
  2490  001704  EF86  F00B         	goto	u741
  2491  001708  EF88  F00B         	goto	u740
  2492  00170C                     u741:
  2493  00170C  EF9D  F00B         	goto	l1395
  2494  001710                     u740:
  2495  001710  C008  FFF6         	movff	strncmp@l,tblptrl
  2496  001714  C009  FFF7         	movff	strncmp@l+1,tblptrh
  2497  001718                     	if	0	;tblptru may be non-zero
  2498  001718                     	endif
  2499  001718                     	if	0	;tblptru may be non-zero
  2500  001718                     	endif
  2501  001718  0008               	tblrd		*
  2502  00171A  CFF5 F007          	movff	tablat,??_strncmp
  2503  00171E  C00A  FFF6         	movff	strncmp@r,tblptrl
  2504  001722  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2505  001726                     	if	0	;tblptru may be non-zero
  2506  001726                     	endif
  2507  001726                     	if	0	;tblptru may be non-zero
  2508  001726                     	endif
  2509  001726  0008               	tblrd		*
  2510  001728  50F5               	movf	tablat,w,c
  2511  00172A  1807               	xorwf	??_strncmp^0,w,c
  2512  00172C  B4D8               	btfsc	status,2,c
  2513  00172E  EF9B  F00B         	goto	u751
  2514  001732  EF9D  F00B         	goto	u750
  2515  001736                     u751:
  2516  001736  EF5C  F00B         	goto	l1385
  2517  00173A                     u750:
  2518  00173A                     l1395:
  2519  00173A  C008  FFF6         	movff	strncmp@l,tblptrl
  2520  00173E  C009  FFF7         	movff	strncmp@l+1,tblptrh
  2521  001742                     	if	0	;tblptru may be non-zero
  2522  001742                     	endif
  2523  001742                     	if	0	;tblptru may be non-zero
  2524  001742                     	endif
  2525  001742  0008               	tblrd		*
  2526  001744  CFF5 F007          	movff	tablat,??_strncmp
  2527  001748  C00A  FFF6         	movff	strncmp@r,tblptrl
  2528  00174C  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2529  001750                     	if	0	;tblptru may be non-zero
  2530  001750                     	endif
  2531  001750                     	if	0	;tblptru may be non-zero
  2532  001750                     	endif
  2533  001750  0008               	tblrd		*
  2534  001752  50F5               	movf	tablat,w,c
  2535  001754  5C07               	subwf	??_strncmp^0,w,c
  2536  001756  6E01               	movwf	?_strncmp^0,c
  2537  001758  6A02               	clrf	(?_strncmp+1)^0,c
  2538  00175A  A0D8               	btfss	status,0,c
  2539  00175C  0602               	decf	(?_strncmp+1)^0,f,c
  2540  00175E                     l834:
  2541  00175E  0012               	return		;funcret
  2542  001760                     __end_of_strncmp:
  2543                           	opt callstack 0
  2544                           
  2545 ;; *************** function _lcd_init *****************
  2546 ;; Defined at:
  2547 ;;		line 116 in file "uP Part 2.c"
  2548 ;; Parameters:    Size  Location     Type
  2549 ;;		None
  2550 ;; Auto vars:     Size  Location     Type
  2551 ;;		None
  2552 ;; Return value:  Size  Location     Type
  2553 ;;                  1    wreg      void 
  2554 ;; Registers used:
  2555 ;;		wreg, status,2, status,0, cstack
  2556 ;; Tracked objects:
  2557 ;;		On entry : 0/0
  2558 ;;		On exit  : 0/0
  2559 ;;		Unchanged: 0/0
  2560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2564 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2565 ;;Total ram usage:        0 bytes
  2566 ;; Hardware stack levels used:    1
  2567 ;; Hardware stack levels required when called:    1
  2568 ;; This function calls:
  2569 ;;		_lcd_command
  2570 ;; This function is called by:
  2571 ;;		_main
  2572 ;; This function uses a non-reentrant model
  2573 ;;
  2574                           
  2575                           	psect	text13
  2576  001DF8                     __ptext13:
  2577                           	opt callstack 0
  2578  001DF8                     _lcd_init:
  2579                           	opt callstack 29
  2580  001DF8                     
  2581                           ;uP Part 2.c: 117:  lcd_command(0x33);
  2582  001DF8  0E33               	movlw	51
  2583  001DFA  ECE0  F00C         	call	_lcd_command
  2584                           
  2585                           ;uP Part 2.c: 118:  lcd_command(0x32);
  2586  001DFE  0E32               	movlw	50
  2587  001E00  ECE0  F00C         	call	_lcd_command
  2588                           
  2589                           ;uP Part 2.c: 119:  lcd_command(0x2C);
  2590  001E04  0E2C               	movlw	44
  2591  001E06  ECE0  F00C         	call	_lcd_command
  2592                           
  2593                           ;uP Part 2.c: 120:  lcd_command(0x0C);
  2594  001E0A  0E0C               	movlw	12
  2595  001E0C  ECE0  F00C         	call	_lcd_command
  2596                           
  2597                           ;uP Part 2.c: 121:  lcd_command(0x01);
  2598  001E10  0E01               	movlw	1
  2599  001E12  ECE0  F00C         	call	_lcd_command
  2600  001E16  0012               	return		;funcret
  2601  001E18                     __end_of_lcd_init:
  2602                           	opt callstack 0
  2603                           
  2604 ;; *************** function _lcd_command *****************
  2605 ;; Defined at:
  2606 ;;		line 68 in file "uP Part 2.c"
  2607 ;; Parameters:    Size  Location     Type
  2608 ;;  x               1    wreg     unsigned char 
  2609 ;; Auto vars:     Size  Location     Type
  2610 ;;  x               1    2[COMRAM] unsigned char 
  2611 ;;  temp            1    1[COMRAM] unsigned char 
  2612 ;; Return value:  Size  Location     Type
  2613 ;;                  1    wreg      void 
  2614 ;; Registers used:
  2615 ;;		wreg, status,2, status,0, cstack
  2616 ;; Tracked objects:
  2617 ;;		On entry : 0/0
  2618 ;;		On exit  : 0/0
  2619 ;;		Unchanged: 0/0
  2620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2622 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2623 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2624 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2625 ;;Total ram usage:        3 bytes
  2626 ;; Hardware stack levels used:    1
  2627 ;; This function calls:
  2628 ;;		Nothing
  2629 ;; This function is called by:
  2630 ;;		_lcd_init
  2631 ;;		_main
  2632 ;; This function uses a non-reentrant model
  2633 ;;
  2634                           
  2635                           	psect	text14
  2636  0019C0                     __ptext14:
  2637                           	opt callstack 0
  2638  0019C0                     _lcd_command:
  2639                           	opt callstack 29
  2640                           
  2641                           ;incstack = 0
  2642                           ;lcd_command@x stored from wreg
  2643  0019C0  6E03               	movwf	lcd_command@x^0,c
  2644  0019C2                     
  2645                           ;uP Part 2.c: 69:  char temp;;uP Part 2.c: 72:  TRISCbits.TRISC0 = 0;
  2646  0019C2  908A               	bcf	138,0,c	;volatile
  2647                           
  2648                           ;uP Part 2.c: 73:  TRISCbits.TRISC1 = 0;
  2649  0019C4  928A               	bcf	138,1,c	;volatile
  2650                           
  2651                           ;uP Part 2.c: 74:  TRISCbits.TRISC2 = 0;
  2652  0019C6  948A               	bcf	138,2,c	;volatile
  2653                           
  2654                           ;uP Part 2.c: 75:  TRISCbits.TRISC3 = 0;
  2655  0019C8  968A               	bcf	138,3,c	;volatile
  2656                           
  2657                           ;uP Part 2.c: 76:  TRISCbits.TRISC4 = 0;
  2658  0019CA  988A               	bcf	138,4,c	;volatile
  2659                           
  2660                           ;uP Part 2.c: 77:  TRISCbits.TRISC7 = 0;
  2661  0019CC  9E8A               	bcf	138,7,c	;volatile
  2662  0019CE                     
  2663                           ;uP Part 2.c: 79:  temp = x;
  2664  0019CE  C003  F002         	movff	lcd_command@x,lcd_command@temp
  2665  0019D2                     
  2666                           ;uP Part 2.c: 82:     PORTC = 0;
  2667  0019D2  0E00               	movlw	0
  2668  0019D4  6E8F               	movwf	143,c	;volatile
  2669  0019D6                     
  2670                           ;uP Part 2.c: 83:     _delay((unsigned long)((5)*(4000000/4000.0)));
  2671  0019D6  0E07               	movlw	7
  2672  0019D8  6E01               	movwf	??_lcd_command^0,c
  2673  0019DA  0E7D               	movlw	125
  2674  0019DC                     u947:
  2675  0019DC  2EE8               	decfsz	wreg,f,c
  2676  0019DE  D7FE               	bra	u947
  2677  0019E0  2E01               	decfsz	??_lcd_command^0,f,c
  2678  0019E2  D7FC               	bra	u947
  2679  0019E4  F000               	nop	
  2680  0019E6                     
  2681                           ;uP Part 2.c: 85:  x = x >>4;
  2682  0019E6  3803               	swapf	lcd_command@x^0,w,c
  2683  0019E8  0B0F               	andlw	15
  2684  0019EA  6E03               	movwf	lcd_command@x^0,c
  2685  0019EC                     
  2686                           ;uP Part 2.c: 86:  x = x & 0xF;
  2687  0019EC  5003               	movf	lcd_command@x^0,w,c
  2688  0019EE  0B0F               	andlw	15
  2689  0019F0  6E03               	movwf	lcd_command@x^0,c
  2690  0019F2                     
  2691                           ;uP Part 2.c: 87:  x = x | 0x80;
  2692  0019F2  5003               	movf	lcd_command@x^0,w,c
  2693  0019F4  0980               	iorlw	128
  2694  0019F6  6E03               	movwf	lcd_command@x^0,c
  2695  0019F8                     
  2696                           ;uP Part 2.c: 88:  PORTC = x;
  2697  0019F8  C003  FF8F         	movff	lcd_command@x,3983	;volatile
  2698  0019FC                     
  2699                           ;uP Part 2.c: 89:  _delay((unsigned long)((5)*(4000000/4000.0)));
  2700  0019FC  0E07               	movlw	7
  2701  0019FE  6E01               	movwf	??_lcd_command^0,c
  2702  001A00  0E7D               	movlw	125
  2703  001A02                     u957:
  2704  001A02  2EE8               	decfsz	wreg,f,c
  2705  001A04  D7FE               	bra	u957
  2706  001A06  2E01               	decfsz	??_lcd_command^0,f,c
  2707  001A08  D7FC               	bra	u957
  2708  001A0A  F000               	nop	
  2709  001A0C                     
  2710                           ;uP Part 2.c: 91:  x = x & 0xF;
  2711  001A0C  5003               	movf	lcd_command@x^0,w,c
  2712  001A0E  0B0F               	andlw	15
  2713  001A10  6E03               	movwf	lcd_command@x^0,c
  2714  001A12                     
  2715                           ;uP Part 2.c: 92:  PORTC = x;
  2716  001A12  C003  FF8F         	movff	lcd_command@x,3983	;volatile
  2717  001A16                     
  2718                           ;uP Part 2.c: 93:  _delay((unsigned long)((5)*(4000000/4000.0)));
  2719  001A16  0E07               	movlw	7
  2720  001A18  6E01               	movwf	??_lcd_command^0,c
  2721  001A1A  0E7D               	movlw	125
  2722  001A1C                     u967:
  2723  001A1C  2EE8               	decfsz	wreg,f,c
  2724  001A1E  D7FE               	bra	u967
  2725  001A20  2E01               	decfsz	??_lcd_command^0,f,c
  2726  001A22  D7FC               	bra	u967
  2727  001A24  F000               	nop	
  2728  001A26                     
  2729                           ;uP Part 2.c: 95:  PORTC = 0;
  2730  001A26  0E00               	movlw	0
  2731  001A28  6E8F               	movwf	143,c	;volatile
  2732  001A2A                     
  2733                           ;uP Part 2.c: 96:  _delay((unsigned long)((5)*(4000000/4000.0)));
  2734  001A2A  0E07               	movlw	7
  2735  001A2C  6E01               	movwf	??_lcd_command^0,c
  2736  001A2E  0E7D               	movlw	125
  2737  001A30                     u977:
  2738  001A30  2EE8               	decfsz	wreg,f,c
  2739  001A32  D7FE               	bra	u977
  2740  001A34  2E01               	decfsz	??_lcd_command^0,f,c
  2741  001A36  D7FC               	bra	u977
  2742  001A38  F000               	nop	
  2743  001A3A                     
  2744                           ;uP Part 2.c: 99:  x = temp;
  2745  001A3A  C002  F003         	movff	lcd_command@temp,lcd_command@x
  2746  001A3E                     
  2747                           ;uP Part 2.c: 100:  x = x & 0xF;
  2748  001A3E  5003               	movf	lcd_command@x^0,w,c
  2749  001A40  0B0F               	andlw	15
  2750  001A42  6E03               	movwf	lcd_command@x^0,c
  2751  001A44                     
  2752                           ;uP Part 2.c: 101:  x = x | 0x80;
  2753  001A44  5003               	movf	lcd_command@x^0,w,c
  2754  001A46  0980               	iorlw	128
  2755  001A48  6E03               	movwf	lcd_command@x^0,c
  2756  001A4A                     
  2757                           ;uP Part 2.c: 102:  PORTC = x;
  2758  001A4A  C003  FF8F         	movff	lcd_command@x,3983	;volatile
  2759  001A4E                     
  2760                           ;uP Part 2.c: 103:  _delay((unsigned long)((5)*(4000000/4000.0)));
  2761  001A4E  0E07               	movlw	7
  2762  001A50  6E01               	movwf	??_lcd_command^0,c
  2763  001A52  0E7D               	movlw	125
  2764  001A54                     u987:
  2765  001A54  2EE8               	decfsz	wreg,f,c
  2766  001A56  D7FE               	bra	u987
  2767  001A58  2E01               	decfsz	??_lcd_command^0,f,c
  2768  001A5A  D7FC               	bra	u987
  2769  001A5C  F000               	nop	
  2770  001A5E                     
  2771                           ;uP Part 2.c: 105:  x = x & 0xF;
  2772  001A5E  5003               	movf	lcd_command@x^0,w,c
  2773  001A60  0B0F               	andlw	15
  2774  001A62  6E03               	movwf	lcd_command@x^0,c
  2775  001A64                     
  2776                           ;uP Part 2.c: 106:  PORTC = x;
  2777  001A64  C003  FF8F         	movff	lcd_command@x,3983	;volatile
  2778  001A68                     
  2779                           ;uP Part 2.c: 107:  _delay((unsigned long)((5)*(4000000/4000.0)));
  2780  001A68  0E07               	movlw	7
  2781  001A6A  6E01               	movwf	??_lcd_command^0,c
  2782  001A6C  0E7D               	movlw	125
  2783  001A6E                     u997:
  2784  001A6E  2EE8               	decfsz	wreg,f,c
  2785  001A70  D7FE               	bra	u997
  2786  001A72  2E01               	decfsz	??_lcd_command^0,f,c
  2787  001A74  D7FC               	bra	u997
  2788  001A76  F000               	nop	
  2789  001A78  0012               	return		;funcret
  2790  001A7A                     __end_of_lcd_command:
  2791                           	opt callstack 0
  2792                           
  2793 ;; *************** function _lcd_char *****************
  2794 ;; Defined at:
  2795 ;;		line 130 in file "uP Part 2.c"
  2796 ;; Parameters:    Size  Location     Type
  2797 ;;  x               1    wreg     unsigned char 
  2798 ;; Auto vars:     Size  Location     Type
  2799 ;;  x               1    2[COMRAM] unsigned char 
  2800 ;;  temp            1    1[COMRAM] unsigned char 
  2801 ;; Return value:  Size  Location     Type
  2802 ;;                  1    wreg      void 
  2803 ;; Registers used:
  2804 ;;		wreg, status,2, status,0, cstack
  2805 ;; Tracked objects:
  2806 ;;		On entry : 0/0
  2807 ;;		On exit  : 0/0
  2808 ;;		Unchanged: 0/0
  2809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2811 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2812 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2813 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2814 ;;Total ram usage:        3 bytes
  2815 ;; Hardware stack levels used:    1
  2816 ;; This function calls:
  2817 ;;		Nothing
  2818 ;; This function is called by:
  2819 ;;		_main
  2820 ;; This function uses a non-reentrant model
  2821 ;;
  2822                           
  2823                           	psect	text15
  2824  001A7A                     __ptext15:
  2825                           	opt callstack 0
  2826  001A7A                     _lcd_char:
  2827                           	opt callstack 30
  2828                           
  2829                           ;incstack = 0
  2830                           ;lcd_char@x stored from wreg
  2831  001A7A  6E03               	movwf	lcd_char@x^0,c
  2832  001A7C                     
  2833                           ;uP Part 2.c: 131:  char temp;;uP Part 2.c: 134:  TRISCbits.TRISC0 = 0;
  2834  001A7C  908A               	bcf	138,0,c	;volatile
  2835                           
  2836                           ;uP Part 2.c: 135:  TRISCbits.TRISC1 = 0;
  2837  001A7E  928A               	bcf	138,1,c	;volatile
  2838                           
  2839                           ;uP Part 2.c: 136:  TRISCbits.TRISC2 = 0;
  2840  001A80  948A               	bcf	138,2,c	;volatile
  2841                           
  2842                           ;uP Part 2.c: 137:  TRISCbits.TRISC3 = 0;
  2843  001A82  968A               	bcf	138,3,c	;volatile
  2844                           
  2845                           ;uP Part 2.c: 138:  TRISCbits.TRISC4 = 0;
  2846  001A84  988A               	bcf	138,4,c	;volatile
  2847                           
  2848                           ;uP Part 2.c: 139:  TRISCbits.TRISC7 = 0;
  2849  001A86  9E8A               	bcf	138,7,c	;volatile
  2850  001A88                     
  2851                           ;uP Part 2.c: 141:  temp = x;
  2852  001A88  C003  F002         	movff	lcd_char@x,lcd_char@temp
  2853  001A8C                     
  2854                           ;uP Part 2.c: 144:  PORTC = 0x10;
  2855  001A8C  0E10               	movlw	16
  2856  001A8E  6E8F               	movwf	143,c	;volatile
  2857  001A90                     
  2858                           ;uP Part 2.c: 145:  _delay((unsigned long)((5)*(4000000/4000.0)));
  2859  001A90  0E07               	movlw	7
  2860  001A92  6E01               	movwf	??_lcd_char^0,c
  2861  001A94  0E7D               	movlw	125
  2862  001A96                     u1007:
  2863  001A96  2EE8               	decfsz	wreg,f,c
  2864  001A98  D7FE               	bra	u1007
  2865  001A9A  2E01               	decfsz	??_lcd_char^0,f,c
  2866  001A9C  D7FC               	bra	u1007
  2867  001A9E  F000               	nop	
  2868  001AA0                     
  2869                           ;uP Part 2.c: 147:  x = x >>4;
  2870  001AA0  3803               	swapf	lcd_char@x^0,w,c
  2871  001AA2  0B0F               	andlw	15
  2872  001AA4  6E03               	movwf	lcd_char@x^0,c
  2873  001AA6                     
  2874                           ;uP Part 2.c: 148:  x = x & 0xF;
  2875  001AA6  5003               	movf	lcd_char@x^0,w,c
  2876  001AA8  0B0F               	andlw	15
  2877  001AAA  6E03               	movwf	lcd_char@x^0,c
  2878  001AAC                     
  2879                           ;uP Part 2.c: 149:  x = x | 0x90;
  2880  001AAC  5003               	movf	lcd_char@x^0,w,c
  2881  001AAE  0990               	iorlw	144
  2882  001AB0  6E03               	movwf	lcd_char@x^0,c
  2883  001AB2                     
  2884                           ;uP Part 2.c: 150:  PORTC = x;
  2885  001AB2  C003  FF8F         	movff	lcd_char@x,3983	;volatile
  2886  001AB6                     
  2887                           ;uP Part 2.c: 151:  _delay((unsigned long)((5)*(4000000/4000.0)));
  2888  001AB6  0E07               	movlw	7
  2889  001AB8  6E01               	movwf	??_lcd_char^0,c
  2890  001ABA  0E7D               	movlw	125
  2891  001ABC                     u1017:
  2892  001ABC  2EE8               	decfsz	wreg,f,c
  2893  001ABE  D7FE               	bra	u1017
  2894  001AC0  2E01               	decfsz	??_lcd_char^0,f,c
  2895  001AC2  D7FC               	bra	u1017
  2896  001AC4  F000               	nop	
  2897  001AC6                     
  2898                           ;uP Part 2.c: 153:  x = x & 0x1F;
  2899  001AC6  5003               	movf	lcd_char@x^0,w,c
  2900  001AC8  0B1F               	andlw	31
  2901  001ACA  6E03               	movwf	lcd_char@x^0,c
  2902  001ACC                     
  2903                           ;uP Part 2.c: 154:  PORTC = x;
  2904  001ACC  C003  FF8F         	movff	lcd_char@x,3983	;volatile
  2905  001AD0                     
  2906                           ;uP Part 2.c: 155:  _delay((unsigned long)((5)*(4000000/4000.0)));
  2907  001AD0  0E07               	movlw	7
  2908  001AD2  6E01               	movwf	??_lcd_char^0,c
  2909  001AD4  0E7D               	movlw	125
  2910  001AD6                     u1027:
  2911  001AD6  2EE8               	decfsz	wreg,f,c
  2912  001AD8  D7FE               	bra	u1027
  2913  001ADA  2E01               	decfsz	??_lcd_char^0,f,c
  2914  001ADC  D7FC               	bra	u1027
  2915  001ADE  F000               	nop	
  2916  001AE0                     
  2917                           ;uP Part 2.c: 157:  PORTC = 0x10;
  2918  001AE0  0E10               	movlw	16
  2919  001AE2  6E8F               	movwf	143,c	;volatile
  2920  001AE4                     
  2921                           ;uP Part 2.c: 158:  _delay((unsigned long)((5)*(4000000/4000.0)));
  2922  001AE4  0E07               	movlw	7
  2923  001AE6  6E01               	movwf	??_lcd_char^0,c
  2924  001AE8  0E7D               	movlw	125
  2925  001AEA                     u1037:
  2926  001AEA  2EE8               	decfsz	wreg,f,c
  2927  001AEC  D7FE               	bra	u1037
  2928  001AEE  2E01               	decfsz	??_lcd_char^0,f,c
  2929  001AF0  D7FC               	bra	u1037
  2930  001AF2  F000               	nop	
  2931  001AF4                     
  2932                           ;uP Part 2.c: 161:  x = temp;
  2933  001AF4  C002  F003         	movff	lcd_char@temp,lcd_char@x
  2934  001AF8                     
  2935                           ;uP Part 2.c: 162:  x = x & 0xF;
  2936  001AF8  5003               	movf	lcd_char@x^0,w,c
  2937  001AFA  0B0F               	andlw	15
  2938  001AFC  6E03               	movwf	lcd_char@x^0,c
  2939  001AFE                     
  2940                           ;uP Part 2.c: 163:  x = x | 0x90;
  2941  001AFE  5003               	movf	lcd_char@x^0,w,c
  2942  001B00  0990               	iorlw	144
  2943  001B02  6E03               	movwf	lcd_char@x^0,c
  2944  001B04                     
  2945                           ;uP Part 2.c: 164:  PORTC = x;
  2946  001B04  C003  FF8F         	movff	lcd_char@x,3983	;volatile
  2947  001B08                     
  2948                           ;uP Part 2.c: 165:  _delay((unsigned long)((5)*(4000000/4000.0)));
  2949  001B08  0E07               	movlw	7
  2950  001B0A  6E01               	movwf	??_lcd_char^0,c
  2951  001B0C  0E7D               	movlw	125
  2952  001B0E                     u1047:
  2953  001B0E  2EE8               	decfsz	wreg,f,c
  2954  001B10  D7FE               	bra	u1047
  2955  001B12  2E01               	decfsz	??_lcd_char^0,f,c
  2956  001B14  D7FC               	bra	u1047
  2957  001B16  F000               	nop	
  2958  001B18                     
  2959                           ;uP Part 2.c: 167:  x = x & 0x1F;
  2960  001B18  5003               	movf	lcd_char@x^0,w,c
  2961  001B1A  0B1F               	andlw	31
  2962  001B1C  6E03               	movwf	lcd_char@x^0,c
  2963  001B1E                     
  2964                           ;uP Part 2.c: 168:  PORTC = x;
  2965  001B1E  C003  FF8F         	movff	lcd_char@x,3983	;volatile
  2966  001B22                     
  2967                           ;uP Part 2.c: 169:  _delay((unsigned long)((5)*(4000000/4000.0)));
  2968  001B22  0E07               	movlw	7
  2969  001B24  6E01               	movwf	??_lcd_char^0,c
  2970  001B26  0E7D               	movlw	125
  2971  001B28                     u1057:
  2972  001B28  2EE8               	decfsz	wreg,f,c
  2973  001B2A  D7FE               	bra	u1057
  2974  001B2C  2E01               	decfsz	??_lcd_char^0,f,c
  2975  001B2E  D7FC               	bra	u1057
  2976  001B30  F000               	nop	
  2977  001B32  0012               	return		;funcret
  2978  001B34                     __end_of_lcd_char:
  2979                           	opt callstack 0
  2980                           
  2981 ;; *************** function _adc_init *****************
  2982 ;; Defined at:
  2983 ;;		line 180 in file "uP Part 2.c"
  2984 ;; Parameters:    Size  Location     Type
  2985 ;;		None
  2986 ;; Auto vars:     Size  Location     Type
  2987 ;;		None
  2988 ;; Return value:  Size  Location     Type
  2989 ;;                  1    wreg      void 
  2990 ;; Registers used:
  2991 ;;		wreg, status,2
  2992 ;; Tracked objects:
  2993 ;;		On entry : 0/0
  2994 ;;		On exit  : 0/0
  2995 ;;		Unchanged: 0/0
  2996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3000 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3001 ;;Total ram usage:        0 bytes
  3002 ;; Hardware stack levels used:    1
  3003 ;; This function calls:
  3004 ;;		Nothing
  3005 ;; This function is called by:
  3006 ;;		_main
  3007 ;; This function uses a non-reentrant model
  3008 ;;
  3009                           
  3010                           	psect	text16
  3011  001E18                     __ptext16:
  3012                           	opt callstack 0
  3013  001E18                     _adc_init:
  3014                           	opt callstack 30
  3015  001E18                     
  3016                           ;uP Part 2.c: 181:     TRISAbits.TRISA0 = 1;
  3017  001E18  8088               	bsf	136,0,c	;volatile
  3018  001E1A                     
  3019                           ;uP Part 2.c: 182:     ADCON0 = 0x0;
  3020  001E1A  0E00               	movlw	0
  3021  001E1C  6E60               	movwf	96,c	;volatile
  3022  001E1E  0012               	return		;funcret
  3023  001E20                     __end_of_adc_init:
  3024                           	opt callstack 0
  3025                           
  3026 ;; *************** function _adcNum *****************
  3027 ;; Defined at:
  3028 ;;		line 188 in file "uP Part 2.c"
  3029 ;; Parameters:    Size  Location     Type
  3030 ;;		None
  3031 ;; Auto vars:     Size  Location     Type
  3032 ;;		None
  3033 ;; Return value:  Size  Location     Type
  3034 ;;                  4    0[COMRAM] unsigned long 
  3035 ;; Registers used:
  3036 ;;		wreg, status,2, status,0
  3037 ;; Tracked objects:
  3038 ;;		On entry : 0/0
  3039 ;;		On exit  : 0/0
  3040 ;;		Unchanged: 0/0
  3041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3042 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3044 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3045 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3046 ;;Total ram usage:        7 bytes
  3047 ;; Hardware stack levels used:    1
  3048 ;; This function calls:
  3049 ;;		Nothing
  3050 ;; This function is called by:
  3051 ;;		_main
  3052 ;; This function uses a non-reentrant model
  3053 ;;
  3054                           
  3055                           	psect	text17
  3056  001CF6                     __ptext17:
  3057                           	opt callstack 0
  3058  001CF6                     _adcNum:
  3059                           	opt callstack 30
  3060  001CF6                     
  3061                           ;uP Part 2.c: 189:     ADCON0bits.ADON = 1;
  3062  001CF6  8E60               	bsf	96,7,c	;volatile
  3063                           
  3064                           ;uP Part 2.c: 190:     ADCON0bits.GO = 1;
  3065  001CF8  8060               	bsf	96,0,c	;volatile
  3066  001CFA                     
  3067                           ;uP Part 2.c: 191:     _delay((unsigned long)((5)*(4000000/4000.0)));
  3068  001CFA  0E07               	movlw	7
  3069  001CFC  6E05               	movwf	??_adcNum^0,c
  3070  001CFE  0E7D               	movlw	125
  3071  001D00                     u1067:
  3072  001D00  2EE8               	decfsz	wreg,f,c
  3073  001D02  D7FE               	bra	u1067
  3074  001D04  2E05               	decfsz	??_adcNum^0,f,c
  3075  001D06  D7FC               	bra	u1067
  3076  001D08  F000               	nop	
  3077  001D0A                     l39:
  3078  001D0A  B060               	btfsc	96,0,c	;volatile
  3079  001D0C  EF8A  F00E         	goto	u811
  3080  001D10  EF8C  F00E         	goto	u810
  3081  001D14                     u811:
  3082  001D14  EF85  F00E         	goto	l39
  3083  001D18                     u810:
  3084  001D18                     
  3085                           ;uP Part 2.c: 195:     ADCON0bits.ADON = 0;
  3086  001D18  9E60               	bcf	96,7,c	;volatile
  3087  001D1A                     
  3088                           ;uP Part 2.c: 198:     return (ADRES >> 6);
  3089  001D1A  CF63 F005          	movff	3939,??_adcNum	;volatile
  3090  001D1E  CF64 F006          	movff	3940,??_adcNum+1	;volatile
  3091  001D22  0E06               	movlw	6
  3092  001D24  6E07               	movwf	(??_adcNum+2)^0,c
  3093  001D26                     u825:
  3094  001D26  90D8               	bcf	status,0,c
  3095  001D28  3206               	rrcf	(??_adcNum+1)^0,f,c
  3096  001D2A  3205               	rrcf	??_adcNum^0,f,c
  3097  001D2C  2E07               	decfsz	(??_adcNum+2)^0,f,c
  3098  001D2E  EF93  F00E         	goto	u825
  3099  001D32  C005  F001         	movff	??_adcNum,?_adcNum
  3100  001D36  C006  F002         	movff	??_adcNum+1,?_adcNum+1
  3101  001D3A  6A03               	clrf	(?_adcNum+2)^0,c
  3102  001D3C  6A04               	clrf	(?_adcNum+3)^0,c
  3103  001D3E  0012               	return		;funcret
  3104  001D40                     __end_of_adcNum:
  3105                           	opt callstack 0
  3106                           
  3107 ;; *************** function ___lmul *****************
  3108 ;; Defined at:
  3109 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul32.c"
  3110 ;; Parameters:    Size  Location     Type
  3111 ;;  multiplier      4    0[COMRAM] unsigned long 
  3112 ;;  multiplicand    4    4[COMRAM] unsigned long 
  3113 ;; Auto vars:     Size  Location     Type
  3114 ;;  product         4    8[COMRAM] unsigned long 
  3115 ;; Return value:  Size  Location     Type
  3116 ;;                  4    0[COMRAM] unsigned long 
  3117 ;; Registers used:
  3118 ;;		wreg, status,2, status,0
  3119 ;; Tracked objects:
  3120 ;;		On entry : 0/0
  3121 ;;		On exit  : 0/0
  3122 ;;		Unchanged: 0/0
  3123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3124 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3125 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3127 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3128 ;;Total ram usage:       12 bytes
  3129 ;; Hardware stack levels used:    1
  3130 ;; This function calls:
  3131 ;;		Nothing
  3132 ;; This function is called by:
  3133 ;;		_main
  3134 ;; This function uses a non-reentrant model
  3135 ;;
  3136                           
  3137                           	psect	text18
  3138  001BD8                     __ptext18:
  3139                           	opt callstack 0
  3140  001BD8                     ___lmul:
  3141                           	opt callstack 30
  3142  001BD8  0E00               	movlw	0
  3143  001BDA  6E09               	movwf	___lmul@product^0,c
  3144  001BDC  0E00               	movlw	0
  3145  001BDE  6E0A               	movwf	(___lmul@product+1)^0,c
  3146  001BE0  0E00               	movlw	0
  3147  001BE2  6E0B               	movwf	(___lmul@product+2)^0,c
  3148  001BE4  0E00               	movlw	0
  3149  001BE6  6E0C               	movwf	(___lmul@product+3)^0,c
  3150  001BE8                     l1571:
  3151  001BE8  A001               	btfss	___lmul@multiplier^0,0,c
  3152  001BEA  EFF9  F00D         	goto	u831
  3153  001BEE  EFFB  F00D         	goto	u830
  3154  001BF2                     u831:
  3155  001BF2  EF03  F00E         	goto	l1575
  3156  001BF6                     u830:
  3157  001BF6  5005               	movf	___lmul@multiplicand^0,w,c
  3158  001BF8  2609               	addwf	___lmul@product^0,f,c
  3159  001BFA  5006               	movf	(___lmul@multiplicand+1)^0,w,c
  3160  001BFC  220A               	addwfc	(___lmul@product+1)^0,f,c
  3161  001BFE  5007               	movf	(___lmul@multiplicand+2)^0,w,c
  3162  001C00  220B               	addwfc	(___lmul@product+2)^0,f,c
  3163  001C02  5008               	movf	(___lmul@multiplicand+3)^0,w,c
  3164  001C04  220C               	addwfc	(___lmul@product+3)^0,f,c
  3165  001C06                     l1575:
  3166  001C06  90D8               	bcf	status,0,c
  3167  001C08  3605               	rlcf	___lmul@multiplicand^0,f,c
  3168  001C0A  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
  3169  001C0C  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
  3170  001C0E  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
  3171  001C10  90D8               	bcf	status,0,c
  3172  001C12  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
  3173  001C14  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
  3174  001C16  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
  3175  001C18  3201               	rrcf	___lmul@multiplier^0,f,c
  3176  001C1A  5001               	movf	___lmul@multiplier^0,w,c
  3177  001C1C  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
  3178  001C1E  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
  3179  001C20  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
  3180  001C22  A4D8               	btfss	status,2,c
  3181  001C24  EF16  F00E         	goto	u841
  3182  001C28  EF18  F00E         	goto	u840
  3183  001C2C                     u841:
  3184  001C2C  EFF4  F00D         	goto	l1571
  3185  001C30                     u840:
  3186  001C30  C009  F001         	movff	___lmul@product,?___lmul
  3187  001C34  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  3188  001C38  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  3189  001C3C  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  3190  001C40  0012               	return		;funcret
  3191  001C42                     __end_of___lmul:
  3192                           	opt callstack 0
  3193                           
  3194 ;; *************** function ___lldiv *****************
  3195 ;; Defined at:
  3196 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\__lldiv.c"
  3197 ;; Parameters:    Size  Location     Type
  3198 ;;  dividend        4   12[COMRAM] unsigned long 
  3199 ;;  divisor         4   16[COMRAM] unsigned long 
  3200 ;; Auto vars:     Size  Location     Type
  3201 ;;  quotient        4   20[COMRAM] unsigned long 
  3202 ;;  counter         1   24[COMRAM] unsigned char 
  3203 ;; Return value:  Size  Location     Type
  3204 ;;                  4   12[COMRAM] unsigned long 
  3205 ;; Registers used:
  3206 ;;		wreg, status,2, status,0
  3207 ;; Tracked objects:
  3208 ;;		On entry : 0/0
  3209 ;;		On exit  : 0/0
  3210 ;;		Unchanged: 0/0
  3211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3212 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3213 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3215 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3216 ;;Total ram usage:       13 bytes
  3217 ;; Hardware stack levels used:    1
  3218 ;; This function calls:
  3219 ;;		Nothing
  3220 ;; This function is called by:
  3221 ;;		_main
  3222 ;; This function uses a non-reentrant model
  3223 ;;
  3224                           
  3225                           	psect	text19
  3226  001B34                     __ptext19:
  3227                           	opt callstack 0
  3228  001B34                     ___lldiv:
  3229                           	opt callstack 30
  3230  001B34  0E00               	movlw	0
  3231  001B36  6E15               	movwf	___lldiv@quotient^0,c
  3232  001B38  0E00               	movlw	0
  3233  001B3A  6E16               	movwf	(___lldiv@quotient+1)^0,c
  3234  001B3C  0E00               	movlw	0
  3235  001B3E  6E17               	movwf	(___lldiv@quotient+2)^0,c
  3236  001B40  0E00               	movlw	0
  3237  001B42  6E18               	movwf	(___lldiv@quotient+3)^0,c
  3238  001B44  5011               	movf	___lldiv@divisor^0,w,c
  3239  001B46  1012               	iorwf	(___lldiv@divisor+1)^0,w,c
  3240  001B48  1013               	iorwf	(___lldiv@divisor+2)^0,w,c
  3241  001B4A  1014               	iorwf	(___lldiv@divisor+3)^0,w,c
  3242  001B4C  B4D8               	btfsc	status,2,c
  3243  001B4E  EFAB  F00D         	goto	u851
  3244  001B52  EFAD  F00D         	goto	u850
  3245  001B56                     u851:
  3246  001B56  EFE3  F00D         	goto	l150
  3247  001B5A                     u850:
  3248  001B5A  0E01               	movlw	1
  3249  001B5C  6E19               	movwf	___lldiv@counter^0,c
  3250  001B5E  EFB7  F00D         	goto	l1587
  3251  001B62                     l1585:
  3252  001B62  90D8               	bcf	status,0,c
  3253  001B64  3611               	rlcf	___lldiv@divisor^0,f,c
  3254  001B66  3612               	rlcf	(___lldiv@divisor+1)^0,f,c
  3255  001B68  3613               	rlcf	(___lldiv@divisor+2)^0,f,c
  3256  001B6A  3614               	rlcf	(___lldiv@divisor+3)^0,f,c
  3257  001B6C  2A19               	incf	___lldiv@counter^0,f,c
  3258  001B6E                     l1587:
  3259  001B6E  AE14               	btfss	(___lldiv@divisor+3)^0,7,c
  3260  001B70  EFBC  F00D         	goto	u861
  3261  001B74  EFBE  F00D         	goto	u860
  3262  001B78                     u861:
  3263  001B78  EFB1  F00D         	goto	l1585
  3264  001B7C                     u860:
  3265  001B7C                     l1589:
  3266  001B7C  90D8               	bcf	status,0,c
  3267  001B7E  3615               	rlcf	___lldiv@quotient^0,f,c
  3268  001B80  3616               	rlcf	(___lldiv@quotient+1)^0,f,c
  3269  001B82  3617               	rlcf	(___lldiv@quotient+2)^0,f,c
  3270  001B84  3618               	rlcf	(___lldiv@quotient+3)^0,f,c
  3271  001B86  5011               	movf	___lldiv@divisor^0,w,c
  3272  001B88  5C0D               	subwf	___lldiv@dividend^0,w,c
  3273  001B8A  5012               	movf	(___lldiv@divisor+1)^0,w,c
  3274  001B8C  580E               	subwfb	(___lldiv@dividend+1)^0,w,c
  3275  001B8E  5013               	movf	(___lldiv@divisor+2)^0,w,c
  3276  001B90  580F               	subwfb	(___lldiv@dividend+2)^0,w,c
  3277  001B92  5014               	movf	(___lldiv@divisor+3)^0,w,c
  3278  001B94  5810               	subwfb	(___lldiv@dividend+3)^0,w,c
  3279  001B96  A0D8               	btfss	status,0,c
  3280  001B98  EFD0  F00D         	goto	u871
  3281  001B9C  EFD2  F00D         	goto	u870
  3282  001BA0                     u871:
  3283  001BA0  EFDB  F00D         	goto	l1597
  3284  001BA4                     u870:
  3285  001BA4  5011               	movf	___lldiv@divisor^0,w,c
  3286  001BA6  5E0D               	subwf	___lldiv@dividend^0,f,c
  3287  001BA8  5012               	movf	(___lldiv@divisor+1)^0,w,c
  3288  001BAA  5A0E               	subwfb	(___lldiv@dividend+1)^0,f,c
  3289  001BAC  5013               	movf	(___lldiv@divisor+2)^0,w,c
  3290  001BAE  5A0F               	subwfb	(___lldiv@dividend+2)^0,f,c
  3291  001BB0  5014               	movf	(___lldiv@divisor+3)^0,w,c
  3292  001BB2  5A10               	subwfb	(___lldiv@dividend+3)^0,f,c
  3293  001BB4  8015               	bsf	___lldiv@quotient^0,0,c
  3294  001BB6                     l1597:
  3295  001BB6  90D8               	bcf	status,0,c
  3296  001BB8  3214               	rrcf	(___lldiv@divisor+3)^0,f,c
  3297  001BBA  3213               	rrcf	(___lldiv@divisor+2)^0,f,c
  3298  001BBC  3212               	rrcf	(___lldiv@divisor+1)^0,f,c
  3299  001BBE  3211               	rrcf	___lldiv@divisor^0,f,c
  3300  001BC0  2E19               	decfsz	___lldiv@counter^0,f,c
  3301  001BC2  EFBE  F00D         	goto	l1589
  3302  001BC6                     l150:
  3303  001BC6  C015  F00D         	movff	___lldiv@quotient,?___lldiv
  3304  001BCA  C016  F00E         	movff	___lldiv@quotient+1,?___lldiv+1
  3305  001BCE  C017  F00F         	movff	___lldiv@quotient+2,?___lldiv+2
  3306  001BD2  C018  F010         	movff	___lldiv@quotient+3,?___lldiv+3
  3307  001BD6  0012               	return		;funcret
  3308  001BD8                     __end_of___lldiv:
  3309                           	opt callstack 0
  3310                           
  3311                           	psect	rparam
  3312  0000                     tosu	equ	0xFFF
  3313                           tosh	equ	0xFFE
  3314                           tosl	equ	0xFFD
  3315                           stkptr	equ	0xFFC
  3316                           pclatu	equ	0xFFB
  3317                           pclath	equ	0xFFA
  3318                           pcl	equ	0xFF9
  3319                           tblptru	equ	0xFF8
  3320                           tblptrh	equ	0xFF7
  3321                           tblptrl	equ	0xFF6
  3322                           tablat	equ	0xFF5
  3323                           prodh	equ	0xFF4
  3324                           prodl	equ	0xFF3
  3325                           indf0	equ	0xFEF
  3326                           postinc0	equ	0xFEE
  3327                           postdec0	equ	0xFED
  3328                           preinc0	equ	0xFEC
  3329                           plusw0	equ	0xFEB
  3330                           fsr0h	equ	0xFEA
  3331                           fsr0l	equ	0xFE9
  3332                           wreg	equ	0xFE8
  3333                           indf1	equ	0xFE7
  3334                           postinc1	equ	0xFE6
  3335                           postdec1	equ	0xFE5
  3336                           preinc1	equ	0xFE4
  3337                           plusw1	equ	0xFE3
  3338                           fsr1h	equ	0xFE2
  3339                           fsr1l	equ	0xFE1
  3340                           bsr	equ	0xFE0
  3341                           indf2	equ	0xFDF
  3342                           postinc2	equ	0xFDE
  3343                           postdec2	equ	0xFDD
  3344                           preinc2	equ	0xFDC
  3345                           plusw2	equ	0xFDB
  3346                           fsr2h	equ	0xFDA
  3347                           fsr2l	equ	0xFD9
  3348                           status	equ	0xFD8


Data Sizes:
    Strings     4
    Constant    0
    Data        6
    BSS         48
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     28      82
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_4(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_4(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_1(CODE[4]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_1(CODE[4]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_1(CODE[4]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 7
		 -> main@array(BANK0[7]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 7
		 -> main@array(BANK0[7]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S700_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 7
		 -> main@array(BANK0[7]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 7
		 -> main@array(BANK0[7]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_1(CODE[4]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 4
		 -> STR_1(CODE[4]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_utoa
    _utoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _lcd_init->_lcd_command
    ___lldiv->___lmul

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                18    18      0    8866
                                             10 BANK0     18    18      0
                            ___lldiv
                             ___lmul
                             _adcNum
                           _adc_init
                           _lcd_char
                        _lcd_command
                           _lcd_init
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    10      8    6555
                                             87 COMRAM     8     0      8
                                              0 BANK0     10    10      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    6202
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           46    40      6    5846
                                             59 COMRAM    20    14      6
                              _fputc
                            _strncmp
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                32    22     10    3911
                                             27 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             17     1     16     311
                                              0 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             25     9     16     314
                                              0 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     295
                        _lcd_command
 ---------------------------------------------------------------------------------
 (2) _lcd_command                                          3     3      0     295
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _lcd_char                                             3     3      0     295
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adcNum                                               7     3      4       0
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8     658
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             13     5      8     466
                                             12 COMRAM    13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lldiv
     ___lmul (ARG)
   ___lmul
   _adcNum
   _adc_init
   _lcd_char
   _lcd_command
   _lcd_init
     _lcd_command
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _fputc
           _putch
         _strncmp
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E87      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     1C      52       5       51.3%
BITBANK14           88      0       0      33        0.0%
BANK14              88      0       0      34        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      B1       6        0.0%
DATA                 0      0      B1       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Feb 12 14:51:10 2020

                      _R 0060             lcd_char@temp 0002                       l30 1E16  
                     l41 1D18                       l33 1B32                       l42 1D3E  
                     l27 1A78                       l36 1E1E                       l39 1D0A  
                     l90 1982                       l92 19BE                       l87 1940  
                     l97 13C8                       l99 13D0                       _r1 00AC  
            __CFG_LVP$ON 000000                      l112 138E                      l120 1CA2  
                    l107 1590                      l150 1BC6                      l134 1C30  
                    l135 1C40                      l119 1C9A                      l157 1BD6  
                    l561 1660                      l571 180E                      l821 1CF4  
                    l806 18F8                      l814 1D82                      l830 1DF6  
                    l568 1680                      l824 1E26                      l834 175E  
                    l578 182E                      u500 18B2                      u501 18AE  
                    u510 1D82                      u511 1D7E                      u600 1626  
                    u520 1DEA                      u601 1622                      u521 1DE6  
                    u610 177E                      u530 190A                      u611 177A  
                    u531 1906                      u620 17A8                      u540 192C  
                    u700 1568                      u621 17A4                      u541 1928  
                    u701 1564                      u710 16AC                      u630 17D6  
                    u470 1842                      u550 1982                      u711 16A8  
                    u631 17D2                      u471 183E                      u551 197E  
                    u720 16E2                      u480 1854                      u560 1992  
                    u640 13A0                      u800 1C9A                      u721 16DE  
                    u481 1850                      u561 198E                      u641 139C  
                    u801 1C96                      u810 1D18                      u730 16FE  
                    u490 187C                      u650 13BC                      u811 1D14  
                    u731 16FA                      u571 1598                      u491 1878  
                    u651 13B8                      u740 1710                      u580 15BC  
                    u660 1506                      u900 1076                      u741 170C  
                    u581 15B8                      u661 1502                      u901 1072  
                    u830 1BF6                      u750 173A                      u590 15E6  
                    u670 1524                      u910 10FE                      u831 1BF2  
                    u751 1736                      u591 15E2                      u671 1520  
                    u911 10FA                      u840 1C30                      u680 153E  
                    u760 1190                      u920 1126                      u841 1C2C  
                    u825 1D26                      u681 153A                      u761 118C  
                    u921 1122                      u850 1B5A                      u690 1558  
                    u770 11D8                      u851 1B56                      u691 1554  
                    u771 11D4                      u860 1B7C                      u780 1290  
                    u861 1B78                      u781 128C                      u870 1BA4  
                    u790 1310                      u871 1BA0                      u791 130C  
                    u880 1016                      u937 1150                      u881 1012  
                    u890 1058                      u947 19DC                      u891 1054  
                    u957 1A02                      u967 1A1C                      u977 1A30  
                    u987 1A54                      u997 1A6E                      _pad 18FA  
                    wreg 000FE8             lcd_command@x 0003                     l1301 19A6  
                   l1311 15C4                     l1321 1646                     l1313 15D8  
                   l1305 1592                     l1401 1190                     l1323 1648  
                   l1315 15E6                     l1307 159E                     l1331 1786  
                   l1251 1830                     l1411 1222                     l1403 119E  
                   l1501 1A7C                     l1325 165A                     l1317 15F8  
                   l1309 15BC                     l1341 1808                     l1333 179A  
                   l1261 18B2                     l1253 1842                     l1405 11B0  
                   l1511 1AA6                     l1503 1A88                     l1319 1626  
                   l1335 17A8                     l1327 1760                     l1255 1854  
                   l1271 1D62                     l1351 13F8                     l1343 1390  
                   l1423 12EC                     l1415 125A                     l1407 11B4  
                   l1521 1ACC                     l1513 1AAC                     l1505 1A8C  
                   l1337 17D6                     l1329 177E                     l1257 185E  
                   l1265 1D40                     l1273 1DC2                     l1361 148A  
                   l1353 1400                     l1345 13A0                     l1441 137C  
                   l1425 1310                     l1433 133E                     l1417 1290  
                   l1409 11D8                     l1601 0F06                     l1531 1AF8  
                   l1523 1AD0                     l1515 1AB2                     l1507 1A90  
                   l1451 19D2                     l1339 17F6                     l1259 187C  
                   l1267 1D4C                     l1275 1DCE                     l1291 1938  
                   l1283 18FA                     l1371 153E                     l1363 1490  
                   l1355 1408                     l1347 13A2                     l1435 134C  
                   l1427 131E                     l1611 0FDC                     l1603 0F0A  
                   l1541 1B1E                     l1533 1AFE                     l1525 1AE0  
                   l1517 1AB6                     l1509 1AA0                     l1461 19F8  
                   l1453 19D6                     l1381 16AC                     l1269 1D5E  
                   l1277 1DD2                     l1293 194C                     l1285 190A  
                   l1373 1558                     l1357 140E                     l1365 14F4  
                   l1349 13BC                     l1429 1332                     l1621 0FFA  
                   l1605 0F0E                     l1551 1CFA                     l1543 1B22  
                   l1535 1B04                     l1527 1AE4                     l1519 1AC6  
                   l1471 1A26                     l1463 19FC                     l1455 19E6  
                   l1447 19C2                     l1391 16FE                     l1279 1DEA  
                   l1295 1960                     l1287 191E                     l1367 1506  
                   l1375 1568                     l1359 1484                     l1439 1358  
                   l1631 10C2                     l1623 1016                     l1607 0F22  
                   l1553 1D1A                     l1545 1E18                     l1537 1B08  
                   l1529 1AF4                     l1481 1A4A                     l1473 1A2A  
                   l1465 1A0C                     l1457 19EC                     l1449 19CE  
                   l1393 1710                     l1385 16B8                     l1297 1964  
                   l1289 192C                     l1369 1524                     l1561 1CBE  
                   l1641 10EE                     l1633 10D4                     l1625 103A  
                   l1617 0FE6                     l1609 0F7A                     l1571 1BE8  
                   l1547 1E1A                     l1539 1B18                     l1483 1A4E  
                   l1475 1A3A                     l1467 1A12                     l1459 19F2  
                   l1395 173A                     l1387 16C6                     l1379 1682  
                   l1299 1992                     l1491 1C42                     l1563 1CC6  
                   l1643 10FE                     l1651 1144                     l1627 1058  
                   l1619 0FF6                     l1581 1B44                     l1573 1BF6  
                   l1549 1CF6                     l1485 1A5E                     l1477 1A3E  
                   l1469 1A16                     l1389 16E2                     l1493 1C4A  
                   l1565 1CE2                     l1557 1CA4                     l1653 115E  
                   l1645 1104                     l1629 1076                     l1591 1B86  
                   l1583 1B5A                     l1575 1C06                     l1487 1A64  
                   l1479 1A44                     l1399 116C                     l1495 1C58  
                   l1559 1CB6                     l1647 110A                     l1639 10DE  
                   l1593 1BA4                     l1585 1B62                     l1577 1C10  
                   l1569 1BD8                     l1489 1A68                     l1497 1C7E  
                   l1649 1126                     l1595 1BB4                     l1587 1B6E  
                   l1579 1B34                     l1499 1DF8                     l1597 1BB6  
                   l1589 1B7C                     l1599 1BC0                     ?_pad 0011  
                   STR_1 0F01                     STR_4 0F02                     u1007 1A96  
                   u1017 1ABC                     u1027 1AD6                     u1037 1AEA  
                   u1047 1B0E                     u1057 1B28                     u1067 1D00  
                   _dbuf 0070                     _main 0F06                     _prec 006C  
                   _nout 0068                     pad@i 0018                     pad@p 0015  
                   fsr1h 000FE2                     fsr2h 000FDA                     indf2 000FDF  
                   fsr1l 000FE1                     pad@w 001A                     fsr2l 000FD9  
                   _utoa 1390                     _volt 00B0                     start 0000  
           ___param_bank 000000                    ??_pad 0017                    ?_main 0001  
                  _ADRES 000F63            __CFG_WDTE$OFF 000000          __end_of___lldiv 1BD8  
                  ?_utoa 001C          __end_of___lodiv 1682          __end_of___lomod 1830  
           vfpfcnvrt@fmt 003E             vfpfcnvrt@llu 0048                    _PORTC 000F8F  
    ___lmul@multiplicand 0005                    _flags 006E                    _fputc 1830  
                  _fputs 1D40                    _value 0064                    pad@fp 0011  
                  _width 006A                    _putch 1E26                    main@i 00A8  
                  tablat 000FF5                    nvmcon 000F81                    utoa@d 001E  
                  utoa@i 003A                    utoa@n 0032                    utoa@p 002E  
                  utoa@w 0030                    status 000FD8          __end_of_sprintf 1CF6  
        __end_of_strncmp 1760         ___lodiv@dividend 0001          __initialization 1D84  
           __end_of_main 116C             __end_of_utoa 1592                   ??_main 009A  
                 ??_utoa 0026            __activetblptr 000001         ___lodiv@quotient 0011  
                 _ADCON0 000F60                   ?_fputc 0001                   ?_fputs 000A  
                 ?_putch 0001         __end_of_adc_init 1E20         __end_of_lcd_char 1B34  
           vfprintf@cfmt 0056         __end_of_lcd_init 1E18     __size_of_lcd_command 00BA  
                 _adcNum 1CF6                   ___lmul 1BD8                ??___lldiv 0015  
              ??___lodiv 0011                ??___lomod 0011                   clear_0 1DAE  
                 pad@buf 0013                   _strlen 1DC2                   fputc@c 0001  
                 fputs@c 000E                   fputs@i 000F                   fputs@s 000A  
           __mediumconst 0000                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8                   putch@c 0001         __end_of_vfprintf 1CA4  
                 utoa@fp 001C                ??_sprintf 0060                ??_strncmp 0007  
             __accesstop 0060  __end_of__initialization 1DB4            ___rparam_used 000001  
         __pcstackCOMRAM 0001             __pidataBANK0 1E20            __end_of_fputc 18FA  
          __end_of_fputs 1D84            __end_of_putch 1E28                  ??_fputc 0005  
                ??_fputs 000E                  ??_putch 0001               __pbssBANK0 0060  
        lcd_command@temp 0002                  ?_adcNum 0001                  ?___lmul 0001  
         ___lmul@product 0009                ?_adc_init 0001                  ?_strlen 0001  
     __size_of_vfpfcnvrt 0224                ?_lcd_char 0001                ?_lcd_init 0001  
       ___lomod@dividend 0001                  __Hparam 0000                  __Lparam 0000  
        __size_of_adcNum 004A          __size_of___lmul 006A                  ___lldiv 1B34  
                ___lodiv 1592                  ___lomod 1760                ?_vfprintf 0050  
           __psmallconst 0F00                  __pcinit 1D84                  __ramtop 0F00  
             ??_adc_init 0001                  __ptext0 0F06                  __ptext1 1CA4  
                __ptext2 1C42                  __ptext3 116C                  __ptext4 1390  
                __ptext5 18FA                  __ptext6 1DC2                  __ptext7 1D40  
                __ptext8 1830                  __ptext9 1E26          __size_of_strlen 0036  
           __size_of_pad 00C6               ??_lcd_char 0001                  _sprintf 1CA4  
             ??_lcd_init 0004                  _strncmp 1682     end_of_initialization 1DB4  
                fputc@fp 0003                  fputs@fp 000C          ___lldiv@divisor 0011  
        ___lldiv@counter 0019        __end_of_vfpfcnvrt 1390                  postdec1 000FE5  
                postdec2 000FDD                  postinc0 000FEE                  postinc1 000FE6  
                postinc2 000FDE               ??_vfprintf 0056                  strlen@a 0003  
                strlen@s 0001                _TRISAbits 000F88                _TRISCbits 000F8A  
          ??_lcd_command 0001           __end_of_adcNum 1D40           __end_of___lmul 1C42  
            vfpfcnvrt@ap 0040              vfpfcnvrt@fp 003C           __end_of_strlen 1DF8  
    start_initialization 1D84          ___lodiv@divisor 0009          ___lodiv@counter 0019  
            __end_of_pad 19C0              vfprintf@fmt 0052                 ??_adcNum 0005  
               ??___lmul 0009      __end_of_lcd_command 1A7A              __pdataBANK0 00AC  
               ??_strlen 0003        __size_of_adc_init 0008            __pcstackBANK0 0090  
      __size_of_lcd_char 00BA        __size_of_lcd_init 0020                 ?___lldiv 000D  
               ?___lodiv 0001                 ?___lomod 0001        __size_of_vfprintf 0062  
        ___lomod@divisor 0009              __smallconst 0F00          ___lomod@counter 0011  
               ?_sprintf 0058           __size_of_fputc 00CA           __size_of_fputs 0044  
               ?_strncmp 0001           __size_of_putch 0002              _lcd_command 19C0  
              _vfpfcnvrt 116C                lcd_char@x 0003               _ADCON0bits 000F60  
              main@i_187 00AA                main@array 009C        ___lmul@multiplier 0001  
              copy_data0 1D9C                 __Hrparam 0000               vfprintf@ap 0054  
               __Lrparam 0000               vfprintf@fp 0050             __Lsmallconst 0F00  
       __size_of___lldiv 00A4         __size_of___lodiv 00F0         __size_of___lomod 00D0  
             ?_vfpfcnvrt 003C                 _adc_init 1E18               sprintf@fmt 005A  
               __ptext10 1760                 __ptext11 1592                 __ptext12 1682  
               __ptext13 1DF8                 __ptext14 19C0                 __ptext15 1A7A  
               __ptext16 1E18                 __ptext17 1CF6                 __ptext18 1BD8  
               __ptext19 1B34                 _lcd_char 1A7A                 _lcd_init 1DF8  
       __size_of_sprintf 0052         __size_of_strncmp 00DE            __size_of_main 0266  
          __size_of_utoa 0202                 _vfprintf 1C42                 main@Vout 00A3  
               main@temp 00A7                sprintf@ap 0092         ___lldiv@dividend 000D  
              strncmp@_l 0001                strncmp@_r 0003              ??_vfpfcnvrt 0042  
               sprintf@f 0094                 sprintf@s 0058         ___lldiv@quotient 0015  
               strncmp@l 0008                 strncmp@n 0005                 strncmp@r 000A  
           ?_lcd_command 0001  
